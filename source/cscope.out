cscope 15 $HOME/workspace/csapp/source -q 0000002896 0000957224
	@arch/pushpoptest.c

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

6 
pushã°
();

7 
p›ã°
();

9 
	$maö
()

11 
	`¥ötf
("pushã° -> 0x%lx\n", 
	`pushã°
());

12 
	`¥ötf
("p›ã° -> 0x%lx\n", 
	`p›ã°
());

13 
	}
}

	@asm/010-main.c

2 
	~<°dio.h
>

4 
mu…°‹e
(, , *);

6 
	$maö
() {

7 
d
;

8 
	`mu…°‹e
(2, 3, &
d
);

9 
	`¥ötf
("2 * 3 --> %ld\n", 
d
);

11 
	}
}

13 
	$mu…2
(
a
, 
b
) {

14 
s
 = 
a
 * 
b
;

15  
s
;

16 
	}
}

	@asm/010-mstore-annotate.c

2 
mu…2
(, );

4 
	$mu…°‹e
(
x
, 
y
, *
de°
) {

5 
t
 = 
	`mu…2
(
x
, 
y
);

6 *
de°
 = 
t
;

7 
	}
}

	@asm/010-mstore-intel.c

2 
mu…2
(, );

4 
	$mu…°‹e
(
x
, 
y
, *
de°
) {

5 
t
 = 
	`mu…2
(
x
, 
y
);

6 *
de°
 = 
t
;

7 
	}
}

	@asm/010-mstore.c

2 
mu…2
(, );

4 
	$mu…°‹e
(
x
, 
y
, *
de°
) {

5 
t
 = 
	`mu…2
(
x
, 
y
);

6 *
de°
 = 
t
;

7 
	}
}

	@asm/050-exchange.c

2 
	$exch™ge
(*
xp
, 
y
)

4 
x
 = *
xp
;

5 *
xp
 = 
y
;

6  
x
;

7 
	}
}

	@asm/060-decode1-ans.c

2 
decode1
(*
xp
, *
yp
, *
zp
);

7 
	$decode1
(*
xp
, *
yp
, *
zp
)

9 
x
 = *
xp
;

10 
y
 = *
yp
;

11 
z
 = *
zp
;

13 *
yp
 = 
x
;

14 *
zp
 = 
y
;

15 *
xp
 = 
z
;

16 
	}
}

	@asm/070-leaq.c

4 
	$sˇÀ
(
x
, 
y
, 
z
) {

5 
t
 = 
x
 + 4 * 
y
 + 12 * 
z
;

6  
t
;

7 
	}
}

11 
	$sˇÀ2
(
x
, 
y
, 
z
) {

15 
t
 = 
_____________________
;

19 
t
 = 5 * 
x
 + 2 * 
y
 + 8 * 
z
;

22  
t
;

23 
	}
}

	@asm/080-shift.c

4 
	$shi·_À·4_righä
(
x
, 
n
)

6 
x
 <<= 4;

7 
x
 >>
n
;

8  
x
;

9 
	}
}

	@asm/090-arith.c

2 
	$¨ôh
(
x
, 
y
, 
z
)

4 
t1
 = 
x
 ^ 
y
;

5 
t2
 = 
z
 * 48;

6 
t3
 = 
t1
 & 0x0F0F0F0F;

7 
t4
 = 
t2
 - 
t3
;

8  
t4
;

9 
	}
}

14 
	$¨ôh2
(
x
, 
y
, 
z
)

16 
t1
 = 
________
;

17 
t2
 = 
________
;

18 
t3
 = 
________
;

19 
t4
 = 
________
;

20  
t4
;

21 
	}
}

26 
	$¨ôh2
(
x
,

27 
y
,

28 
z
)

31 
t1
 = 
x
 | 
y
;

32 
t2
 = 
t1
 >> 3;

33 
t3
 = ~
t2
;

34 
t4
 = 
z
-
t3
;

36  
t4
;

37 
	}
}

	@asm/100-muldiv.c

4 
	~<öây≥s.h
>

6 
	t__öt128
 
	tuöt128_t
;

8 
	$°‹e_u¥od
(
uöt128_t
 *
de°
, 
uöt64_t
 
x
, uöt64_à
y
) {

9 *
de°
 = 
x
 * (
uöt128_t
Ë
y
;

10 
	}
}

13 
__öt128
 
	töt128_t
;

14 
	$°‹e_¥od
(
öt128_t
 *
de°
, 
öt64_t
 
x
, i¡64_à
y
) {

15 *
de°
 = 
x
 * (
öt128_t
Ë
y
;

16 
	}
}

19 
	$ªmdiv
(
x
, 
y
,

20 *
qp
, *
Ω
) {

21 
q
 = 
x
/
y
;

22 
r
 = 
x
%
y
;

23 *
qp
 = 
q
;

24 *
Ω
 = 
r
;

25 
	}
}

29 
	$uªmdiv
(
x
, 
y
,

30 *
qp
, *
Ω
) {

31 
q
 = 
x
/
y
;

32 
r
 = 
x
%
y
;

33 *
qp
 = 
q
;

34 *
Ω
 = 
r
;

35 
	}
}

	@asm/100-special-arith.c

3 
	~<öây≥s.h
>

5 
	$fuŒ_mu…
(
öt64_t
 
x
, i¡64_à
y
, i¡64_à*
de°
) {

6 
öt64_t
 
¥od
 = 
x
 * 
y
;

7 *
de°
 = 
¥od
;

8 
	}
}

	@asm/110-cc.c

3 
	gx
, 
	gy
;

5 
	td©a_t
;

7 
	#COMP
 <

	)

10 
	$comp
(
d©a_t
 
a
, d©a_à
b
) {

11  
a
 
COMP
 
b
;

12 
	}
}

15 
	$ût
(
a
, 
b
) {

16  
a
 < 
b
;

17 
	}
}

21 
	$bge
(
a
, 
b
) {

22  
a
 >
b
;

23 
	}
}

26 
	$u˛e
(
a
, 
b
) {

27  
a
 <
b
;

28 
	}
}

31 
	$lõq
(
a
, 
b
) {

32  
a
 =
b
;

33 
	}
}

35 
	$ulõq
(
a
, 
b
) {

36  
a
 =
b
;

37 
	}
}

39 
	$≥q
(*
a
, *
b
) {

40  
a
 =
b
;

41 
	}
}

44 
	$gt
(
a
, 
b
) {

45  
a
 > 
b
;

46 
	}
}

48 
	#TEST
 !=

	)

51 
	$ã°
(
d©a_t
 
a
) {

52  
a
 
TEST
 0;

53 
	}
}

56 
	$ã°_lige
(
a
) {

57  
a
 >= 0;

58 
	}
}

60 
	$ã°_wz
(
a
) {

61  
a
 == 0;

62 
	}
}

64 
	$ã°_uwz
(
a
) {

65  
a
 == 0;

66 
	}
}

68 
	$ã°_cgt
(
a
) {

69  
a
 > 0;

70 
	}
}

72 
	$ã°_ûe
(
a
) {

73  
a
 <= 0;

74 
	}
}

	@asm/120-branch.c

1 
	$lo›
(
x
)

3 
x
 > 0) {

4 
x
 = x >> 1;

6  
x
;

7 
	}
}

9 
	$maö
()

11  
	`lo›
(-2);

12 
	}
}

	@asm/130-abs-measure.c

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<°rög.h
>

6 
	~"˛ock.h
"

9 
	#MAXLEN
 (1L<<20)

	)

11 (*
	tafun
)(, );

14 
	`absdiff
(
a
, 
b
);

15 
	`absdiff_asm
(
a
, 
b
);

18 
hi_lo_a
[
MAXLEN
], 
hi_lo_b
[MAXLEN];

21 
Æt_a
[
MAXLEN
], 
Æt_b
[MAXLEN];

24 
øn_a
[
MAXLEN
], 
øn_b
[MAXLEN];

26 
	$£tup
() {

27 
size_t
 
i
;

28 
i
 = 0; i < 
MAXLEN
; i++) {

29 
hi_lo_a
[
i
] = 1; 
hi_lo_b
[i] = 0;

30 
Æt_a
[
i
] = i % 2; 
Æt_b
[i] = 1-alt_a[i];

31 
øn_a
[
i
] = 
	`øndom
(Ë% 2; 
øn_b
[i] = 1-ran_a[i];

33 i‡(
i
 < 10) {

34 
	`¥ötf
("i = %ld. %ld, %ld, %ld, %ld, %ld, %ld\n",

35 
i
, 
hi_lo_a
[i], 
hi_lo_b
[i], 
Æt_a
[i], 
Æt_b
[i], 
øn_a
[i], 
øn_b
[i]);

39 
	}
}

41 
	$ad
(
a
, 
b
) {

42  
a
 < 
b
 ? b-a :á-b;

43 
	}
}

45 vﬁ©ûê
	ggsum
 = 0;

47 
	$addrun
(
size_t
 
n
) {

48 
size_t
 
i
;

49 
a
 = 
	`øndom
();

50 
sum
 = 0;

51 
	`°¨t_cou¡î
();

52 
i
 = 0; i < 
n
; i++)

53 
sum
 +
a
;

54 
t
 = 
	`gë_cou¡î
()/
n
;

55 
gsum
 +
sum
;

56  
t
;

57 
	}
}

59 
	$muÃun
(
size_t
 
n
) {

60 
size_t
 
i
;

61 
a
 = 
	`øndom
();

62 
¥od
 = 1;

63 
	`°¨t_cou¡î
();

64 
i
 = 0; i < 
n
; i++)

65 
¥od
 *
a
;

66 
t
 = 
	`gë_cou¡î
()/
n
;

67 
gsum
 +
¥od
;

68  
t
;

69 
	}
}

71 
	$run
(
afun
 
f
, *
avÆs
, *
bvÆs
, 
size_t
 
n
) {

72 
size_t
 
i
;

73 
sum
 = 0;

75 
i
 = 0; i < 
n
; i++) {

76 
a
 = 
avÆs
[
i
];

77 
b
 = 
bvÆs
[
i
];

78 
s
 = 
	`ad
(
a
, 
b
);

79 
sum
 +
s
;

81 i‡(
i
 < 10) {

82 
	`¥ötf
("®%ld, b = %ld,ád = %ld\n", 
a
, 
b
, 
s
);

86 
gsum
 +
sum
;

88 
	`°¨t_cou¡î
();

89 
i
 = 0; i < 
n
; i++) {

90 
sum
 +
	`f
(
avÆs
[
i
], 
bvÆs
[i]);

92 
t
 = 
	`gë_cou¡î
()/
n
;

93 
gsum
 +
sum
;

94  
t
;

95 
	}
}

97 
	$maö
(
¨gc
, *
¨gv
[]) {

98 
size_t
 
n
 = 
MAXLEN
;

99 i‡(
¨gc
 > 1)

100 
n
 = 
	`©oi
(
¨gv
[1]);

101 
	`£tup
();

102 
t
, 
tgood
, 
èvg
, 
thûo
, 
éohi
;

103 
tcmov1
, 
tcmov2
, 
tcmov3
, 
tcmov4
;

104 
t
 = 
	`addrun
(
n
);

105 
	`¥ötf
("Sîü»addôi⁄. %.2‡cy˛es/ñemít\n", 
t
);

106 
t
 = 
	`muÃun
(
n
);

107 
	`¥ötf
("Sîü»mu…ùliˇti⁄. %.2‡cy˛es/ñemít\n", 
t
);

108 
t
 = 
	`run
(
absdiff
, 
hi_lo_a
, 
hi_lo_b
, 
n
);

109 
	`¥ötf
("Function:ábsdiff. Data hi/lo. Length %lu. Cycles/element %.2f\n",

110 
n
, 
t
);

111 
tcmov1
 = 
t
;

112 
t
 = 
	`run
(
absdiff_asm
, 
hi_lo_a
, 
hi_lo_b
, 
n
);

113 
	`¥ötf
("Function:ábsdiff_asm. Data hi/lo. Length %lu. Cycles/element %.2f\n",

114 
n
, 
t
);

115 
thûo
 = 
t
;

117 
t
 = 
	`run
(
absdiff
, 
hi_lo_b
, 
hi_lo_a
, 
n
);

118 
	`¥ötf
("Function:ábsdiff. DataÜo/hi. Length %lu. Cycles/element %.2f\n",

119 
n
, 
t
);

120 
tcmov2
 = 
t
;

121 
t
 = 
	`run
(
absdiff_asm
, 
hi_lo_b
, 
hi_lo_a
, 
n
);

122 
	`¥ötf
("Function:ábsdiff_asm. DataÜo/hi. Length %lu. Cycles/element %.2f\n",

123 
n
, 
t
);

124 
éohi
 = 
t
;

126 
t
 = 
	`run
(
absdiff
, 
Æt_a
, 
Æt_b
, 
n
);

127 
	`¥ötf
("Function:ábsdiff. Dataált. Length %lu. Cycles/element %.2f\n",

128 
n
, 
t
);

129 
tcmov3
 = 
t
;

130 
t
 = 
	`run
(
absdiff_asm
, 
Æt_a
, 
Æt_b
, 
n
);

131 
	`¥ötf
("Function:ábsdiff_asm. Dataált. Length %lu. Cycles/element %.2f\n",

132 
n
, 
t
);

133 
tgood
 = 
t
;

135 
	`¥ötf
("Avg(%.2f, %.2f) = %.2f. CompareÅo %.2f\n",

136 
thûo
, 
éohi
, (thûo+éohi)/2.0,
tgood
);

138 
t
 = 
	`run
(
absdiff
, 
øn_a
, 
øn_b
, 
n
);

139 
	`¥ötf
("Function:ábsdiff. DataÑandom. Length %lu. Cycles/element %.2f\n",

140 
n
, 
t
);

141 
tcmov4
 = 
t
;

142 
t
 = 
	`run
(
absdiff_asm
, 
øn_a
, 
øn_b
, 
n
);

143 
	`¥ötf
("Function:ábsdiff_asm. DataÑandom. Length %lu. Cycles/element %.2f\n",

144 
n
, 
t
);

145 
èvg
 = 
t
;

146 
	`¥ötf
("cmovÅimes: %.2f, %.2f, %.2f, %.2f. Avg = %.2f\n",

147 
tcmov1
, 
tcmov2
, 
tcmov3
, 
tcmov4
, (tcmov1+tcmov2+tcmov3+tcmov4)/4.0);

148 
	`¥ötf
("Penalty = 2.0*(%.2f-%.2f) = %.2f\n",

149 
èvg
, 
tgood
, 2.0*(tavg -Ågood));

151 
	}
}

	@asm/130-abs.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

5 
	g…_˙t
 = 0;

6 
	gge_˙t
 = 0;

8 
	$absdiff_£
(
x
, 
y
)

10 
ªsu…
;

11 i‡(
x
 < 
y
) {

12 
…_˙t
++;

13 
ªsu…
 = 
y
 - 
x
;

16 
ge_˙t
++;

17 
ªsu…
 = 
x
 - 
y
;

19  
ªsu…
;

20 
	}
}

24 
	$gŸodiff_£
(
x
, 
y
)

26 
ªsu…
;

27 i‡(
x
 >
y
)

28 
x_ge_y
;

29 
…_˙t
++;

30 
ªsu…
 = 
y
 - 
x
;

31  
ªsu…
;

32 
x_ge_y
:

33 
ge_˙t
++;

34 
ªsu…
 = 
x
 - 
y
;

35  
ªsu…
;

36 
	}
}

40 
	$gŸodiff_£_Æt
(
x
, 
y
) {

41 
ªsu…
;

42 i‡(
x
 < 
y
)

43 
x_…_y
;

44 
ge_˙t
++;

45 
ªsu…
 = 
x
 - 
y
;

46  
ªsu…
;

47 
x_…_y
:

48 
…_˙t
++;

49 
ªsu…
 = 
y
 - 
x
;

50  
ªsu…
;

51 
	}
}

55 
absdiff
(
x
, 
y
);

56 
cmovdiff
(
x
, 
y
);

57 
absdiff_asm
(
x
, 
y
);

59 
	$maö
(
¨gc
, *
¨gv
[]) {

60 
x
 = 
	`©oi
(
¨gv
[1]);

61 
y
 = 
	`©oi
(
¨gv
[2]);

62 
z1
 = 
	`absdiff_£
(
x
,
y
);

63 
z2
 = 
	`gŸodiff_£
(
x
,
y
);

64 
z3
 = 
	`cmovdiff
(
x
,
y
);

65 
z4
 = 
	`absdiff
(
x
,
y
);

66 
z5
 = 
	`absdiff_asm
(
x
,
y
);

67 
	`¥ötf
("x = %ld, y = %ld, |x-y| = (%ld,%ld,%ld,%ld,%ld)\n",

68 
x
, 
y
, 
z1
, 
z2
, 
z3
, 
z4
, 
z5
);

70 
	}
}

	@asm/130-absdiff.c

2 
	$absdiff
(
x
, 
y
)

4 
ªsu…
;

5 i‡(
x
 < 
y
)

6 
ªsu…
 = 
y
 - 
x
;

8 
ªsu…
 = 
x
 - 
y
;

9  
ªsu…
;

10 
	}
}

14 
	$cmovdiff
(
x
, 
y
)

16 
rvÆ
 = 
y
-
x
;

17 
evÆ
 = 
x
-
y
;

18 
¡e°
 = 
x
 >
y
;

21 i‡(
¡e°
Ë
rvÆ
 = 
evÆ
;

22  
rvÆ
;

23 
	}
}

	@asm/140-simple-if.c

1 
	~<°dio.h
>

4 
	$c⁄d
(
a
, *
p
)

6 i‡(
p
 && 
a
 > *p)

7 *
p
 = 
a
;

8 
	}
}

13 
	$gŸo_c⁄d
(
a
, *
p
) {

14 i‡(
p
 == 0)

15 
d⁄e
;

16 i‡(*
p
 >
a
)

17 
d⁄e
;

18 *
p
 = 
a
;

19 
d⁄e
:

21 
	}
}

26 
	$c⁄d2
(
a
, *
p
)

28 i‡(
p
 && 
a
 > 0)

29 *
p
 = 
a
;

30 
	}
}

	@asm/150-if.c

2 
	$ã°
(
x
, 
y
, 
z
) {

3 
vÆ
 = 
x
+
y
+
z
;

4 i‡(
x
 < -3) {

5 i‡(
y
 < 
z
)

6 
vÆ
 = 
x
*
y
;

8 
vÆ
 = 
y
*
z
;

9 } i‡(
x
 > 2)

10 
vÆ
 = 
x
*
z
;

11  
vÆ
;

12 
	}
}

17 
	$ã°
(
x
, 
y
, 
z
) {

18 
vÆ
 = 
______
;

19 i‡(
______
) {

20 i‡(
______
)

21 
vÆ
 = 
______
;

23 
vÆ
 = 
______
;

24 } i‡(
______
)

25 
vÆ
 = 
______
;

26  
vÆ
;

27 
	}
}

	@asm/160-fact.c

4 
	$Á˘_do
(
n
)

6 
ªsu…
 = 1;

8 
ªsu…
 *
n
;

9 
n
 =Ç-1;

10 } 
n
 > 1);

11  
ªsu…
;

12 
	}
}

16 
	$Á˘_whûe
(
n
)

18 
ªsu…
 = 1;

19 
n
 > 1) {

20 
ªsu…
 *
n
;

21 
n
 =Ç-1;

23  
ªsu…
;

24 
	}
}

28 
	$Á˘_f‹
(
n
)

30 
i
;

31 
ªsu…
 = 1;

32 
i
 = 2; i <
n
; i++)

33 
ªsu…
 *
i
;

34  
ªsu…
;

35 
	}
}

39 
	$Á˘_f‹_whûe
(
n
)

41 
i
 = 2;

42 
ªsu…
 = 1;

43 
i
 <
n
) {

44 
ªsu…
 *
i
;

45 
i
++;

47  
ªsu…
;

48 
	}
}

52 
	$Á˘_do_gŸo
(
n
)

54 
ªsu…
 = 1;

55 
lo›
:

56 
ªsu…
 *
n
;

57 
n
 =Ç-1;

58 i‡(
n
 > 1)

59 
lo›
;

60  
ªsu…
;

61 
	}
}

65 
	$Á˘_whûe_jm_gŸo
(
n
)

67 
ªsu…
 = 1;

68 
ã°
;

69 
lo›
:

70 
ªsu…
 *
n
;

71 
n
 =Ç-1;

72 
ã°
:

73 i‡(
n
 > 1)

74 
lo›
;

75  
ªsu…
;

76 
	}
}

80 
	$Á˘_whûe_gd_gŸo
(
n
)

82 
ªsu…
 = 1;

83 i‡(
n
 <= 1)

84 
d⁄e
;

85 
lo›
:

86 
ªsu…
 *
n
;

87 
n
 =Ç-1;

88 i‡(
n
 != 1)

89 
lo›
;

90 
d⁄e
:

91  
ªsu…
;

92 
	}
}

97 
	$Á˘_f‹_jm_gŸo
(
n
)

99 
i
 = 2;

100 
ªsu…
 = 1;

101 
ã°
;

102 
lo›
:

103 
ªsu…
 *
i
;

104 
i
++;

105 
ã°
:

106 i‡(
i
 <
n
)

107 
lo›
;

108  
ªsu…
;

109 
	}
}

113 
	$Á˘_f‹_gd_gŸo
(
n
)

115 
i
 = 2;

116 
ªsu…
 = 1;

117 i‡(
n
 <= 1)

118 
d⁄e
;

119 
lo›
:

120 
ªsu…
 *
i
;

121 
i
++;

122 i‡(
i
 <
n
)

123 
lo›
;

124 
d⁄e
:

125  
ªsu…
;

126 
	}
}

130 
	$rÁ˘
(
n
)

132 
ªsu…
;

133 i‡(
n
 <= 1)

134 
ªsu…
 = 1;

136 
ªsu…
 = 
n
 * 
	`rÁ˘
(n-1);

137  
ªsu…
;

138 
	}
}

	@asm/170-dw.c

4 
	$dw_lo›
(
x
) {

5 
y
 = 
x
*x;

6 *
p
 = &
x
;

7 
n
 = 2*
x
;

9 
x
 +
y
;

10 (*
p
)++;

11 
n
--;

12 } 
n
 > 0);

13  
x
;

14 
	}
}

	@asm/180-while.c

3 
	$lo›_whûe
(
a
, 
b
)

5 
ªsu…
 = 1;

6 
a
 < 
b
) {

7 
ªsu…
 =Ñesu… * (
a
+
b
);

8 
a
 =á+1;

10  
ªsu…
;

11 
	}
}

16 
	$lo›_whûe
(
a
, 
b
)

18 
ªsu…
 = 
________
;

19 
______
) {

20 
ªsu…
 = 
____________
;

21 
a
 = 
______
;

23  
ªsu…
;

24 
	}
}

29 
	$lo›_whûe2
(
a
, 
b
)

31 
ªsu…
 = 
b
;

32 
b
 > 0) {

33 
ªsu…
 =Ñesu… * 
a
;

34 
b
 = b-
a
;

36  
ªsu…
;

37 
	}
}

42 
	$lo›_whûe2
(
a
, 
b
)

44 
ªsu…
 = 
________
;

45 
______
) {

46 
ªsu…
 = 
____________
;

47 
b
 = 
______
;

49  
ªsu…
;

50 
	}
}

	@asm/190-fun.c

2 
	$ã°_fun_a
(
x
)

4 
i
;

5 
vÆ
 = 0;

6 
i
 = 0; i < 64; i++)

7 
vÆ
 ^(
x
 & (1L<<
i
)) != 0;

8  
vÆ
;

9 
	}
}

12 
	$fun_a
(
x
) {

13 
vÆ
 = 0;

14 
x
) {

15 
vÆ
 ^
x
;

16 
x
 >>= 1;

18  
vÆ
 & 0x1;

19 
	}
}

24 
	$fun_a
(
x
) {

25 
vÆ
 = 0;

30 
	}
}

35 
	$fun_b
(
x
) {

36 
vÆ
 = 0;

37 
i
;

38 
i
 = 64; i != 0; i--) {

39 
vÆ
 = (vÆ << 1Ë| (
x
 & 0x1);

40 
x
 >>= 1;

42  
vÆ
;

43 
	}
}

48 
	$fun_b
(
x
) {

49 
vÆ
 = 0;

50 
i
;

54  
vÆ
;

55 
	}
}

59 
	$ã°_fun_b
(
x
)

61 
l
, 
r
;

62 
vÆ
 = 0;

63 
l
 = 0, 
r
 = 63;Ü < 64;Ü++,Ñ--) {

64 
bô
 = (
x
 & (1L<<
l
)) != 0;

65 i‡(
bô
)

66 
vÆ
 |(1<<
r
);

68  
vÆ
;

69 
	}
}

72 
	$fun_c
(
x
) {

73 
vÆ
 = 0;

74 
i
;

75 
i
 = 0; i < 8; i++) {

76 
vÆ
 +
x
 & 0x01010101;

77 
x
 >>= 1;

79 
vÆ
 += (val >> 16);

80 
vÆ
 += (val >> 8);

81  
vÆ
 & 0xFF;

82 
	}
}

87 
	$fun_c
(
x
) {

88 
vÆ
 = 0;

89 
i
;

95 
	}
}

99 
	$ã°_fun_c
(
x
)

101 
i
;

102 
vÆ
 = 0;

103 
i
 = 0; i < 64; i++)

104 
vÆ
 +(
x
 & (1<<
i
)) != 0;

105  
vÆ
;

106 
	}
}

108 
	$ã°_cou¡_p
(
x
)

110 
i
;

111 
vÆ
 = 0;

112 
i
 = 0; i < 64; i++)

113 
vÆ
 +(
x
 & (1L<<
i
)) != 0;

114  
vÆ
;

115 
	}
}

117 
	$cou¡_p
(
x
) {

118 
vÆ
 = 0;

119 
x
) {

120 
vÆ
 +(
x
 >> (64-1));

121 
x
 <<= 1;

123  
vÆ
;

124 
	}
}

126 
	$cou¡_q
(
x
) {

127 
vÆ
 = 0;

128 
mask
 = 1L<<63;

129 
mask
) {

130 
vÆ
 +(
x
 & 
mask
) != 0;

131 
mask
 >>= 1;

133  
vÆ
;

134 
	}
}

136 
	$ã°_cou¡_q
(
x
)

138 
i
;

139 
vÆ
 = 0;

140 
i
 = 0; i < 64; i++)

141 
vÆ
 +(
x
 & (1L<<
i
)) != 0;

142  
vÆ
;

143 
	}
}

145 
	$cou¡_r
(
x
) {

146 
vÆ
 = 0;

147 
mask
;

148 
mask
 = 1; mask; mask <<= 1)

149 i‡(
x
 & 
mask
)

150 
vÆ
 ++;

151  
vÆ
;

152 
	}
}

154 
	$ã°_cou¡_r
(
x
)

156 
i
;

157 
vÆ
 = 0;

158 
i
 = 0; i < 64; i++)

159 
vÆ
 +(
x
 & (1L<<
i
)) != 0;

160  
vÆ
;

161 
	}
}

	@asm/200-continue-eg.c

1 
	$lo›1
()

6 
sum
 = 0;

7 
i
;

8 
i
 = 0; i < 10; i++) {

9 i‡(
i
 & 1)

11 
sum
 +
i
;

14  
sum
;

16 
	}
}

18 
	$lo›2
()

23 
sum
 = 0;

24 
i
 = 0;

25 
i
 < 10) {

26 i‡(
i
 & 1)

29 
sum
 +
i
;

30 
i
++;

33  
sum
;

34 
	}
}

36 
	$lo›32
()

40 
sum
 = 0;

41 
i
 = 0;

42 
i
 < 10) {

43 i‡(
i
 & 1)

44 
upd©e
;

45 
sum
 +
i
;

46 
upd©e
:

47 
i
++;

50  
sum
;

51 
	}
}

	@asm/210-cond.c

1 
	~<°dio.h
>

5 
	$max
(
x
, 
y
) {

6  (
x
 < 
y
) ? y : x;

7 
	}
}

10 
	$wa_max
(
x
, 
y
)

12  (
x
 < 
y
) ? 17+y : 23+x;

13 
	}
}

15 
	$wm_max
(
x
, 
y
)

17  (
x
 < 
y
) ? 17*y : 23*x;

18 
	}
}

20 
	$wm_max2
(
x
, 
y
)

22  (
x
 < 
y
) ? 16*y : x;

23 
	}
}

25 
	$wm_max3
(
x
, 
y
)

27  (
x
 < 
y
) ? 17*y : x;

28 
	}
}

30 
	$öèbs
(
x
)

32  (
x
 < 0) ? -x : x;

33 
	}
}

35 
	$cmul
(
x
, 
y
)

37  (
y
 =0Ë? 0 : 
x
*y;

38 
	}
}

40 
	$cmul2
(
x
, 
y
)

42  (
y
 =1Ë? 
x
 : x*y;

43 
	}
}

45 
	$cdiv
(
x
, 
y
)

47  (
y
 =0Ë? 0 : 
x
/y;

48 
	}
}

50 
	$cdiv2
(
x
, 
y
)

52  (
y
 =1Ë? 
x
 : x/y;

53 
	}
}

56 
	$¸ód
(*
xp
) {

57  (
xp
 ? *xp : 0);

58 
	}
}

61 
	$¸ód_övÆid
(*
xp
) {

62 
x
 = *
xp
;

63 
xe
 = 0;

64 i‡(!
xp
Ë
x
 = 
xe
;

65  
x
;

66 
	}
}

69 
	glcou¡
 = 0;

70 
	$£_max
(
x
, 
y
) {

71  (
x
 < 
y
Ë? (
lcou¡
++, y) : x;

72 
	}
}

75 
	#OP
 /

	)

78 
	#OP
 
_____


	)

83 
	$¨ôh
(
x
) {

84  
x
 
OP
 8;

85 
	}
}

	@asm/220-if2.c

2 
	$ã°
(
x
, 
y
) {

3 
vÆ
 = 8*
x
;

4 i‡(
y
 > 0) {

5 i‡(
x
 < 
y
)

6 
vÆ
 = 
y
-
x
;

8 
vÆ
 = 
x
&
y
;

9 } i‡(
y
 <= -2)

10 
vÆ
 = 
x
+
y
;

11  
vÆ
;

12 
	}
}

17 
	$ã°
(
x
, 
y
) {

18 
vÆ
 = 
______
;

19 i‡(
______
) {

20 i‡(
______
)

21 
vÆ
 = 
______
;

23 
vÆ
 = 
______
;

24 } i‡(
______
)

25 
vÆ
 = 
______
;

26  
vÆ
;

27 
	}
}

	@asm/230-switch.c

2 
	$swôch_eg
(
x
, 
n
,

3 *
de°
)

5 
vÆ
 = 
x
;

7 
n
) {

10 
vÆ
 *= 13;

14 
vÆ
 += 10;

18 
vÆ
 += 11;

23 
vÆ
 *= val;

27 
vÆ
 = 0;

29 *
de°
 = 
vÆ
;

30 
	}
}

35 
	$swôch_eg_im∂
(
x
, 
n
,

36 *
de°
)

39 *
jt
[7] = {

40 &&
loc_A
, &&
loc_def
, &&
loc_B
,

41 &&
loc_C
, &&
loc_D
, &&
loc_def
,

42 &&
loc_D


44 
ödex
 = 
n
 - 100;

45 
vÆ
;

47 i‡(
ödex
 > 6)

48 
loc_def
;

50 *
jt
[
ödex
];

52 
loc_A
:

53 
vÆ
 = 
x
 * 13;

54 
d⁄e
;

55 
loc_B
:

56 
x
 = x + 10;

58 
loc_C
:

59 
vÆ
 = 
x
 + 11;

60 
d⁄e
;

61 
loc_D
:

62 
vÆ
 = 
x
 * x;

63 
d⁄e
;

64 
loc_def
:

65 
vÆ
 = 0;

66 
d⁄e
:

67 *
de°
 = 
vÆ
;

68 
	}
}

	@asm/240-switch2.c

2 
	$swôch2
(
x
, *
de°
) {

3 
vÆ
 = 0;

4 
x
) {

7 -1: 
vÆ
 = -1; ;

9 0: 
vÆ
 = 8; ;

10 1: 
vÆ
 = 1; ;

12 4: 
vÆ
 = 4; ;

13 5: 
vÆ
 = 5; ;

14 : 
vÆ
 = 7; ;

17 *
de°
 = 
vÆ
;

18 
	}
}

	@asm/250-switcher.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

6 
	$swôchî
(
a
, 
b
, 
c
, *
de°
)

8 
vÆ
;

9 
a
) {

10 
___
:

11 
c
 = 
_____
;

13 
___
:

14 
vÆ
 = 
_____
;

16 
___
:

17 
___
:

18 
vÆ
 = 
_____
;

20 
___
:

21 
vÆ
 = 
_____
;

24 
vÆ
 = 
_____
;

26 *
de°
 = 
vÆ
;

27 
	}
}

32 
	$swôchî
(
a
, 
b
, 
c
, *
de°
)

34 
vÆ
;

35 
a
) {

37 
c
 = 
b
 ^ 15;

40 
vÆ
 = 
c
 + 112;

44 
vÆ
 = (
c
 + 
b
) << 2;

47 
vÆ
 = 
a
;

50 
vÆ
 = 
b
;

52 *
de°
 = 
vÆ
;

53 
	}
}

56 
	$maö
(
¨gc
, *
¨gv
[]) {

57 
¨gs
[3] = {1, 2, 3};

58 
i
;

59 
vÆ
;

60 
i
 = 0; i < 3 && i < 
¨gc
-1; i++)

61 
¨gs
[
i
] = 
	`©oi
(
¨gv
[i+1]);

62 
	`swôchî
(
¨gs
[0],árgs[1],árgs[2], &
vÆ
);

63 
	`¥ötf
("Switcher(%ld, %ld, %ld) --> %ld\n",

64 
¨gs
[0],árgs[1],árgs[2], 
vÆ
);

66 
	}
}

	@asm/250-switchprob2.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

6 
	$swôchî
(
a
, 
b
, 
c
)

8 
™swî
;

9 
a
) {

10 
___
:

11 
c
 = 
_____
;

13 
___
:

14 
™swî
 = 
_____
;

16 
___
:

17 
___
:

18 
™swî
 = 
_____
;

20 
___
:

21 
™swî
 = 
_____
;

24 
™swî
 = 
_____
;

26  
™swî
;

27 
	}
}

32 
	$swôchî
(
a
, 
b
, 
c
)

34 
™swî
;

35 
a
) {

37 
c
 = 
b
 ^ 15;

40 
™swî
 = 
c
 + 112;

44 
™swî
 = (
c
 + 
b
) << 2;

47 
™swî
 = 
a
;

50 
™swî
 = 
b
;

52  
™swî
;

53 
	}
}

56 
	$maö
(
¨gc
, *
¨gv
[]) {

57 
¨gs
[3] = {1, 2, 3};

58 
i
;

59 
i
 = 0; i < 3 && i < 
¨gc
-1; i++)

60 
¨gs
[
i
] = 
	`©oi
(
¨gv
[i+1]);

61 
	`¥ötf
("Switcher(%d, %d, %d) --> %d\n",

62 
¨gs
[0],árgs[1],árgs[2],

63 
	`swôchî
(
¨gs
[0],árgs[1],árgs[2]));

65 
	}
}

	@asm/260-fun.c

1 
	~<°dlib.h
>

2 
	~<°dio.h
>

4 
	$Àaf
(
y
) {

5  
y
+2;

6 
	}
}

8 
	$t›
(
x
) {

9  2 * 
	`Àaf
(
x
-5);

10 
	}
}

15 
	$maö
(
¨gc
, *
¨gv
[]) {

16 
cvÆ
 = 
	`t›
(100);

17 
	`¥ötf
("t›(100Ë--> %ld\n", 
cvÆ
);

19 
	}
}

	@asm/261-fun2.c

1 
	~<°dlib.h
>

2 
	~<°dio.h
>

5 
	$œ°
(
u
, 
v
) {

6  
u
*
v
;

7 
	}
}

9 
	$fú°
(
x
) {

10  
	`œ°
(
x
-1, x+1);

11 
	}
}

13 
	$maö
(
¨gc
, *
¨gv
[]) {

14 
cvÆ
 = 
	`fú°
(10);

15 
	`¥ötf
("fú°(10Ë--> %ld\n", 
cvÆ
);

17 
	}
}

	@asm/262-recurse.c

1 
	~<°dlib.h
>

2 
	~<°dio.h
>

6 
	$ªxp
(
x
) {

7 i‡(
x
 ==0)

9  2*
	`ªxp
(
x
-1);

10 
	}
}

13 
eví
(
x
);

14 
odd
(
x
);

17 
	$∑rôy
(
x
) {

18  
	`odd
(
x
);

19 
	}
}

22 
	$odd
(
x
) {

23 
lsb
 = 
x
 & 0x1;

24 
ª°
 = 
x
 >> 1;

25 i‡(
x
 == 0)  0;

26 i‡(
lsb
Ë 
	`eví
(
ª°
);

27  
	`odd
(
ª°
);

28 
	}
}

31 
	$eví
(
x
) {

32 
lsb
 = 
x
 & 0x1;

33 
ª°
 = 
x
 >> 1;

34 i‡(
x
 == 0)  1;

35 i‡(
lsb
Ë 
	`odd
(
ª°
);

36  
	`eví
(
ª°
);

37 
	}
}

39 
	$maö
(
¨gc
, *
¨gv
[]) {

40 
evÆ
 = 4;

41 
ìvÆ
 = 
	`ªxp
(
evÆ
);

42 
	`¥ötf
("2^%lu --> %ld\n", 
evÆ
, 
ìvÆ
);

43 
pvÆ
 = 0x16;

44 
µvÆ
 = 
	`∑rôy
(
pvÆ
);

45 
	`¥ötf
("∑rôy(%luË--> %ld\n", 
pvÆ
, 
µvÆ
);

47 
	}
}

	@asm/268-local.c

3 
	$øºay
(
x
) {

4 i‡(
x
 <= 0)

5  
x
;

6 vﬁ©ûê
a
[3];

7 
a
[1] = 
x
-1;

8  
	`øºay
(
x
-2Ë+ 
a
[1];

9 
	}
}

15 
	$øºay2
(
x
) {

16 i‡(
x
 <= 0)

17  
x
;

18 vﬁ©ûê
a
[5];

19 
a
[4] = 
x
 & 0x3;

20 
a
[a[0]] = 
x
-1;

21  
	`øºay2
(
x
-2Ë+ 
a
[a[0]];

22 
	}
}

26 
	$æv¨
(
x
) {

27 i‡(
x
 <= 0)

28  
x
;

29 vﬁ©ûê
xm1
 = 
x
-1;

30  
	`æv¨
(
x
-2Ë+ 
xm1
;

31 
	}
}

36 
	$rcßve
(
x
) {

37 i‡(
x
 <= 0)

38  
x
;

39 
xm1
 = 
x
-1;

40  
	`rcßve
(
x
-2Ë+ 
xm1
;

41 
	}
}

46 
	$æ°‹e
(*
xp
) {

47 vﬁ©ûê
nx
;

48 
x
 = *
xp
;

49 i‡(
x
 <= 0)

50  
x
;

51 
nx
 = 
x
-1;

52  
	`æ°‹e
((*Ë&
nx
) + 2;

53 
	}
}

59 
	$rv¨øy
(
x
, 
n
) {

60 i‡(
x
 <= 0)

61  
x
;

62 
a
[
n
];

63 
a
[0] = 17;

64 
a
[
n
-1] = 
x
;

65  
	`rv¨øy
(
x
-1, 
n
Ë+ 
a
[0] +á[n-1];

66 
	}
}

	@asm/270-euclid.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

5 
	$eu˛id_ªc1
(
a
, 
b
) {

6 i‡(
b
 == 0)

7  
a
;

8  
	`eu˛id_ªc1
(
b
, 
a
 % b);

9 
	}
}

14 
	$eu˛id_°‹e1_hñ≥r
(
a
, 
b
, *
de°
) {

15 
ªsu…
;

16 i‡(
b
 == 0)

17 
ªsu…
 = 
a
;

19 
	`eu˛id_°‹e1_hñ≥r
(
b
, 
a
 % b, &
ªsu…
);

20 *
de°
 = 
ªsu…
;

21 
	}
}

23 
	$eu˛id_°‹e1
(
a
, 
b
) {

24 
ªsu…
;

25 
	`eu˛id_°‹e1_hñ≥r
(
a
, 
b
, &
ªsu…
);

26  
ªsu…
;

27 
	}
}

31 
	$eu˛id_°‹e2_hñ≥r
(
¨gs
[2], *
de°
) {

32 
ªsu…
;

33 
a
 = 
¨gs
[0];

34 
b
 = 
¨gs
[1];

35 i‡(
b
 == 0)

36 
ªsu…
 = 
¨gs
[0];

38 
«rgs
[] = {
b
, 
a
 % b};

39 
	`eu˛id_°‹e2_hñ≥r
(
«rgs
, &
ªsu…
);

41 *
de°
 = 
ªsu…
;

42 
	}
}

44 
	$eu˛id_°‹e2
(
a
, 
b
) {

45 
ªsu…
;

46 
¨gs
[] = {
a
, 
b
};

47 
	`eu˛id_°‹e2_hñ≥r
(
¨gs
, &
ªsu…
);

48  
ªsu…
;

49 
	}
}

52 (*
	tefun_t
)(, );

55 
efun_t
 
funs
[] = {
eu˛id_ªc1
, 
eu˛id_°‹e1
, 
eu˛id_°‹e2
, 
NULL
};

57 
	$maö
(
¨gc
, *
¨gv
[]) {

58 
a
 = 1;

59 
b
 = 1;

60 i‡(
¨gc
 > 1)

61 
a
 = 
	`©oi
(
¨gv
[1]);

62 i‡(
¨gc
 > 2)

63 
b
 = 
	`©oi
(
¨gv
[2]);

64 
i
;

65 
i
 = 0; 
funs
[i] !
NULL
; i++) {

66 
	`¥ötf
("Version %d. GCD(%d, %d) = %d\n",

67 
i
, 
a
, 
b
, 
funs
[i](a, b));

70 
	}
}

	@asm/270-hworld.c

1 
	~<°dio.h
>

3 
	$hw‹ld
() {

4 
	`¥ötf
("Hello, World!\n");

5 
	}
}

7 
	$maö
() {

8 
	`hw‹ld
();

10 
	}
}

	@asm/280-calleesave.c

1 
Q
(
a
);

4 
	$P
(
x
, 
y
)

6 
u
 = 
	`Q
(
y
);

7 
v
 = 
	`Q
(
x
);

8  
u
 + 
v
;

9 
	}
}

13 
	$P2
(
x
, 
y
)

15 vﬁ©ûê
sy
 = 
y
;

16 vﬁ©ûê
u
 = 
	`Q
(
x
);

17 
v
 = 
	`Q
(
sy
);

18  
u
 + 
v
;

19 
	}
}

	@asm/285-calleesave2.c

3 
Q
();

5 
	$P
(
x
) {

6 
a0
 = 
x
;

7 
a1
 = 
x
+1;

8 
a2
 = 
x
+2;

9 
a3
 = 
x
+3;

10 
a4
 = 
x
+4;

11 
a5
 = 
x
+5;

12 
a6
 = 
x
+6;

13 
a7
 = 
x
+7;

14 
	`Q
();

15  
a0
 + 
a1
 + 
a2
 + 
a3
 + 
a4
 + 
a5
 + 
a6
 + 
a7
;

16 
	}
}

	@asm/290-registers.c

3 
	$¥oc
(
x
, 
y
, 
z
)

5  
x
+
y
+
z
;

6 
	}
}

8 
	$t3
(*
≠
, *
bp
, *
˝
,

9 *
dp
, *
ï
, *
Â
) {

10 
a
 = *
≠
;

11 
b
 = *
bp
;

12 
c
 = *
˝
;

13 
d
 = *
dp
;

14 
e
 = *
ï
;

15 
f
 = *
Â
;

17 
vÆa
 = 
a
+
b
;

18 
vÆb
 = 
b
+
c
;

19 
vÆc
 = 
c
+
d
;

20 
vÆd
 = 
d
+
e
;

21 
vÆe
 = 
e
+
f
;

22 
vÆf
 = 
f
+
a
;

23 *
≠
 = 
vÆa
;

24 *
bp
 = 
vÆb
;

25 *
˝
 = 
vÆc
;

26 *
dp
 = 
vÆd
;

27 *
ï
 = 
vÆe
;

28 *
Â
 = 
vÆf
;

29 
	}
}

	@asm/300-storesum.c

1 
	~<°dlib.h
>

4 *
	$°‹e_sum
(*
xp
, 
y
) {

5 *
d©a
 = 
	`mÆloc
(());

6 *
d©a
 = *
xp
 + 
y
;

7  
d©a
;

8 
	}
}

10 
	$ˇŒî
() {

11 
¨g1
 = 534;

12 *
sump
 = 
	`°‹e_sum
(&
¨g1
, 1057);

13 
vÆ
 = *
sump
;

14 
	`‰ì
(
sump
);

15  
vÆ
;

16 
	}
}

	@asm/300-swapadd.c

1 
	~<°dlib.h
>

4 
	$sw≠_add
(*
xp
, *
yp
)

6 
x
 = *
xp
;

7 
y
 = *
yp
;

8 *
xp
 = 
y
;

9 *
yp
 = 
x
;

10  
x
 + 
y
;

11 
	}
}

13 
	$ˇŒî
()

15 
¨g1
 = 534;

16 
¨g2
 = 1057;

17 
sum
 = 
	`sw≠_add
(&
¨g1
, &
¨g2
);

18 
diff
 = 
¨g1
 - 
¨g2
;

19  
sum
 * 
diff
;

20 
	}
}

	@asm/310-procregs.c

2 
	$¥oc
(
a1
, *
a1p
,

3 
a2
, *
a2p
,

4 
a3
, *
a3p
,

5 
a4
, *
a4p
)

7 *
a1p
 +
a1
;

8 *
a2p
 +
a2
;

9 *
a3p
 +
a3
;

10 *
a4p
 +
a4
;

11 
	}
}

15 
	$ˇŒ_¥oc
()

17 
x1
 = 1; 
x2
 = 2;

18 
x3
 = 3; 
x4
 = 4;

19 
	`¥oc
(
x1
, &x1, 
x2
, &x2, 
x3
, &x3, 
x4
, &x4);

20  (
x1
+
x2
)*(
x3
-
x4
);

21 
	}
}

	@asm/320-procprobs.c

1 
	$¥o˝rob
(
a
, 
b
, *
u
, *
v
) {

3 *
u
 +
a
;

4 *
v
 +
b
;

5  (
a
Ë+ (
b
);

7 
	}
}

11 
	$¥o˝rob
(
b
, 
a
, *
v
, *
u
) {

17 
	`¨g¥ob
(
a
, 
b
, 
c
, 
d
,

18 *
e
, *
f
, *
g
, *
h
) {

21 *
g
 = 
c
 - 
a
;

22 *
h
 = 
b
 - 
d
;

23 *
e
 = *
f
;

	@asm/340-recurse.c

3 
	$rfun
(
x
) {

4 i‡–
____
 )

5  
_____
;

6 
nx
 = 
_____
;

7 
rv
 = 
	`rfun
(
nx
);

8  
_____
;

9 
	}
}

14 
	$rfun
(
x
) {

15 i‡(
x
 == 0)

17 
nx
 = 
x
>>2;

18 
rv
 = 
	`rfun
(
nx
);

19  
x
 + 
rv
;

20 
	}
}

	@asm/350-array.c

1 
	~<°dlib.h
>

3 
	trow3_t
[3];

4 
row3_t
 
	t¨øy4_3_t
[5];

6 
¨øy4_3_t
 
	gA
;

8 
	$gë_vÆue
(
¨øy4_3_t
 
A
, 
i
, 
j
)

10  
A
[
i
][
j
];

11 
	}
}

13 
row3_t
 
	grow0
, 
	grow1
, 
	grow2
, 
	grow3
;

14 *
	gB
[4] = {
row0
, 
row1
, 
row2
, 
row3
};

16 
	$gë_vÆue2
(*
B
[4], 
i
, 
j
)

18  
B
[
i
][
j
];

19 
	}
}

22 
	#N
 16

	)

23 
	tfix_m©rix
[
N
][N];

26 
fix_m©rix
 *
	$√w_fix_m©rix
(
n
) {

27  (
fix_m©rix
 *Ë
	`mÆloc
((fix_matrix));

28 
	}
}

32 
	$fix_¥od_ñe
 (
fix_m©rix
 
A
, fix_m©rix 
B
, 
i
, 
k
) {

33 
j
;

34 
ªsu…
 = 0;

36 
j
 = 0; j < 
N
; j++)

37 
ªsu…
 +
A
[
i
][
j
] * 
B
[j][
k
];

39  
ªsu…
;

40 
	}
}

45 
	$fix_¥od_ñe_›t
(
fix_m©rix
 
A
, fix_m©rix 
B
, 
i
, 
k
) {

46 *
A±r
 = &
A
[
i
][0];

47 *
B±r
 = &
B
[0][
k
];

48 *
Bíd
 = &
B
[
N
][
k
];

49 
ªsu…
 = 0;

51 
ªsu…
 +*
A±r
 * *
B±r
;

52 
A±r
 ++;

53 
B±r
 +
N
;

54 } 
B±r
 !
Bíd
);

55  
ªsu…
;

56 
	}
}

61 
	$fix_£t_düg
(
fix_m©rix
 
A
, 
vÆ
) {

62 
i
;

63 
i
 = 0; i < 
N
; i++)

64 
A
[
i
][i] = 
vÆ
;

65 
	}
}

70 
	$fix_£t_düg_›t
(
fix_m©rix
 
A
, 
vÆ
) {

71 *
Aba£
 = &
A
[0][0];

72 
i
 = 0;

73 
õnd
 = 
N
*(N+1);

75 
Aba£
[
i
] = 
vÆ
;

76 
i
 +(
N
+1);

77 } 
i
 !
õnd
);

78 
	}
}

81 
	$fix_ñe
(
fix_m©rix
 
A
, 
i
, 
j
) {

82  
A
[
i
][
j
];

83 
	}
}

86 *
	$√w_v¨_m©rix
(
n
) {

87  
	`mÆloc
(([
n
][n]));

88 
	}
}

92 
	$v¨_ñe
(
n
, 
A
[n][n], 
i
, 
j
) {

93  
A
[
i
][
j
];

94 
	}
}

98 
	$pv¨_ñe
(
n
, *
p
, 
i
, 
j
) {

99  
	`v¨_ñe
(
n
, 
p
, 
i
, 
j
);

100 
	}
}

104 
	$v¨_¥od_ñe
(
n
, 
A
[n][n], 
B
[n][n], 
i
, 
k
) {

105 
j
;

106 
ªsu…
 = 0;

108 
j
 = 0; j < 
n
; j++)

109 
ªsu…
 +
A
[
i
][
j
] * 
B
[j][
k
];

111  
ªsu…
;

112 
	}
}

117 
	$v¨_¥od_ñe_›t
(
n
, 
A
[n][n], 
B
[n][n], 
i
, 
k
) {

118 *
Arow
 = 
A
[
i
];

119 *
B±r
 = &
B
[0][
k
];

120 
ªsu…
 = 0;

121 
j
;

122 
j
 = 0; j < 
n
; j++) {

123 
ªsu…
 +
Arow
[
j
] * *
B±r
;

124 
B±r
 +
n
;

126  
ªsu…
;

127 
	}
}

	@asm/360-fixarray.c

3 
	#M
 5

	)

4 
	#N
 7

	)

8 
	gP
[
M
][
N
];

9 
	gQ
[
N
][
M
];

11 
	$sum_ñemít
(
i
, 
j
) {

12  
P
[
i
][
j
] + 
Q
[j][i];

13 
	}
}

	@asm/370-rect.c

2 
	sª˘
 {

3 
	mŒx
;

4 
	mŒy
;

5 
	mwidth
;

6 
	mheight
;

7 
	mcﬁ‹
;

12 
ª˘
 
	$nŸhög
() {

14 
ª˘
 
r
;

15 
r
.
Œx
 =Ñ.
Œy
 = 0;

16 
r
.
cﬁ‹
 = 0xFF00FF;

17 
r
.
width
 = 10;

18 
r
.
height
 = 20;

20  
r
;

21 
	}
}

23 
ª˘
 
	$nŸhög2
() {

25 
ª˘
 
r
 = { 0, 0, 10, 20, 0xFF00FF };

27  
r
;

28 
	}
}

31 
	$¨ó
(
ª˘
 *
Ω
) {

32  (*
Ω
).
width
 * (*Ω).
height
;

33 
	}
}

37 
	$rŸ©e_À·
(
ª˘
 *
Ω
) {

39 
t
 = 
Ω
->
height
;

40 
Ω
->
height
 =Ñp->
width
;

41 
Ω
->
width
 = 
t
;

43 
Ω
->
Œx
 -
t
;

44 
	}
}

	@asm/380-structure.c

2 
	sªc
 {

3 
	mi
;

4 
	mj
;

5 
	ma
[2];

6 *
	mp
;

10 
	$c›y
(
ªc
 *
r
)

12 
r
->
j
 =Ñ->
i
;

13 
	}
}

16 
	$£t_i
(
ªc
 *
r
, 
vÆ
)

18 
r
->
i
 = 
vÆ
;

19 
	}
}

21 
	$£t_a_ñe
(
ªc
 *
r
, 
i
, 
vÆ
)

23 
r
->
a
[
i
] = 
vÆ
;

24 
	}
}

26 
	$£t_p
(
ªc
 *
r
, *
pvÆ
)

28 
r
->
p
 = 
pvÆ
;

29 
	}
}

31 
ªc
 *
	gp
;

32 
ªc
 *
	gq
;

33 
	gj
, 
	gk
;

35 *
	$föd_a
(
ªc
 *
r
, 
i
)

37 *
vÆ
;

38 
p
 = 
r
;

39 
j
 = 
i
;

40 
vÆ
 = &
r
->
a
[
i
];

41 
q
 = 
r
;

42 
k
 = 
i
;

43  
vÆ
;

44 
	}
}

46 
	$lök_p
(
ªc
 *
r
)

48 
r
->
p
 = &r->
a
[r->
i
 +Ñ->
j
];

49 
	}
}

52 
	sNODE
 {

53 
NODE
 *
	mÀ·
;

54 
NODE
 *
	mright
;

55 
	md©a
;

	@asm/390-struct2.c

4 
	s¥ob
 {

5 *
	mp
;

7 
	mx
;

8 
	my
;

9 } 
	ms
;

10 
¥ob
 *
	m√xt
;

15 
	$•_öô
(
¥ob
 *
•
)

17 
•
->
s
.
x
 = sp->s.
y
;

18 
•
->
p
 = &(•->
s
.
x
);

19 
•
->
√xt
 = sp;

20 
	}
}

25 
	$•_öô
(
¥ob
 *
•
) {

26 
•
->
s
.
x
 = 
__________
;

27 
•
->
p
 = 
__________
;

28 
•
->
√xt
 = 
__________
;

29 
	}
}

	@asm/400-struct-eg.c

4 
	sELE
 {

5 
	mv
;

6 
ELE
 *
	mp
;

9 
fun
(
ELE
 *
±r
);

14 
	$fun
(
ELE
 *
±r
) {

15 
vÆ
 = 0;

16 
±r
) {

17 
vÆ
 +
±r
->
v
;

18 
±r
 =Öå->
p
;

20  
vÆ
;

21 
	}
}

	@asm/410-union.c

2 
	sS3
 {

3 
	mc
;

4 
	mi
[2];

5 
	mv
;

8 
	uU3
 {

9 
	mc
;

10 
	mi
[2];

11 
	mv
;

17 
	$doubÀ2bôs
(
d
) {

19 
d
;

20 
u
;

21 } 
ãmp
;

22 
ãmp
.
d
 = d;

23  
ãmp
.
u
;

24 
	}
};

28 
	$doubÀ2ul⁄g
(
d
) {

29  (Ë
d
;

30 
	}
};

34 
	$ul⁄g2doubÀ
(
u
)

37 
u
;

38 
d
;

39 } 
ãmp
;

40 
ãmp
.
u
 = u;

41  
ãmp
.
d
;

42 
	}
};

47 
	$uu2doubÀ
(
w‹d0
, 
w‹d1
)

50 
d
;

51 
u
[2];

52 } 
ãmp
;

54 
ãmp
.
u
[0] = 
w‹d0
;

55 
ãmp
.
u
[1] = 
w‹d1
;

56  
ãmp
.
d
;

57 
	}
}

61 
	$uc⁄vît
(
u
) {

62  (Ë
u
;

63 
	}
}

67 
	$ic⁄vît
(
x
) {

68  (Ë
x
;

69 
	}
}

	@asm/420-node.c

1 
	~<°dlib.h
>

2 
	~<°dio.h
>

5 
	snode_s
 {

6 
node_s
 *
	mÀ·
;

7 
node_s
 *
	mright
;

8 
	md©a
[2];

13 
	unode_u
 {

15 
node_u
 *
	mÀ·
;

16 
node_u
 *
	mright
;

17 } 
	möã∫Æ
;

18 
	md©a
[2];

23 íum { 
	mN_LEAF
, 
	mN_INTERNAL
 } 
	tnodëy≥_t
;

25 
	snode_t
 {

26 
nodëy≥_t
 
	mty≥
;

29 
node_t
 *
	mÀ·
;

30 
node_t
 *
	mright
;

31 } 
	möã∫Æ
;

32 
	md©a
[2];

33 } 
	möfo
;

37 
	$dŸhögs
() {

38 
node_s
 *
•
 = 
	`mÆloc
((node_s));

39 
node_u
 *
up
 = 
	`mÆloc
((node_u));

40 
node_t
 *
ç
 = 
	`mÆloc
((node_t));

41 
•
->
d©a
[0] = sp->data[1];

42 
up
->
öã∫Æ
.
À·
 = 
NULL
;

43 
up
->
d©a
[0] = 0;

44 
ç
->
ty≥
 = 
N_INTERNAL
;

45 
ç
->
öfo
.
öã∫Æ
.
À·
 =Åp->öfo.öã∫Æ.
right
;

46 
ç
->
öfo
.
d©a
[0] = 1;

47 
	}
}

	@asm/430-struct-union.c

4 
	mu
;

5 
	mv
;

6 
	mw
;

7 } 
	mt1
;

9 
	ma
[2];

10 *
	mp
;

11 } 
	mt2
;

12 } 
	tu_ty≥
;

17 
	$gë
(
u_ty≥
 *
up
, 
TYPE
 *
de°
) {

18 *
de°
 = 
EXPR
;

19 
	}
}

23 
	#GETTER
(
«me
,
ty≥
,
ex¥
Ë
	`«me
(
u_ty≥
 *
up
,ty≥ *
de°
Ë{ *de° =Éx¥; }

	)

25 
GETTER
(
gë_u
, , 
up
->
t1
.
u
)

27 
GETTER
(
gë_v
, , 
up
->
t1
.
v
)

29 
GETTER
(
gë_wp
, *, &
up
->
t1
.
w
)

31 
GETTER
(
gë_a
, *, 
up
->
t2
.
a
)

33 
GETTER
(
gë_au
, , 
up
->
t2
.
a
[up->
t1
.
u
])

35 
GETTER
(
gë_pvÆ
, , *
up
->
t2
.
p
)

	@asm/440-align.c

1 
	~<°dlib.h
>

4 
	sS1
 {

5 
	mi
;

6 
	mc
;

7 
	mj
;

12 
	sS2
 {

13 
	mi
;

14 
	mj
;

15 
	mc
;

21 *
	ma
;

22 
	mb
;

23 
	mc
;

24 
	md
;

25 
	me
;

26 
	mf
;

27 
	mg
;

28 
	mh
;

30 } 
	gªc_a
;

34 *
	ma
;

35 
	mc
;

36 
	mg
;

37 
	me
;

38 
	mh
;

39 
	mb
;

40 
	md
;

41 
	mf
;

43 } 
	gªc
;

47 
size_t
 
	$bsize
() {

48  (
ªc_a
);

49 
	}
}

51 
size_t
 
	$lsize
() {

52  (
ªc
);

53 
	}
}

	@asm/445-frame.c

2 
	~<°dio.h
>

6 
	$v‰ame
(
n
, 
idx
, *
q
) {

7 
i
;

8 *
p
[
n
];

9 
p
[0] = &
i
;

10 
i
 = 1; i < 
n
; i++)

11 
p
[
i
] = 
q
;

12  *
p
[
idx
];

13 
	}
}

16 
	$l‰ame
(
n
, 
idx
) {

17 
i
;

18 
a
[
n
];

19 
a
[0] = 7;

20 
i
 = 1; i < 
n
; i++)

21 
a
[
i
] = 3;

22  
a
[
idx
];

23 
	}
}

25 
	$maö
() {

27 
	}
}

	@asm/450-bufdemo.c

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

8 *
	$gës
(*
s
)

10 
c
;

11 *
de°
 = 
s
;

12 (
c
 = 
	`gëch¨
()Ë!'\n' && c !
EOF
)

13 *
de°
++ = 
c
;

14 i‡(
c
 =
EOF
 && 
de°
 =
s
)

16  
NULL
;

17 *
de°
++ = '\0';

18  
s
;

19 
	}
}

22 
	$echo
()

24 
buf
[8];

25 
	`gës
(
buf
);

26 
	`puts
(
buf
);

27 
	}
}

33 
	#BUFSIZE
 8

	)

34 
	$good_echo
()

36 
buf
[
BUFSIZE
];

37 *
bp
 = 
	`fgës
(
buf
, 
BUFSIZE
, 
°dö
);

38 i‡(
bp
)

39 
	`puts
(
bp
);

40 
	}
}

43 
	$maö
(
¨gc
, *
¨gv
[])

45 
u£_good
 = (
¨gc
 > 1);

46 
	`¥ötf
("Typeá string:");

47 i‡(
u£_good
)

48 
	`good_echo
();

50 
	`echo
();

52 
	}
}

	@asm/460-bufovf.c

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

6 
	#°æí
(
s
Ë
	`my_°æí
(s)

	)

9 *
	$gës
(*
s
)

11 
c
;

12 *
de°
 = 
s
;

13 (
c
 = 
	`gëch¨
()Ë!'\n' && c !
EOF
)

14 *
de°
++ = 
c
;

15 i‡(
c
 =
EOF
 && 
de°
 =
s
)

17  
NULL
;

18 *
de°
++ = '\0';

19  
s
;

20 
	}
}

23 
size_t
 
	$my_°æí
(c⁄° *
s
)

25 
size_t
 
Àn
 = 0;

26 *(
s
++))

27 
Àn
++;

28  
Àn
;

29 
	}
}

31 *
	$°r˝y
(*
de°
, c⁄° *
§c
)

33 *
ªsu…
 = 
de°
;

34 
c
;

36 
c
 = *(
§c
++);

37 *(
de°
++Ë
c
;

38 } 
c
);

39  
ªsu…
;

40 
	}
}

46 *
	$gë_löe
()

48 
buf
[4];

49 *
ªsu…
;

50 
	`gës
(
buf
);

51 
ªsu…
 = 
	`mÆloc
(
	`°æí
(
buf
));

52 
	`°r˝y
(
ªsu…
, 
buf
);

53  
ªsu…
;

54 
	}
}

57 
	$maö
(
¨gc
, *
¨gv
[])

59 
	`¥ötf
("Input>");

60 
	`puts
(
	`gë_löe
());

62 
	}
}

	@asm/470-scheck.c

2 
	~<°dio.h
>

5 
	$maö
() {

6 
loˇl
;

7 
	`¥ötf
("loˇ»© %p\n", &
loˇl
);

9 
	}
}

	@asm/480-charbuf.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

6 
	$Àn
(*
s
) {

7  
	`°æí
(
s
);

8 
	}
}

10 
	$ùtﬂ
(*
s
, *
p
) {

11 
vÆ
 = *
p
;

12 
	`•rötf
(
s
, "%ld", 
vÆ
);

13 
	}
}

15 
	$öéí
(
x
) {

16 
v
;

17 
buf
[12];

18 
v
 = 
x
;

19 
	`ùtﬂ
(
buf
, &
v
);

20  
	`Àn
(
buf
);

21 
	}
}

24 
	$ôﬂ
(*
s
, 
x
)

26 
	`•rötf
(
s
, "%d", 
x
);

27 
	}
}

29 
	$°‹eöt
(
vÆ
, *
de°
)

31 *
de°
 = 
vÆ
;

32 
	}
}

34 
	$öéí2
(
x
) {

35 
v
;

36 
buf
[12];

37 
	`°‹eöt
(
x
, &
v
);

38 
	`ôﬂ
(
buf
, 
v
);

39  
	`Àn
(
buf
);

40 
	}
}

	@asm/500-floatcvt.c

2 
	$fcvt
(
i
, *
Â
, *
dp
, *
Õ
)

4 
f
 = *
Â
; 
d
 = *
dp
; 
l
 = *
Õ
;

5 *
Õ
 = (Ë
d
;

6 *
Â
 = (Ë
i
;

7 *
dp
 = (Ë
l
;

8  (Ë
f
;

9 
	}
}

12 
	#vÆ1
 
d


	)

13 
	#vÆ2
 
i


	)

14 
	#vÆ3
 
l


	)

15 
	#vÆ4
 
f


	)

18 
	$fcvt2
(*
ù
, *
Â
, *
dp
, 
l
)

20 
i
 = *
ù
; 
f
 = *
Â
; 
d
 = *
dp
;

21 *
ù
 = (Ë
vÆ1
;

22 *
Â
 = (Ë
vÆ2
;

23 *
dp
 = (Ë
vÆ3
;

24  (Ë
vÆ4
;

25 
	}
}

28 
	$mf2md
(*
§c
, *
de°
) {

29 
f
 = (Ë*
§c
;

30 *
de°
 = (Ë
f
;

31 
	}
}

34 
	$f2d
(
f
) {

35  (Ë
f
;

36 
	}
}

40 
	$d2f
(
d
) {

41  (Ë
d
;

42 
	}
}

46 
	$Êﬂt_mov
(
v1
, *
§c
, *
d°
) {

47 
v2
 = *
§c
;

48 *
d°
 = 
v1
;

49  
v2
;

50 
	}
}

	@asm/510-cvt.c

2 
	t§c_t
;

3 
	tde°_t
;

6 
de°_t
 
	$cvt
(
§c_t
 
x
)

8 
de°_t
 
y
 = (de°_tË
x
;

9  
y
;

10 
	}
}

14 
	$cvt_¶2¶
(
x
)

16  
x
;

17 
	}
}

19 
	$cvt_si2¶
(
x
)

21  
x
;

22 
	}
}

24 
	$cvt_sc2¶
(
x
)

26  
x
;

27 
	}
}

29 
	$cvt_ui2ul
(
x
)

31  
x
;

32 
	}
}

34 
	$cvt_uc2ul
(
x
)

36  
x
;

37 
	}
}

39 
	$cvt_¶2si
(
x
)

41  
x
;

42 
	}
}

44 
	$cvt_ul2ui
(
x
)

46  
x
;

47 
	}
}

50 
	$cvt_¶2d
(
x
)

52  
x
;

53 
	}
}

55 
	$cvt_d2si
(
x
)

57  
x
;

58 
	}
}

60 
	$cvt_f2d
(
x
)

62  
x
;

63 
	}
}

65 
	$cvt_¶2f
(
x
)

67  
x
;

68 
	}
}

70 
	$cvt_f2¶
(
x
)

72  
x
;

73 
	}
}

	@asm/520-floatfunct.c

2 
	$fun˘
(
a
, 
x
, 
b
, 
i
)

4  
a
*
x
 - 
b
/
i
;

5 
	}
}

9 íum {
	mNEG
, 
	mZERO
, 
	mPOS
, 
	mOTHER
} 
	tønge_t
;

11 
ønge_t
 
	$föd_ønge
(
x
)

13 
ªsu…
;

14 i‡(
x
 < 0)

15 
ªsu…
 = 
NEG
;

16 i‡(
x
 == 0)

17 
ªsu…
 = 
ZERO
;

18 i‡(
x
 > 0)

19 
ªsu…
 = 
POS
;

21 
ªsu…
 = 
OTHER
;

22  
ªsu…
;

23 
	}
}

27 
	mivÆ
;

28 
	mlvÆ
;

29 
	mfvÆ
;

30 
	mdvÆ
;

31 } 
	tt°ru˘_t
;

33 
t°ru˘_t
 
	gss1
, 
	gss2
, 
	gsi
, 
	g¶
, 
	gsf
, 
	gsd
;

35 
	$x„r
()

37 
si
.
fvÆ
 = (Ë
ss1
.
ivÆ
; si.
dvÆ
 = (Ë
ss2
.ival;

39 
¶
.
fvÆ
 = (Ë
ss1
.
lvÆ
; sl.
dvÆ
 = (Ë
ss2
.lval;

41 
sf
.
ivÆ
 = (Ë
ss1
.
fvÆ
; sf.
lvÆ
 = (Ë
ss2
.fval;

42 
sf
.
dvÆ
 = (Ë
ss2
.
fvÆ
;

44 
sd
.
ivÆ
 = (Ë
ss1
.
dvÆ
; sd.
lvÆ
 = (Ë
ss2
.dval;

45 
sd
.
fvÆ
 = (Ë
ss1
.
dvÆ
;

46 
	}
}

48 
	$c›y_vÆs
(
i
, 
l
, 
f
, 
d
,

49 *
ù
, *
Õ
, *
Â
, *
dp
)

51 *
ù
 = (Ë
f
;

52 *
Õ
 = (Ë
d
;

53 *
Â
 = (Ë
d
;

54 *
dp
 = (Ë
l
;

55 
	}
}

	@asm/530-float-funs.c

1 
	~<m©h.h
>

3 
	t¨g1_t
;

4 
	t¨g2_t
;

5 
	t¨g3_t
;

6 
	t¨g4_t
;

9 
fun˘1a
(
p
, 
q
, 
r
, 
s
);

10 
fun˘1b
(
p
, 
q
, 
r
, 
s
);

14 
	$fun˘1
(
¨g1_t
 
p
, 
¨g2_t
 
q
, 
¨g3_t
 
r
, 
¨g4_t
 
s
)

16  
p
/(
q
+
r
Ë- 
s
;

17 
	}
}

21 
fun˘2
(
w
, 
x
, 
y
, 
z
);

25 
	$fun˘2
(
w
, 
x
, 
y
, 
z
)

27  
y
*
x
 - 
w
/
z
;

28 
	}
}

32 
fun˘3
(*
≠
, 
b
, 
c
, *
dp
);

36 
	$fun˘3
(*
≠
, 
b
, 
c
, *
dp
) {

37 
a
 = *
≠
;

38 
d
 = *
dp
;

39 i‡(
a
 < 
b
)

40  
c
*
d
;

42  
c
+2*
d
;

43 
	}
}

46 
	$d_max
(
x
, 
y
) {

47  
x
 < 
y
 ? y : x;

48 
	}
}

50 
	$f_max
(
x
, 
y
) {

51  
x
 < 
y
 ? y : x;

52 
	}
}

54 
	$dz
(*
dp
) {

55 *
dp
 = 0;

57 
	}
}

60 
	#EXPR
(
x
Ë
	`Ábs
(x)

	)

61 
	#EXPR2
(
x
Ë0

	)

62 
	#EXPR3
(
x
Ë-(x)

	)

65 
	$sim∂efun
(
x
) {

66  
	`EXPR
(
x
);

67 
	}
}

70 
	$sim∂efun2
(
x
) {

71  
	`EXPR2
(
x
);

72 
	}
}

74 
	$sim∂efun3
(
x
) {

75  
	`EXPR3
(
x
);

76 
	}
}

79 
	$fsim∂efun
(
x
) {

80  
	`EXPR
(
x
);

81 
	}
}

83 
	$fsim∂efun2
(
x
) {

84  
	`EXPR2
(
x
);

85 
	}
}

87 
	$fsim∂efun3
(
x
) {

88  
	`EXPR3
(
x
);

89 
	}
}

	@asm/540-floatconst.c

3 
	~<°dlib.h
>

4 
	~<°dio.h
>

5 
	~<m©h.h
>

6 
	~<öây≥s.h
>

8 
	$cúcum
(
ødius
)

10  2.0 * 
M_PI
 * 
ødius
;

11 
	}
}

13 
	$¨ó
(
ødius
)

15  
M_PI
 * 
ødius
 *Ñadius;

16 
	}
}

19 
	$˚l2Áhr
(
ãmp
)

21  1.8 * 
ãmp
 + 32.0;

22 
	}
}

27 
	$decode
(
lo
, 
hi
)

29 
exp
 = 
hi
 >> 20;

30 
hi_‰ac
 = 
hi
 - (
exp
 << 20);

31 
uöt64_t
 
‰ac
 = ((
öt64_t
Ë1 << 52Ë+ ((öt64_tË
hi_‰ac
 << 32Ë+ 
lo
;

32 
‰ac_vÆ
 = (Ë
‰ac
 / (Ë((
öt64_t
) 1 << 52);

33 
vÆ
 = 
‰ac_vÆ
 * (Ë(1 << (
exp
 - 1023));

34 
	`¥ötf
("lÿ%u (0x%x)\n", 
lo
,Üo);

35 
	`¥ötf
("hò%u (0x%x)\n", 
hi
, hi);

36 
	`¥ötf
("ex∞%d (0x%x)\n", 
exp
,Éxp);

37 
	`¥ötf
("hi_‰a¯%d (0x%x)\n", 
hi_‰ac
, hi_frac);

38 
	`¥ötf
("‰a¯%" 
PRIu64
 " (0x%" 
PRIx64
 ")\n", 
‰ac
, frac);

39 
	`¥ötf
("‰ac_vÆ = %.15g\n", 
‰ac_vÆ
);

40 
	`¥ötf
("vÆ = %.15g\n", 
vÆ
);

41 
	}
}

43 
	$maö
(
¨gc
, *
¨gv
[])

45 
lo
 = 1413754136;

46 
hi
 = 1074340347;

47 i‡(
¨gc
 == 3) {

48 
lo
 = 
	`°πoul
(
¨gv
[1], 
NULL
, 0);

49 
hi
 = 
	`°πoul
(
¨gv
[2], 
NULL
, 0);

51 
	`decode
(
lo
, 
hi
);

53 
	}
}

	@asm/align128.c

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

6 
	t__öt128
 
	tuöt128_t
;

9 
uöt128_t
 
	mbig
;

10 
	msmÆl
;

11 } 
	tã°_°ru˘
;

14 
	$maö
() {

15 
	`¥ötf
("Te° såu˘uª ha†sizê%d\n", (Ë(
ã°_°ru˘
));

17 
i
;

18 
	`¥ötf
("Incrementing\n");

19 
i
 = 4; i < 64; i+=4) {

20 
	`¥ötf
("Allocated %d blockátáddress %p\n",

21 
i
, 
	`mÆloc
(i));

23 
	`¥ötf
("Nonlinear\n");

24 
i
 = 16; i < 64; i+=16) {

25 
	`¥ötf
("Allocated %d blockátáddress %p\n",

26 2*
i
, 
	`mÆloc
(2*i));

27 
	`¥ötf
("Allocated %d blockátáddress %p\n",

28 
i
, 
	`mÆloc
(i));

31 
	}
}

	@asm/alloca-eg.c

1 
	~<°dlib.h
>

2 
	~<°dio.h
>

5 
	$¥öt_ªv
(*
s
) {

6 
size_t
 
Àn
 = 
	`°æí
(
s
);

7 *
buf
 = 
	`Æloˇ
(
Àn
+1);

8 
size_t
 
i
;

9 
i
 = 0; i < 
Àn
; i++)

10 
buf
[
Àn
-
i
] = 
s
[i];

12 
buf
[
Àn
] = '\0';

13 
	`¥ötf
(
buf
);

14 
	}
}

	@asm/bufdemo.c

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

8 *
	$gës
(*
s
)

10 
c
;

11 *
de°
 = 
s
;

12 (
c
 = 
	`gëch¨
()Ë!'\n' && c !
EOF
)

13 *
de°
++ = 
c
;

14 *
de°
++ = '\0';

15 i‡(
c
 =
EOF
)

16  
NULL
;

17  
s
;

18 
	}
}

21 
	$echo
()

23 
buf
[4];

24 
	`gës
(
buf
);

25 
	`puts
(
buf
);

26 
	}
}

32 
	#BUFSIZE
 64

	)

33 
	$good_echo
()

35 
buf
[
BUFSIZE
];

36 
i
;

38 i‡(!
	`fgës
(
buf
, 
BUFSIZE
, 
°dö
))

41 
i
 = 0; 
buf
[i] && buf[i] != '\n'; i++)

42 i‡(
	`putch¨
(
buf
[
i
]Ë=
EOF
)

44 i‡(
buf
[
i
] == '\n') {

46 
	`putch¨
('\n');

50 
	}
}

53 
	$maö
(
¨gc
, *
¨gv
[])

55 
u£_good
 = (
¨gc
 > 1);

56 
	`¥ötf
("Typeá string:");

57 i‡(
u£_good
)

58 
	`good_echo
();

60 
	`echo
();

62 
	}
}

	@asm/cast-problem.c

2 
	t§c_t
;

3 
	tde°_t
;

5 
	tlöt
;

6 
	tuch¨
;

7 
	tlunsig√d
;

9 
	#BUILD
(
‚ame
, 
°
, 
dt
Ë
	`‚ame
(° *
•
, dà*
dp
Ë{ *d∞(dtË*•; }

	)

12 
	$cvt
(
§c_t
 *
•
, 
de°_t
 *
dp
)

14 *
dp
 = (
de°_t
Ë*
•
;

15 
	}
}

18 
	$BUILD
(
lûi
, 
löt
,Üint)

20 
	$BUILD
(
ci
, , )

22 
	$BUILD
(
cu
, , )

24 
	$BUILD
(
u˛i
, 
uch¨
, 
löt
)

26 
	$BUILD
(
ic
, , )

28 
	$BUILD
(
uuc
, , 
uch¨
)

30 
	`BUILD
(
cs
, , )

	@asm/dsize.c

1 
	~<limôs.h
>

4 
	$∂us_⁄e
() {

6 
	}
}

8 
	$möus_⁄e
() {

10 
	}
}

12 
	$tmax
() {

13  
LONG_MAX
;

14 
	}
}

	@asm/dynstack.c

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

6 
ªvî£_°rög_mÆlocch¨
 *
	gs
) {

7 
size_t
 
	gn
 = 
°æí
(
s
);

8 *
	gbuf
 = (*Ë
mÆloc
(
n
);

9 
size_t
 
	gi
;

10 
	gi
 = 0; i < 
	gn
; i++) {

11 
	gbuf
[
n
-
i
-1] = 
s
[i];

13 
	gi
 = 0; i < 
	gn
; i++) {

14 
	gs
[
i
] = 
buf
[i];

16 
‰ì
(
buf
);

19 
	$ªvî£_°rög_Æloˇ
(*
s
) {

20 
size_t
 
n
 = 
	`°æí
(
s
);

21 *
buf
 = (*Ë
	`Æloˇ
(
n
);

22 
size_t
 
i
;

23 
i
 = 0; i < 
n
; i++) {

24 
buf
[
n
-
i
-1] = 
s
[i];

26 
i
 = 0; i < 
n
; i++) {

27 
s
[
i
] = 
buf
[i];

29 
	}
}

31 
	$ªvî£_°rög_¨øy
(*
s
) {

32 
size_t
 
n
 = 
	`°æí
(
s
);

33 
size_t
 
i
;

34 
buf
[
n
];

35 
i
 = 0; i < 
n
; i++) {

36 
buf
[
n
-
i
-1] = 
s
[i];

38 
i
 = 0; i < 
n
; i++) {

39 
s
[
i
] = 
buf
[i];

41 
	}
}

	@asm/framepointer.c

1 
	~<°dlib.h
>

2 
	~<°dio.h
>

3 
	~<°rög.h
>

5 
¥öt_°r
(*
s
);

8 
	$¥öt_ªv_Ø
(*
s
) {

9 
size_t
 
Àn
 = 
	`°æí
(
s
);

10 *
buf
 = 
	`Æloˇ
(
Àn
+1);

11 
size_t
 
i
;

12 
i
 = 0; i < 
Àn
; i++)

13 
buf
[
Àn
-
i
] = 
s
[i];

15 
buf
[
Àn
] = '\0';

16 
	`¥öt_°r
(
buf
);

17 
	}
}

21 
	$¥öt_ªv_da
(*
s
) {

22 
size_t
 
Àn
 = 
	`°æí
(
s
);

23 
buf
[
Àn
+1];

24 
size_t
 
i
;

25 
i
 = 0; i < 
Àn
; i++)

26 
buf
[
Àn
-
i
] = 
s
[i];

28 
buf
[
Àn
] = '\0';

29 
	`¥öt_°r
(
buf
);

30 
	}
}

33 
	$¥öt_ªvn_Ø
(*
s
, 
size_t
 
n
) {

34 *
buf
 = 
	`Æloˇ
(
n
+1);

35 
size_t
 
i
;

36 
i
 = 0; i < 
n
; i++)

37 
buf
[
n
-
i
] = 
s
[i];

39 
buf
[
n
] = '\0';

40 
	`¥öt_°r
(
buf
);

41 
	}
}

45 
	$¥öt_ªvn_da
(*
s
, 
size_t
 
n
) {

46 
buf
[
n
+1];

47 
size_t
 
i
;

48 
i
 = 0; i < 
n
; i++)

49 
buf
[
n
-
i
] = 
s
[i];

51 
buf
[
n
] = '\0';

52 
	`¥öt_°r
(
buf
);

53 
	}
}

	@asm/hworld.c

1 
	~<°dio.h
>

3 
	$hw‹ld
() {

4 
	`¥ötf
("Hello, World!\n");

5 
	}
}

7 
	$maö
() {

8 
	`hw‹ld
();

10 
	}
}

	@asm/linked-list.c

2 
	~<°dlib.h
>

4 
ELE
 
	tli°_ñe_t
, *
	tli°_±r
;

6 
	sELE
 {

7 
	mvÆue
;

8 
li°_±r
 
	m√xt
;

11 
li°_±r
 
	$√w_li°_ñe
(
vÆue
) {

12 
li°_±r
 
ñe
 = (li°_±rË
	`mÆloc
((
li°_ñe_t
));

13 
ñe
->
vÆue
 = value;

14 
ñe
->
√xt
 = 
NULL
;

15  
ñe
;

16 
	}
}

18 
li°_±r
 
	$¨øy_to_li°_addèû
(*
a
, 
size_t
 
n
) {

19 
li°_±r
 
ªsu…
 = 
NULL
;

20 
li°_±r
 *
èûp
 = &
ªsu…
;

21 
size_t
 
i
;

22 
i
 = 0; i < 
n
; i++) {

23 
li°_±r
 
ñe
 = 
	`√w_li°_ñe
(
a
[
i
]);

24 *
èûp
 = 
ñe
;

25 
èûp
 = &
ñe
->
√xt
;

27  
ªsu…
;

28 
	}
}

30 
li°_±r
 
	$¨øy_to_li°_ªvî£
(*
a
, 
size_t
 
n
) {

31 
li°_±r
 
ªsu…
 = 
NULL
;

32 
size_t
 
i
;

33 
i
 = 
n
-1; i <Ç; i--) {

34 
li°_±r
 
ñe
 = 
	`√w_li°_ñe
(
a
[
i
]);

35 
ñe
->
√xt
 = 
ªsu…
;

36 
ªsu…
 = 
ñe
;

38  
ªsu…
;

39 
	}
}

42 
li°_±r
 
	$¨øy_to_li°_ªcur£
(*
a
, 
size_t
 
n
) {

43 i‡(
n
 == 0)

44  
NULL
;

45 
li°_±r
 
ª°
 = 
	`¨øy_to_li°_ªcur£
(
a
+1, 
n
-1);

46 
li°_±r
 
ñe
 = 
	`√w_li°_ñe
(
a
[0]);

47 
ñe
->
√xt
 = 
ª°
;

48  
ñe
;

49 
	}
}

51 
	$ö¸_ñe
(*
p
) {

52 *
p
 = *p+1;

53 
	}
}

55 
	$ö¸_li°
(
li°_±r
 
ls
) {

56 
ls
) {

57 
	`ö¸_ñe
(&
ls
->
vÆue
);

58 
ls
 =Üs->
√xt
;

60 
	}
}

	@asm/reftest.c

3 
	$¥oc
(*
E
, 
i
) {

4  *(
E
+
i
-3);

5 
	}
}

7 
	$diff
(*
E
, 
i
) {

8  ((&
E
[
i
]-E) << 32) >= 0;

9 
	}
}

	@asm/test-64-framework.c

5 
	~<°dio.h
>

7 (*
	tb2qfun
)(
	tb
);

9 
	`movsbl
(
b
);

11 
	`movzbl
(
b
);

13 
	`addl
(
b
);

15 
	`addb
(
b
);

17 
	`movi
(
b
);

19 
	$show_vÆ
(
x
) {

20 
byã
 = 
x
 & 0xFF;

21 
sbyã
 = ((sig√d Ë
byã
 << 24) >> 24;

23 
	`¥ötf
("Byã vÆue. Unsig√d = %d, sig√d = %d, hex = 0x%x\n", 
byã
, 
sbyã
, byte);

24 
movsblvÆ
 = 
	`movsbl
(
byã
);

25 
	`¥ötf
("movsb»%ld (0x%lx)\n", 
movsblvÆ
, movsblval);

26 
movzblvÆ
 = 
	`movzbl
(
byã
);

27 
	`¥ötf
("movzb»%ld (0x%lx)\n", 
movzblvÆ
, movzblval);

28 
addlvÆ
 = 
	`addl
(
byã
);

29 
	`¥ötf
("add»%ld (0x%lx)\n", 
addlvÆ
,áddlval);

30 
addbvÆ
 = 
	`addb
(
byã
);

31 
	`¥ötf
("addb = %ld (0x%lx)\n", 
addbvÆ
,áddbval);

32 
movivÆ
 = 
	`movi
(
byã
);

33 
	`¥ötf
("movò%ld (0x%lx)\n", 
movivÆ
, movival);

34 
	}
}

36 
	$maö
(
¨gc
, *
¨gv
[]) {

37 
i
;

38 
i
 = 1; i < 
¨gc
; i++)

39 
	`show_vÆ
(
	`©oi
(
¨gv
[
i
]));

40 
	}
}

	@asm/w100-ia32.c

5 
	$fun
(
a
, *
bp
) {

6  
a
 + *
bp
;

7 
	}
}

12 
	$ˇŒ_fun
(
x
, 
y
) {

13  
	`fun
(
x
, &
y
);

14 
	}
}

19 
	$afun
(
t
) {

20 
a
[2] = {33, 515};

21  
a
[
t
];

22 
	}
}

	@asm/w110-procreg-ia32.c

2 
	$¥oc
(
a2
, *
a2p
,

3 
a3
, *
a3p
,

4 
a4
, *
a4p
)

6 *
a2p
 +
a2
;

7 *
a3p
 +
a3
;

8 *
a4p
 +
a4
;

9 
	}
}

13 
	$ˇŒ_¥oc
()

15 
x2
 = 2;

16 
x3
 = 3; 
x4
 = 4;

17 
	`¥oc
(
x2
, &x2, 
x3
, &x3, 
x4
, &x4);

18  
x1
*(
x3
-
x4
);

19 
	}
}

	@asm/w110-procreg.c

2 
	$¥oc
(
a2
, *
a2p
,

3 
a3
, *
a3p
,

4 
a4
, *
a4p
)

6 *
a2p
 +
a2
;

7 *
a3p
 +
a3
;

8 *
a4p
 +
a4
;

9 
	}
}

13 
	$ˇŒ_¥oc
()

15 
x2
 = 2;

16 
x3
 = 3; 
x4
 = 4;

17 
	`¥oc
(
x2
, &x2, 
x3
, &x3, 
x4
, &x4);

18  
x2
*(
x3
-
x4
);

19 
	}
}

	@asm/w200-okmul.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<limôs.h
>

6 
tmu…_ok_asm
(
x
, 
y
, *
de°
);

7 
umu…_ok_asm
(
x
, 
y
, *
de°
);

8 
tmu…_ßt_asm
(
x
, 
y
);

14 
tmu…_ok
(
x
, 
y
, *
de°
);

19 
	$tmu…_ok1
(
x
, 
y
, *
de°
)

21 
ªsu…
 = 0;

22 *
de°
 = 
x
*
y
;

23 
	`asm
("setae %al");

24  
ªsu…
;

25 
	}
}

29 
	$tmu…_ok2
(
x
, 
y
, *
de°
)

31 
ªsu…
;

33 *
de°
 = 
x
*
y
;

34 
	`asm
("setae %%bl # SetÜow-order byte\n\t"

36 : [
vÆ
] "Ù" (
ªsu…
)

40  
ªsu…
;

41 
	}
}

46 
	$tmu…_ok3
(
x
, 
y
, *
de°
)

48 
bªsu…
;

49 *
de°
 = 
x
*
y
;

51 
	`asm
("setae %[b] # SetÑesult"

52 : [
b
] "Ù" (
bªsu…
)

55  (Ë
bªsu…
;

56 
	}
}

61 
	$tmu…_ok4
(
x
, 
y
, *
de°
)

63 
bªsu…
;

65 
	`asm
("imulq %[x],%[y] # Compute y = x * y\n\t"

67 : [
y
] "+r" (y), [
b
] "Ù" (
bªsu…
)

68 : [
x
] "r" (x)

70 *
de°
 = 
y
;

71  (Ë
bªsu…
;

72 
	}
}

80 
umu…_ok
(
x
, 
y
, *
de°
);

85 
	$umu…_ok
(
x
, 
y
, *
de°
)

87 
bªsu…
;

89 
	`asm
("movq %[x],%%rax # Get x\n\t"

93 : [
p
] "=m" (*
de°
), [
b
] "Ù" (
bªsu…
)

94 : [
x
] "r" (x), [
y
] "r" (y)

98  (Ë
bªsu…
;

99 
	}
}

104 
tmu…_ßt
(
x
, 
y
);

109 
	$tmu…_ßt
(
x
, 
y
) {

111 
i•os
 = (
x
 < 0Ë=(
y
 < 0);

113 
›rod
 = 
i•os
 ? 
LONG_MAX
 : 
LONG_MIN
;

114 
¥od
 = 
x
 * 
y
;

115 
bok
;

116 
	`asm
("setae %[b] # SetÑesult"

117 : [
b
] "Ù" (
bok
)

119 
¥od
 = 
bok
 ?Örod : 
›rod
;

120  
¥od
;

121 
	}
}

124 
	$maö
(
¨gc
, *
¨gv
[]) {

125 
sx
, 
sy
, 
sde°
, 
•rod
;

126 
sok
;

127 
ux
, 
uy
, 
ude°
, 
u¥od
;

128 
uok
;

129 
ªsu…
;

133 
¨g1
 = 0x100000000L;

134 
¨g2
 = 0x0ffffffffL;

136 i‡(
¨gc
 > 1)

137 
¨g1
 = 
	`°πﬁ
(
¨gv
[1], 
NULL
, 0);

139 i‡(
¨gc
 > 2)

140 
¨g2
 = 
	`°πﬁ
(
¨gv
[2], 
NULL
, 0);

142 
sx
 = (Ë
¨g1
;

143 
sy
 = (Ë
¨g2
;

145 
sok
 = 
sx
 =0 || (sx*
sy
)/sx == sy;

146 
•rod
 = 
sx
*
sy
;

148 
	`¥ötf
("Signed multiply: %ld*%ld->%ld, ok = %d\n",

149 
sx
, 
sy
, sx*sy, 
sok
);

152 
ªsu…
 = 
	`tmu…_ok_asm
(
sx
, 
sy
, &
sde°
);

153 
	`¥ötf
("%sÅmult_ok_asm: %ld*%ld->%ld, ok = %d\n",

154 
ªsu…
 =
sok
 && 
sde°
 =
•rod
 ? "OK" : "ERR",

155 
sx
, 
sy
, 
sde°
, 
ªsu…
);

158 
ªsu…
 = 
	`tmu…_ok1
(
sx
, 
sy
, &
sde°
);

159 
	`¥ötf
("%sÅmult_ok1: %ld*%ld->%ld, ok = %d\n",

160 
ªsu…
 =
sok
 && 
sde°
 =
•rod
 ? "OK" : "ERR",

161 
sx
, 
sy
, 
sde°
, 
ªsu…
);

164 
ªsu…
 = 
	`tmu…_ok2
(
sx
, 
sy
, &
sde°
);

165 
	`¥ötf
("%sÅmult_ok2: %ld*%ld->%ld, ok = %d\n",

166 
ªsu…
 =
sok
 && 
sde°
 =
•rod
 ? "OK" : "ERR",

167 
sx
, 
sy
, 
sde°
, 
ªsu…
);

170 
ªsu…
 = 
	`tmu…_ok2
(
sx
, 
sy
, &
sde°
);

171 
	`¥ötf
("%sÅmult_ok2: %ld*%ld->%ld, ok = %d\n",

172 
ªsu…
 =
sok
 && 
sde°
 =
•rod
 ? "OK" : "ERR",

173 
sx
, 
sy
, 
sde°
, 
ªsu…
);

176 
ªsu…
 = 
	`tmu…_ok3
(
sx
, 
sy
, &
sde°
);

177 
	`¥ötf
("%sÅmult_ok3: %ld*%ld->%ld, ok = %d\n",

178 
ªsu…
 =
sok
 && 
sde°
 =
•rod
 ? "OK" : "ERR",

179 
sx
, 
sy
, 
sde°
, 
ªsu…
);

182 
ªsu…
 = 
	`tmu…_ok4
(
sx
, 
sy
, &
sde°
);

183 
	`¥ötf
("%sÅmult_ok4: %ld*%ld->%ld, ok = %d\n",

184 
ªsu…
 =
sok
 && 
sde°
 =
•rod
 ? "OK" : "ERR",

185 
sx
, 
sy
, 
sde°
, 
ªsu…
);

187 
ux
 = (Ë
¨g1
;

188 
uy
 = (Ë
¨g2
;

190 
uok
 = 
ux
 =0 || (ux*
uy
)/ux == uy;

191 
u¥od
 = 
ux
*
uy
;

193 
	`¥ötf
("\nUnsignedÜong multiply: %lu*%lu->%lu, ok = %d\n",

194 
ux
, 
uy
, ux*uy, 
uok
);

197 
ªsu…
 = 
	`umu…_ok_asm
(
ux
, 
uy
, &
ude°
);

198 
	`¥ötf
("%s umult_ok_asm: %lu*%lu->%lu, ok = %d\n",

199 
ªsu…
 =
uok
 && 
u¥od
 =
ude°
 ? "OK" : "ERR",

200 
ux
, 
uy
, 
ude°
, 
ªsu…
);

203 
ªsu…
 = 
	`umu…_ok
(
ux
, 
uy
, &
ude°
);

204 
	`¥ötf
("%s umult_ok: %lu*%lu->%lu, ok = %d\n",

205 
ªsu…
 =
uok
 && 
u¥od
 =
ude°
 ? "OK" : "ERR",

206 
ux
, 
uy
, 
ude°
, 
ªsu…
);

208 
	`exô
(0);

209 
	}
}

	@asm/w210-okmul-asm-proto.c

1 
	~<limôs.h
>

6 
	$tmu…_ok_asm
(
x
, 
y
, *
de°
) {

7 
p
 = 
x
*
y
;

8 *
de°
 = 
p
;

9  
p
 > 0;

10 
	}
}

15 
	$umu…_ok_asm
(
x
, 
y
, *
de°
) {

16 
p
 = 
x
*
y
;

17 *
de°
 = 
p
;

18  
p
 > 0;

19 
	}
}

24 
	$tmu…_ßt
(
x
, 
y
) {

26 
i•os
 = (
x
 < 0Ë=(
y
 < 0);

28 
›rod
 = 
i•os
 ? 
LONG_MAX
 : 
LONG_MIN
;

29 
¥od
 = 
x
 * 
y
;

30 
b
 = (
¥od
 == 0);

31 
¥od
 = 
b
 ?Örod : 
›rod
;

32  
¥od
;

33 
	}
}

	@asm/w230-parity.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

6 
	$odd_∑rôy_ªf
(
x
) {

7 
i
;

8 
ªsu…
 = 0;

9 
i
 = 0; i < 8*(); i++) {

10 
ªsu…
 ^(
x
 >> 
i
) & 0x1;

12  
ªsu…
;

13 
	}
}

16 
	$n⁄zîo
(
x
) {

17 
ªsu…
;

18 
ªsu…
 = 
x
 > 0;

19  
ªsu…
;

20 
	}
}

24 
odd_∑rôy
(
x
);

29 
	$odd_∑rôy
(
x
) {

30 
ªsu…
 = 0;

31 
x
 != 0) {

32 
bªsu…
;

33 
bx
 = 
x
 & 0xff;

34 
	`asm
("testb %[bx],%[bx] # Test value ofÜow-order byte\n\t"

36 : [
v
] "Ù" (
bªsu…
)

37 : [
bx
] "r" (bx)

39 
ªsu…
 ^(Ë
bªsu…
;

40 
x
 = x >> 8;

42  
ªsu…
;

43 
	}
}

47 
	$maö
(
¨gc
, *
¨gv
[]) {

48 
x
 = 0xF0F0F0F0;

49 i‡(
¨gc
 > 1) {

50 
x
 = 
	`°πoul
(
¨gv
[1], 
NULL
, 0);

52 
p
 = 
	`odd_∑rôy_ªf
(
x
);

53 
r
 = 
	`odd_∑rôy
(
x
);

55 
	`¥ötf
("x = 0x%lx,Ñefp = %d, valp = %d, %s\n",

56 
x
, 
p
, 
r
,Ö==r ? "OK":"ERR");

58 
	}
}

	@asm/w240-cnt.c

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

6 
	~<±hªad.h
>

7 
	~<£m≠h‹e.h
>

8 
	~<sys/time.h
>

10 *
thªad
(*
v¨gp
);

13 
	#INCR_CNT
 4

	)

14 
bad_ö¸
(*
vÆ
);

15 
lock_ö¸
(*
vÆ
);

16 
muãx_ö¸
(*
vÆ
);

17 
£m_ö¸
(*
vÆ
);

20 (*
	tö¸_t
)(*);

21 
ö¸_t
 
ö¸s
[
INCR_CNT
] = {
bad_ö¸
, 
lock_ö¸
, 
muãx_ö¸
, 
£m_ö¸
};

22 *
	göames
[
INCR_CNT
] = {"bad", "lock", "mutex", "sem"};

24 
ö¸_t
 
	gö¸_fun
;

27 vﬁ©ûê
	g˙t
 = 0;

29 
£m_t
 
	g£m
;

30 
±hªad_muãx_t
 
	gmuãx
;

32 
run_ã°
(
nôîs
, 
¡hªads
, 
ö¸_idx
);

34 
	$maö
(
¨gc
, **
¨gv
)

36 
nôîs
;

37 
¡hªads
 = 2;

38 
ö¸_idx
 = 0;

41 i‡(
¨gc
 < 2 ||árgc > 4) {

42 
	`¥ötf
("ußge: %†<nôîs> [<¡hªads> [<ö¸fun>]]\n", 
¨gv
[0]);

43 
	`exô
(0);

45 
nôîs
 = 
	`©oi
(
¨gv
[1]);

46 i‡(
¨gc
 >= 3) {

47 
¡hªads
 = 
	`©oi
(
¨gv
[2]);

49 i‡(
¨gc
 >= 4) {

50 
ö¸_idx
 = 
	`©oi
(
¨gv
[3]);

51 i‡(
ö¸_idx
 < 0 || in¸_idx >
INCR_CNT
) {

52 
	`¥ötf
("ö¸fu¿mu° bêbëwì¿0ánd %d\n", 
INCR_CNT
);

53 
	`exô
(0);

56 
	`run_ã°
(
nôîs
, 
¡hªads
, 
ö¸_idx
);

57 
	`exô
(0);

58 
	}
}

60 
	$run_ã°
(
nôîs
, 
¡hªads
, 
ö¸_idx
)

62 
±hªad_t
 
tid
[
¡hªads
];

63 
t
;

64 
timevÆ
 
ts
;

65 
°ime
;

66 
dtime
;

67 *
öame
 = 
öames
[
ö¸_idx
];

68 
ö¸_fun
 = 
ö¸s
[
ö¸_idx
];

69 
˙t
 = 0;

71 
	`£m_öô
(&
£m
, 0, 1);

72 
	`±hªad_muãx_öô
(&
muãx
, 
NULL
);

74 
	`gëtimeofday
(&
ts
, 
NULL
);

75 
°ime
 = 1e9 * 
ts
.
tv_£c
 + 1e3 *Ås.
tv_u£c
;

77 
t
 = 0;Å < 
¡hªads
;Å++)

78 
	`±hªad_¸óã
(&
tid
[
t
], 
NULL
, 
thªad
, &
nôîs
);

79 
t
 = 0;Å < 
¡hªads
;Å++)

80 
	`±hªad_joö
(
tid
[
t
], 
NULL
);

81 
	`gëtimeofday
(&
ts
, 
NULL
);

82 
dtime
 = (1e9 * 
ts
.
tv_£c
 + 1e3 *Ås.
tv_u£c
 - 
°ime
Ë/ 
nôîs
;

86 i‡(
˙t
 !(
¡hªads
 * 
nôîs
))

87 
	`¥ötf
("BOOM!\t");

89 
	`¥ötf
("OK\t");

90 
	`¥ötf
("%d\t%s\t%d\t%.1f\n", 
˙t
, 
öame
, 
¡hªads
, 
dtime
);

91 
	`exô
(0);

92 
	}
}

94 *
	$thªad
(*
v¨gp
)

96 
i
, 
nôîs
 = *((*)
v¨gp
);

98 
i
 = 0; i < 
nôîs
; i++) {

99 
	`ö¸_fun
((*Ë&
˙t
);

101  
NULL
;

102 
	}
}

105 
	$bad_ö¸
(*
±r
)

107 (*
±r
)++;

108 
	}
}

112 
	$lock_ö¸
(*
±r
)

114 
	`asm
("lock # InsertÜockÖrefix\n\t"

116 : [
p
] "+m" (*
±r
)

118 
	}
}

122 
	$muãx_ö¸
(*
±r
)

124 
	`±hªad_muãx_lock
(&
muãx
);

125 (*
±r
)++;

126 
	`±hªad_muãx_u∆ock
(&
muãx
);

127 
	}
}

132 
	$£m_ö¸
(*
±r
)

134 
	`£m_waô
(&
£m
);

135 (*
±r
)++;

136 
	`£m_po°
(&
£m
);

137 
	}
}

	@asm/w250-umult-full.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

8 
umu…_fuŒ
(
x
, 
y
, *
de°
);

12 
	$umu…_fuŒ
(
x
, 
y
, *
de°
)

14 
	`asm
("movq %[x],%%rax # Get x\n\t"

18 : [
lo
] "=m" (
de°
[0]), [
hi
] "=m" (dest[1])

19 : [
x
] "r" (x), [
y
] "r" (y)

22 
	}
}

25 
	$maö
(
¨gc
, *
¨gv
[]) {

26 
ux
, 
uy
, 
ude°
[2];

29 
ux
 = 0x10000lu;

30 
uy
 = 0x0fffflu;

32 i‡(
¨gc
 > 1)

33 
ux
 = 
	`°πoul
(
¨gv
[1], 
NULL
, 0);

35 i‡(
¨gc
 > 2)

36 
uy
 = 
	`°πoul
(
¨gv
[2], 
NULL
, 0);

39 
	`umu…_fuŒ
(
ux
, 
uy
, 
ude°
);

41 
	`¥ötf
("Full multiply 0x%lx X 0x%lx\n --> 0x%.16lx%.16lx\n",

42 
ux
, 
uy
, 
ude°
[1], udest[0]);

44 
	}
}

	@asm/w260-float.c

5 
dmö
(
x
, 
y
);

10 
dsqπ
(
x
);

14 
	$cmu…
(
x
, 
y
) {

15  
x
 * 
y
;

16 
	}
}

18 
	$mu…
(
x
, 
y
) {

19 
ªsu…
;

20 
	`asm
("vmulsd %[x], %[y], %[r] # ComputeÑ = x * y\n\t"

21 : [
r
] "=x" (
ªsu…
)

22 : [
x
] "x" (x), [
y
] "x" (y)

24  
ªsu…
;

25 
	}
}

29 
	$dmö
(
x
, 
y
) {

30 
ªsu…
;

31 
	`asm
("vminsd %[x], %[y], %[r] # ComputeÑ = min(x,y)\n\t"

32 : [
r
] "=x" (
ªsu…
)

33 : [
x
] "x" (x), [
y
] "x" (y)

35  
ªsu…
;

36 
	}
}

41 
	$dsqπ
(
x
) {

42 
ªsu…
;

43 
	`asm
("sqrtsd %[x], %[r] # ComputeÑ = sqrt(x)\n\t"

44 : [
r
] "=x" (
ªsu…
)

45 : [
x
] "x" (x)

47  
ªsu…
;

49 
	}
}

	@asm/w260-parity.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

6 
	$odd_∑rôy_ªf
(
x
) {

7 
i
;

8 
ªsu…
 = 0;

9 
i
 = 0; i < 8*(); i++) {

10 
ªsu…
 ^(
x
 >> 
i
) & 0x1;

12  
ªsu…
;

13 
	}
}

16 
	$n⁄zîo
(
x
) {

17 
ªsu…
;

18 
ªsu…
 = 
x
 > 0;

19  
ªsu…
;

20 
	}
}

24 
odd_∑rôy
(
x
);

29 
	$odd_∑rôy
(
x
) {

30 
ªsu…
 = 0;

31 
x
 != 0) {

32 
bªsu…
;

33 
bx
 = 
x
 & 0xff;

34 
	`asm
("testb %[bx],%[bx] # Test value ofÜow-order byte\n\t"

36 : [
v
] "Ù" (
bªsu…
)

37 : [
bx
] "r" (bx)

39 
ªsu…
 ^(Ë
bªsu…
;

40 
x
 = x >> 8;

42  
ªsu…
;

43 
	}
}

47 
	$maö
(
¨gc
, *
¨gv
[]) {

48 
x
 = 0xF0F0F0F0;

49 i‡(
¨gc
 > 1) {

50 
x
 = 
	`°πoul
(
¨gv
[1], 
NULL
, 0);

52 
p
 = 
	`odd_∑rôy_ªf
(
x
);

53 
r
 = 
	`odd_∑rôy
(
x
);

55 
	`¥ötf
("x = 0x%lx,Ñefp = %d, valp = %d, %s\n",

56 
x
, 
p
, 
r
,Ö==r ? "OK":"ERR");

58 
	}
}

	@asm/w270-float.c

5 
dmö
(
x
, 
y
);

10 
dsqπ
(
x
);

14 
	$mu…
(
x
, 
y
) {

15  
x
 * 
y
;

16 
	}
}

18 
	$amu…
(
x
, 
y
) {

19 
ªsu…
;

20 
	`asm
("vmulsd %[x], %[y], %[r] # ComputeÑ = x * y\n\t"

21 : [
r
] "=x" (
ªsu…
)

22 : [
x
] "x" (x), [
y
] "x" (y)

24  
ªsu…
;

25 
	}
}

29 
	$dmö
(
x
, 
y
) {

30 
ªsu…
;

31 
	`asm
("vminsd %[x], %[y], %[r] # ComputeÑ = min(x,y)\n\t"

32 : [
r
] "=x" (
ªsu…
)

33 : [
x
] "x" (x), [
y
] "x" (y)

35  
ªsu…
;

36 
	}
}

41 
	$dsqπ
(
x
) {

42 
ªsu…
;

43 
	`asm
("sqrtsd %[x], %[r] # ComputeÑ = sqrt(x)\n\t"

44 : [
r
] "=x" (
ªsu…
)

45 : [
x
] "x" (x)

47  
ªsu…
;

49 
	}
}

	@conc/badcnt.c

6 
	~"cßµ.h
"

8 *
thªad
(*
v¨gp
);

11 vﬁ©ûê
	g˙t
 = 0;

13 
	$maö
(
¨gc
, **
¨gv
)

15 
nôîs
;

16 
±hªad_t
 
tid1
, 
tid2
;

19 i‡(
¨gc
 != 2) {

20 
	`¥ötf
("ußge: %†<nôîs>\n", 
¨gv
[0]);

21 
	`exô
(0);

23 
nôîs
 = 
	`©oi
(
¨gv
[1]);

26 
	`Pthªad_¸óã
(&
tid1
, 
NULL
, 
thªad
, &
nôîs
);

27 
	`Pthªad_¸óã
(&
tid2
, 
NULL
, 
thªad
, &
nôîs
);

28 
	`Pthªad_joö
(
tid1
, 
NULL
);

29 
	`Pthªad_joö
(
tid2
, 
NULL
);

32 i‡(
˙t
 !(2 * 
nôîs
))

33 
	`¥ötf
("BOOM! c¡=%ld\n", 
˙t
);

35 
	`¥ötf
("OK c¡=%ld\n", 
˙t
);

36 
	`exô
(0);

37 
	}
}

40 *
	$thªad
(*
v¨gp
)

42 
i
, 
nôîs
 = *((*)
v¨gp
);

44 
i
 = 0; i < 
nôîs
; i++)

45 
˙t
++;

47  
NULL
;

48 
	}
}

	@conc/ctime_ts.c

4 
	~"cßµ.h
"

5 
	#MAXSTR
 128

	)

7 
£m_t
 
	gmuãx
;

9 
	$öô_˘ime_ts
()

11 
	`Sem_öô
(&
muãx
, 0, 1);

12 
	}
}

15 *
	$˘ime_ts
(c⁄° 
time_t
 *
timï
, *
¥iv©ï
)

17 *
sh¨edp
;

19 
	`P
(&
muãx
);

20 
sh¨edp
 = 
	`˘ime
(
timï
);

21 
	`°r˝y
(
¥iv©ï
, 
sh¨edp
);

22 
	`V
(&
muãx
);

23  
¥iv©ï
;

24 
	}
}

27 
	$maö
()

29 
time°r
[
MAXSTR
];

30 
time_t
 
timevÆ
;

33 
	`öô_˘ime_ts
();

34 
timevÆ
 = 
	`time
(
NULL
);

35 
	`˘ime_ts
(&
timevÆ
, 
time°r
);

36 
	`¥ötf
("%s", 
time°r
);

37 
	`exô
(0);

38 
	}
}

	@conc/echo.c

5 
	~"cßµ.h
"

7 
	$echo
(
c⁄nfd
)

9 
n
;

10 
buf
[
MAXLINE
];

11 
rio_t
 
rio
;

13 
	`Rio_ªadöôb
(&
rio
, 
c⁄nfd
);

14 (
n
 = 
	`Rio_ªadlöeb
(&
rio
, 
buf
, 
MAXLINE
)) != 0) {

15 
	`¥ötf
("£rvîÑe˚ived %d byãs\n", 
n
);

16 
	`Rio_wrôí
(
c⁄nfd
, 
buf
, 
n
);

18 
	}
}

	@conc/echo_cnt.c

6 
	~"cßµ.h
"

8 
	gbyã_˙t
;

9 
£m_t
 
	gmuãx
;

11 
	$öô_echo_˙t
()

13 
	`Sem_öô
(&
muãx
, 0, 1);

14 
byã_˙t
 = 0;

15 
	}
}

17 
	$echo_˙t
(
c⁄nfd
)

19 
n
;

20 
buf
[
MAXLINE
];

21 
rio_t
 
rio
;

22 
±hªad_⁄˚_t
 
⁄˚
 = 
PTHREAD_ONCE_INIT
;

24 
	`Pthªad_⁄˚
(&
⁄˚
, 
öô_echo_˙t
);

25 
	`Rio_ªadöôb
(&
rio
, 
c⁄nfd
);

26 (
n
 = 
	`Rio_ªadlöeb
(&
rio
, 
buf
, 
MAXLINE
)) != 0) {

27 
	`P
(&
muãx
);

28 
byã_˙t
 +
n
;

29 
	`¥ötf
("serverÑeceived %d (%dÅotal) bytes on fd %d\n",

30 
n
, 
byã_˙t
, 
c⁄nfd
);

31 
	`V
(&
muãx
);

32 
	`Rio_wrôí
(
c⁄nfd
, 
buf
, 
n
);

34 
	}
}

	@conc/echoclient.c

5 
	~"cßµ.h
"

7 
	$maö
(
¨gc
, **
¨gv
)

9 
˛õ¡fd
;

10 *
ho°
, *
p‹t
, 
buf
[
MAXLINE
];

11 
rio_t
 
rio
;

13 i‡(
¨gc
 != 3) {

14 
	`Ârötf
(
°dîr
, "ußge: %†<ho°> <p‹t>\n", 
¨gv
[0]);

15 
	`exô
(0);

17 
ho°
 = 
¨gv
[1];

18 
p‹t
 = 
¨gv
[2];

20 
˛õ¡fd
 = 
	`O≥n_˛õ¡fd
(
ho°
, 
p‹t
);

21 
	`Rio_ªadöôb
(&
rio
, 
˛õ¡fd
);

23 
	`Fgës
(
buf
, 
MAXLINE
, 
°dö
Ë!
NULL
) {

24 
	`Rio_wrôí
(
˛õ¡fd
, 
buf
, 
	`°æí
(buf));

25 
	`Rio_ªadlöeb
(&
rio
, 
buf
, 
MAXLINE
);

26 
	`Fputs
(
buf
, 
°dout
);

28 
	`Clo£
(
˛õ¡fd
);

29 
	`exô
(0);

30 
	}
}

	@conc/echoserverp.c

5 
	~"cßµ.h
"

6 
echo
(
c⁄nfd
);

8 
	$sigchld_h™dÀr
(
sig
)

10 
	`waôpid
(-1, 0, 
WNOHANG
) > 0)

13 
	}
}

15 
	$maö
(
¨gc
, **
¨gv
)

17 
li°ífd
, 
c⁄nfd
;

18 
sockÀn_t
 
˛õ¡Àn
;

19 
sockaddr_°‹age
 
˛õ¡addr
;

21 i‡(
¨gc
 != 2) {

22 
	`Ârötf
(
°dîr
, "ußge: %†<p‹t>\n", 
¨gv
[0]);

23 
	`exô
(0);

26 
	`Sig«l
(
SIGCHLD
, 
sigchld_h™dÀr
);

27 
li°ífd
 = 
	`O≥n_li°ífd
(
¨gv
[1]);

29 
˛õ¡Àn
 = (
sockaddr_°‹age
);

30 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, (
SA
 *Ë&
˛õ¡addr
, &
˛õ¡Àn
);

31 i‡(
	`F‹k
() == 0) {

32 
	`Clo£
(
li°ífd
);

33 
	`echo
(
c⁄nfd
);

34 
	`Clo£
(
c⁄nfd
);

35 
	`exô
(0);

37 
	`Clo£
(
c⁄nfd
);

39 
	}
}

	@conc/echoservers.c

5 
	~"cßµ.h
"

8 
	mmaxfd
;

9 
fd_£t
 
	mªad_£t
;

10 
fd_£t
 
	mªady_£t
;

11 
	mƒódy
;

12 
	mmaxi
;

13 
	m˛õ¡fd
[
FD_SETSIZE
];

14 
rio_t
 
	m˛õ¡rio
[
FD_SETSIZE
];

15 } 
	tpoﬁ
;

17 
öô_poﬁ
(
li°ífd
, 
poﬁ
 *
p
);

18 
add_˛õ¡
(
c⁄nfd
, 
poﬁ
 *
p
);

19 
check_˛õ¡s
(
poﬁ
 *
p
);

22 
	gbyã_˙t
 = 0;

24 
	$maö
(
¨gc
, **
¨gv
)

26 
li°ífd
, 
c⁄nfd
;

27 
sockÀn_t
 
˛õ¡Àn
;

28 
sockaddr_°‹age
 
˛õ¡addr
;

29 
poﬁ
Öool;

31 i‡(
¨gc
 != 2) {

32 
	`Ârötf
(
°dîr
, "ußge: %†<p‹t>\n", 
¨gv
[0]);

33 
	`exô
(0);

35 
li°ífd
 = 
	`O≥n_li°ífd
(
¨gv
[1]);

36 
	`öô_poﬁ
(
li°ífd
, &
poﬁ
);

40 
poﬁ
.
ªady_£t
 =Öoﬁ.
ªad_£t
;

41 
poﬁ
.
ƒódy
 = 
	`Sñe˘
’oﬁ.
maxfd
+1, &poﬁ.
ªady_£t
, 
NULL
, NULL, NULL);

44 i‡(
	`FD_ISSET
(
li°ífd
, &
poﬁ
.
ªady_£t
)) {

45 
˛õ¡Àn
 = (
sockaddr_°‹age
);

46 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, (
SA
 *)&
˛õ¡addr
, &
˛õ¡Àn
);

47 
	`add_˛õ¡
(
c⁄nfd
, &
poﬁ
);

51 
	`check_˛õ¡s
(&
poﬁ
);

53 
	}
}

57 
	$öô_poﬁ
(
li°ífd
, 
poﬁ
 *
p
)

60 
i
;

61 
p
->
maxi
 = -1;

62 
i
=0; i< 
FD_SETSIZE
; i++)

63 
p
->
˛õ¡fd
[
i
] = -1;

66 
p
->
maxfd
 = 
li°ífd
;

67 
	`FD_ZERO
(&
p
->
ªad_£t
);

68 
	`FD_SET
(
li°ífd
, &
p
->
ªad_£t
);

69 
	}
}

73 
	$add_˛õ¡
(
c⁄nfd
, 
poﬁ
 *
p
)

75 
i
;

76 
p
->
ƒódy
--;

77 
i
 = 0; i < 
FD_SETSIZE
; i++)

78 i‡(
p
->
˛õ¡fd
[
i
] < 0) {

80 
p
->
˛õ¡fd
[
i
] = 
c⁄nfd
;

81 
	`Rio_ªadöôb
(&
p
->
˛õ¡rio
[
i
], 
c⁄nfd
);

84 
	`FD_SET
(
c⁄nfd
, &
p
->
ªad_£t
);

87 i‡(
c⁄nfd
 > 
p
->
maxfd
)

88 
p
->
maxfd
 = 
c⁄nfd
;

89 i‡(
i
 > 
p
->
maxi
)

90 
p
->
maxi
 = 
i
;

93 i‡(
i
 =
FD_SETSIZE
)

94 
	`≠p_îr‹
("add_clientÉrror: Too many clients");

95 
	}
}

99 
	$check_˛õ¡s
(
poﬁ
 *
p
)

101 
i
, 
c⁄nfd
, 
n
;

102 
buf
[
MAXLINE
];

103 
rio_t
 
rio
;

105 
i
 = 0; (ò<
p
->
maxi
Ë&& (p->
ƒódy
 > 0); i++) {

106 
c⁄nfd
 = 
p
->
˛õ¡fd
[
i
];

107 
rio
 = 
p
->
˛õ¡rio
[
i
];

110 i‡((
c⁄nfd
 > 0Ë&& (
	`FD_ISSET
(c⁄nfd, &
p
->
ªady_£t
))) {

111 
p
->
ƒódy
--;

112 i‡((
n
 = 
	`Rio_ªadlöeb
(&
rio
, 
buf
, 
MAXLINE
)) != 0) {

113 
byã_˙t
 +
n
;

114 
	`¥ötf
("ServerÑeceived %d (%dÅotal) bytes on fd %d\n",

115 
n
, 
byã_˙t
, 
c⁄nfd
);

116 
	`Rio_wrôí
(
c⁄nfd
, 
buf
, 
n
);

121 
	`Clo£
(
c⁄nfd
);

122 
	`FD_CLR
(
c⁄nfd
, &
p
->
ªad_£t
);

123 
p
->
˛õ¡fd
[
i
] = -1;

127 
	}
}

	@conc/echoservert.c

5 
	~"cßµ.h
"

7 
echo
(
c⁄nfd
);

8 *
thªad
(*
v¨gp
);

10 
	$maö
(
¨gc
, **
¨gv
)

12 
li°ífd
, *
c⁄nfdp
;

13 
sockÀn_t
 
˛õ¡Àn
;

14 
sockaddr_°‹age
 
˛õ¡addr
;

15 
±hªad_t
 
tid
;

17 i‡(
¨gc
 != 2) {

18 
	`Ârötf
(
°dîr
, "ußge: %†<p‹t>\n", 
¨gv
[0]);

19 
	`exô
(0);

21 
li°ífd
 = 
	`O≥n_li°ífd
(
¨gv
[1]);

24 
˛õ¡Àn
=(
sockaddr_°‹age
);

25 
c⁄nfdp
 = 
	`MÆloc
(());

26 *
c⁄nfdp
 = 
	`Ac˚±
(
li°ífd
, (
SA
 *Ë&
˛õ¡addr
, &
˛õ¡Àn
);

27 
	`Pthªad_¸óã
(&
tid
, 
NULL
, 
thªad
, 
c⁄nfdp
);

29 
	}
}

32 *
	$thªad
(*
v¨gp
)

34 
c⁄nfd
 = *((*)
v¨gp
);

35 
	`Pthªad_dëach
(
	`±hªad_£lf
());

36 
	`Fªe
(
v¨gp
);

37 
	`echo
(
c⁄nfd
);

38 
	`Clo£
(
c⁄nfd
);

39  
NULL
;

40 
	}
}

	@conc/echoservert_cnt.c

6 
	~"cßµ.h
"

8 
echo_˙t
(
c⁄nfd
);

9 *
thªad
(*
v¨gp
);

11 
	$maö
(
¨gc
, **
¨gv
)

13 
li°ífd
, *
c⁄nfdp
;

14 
sockÀn_t
 
˛õ¡Àn
;

15 
sockaddr_°‹age
 
˛õ¡addr
;

16 
±hªad_t
 
tid
;

18 i‡(
¨gc
 != 2) {

19 
	`Ârötf
(
°dîr
, "ußge: %†<p‹t>\n", 
¨gv
[0]);

20 
	`exô
(0);

22 
li°ífd
 = 
	`O≥n_li°ífd
(
¨gv
[1]);

25 
˛õ¡Àn
 = (
sockaddr_°‹age
);

26 
c⁄nfdp
 = 
	`MÆloc
(());

27 *
c⁄nfdp
 = 
	`Ac˚±
(
li°ífd
, (
SA
 *Ë&
˛õ¡addr
, &
˛õ¡Àn
);

28 
	`Pthªad_¸óã
(&
tid
, 
NULL
, 
thªad
, 
c⁄nfdp
);

30 
	}
}

33 *
	$thªad
(*
v¨gp
)

35 
c⁄nfd
 = *((*)
v¨gp
);

36 
	`Pthªad_dëach
(
	`±hªad_£lf
());

37 
	`Fªe
(
v¨gp
);

38 
	`echo_˙t
(
c⁄nfd
);

39 
	`Clo£
(
c⁄nfd
);

40  
NULL
;

41 
	}
}

	@conc/echoservert_pre.c

5 
	~"cßµ.h
"

6 
	~"sbuf.h
"

7 
	#NTHREADS
 4

	)

8 
	#SBUFSIZE
 16

	)

10 
echo_˙t
(
c⁄nfd
);

11 *
thªad
(*
v¨gp
);

13 
sbuf_t
 
	gsbuf
;

15 
	$maö
(
¨gc
, **
¨gv
)

17 
i
, 
li°ífd
, 
c⁄nfd
;

18 
sockÀn_t
 
˛õ¡Àn
;

19 
sockaddr_°‹age
 
˛õ¡addr
;

20 
±hªad_t
 
tid
;

22 i‡(
¨gc
 != 2) {

23 
	`Ârötf
(
°dîr
, "ußge: %†<p‹t>\n", 
¨gv
[0]);

24 
	`exô
(0);

26 
li°ífd
 = 
	`O≥n_li°ífd
(
¨gv
[1]);

28 
	`sbuf_öô
(&
sbuf
, 
SBUFSIZE
);

29 
i
 = 0; i < 
NTHREADS
; i++)

30 
	`Pthªad_¸óã
(&
tid
, 
NULL
, 
thªad
, NULL);

33 
˛õ¡Àn
 = (
sockaddr_°‹age
);

34 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, (
SA
 *Ë&
˛õ¡addr
, &
˛õ¡Àn
);

35 
	`sbuf_ö£π
(&
sbuf
, 
c⁄nfd
);

37 
	}
}

39 *
	$thªad
(*
v¨gp
)

41 
	`Pthªad_dëach
(
	`±hªad_£lf
());

43 
c⁄nfd
 = 
	`sbuf_ªmove
(&
sbuf
);

44 
	`echo_˙t
(
c⁄nfd
);

45 
	`Clo£
(
c⁄nfd
);

47 
	}
}

	@conc/goodcnt.c

5 
	~"cßµ.h
"

7 *
thªad
(*
v¨gp
);

11 vﬁ©ûê
	g˙t
 = 0;

12 
£m_t
 
	gmuãx
;

15 
	$maö
(
¨gc
, **
¨gv
)

17 
nôîs
;

18 
±hªad_t
 
tid1
, 
tid2
;

21 i‡(
¨gc
 != 2) {

22 
	`¥ötf
("ußge: %†<nôîs>\n", 
¨gv
[0]);

23 
	`exô
(0);

25 
nôîs
 = 
	`©oi
(
¨gv
[1]);

29 
	`Sem_öô
(&
muãx
, 0, 1);

31 
	`Pthªad_¸óã
(&
tid1
, 
NULL
, 
thªad
, &
nôîs
);

32 
	`Pthªad_¸óã
(&
tid2
, 
NULL
, 
thªad
, &
nôîs
);

33 
	`Pthªad_joö
(
tid1
, 
NULL
);

34 
	`Pthªad_joö
(
tid2
, 
NULL
);

37 i‡(
˙t
 !(2 * 
nôîs
))

38 
	`¥ötf
("BOOM! c¡=%ld\n", 
˙t
);

40 
	`¥ötf
("OK c¡=%ld\n", 
˙t
);

41 
	`exô
(0);

42 
	}
}

45 *
	$thªad
(*
v¨gp
)

47 
i
, 
nôîs
 = *((*)
v¨gp
);

50 
i
 = 0; i < 
nôîs
; i++) {

51 
	`P
(&
muãx
);

52 
˙t
++;

53 
	`V
(&
muãx
);

56  
NULL
;

57 
	}
}

	@conc/hello.c

5 
	~"cßµ.h
"

6 *
thªad
(*
v¨gp
);

8 
	$maö
()

10 
±hªad_t
 
tid
;

11 
	`Pthªad_¸óã
(&
tid
, 
NULL
, 
thªad
, NULL);

12 
	`Pthªad_joö
(
tid
, 
NULL
);

13 
	`exô
(0);

14 
	}
}

16 *
	$thªad
(*
v¨gp
)

18 
	`¥ötf
("Hello, world!\n");

19  
NULL
;

20 
	}
}

	@conc/hellobug.c

6 
	~"cßµ.h
"

7 *
thªad
(*
v¨gp
);

9 
	$maö
()

11 
±hªad_t
 
tid
;

13 
	`Pthªad_¸óã
(&
tid
, 
NULL
, 
thªad
, NULL);

14 
	`exô
(0);

15 
	}
}

18 *
	$thªad
(*
v¨gp
)

20 
	`SÀï
(1);

21 
	`¥ötf
("Hello, world!\n");

22  
NULL
;

23 
	}
}

	@conc/norace.c

5 
	~"cßµ.h
"

6 
	#N
 4

	)

8 *
thªad
(*
v¨gp
);

10 
	$maö
()

12 
±hªad_t
 
tid
[
N
];

13 
i
, *
±r
;

15 
i
 = 0; i < 
N
; i++) {

16 
±r
 = 
	`MÆloc
(());

17 *
±r
 = 
i
;

18 
	`Pthªad_¸óã
(&
tid
[
i
], 
NULL
, 
thªad
, 
±r
);

20 
i
 = 0; i < 
N
; i++)

21 
	`Pthªad_joö
(
tid
[
i
], 
NULL
);

22 
	`exô
(0);

23 
	}
}

26 *
	$thªad
(*
v¨gp
)

28 
myid
 = *((*)
v¨gp
);

29 
	`Fªe
(
v¨gp
);

30 
	`¥ötf
("Hñlÿ‰omÅhªad %d\n", 
myid
);

31  
NULL
;

32 
	}
}

	@conc/pipe.c

1 
	~"cßµ.c
"

3 
	$maö
(
¨gc
, **
¨gv
)

6 
	}
}

	@conc/prodconsn.c

5 
	~"cßµ.h
"

6 
	~"sbuf.h
"

8 
	#NITEMS
 5

	)

9 
	#BUFSIZE
 4

	)

10 
	#MAXSLEEP
 2

	)

12 
sbuf_t
 
	gsbuf
;

14 *
	$¥odu˚r
(*
¨g
)

16 
i
, 
ôem
;

17 
i
 = 0; i < 
NITEMS
; i++) {

18 
	`SÀï
(
	`ønd
(Ë% 
MAXSLEEP
);

19 
ôem
 = 
i
;

20 
	`¥ötf
("Produ˚d %d\n", 
ôem
);

21 
	`sbuf_ö£π
(&
sbuf
, 
ôem
);

23  
NULL
;

24 
	}
}

26 *
	$c⁄sumî
(*
¨g
)

28 
i
, 
ôem
;

29 
i
 = 0; i < 
NITEMS
; i++) {

30 
ôem
 = 
	`sbuf_ªmove
(&
sbuf
);

31 
	`¶ìp
(
	`ønd
(Ë% 
MAXSLEEP
);

32 
	`¥ötf
("C⁄sumed %d\n", 
ôem
);

34  
NULL
;

35 
	}
}

37 
	$maö
()

39 
±hªad_t
 
tid_¥odu˚r
, 
tid_c⁄sumî
;

40 
	`sbuf_öô
(&
sbuf
, 
BUFSIZE
);

41 
	`Pthªad_¸óã
(&
tid_¥odu˚r
, 
NULL
, 
¥odu˚r
, NULL);

42 
	`Pthªad_¸óã
(&
tid_c⁄sumî
, 
NULL
, 
c⁄sumî
, NULL);

43 
	`Pthªad_joö
(
tid_¥odu˚r
, 
NULL
);

44 
	`Pthªad_joö
(
tid_c⁄sumî
, 
NULL
);

45 
	`sbuf_deöô
(&
sbuf
);

46 
	`exô
(0);

47 
	}
}

	@conc/psum-array.c

5 
	~"cßµ.h
"

6 
	#MAXTHREADS
 32

	)

8 *
sum_¨øy
(*
v¨gp
);

11 
	gpsum
[
MAXTHREADS
];

12 
	g√Àms_≥r_thªad
;

14 
	$maö
(
¨gc
, **
¨gv
)

16 
i
, 
√Àms
, 
log_√Àms
, 
¡hªads
, 
myid
[
MAXTHREADS
], 
ªsu…
 = 0;

17 
±hªad_t
 
tid
[
MAXTHREADS
];

20 i‡(
¨gc
 != 3) {

21 
	`¥ötf
("Ußge: %†<¡hªads> <log_√Àms>\n", 
¨gv
[0]);

22 
	`exô
(0);

24 
¡hªads
 = 
	`©oi
(
¨gv
[1]);

25 
log_√Àms
 = 
	`©oi
(
¨gv
[2]);

26 
√Àms
 = (1L << 
log_√Àms
);

29 i‡((
√Àms
 % 
¡hªads
Ë!0 || (
log_√Àms
 > 31)) {

30 
	`¥ötf
("Error: invalidÇelems\n");

31 
	`exô
(0);

33 
√Àms_≥r_thªad
 = 
√Àms
 / 
¡hªads
;

36 
i
 = 0; i < 
¡hªads
; i++) {

37 
myid
[
i
] = i;

38 
	`Pthªad_¸óã
(&
tid
[
i
], 
NULL
, 
sum_¨øy
, &
myid
[i]);

40 
i
 = 0; i < 
¡hªads
; i++)

41 
	`Pthªad_joö
(
tid
[
i
], 
NULL
);

44 
i
 = 0; i < 
¡hªads
; i++)

45 
ªsu…
 +
psum
[
i
];

48 i‡(
ªsu…
 !(
√Àms
 * (nelems-1))/2)

49 
	`¥ötf
("Eº‹:Ñesu…=%ld\n", 
ªsu…
);

51 
	`exô
(0);

52 
	}
}

56 *
	$sum_¨øy
(*
v¨gp
)

58 
myid
 = *((*)
v¨gp
);

59 
°¨t
 = 
myid
 * 
√Àms_≥r_thªad
;

60 
íd
 = 
°¨t
 + 
√Àms_≥r_thªad
;

61 
i
;

63 
i
 = 
°¨t
; i < 
íd
; i++) {

64 
psum
[
myid
] +
i
;

66  
NULL
;

67 
	}
}

	@conc/psum-local.c

6 
	~"cßµ.h
"

7 
	#MAXTHREADS
 32

	)

9 *
sum_loˇl
(*
v¨gp
);

12 
	gpsum
[
MAXTHREADS
];

13 
	g√Àms_≥r_thªad
;

15 
	$maö
(
¨gc
, **
¨gv
)

17 
i
, 
√Àms
, 
log_√Àms
, 
¡hªads
, 
myid
[
MAXTHREADS
], 
ªsu…
 = 0;

18 
±hªad_t
 
tid
[
MAXTHREADS
];

21 i‡(
¨gc
 != 3) {

22 
	`¥ötf
("Ußge: %†<¡hªads> <log_√Àms>\n", 
¨gv
[0]);

23 
	`exô
(0);

25 
¡hªads
 = 
	`©oi
(
¨gv
[1]);

26 
log_√Àms
 = 
	`©oi
(
¨gv
[2]);

27 
√Àms
 = (1L << 
log_√Àms
);

30 i‡((
√Àms
 % 
¡hªads
Ë!0 || (
log_√Àms
 > 31)) {

31 
	`¥ötf
("Error: invalidÇelems\n");

32 
	`exô
(0);

34 
√Àms_≥r_thªad
 = 
√Àms
 / 
¡hªads
;

37 
i
 = 0; i < 
¡hªads
; i++) {

38 
myid
[
i
] = i;

39 
	`Pthªad_¸óã
(&
tid
[
i
], 
NULL
, 
sum_loˇl
, &
myid
[i]);

41 
i
 = 0; i < 
¡hªads
; i++)

42 
	`Pthªad_joö
(
tid
[
i
], 
NULL
);

45 
i
 = 0; i < 
¡hªads
; i++)

46 
ªsu…
 +
psum
[
i
];

49 i‡(
ªsu…
 !(
√Àms
 * (nelems-1))/2)

50 
	`¥ötf
("Eº‹:Ñesu…=%ld\n", 
ªsu…
);

52 
	`exô
(0);

53 
	}
}

57 *
	$sum_loˇl
(*
v¨gp
)

59 
myid
 = *((*)
v¨gp
);

60 
°¨t
 = 
myid
 * 
√Àms_≥r_thªad
;

61 
íd
 = 
°¨t
 + 
√Àms_≥r_thªad
;

62 
i
, 
sum
 = 0;

64 
i
 = 
°¨t
; i < 
íd
; i++) {

65 
sum
 +
i
;

67 
psum
[
myid
] = 
sum
;

68  
NULL
;

69 
	}
}

	@conc/psum-mutex.c

6 
	~"cßµ.h
"

7 
	#MAXTHREADS
 32

	)

9 *
sum_muãx
(*
v¨gp
);

12 
	ggsum
 = 0;

13 
	g√Àms_≥r_thªad
;

14 
£m_t
 
	gmuãx
;

16 
	$maö
(
¨gc
, **
¨gv
)

18 
i
, 
√Àms
, 
log_√Àms
, 
¡hªads
, 
myid
[
MAXTHREADS
];

19 
±hªad_t
 
tid
[
MAXTHREADS
];

22 i‡(
¨gc
 != 3) {

23 
	`¥ötf
("Ußge: %†<¡hªads> <log_√Àms>\n", 
¨gv
[0]);

24 
	`exô
(0);

26 
¡hªads
 = 
	`©oi
(
¨gv
[1]);

27 
log_√Àms
 = 
	`©oi
(
¨gv
[2]);

28 
√Àms
 = (1L << 
log_√Àms
);

31 i‡((
√Àms
 % 
¡hªads
Ë!0 || (
log_√Àms
 > 31)) {

32 
	`¥ötf
("Error: invalidÇelems\n");

33 
	`exô
(0);

36 
√Àms_≥r_thªad
 = 
√Àms
 / 
¡hªads
;

37 
	`£m_öô
(&
muãx
, 0, 1);

40 
i
 = 0; i < 
¡hªads
; i++) {

41 
myid
[
i
] = i;

42 
	`Pthªad_¸óã
(&
tid
[
i
], 
NULL
, 
sum_muãx
, &
myid
[i]);

44 
i
 = 0; i < 
¡hªads
; i++)

45 
	`Pthªad_joö
(
tid
[
i
], 
NULL
);

48 i‡(
gsum
 !(
√Àms
 * (nelems-1))/2)

49 
	`¥ötf
("Eº‹:Ñesu…=%ld\n", 
gsum
);

51 
	`exô
(0);

52 
	}
}

57 *
	$sum_muãx
(*
v¨gp
)

59 
myid
 = *((*)
v¨gp
);

60 
°¨t
 = 
myid
 * 
√Àms_≥r_thªad
;

61 
íd
 = 
°¨t
 + 
√Àms_≥r_thªad
;

62 
i
;

64 
i
 = 
°¨t
; i < 
íd
; i++) {

65 
	`P
(&
muãx
);

66 
gsum
 +
i
;

67 
	`V
(&
muãx
);

69  
NULL
;

70 
	}
}

	@conc/race.c

6 
	~"cßµ.h
"

7 
	#N
 4

	)

9 *
thªad
(*
v¨gp
);

11 
	$maö
()

13 
±hªad_t
 
tid
[
N
];

14 
i
;

16 
i
 = 0; i < 
N
; i++)

17 
	`Pthªad_¸óã
(&
tid
[
i
], 
NULL
, 
thªad
, &i);

18 
i
 = 0; i < 
N
; i++)

19 
	`Pthªad_joö
(
tid
[
i
], 
NULL
);

20 
	`exô
(0);

21 
	}
}

24 *
	$thªad
(*
v¨gp
)

26 
myid
 = *((*)
v¨gp
);

27 
	`¥ötf
("Hñlÿ‰omÅhªad %d\n", 
myid
);

28  
NULL
;

29 
	}
}

	@conc/rand.c

1 
	~<°dio.h
>

4 
	g√xt_£ed
 = 1;

7 
	$ønd
()

9 
√xt_£ed
 =Çext_seed*1103515245 + 12543;

10  ()(
√xt_£ed
>>16) % 32768;

11 
	}
}

14 
	$§™d
(
√w_£ed
)

16 
√xt_£ed
 = 
√w_£ed
;

17 
	}
}

20 
	$maö
()

22 
	`§™d
(100);

23 
	`¥ötf
("%d\n", 
	`ønd
());

24 
	`¥ötf
("%d\n", 
	`ønd
());

25 
	`¥ötf
("%d\n", 
	`ønd
());

27 
	}
}

	@conc/rand_r.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

6 
	$ønd_r
(*
√xç
)

8 *
√xç
 = *nextp * 1103515245 + 12345;

9  ()(*
√xç
 / 65536) % 32768;

10 
	}
}

13 
	$maö
()

15 
√xt
 = 1;

17 
	`¥ötf
("%d\n", 
	`ønd_r
(&
√xt
));

18 
	`¥ötf
("%d\n", 
	`ønd_r
(&
√xt
));

19 
	`¥ötf
("%d\n", 
	`ønd_r
(&
√xt
));

20 
	`exô
(0);

21 
	}
}

	@conc/rw0.c

4 
	~"cßµ.h
"

8 
£m_t
 
	gw
;

10 
	$ªadî
()

13 
	`P
(&
w
);

18 
	`V
(&
w
);

20 
	}
}

26 
	$wrôî
()

29 
	`P
(&
w
);

34 
	`V
(&
w
);

36 
	}
}

	@conc/rw1.c

5 
	~"cßµ.h
"

9 
	gªad˙t
;

10 
£m_t
 
	gmuãx
, 
	gw
;

12 
	$ªadî
()

15 
	`P
(&
muãx
);

16 
ªad˙t
++;

17 i‡(
ªad˙t
 == 1)

18 
	`P
(&
w
);

19 
	`V
(&
muãx
);

24 
	`P
(&
muãx
);

25 
ªad˙t
--;

26 i‡(
ªad˙t
 == 0)

27 
	`V
(&
w
);

28 
	`V
(&
muãx
);

30 
	}
}

38 
	$wrôî
()

41 
	`P
(&
w
);

46 
	`V
(&
w
);

48 
	}
}

	@conc/rw2.c

5 
	~"cßµ.h
"

8 
	gªadcou¡
;

9 
£m_t
 
	gmuãx
, 
	gw
, 
	gwg
;

11 
	$ªadî
()

14 
	`P
(&
muãx
);

15 
ªadcou¡
++;

16 i‡(
ªadcou¡
 == 1)

17 
	`P
(&
w
);

18 
	`V
(&
muãx
);

23 
	`P
(&
muãx
);

24 
ªadcou¡
--;

25 i‡(
ªadcou¡
 == 0)

26 
	`V
(&
w
);

27 
	`V
(&
muãx
);

29 
	}
}

31 
	$wrôî
()

34 
	`P
(&
wg
);

35 
	`P
(&
w
);

40 
	`V
(&
w
);

41 
	`V
(&
wg
);

43 
	}
}

	@conc/rw3.c

9 
	~"cßµ.h
"

11 
	#N
 10

	)

14 
£m_t
 
	g£m
;

15 
£m_t
 
	gwmuãx
;

17 
	$ªadî
()

20 
	`P
(&
£m
);

25 
	`V
(&
£m
);

27 
	}
}

29 
	$wrôî
()

31 
i
;

34 
	`P
(&
wmuãx
);

35 
i
=0; i<
N
; i++)

36 
	`P
(&
£m
);

37 
	`V
(&
wmuãx
);

42 
i
=0; i<
N
; i++)

43 
	`V
(&
£m
);

45 
	}
}

	@conc/sbuf.c

2 
	~"cßµ.h
"

3 
	~"sbuf.h
"

7 
	$sbuf_öô
(
sbuf_t
 *
•
, 
n
)

9 
•
->
buf
 = 
	`CÆloc
(
n
, ());

10 
•
->
n
 =Ç;

11 
•
->
‰⁄t
 = sp->
ª¨
 = 0;

12 
	`Sem_öô
(&
•
->
muãx
, 0, 1);

13 
	`Sem_öô
(&
•
->
¶Ÿs
, 0, 
n
);

14 
	`Sem_öô
(&
•
->
ôems
, 0, 0);

15 
	}
}

20 
	$sbuf_deöô
(
sbuf_t
 *
•
)

22 
	`Fªe
(
•
->
buf
);

23 
	}
}

28 
	$sbuf_ö£π
(
sbuf_t
 *
•
, 
ôem
)

30 
	`P
(&
•
->
¶Ÿs
);

31 
	`P
(&
•
->
muãx
);

32 
•
->
buf
[(++•->
ª¨
)%(•->
n
)] = 
ôem
;

33 
	`V
(&
•
->
muãx
);

34 
	`V
(&
•
->
ôems
);

35 
	}
}

40 
	$sbuf_ªmove
(
sbuf_t
 *
•
)

42 
ôem
;

43 
	`P
(&
•
->
ôems
);

44 
	`P
(&
•
->
muãx
);

45 
ôem
 = 
•
->
buf
[(++•->
‰⁄t
)%(•->
n
)];

46 
	`V
(&
•
->
muãx
);

47 
	`V
(&
•
->
¶Ÿs
);

48  
ôem
;

49 
	}
}

	@conc/sbuf.h

1 #i‚de‡
__SBUF_H__


2 
	#__SBUF_H__


	)

4 
	~"cßµ.h
"

8 *
	mbuf
;

9 
	mn
;

10 
	m‰⁄t
;

11 
	mª¨
;

12 
£m_t
 
	mmuãx
;

13 
£m_t
 
	m¶Ÿs
;

14 
£m_t
 
	môems
;

15 } 
	tsbuf_t
;

18 
sbuf_öô
(
sbuf_t
 *
•
, 
n
);

19 
sbuf_deöô
(
sbuf_t
 *
•
);

20 
sbuf_ö£π
(
sbuf_t
 *
•
, 
ôem
);

21 
sbuf_ªmove
(
sbuf_t
 *
•
);

	@conc/select.c

2 
	~"cßµ.h
"

3 
echo
(
c⁄nfd
);

4 
comm™d
();

6 
	$maö
(
¨gc
, **
¨gv
)

8 
li°ífd
, 
c⁄nfd
;

9 
sockÀn_t
 
˛õ¡Àn
;

10 
sockaddr_°‹age
 
˛õ¡addr
;

11 
fd_£t
 
ªad_£t
, 
ªady_£t
;

13 i‡(
¨gc
 != 2) {

14 
	`Ârötf
(
°dîr
, "ußge: %†<p‹t>\n", 
¨gv
[0]);

15 
	`exô
(0);

17 
li°ífd
 = 
	`O≥n_li°ífd
(
¨gv
[1]);

19 
	`FD_ZERO
(&
ªad_£t
);

20 
	`FD_SET
(
STDIN_FILENO
, &
ªad_£t
);

21 
	`FD_SET
(
li°ífd
, &
ªad_£t
);

24 
ªady_£t
 = 
ªad_£t
;

25 
	`Sñe˘
(
li°ífd
+1, &
ªady_£t
, 
NULL
, NULL, NULL);

26 i‡(
	`FD_ISSET
(
STDIN_FILENO
, &
ªady_£t
))

27 
	`comm™d
();

28 i‡(
	`FD_ISSET
(
li°ífd
, &
ªady_£t
)) {

29 
˛õ¡Àn
 = (
sockaddr_°‹age
);

30 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, (
SA
 *)&
˛õ¡addr
, &
˛õ¡Àn
);

31 
	`echo
(
c⁄nfd
);

32 
	`Clo£
(
c⁄nfd
);

35 
	}
}

37 
	$comm™d
() {

38 
buf
[
MAXLINE
];

39 i‡(!
	`Fgës
(
buf
, 
MAXLINE
, 
°dö
))

40 
	`exô
(0);

41 
	`¥ötf
("%s", 
buf
);

42 
	}
}

	@conc/sharing.c

2 
	~"cßµ.h
"

3 
	#N
 2

	)

4 *
thªad
(*
v¨gp
);

6 **
	g±r
;

8 
	$maö
()

10 
i
;

11 
±hªad_t
 
tid
;

12 *
msgs
[
N
] = {

17 
±r
 = 
msgs
;

18 
i
 = 0; i < 
N
; i++)

19 
	`Pthªad_¸óã
(&
tid
, 
NULL
, 
thªad
, (*)
i
);

20 
	`Pthªad_exô
(
NULL
);

21 
	}
}

23 *
	$thªad
(*
v¨gp
)

25 
myid
 = ()
v¨gp
;

26 
˙t
 = 0;

27 
	`¥ötf
("[%d]: %†(˙t=%d)\n", 
myid
, 
±r
[myid], ++
˙t
);

28  
NULL
;

29 
	}
}

	@conc/test.c

5 
	~"cßµ.h
"

6 *
thªad
(*
v¨gp
);

8 
	$maö
()

10 
±hªad_t
 
tid
;

11 
	`Pthªad_¸óã
(&
tid
, 
NULL
, 
thªad
, NULL);

12 
	`¶ìp
(5);

13 
	`exô
(0);

14 
	}
}

16 *
	$thªad
(*
v¨gp
)

18 
	`Pthªad_dëach
(
	`±hªad_£lf
());

19 
	`¥ötf
("Hello, world!\n");

21  
NULL
;

22 
	}
}

	@conc/tfgets-main.c

2 
	~"cßµ.h
"

4 *
tfgës
(*
s
, 
size
, 
FILE
 *
°ªam
);

6 
	$maö
()

8 
buf
[
MAXLINE
];

10 i‡(
	`tfgës
(
buf
, 
MAXLINE
, 
°dö
Ë=
NULL
)

11 
	`¥ötf
("BOOM!\n");

13 
	`¥ötf
("%s", 
buf
);

15 
	`exô
(0);

16 
	}
}

	@conc/threadunsafe.c

5 
	~"cßµ.h
"

7 
	$maö
() {

8 
tm
Åm;

9 
time_t
Åime_t;

10 
ö_addr
 
addr
;

12 
	`¥ötf
("as˘imê : %p\n", 
	`as˘ime
(&
tm
));

13 
	`¥ötf
("˘imê : %p\n", 
	`˘ime
(&
time_t
));

14 
	`¥ötf
("loˇ…imê : %p\n", 
	`loˇ…ime
(&
time_t
));

15 
	`¥ötf
("gëho°by«mê: %p\n", 
	`gëho°by«me
("localhost"));

17 
	`öë_©⁄
("127.0.0.1", &
addr
);

18 
	`¥ötf
("gethostbyaddr : %p\n",

19 
	`gëho°byaddr
((c⁄° *)&
addr
,

20 (
ö_addr
), 
AF_INET
));

22 
	`¥ötf
("öë_¡ﬂ : %p\n", 
	`öë_¡ﬂ
(
addr
));

23 
	`exô
(0);

24 
	}
}

	@conc/vsum.c

5 
	~"cßµ.h
"

7 
	#MAXTHREADS
 32

	)

8 
	#MAXN
 1<<27

	)

10 *
sum
(*
v¨gp
);

13 
	gve˘‹
[
MAXN
];

14 
	gpsum
[
MAXTHREADS
];

15 
	g√Àms_≥r_thªad
;

17 
	$maö
(
¨gc
, **
¨gv
)

19 
i
, 
√Àms
, 
log_√Àms
, 
¡hªads
;

20 
±hªad_t
 
tid
[
MAXTHREADS
];

21 
myid
[
MAXTHREADS
];

22 
ªsu…
 = 0;

25 i‡(
¨gc
 != 3) {

26 
	`¥ötf
("Ußge: %†<¡hªads> <log_√Àms>\n", 
¨gv
[0]);

27 
	`exô
(0);

29 
¡hªads
 = 
	`©oi
(
¨gv
[1]);

30 
log_√Àms
 = 
	`©oi
(
¨gv
[2]);

31 
√Àms
 = (1L << 
log_√Àms
);

34 i‡((
√Àms
 % 
¡hªads
Ë!0 || (√Àm†> 
MAXN
)) {

35 
	`¥ötf
("Error: invalidÇelems\n");

36 
	`exô
(0);

39 
√Àms_≥r_thªad
 = 
√Àms
 / 
¡hªads
;

42 
i
 = 0; i < 
√Àms
; i++)

43 
ve˘‹
[
i
] = 1.1;

46 
i
 = 0; i < 
¡hªads
; i++) {

47 
myid
[
i
] = i;

48 
	`Pthªad_¸óã
(&
tid
[
i
], 
NULL
, 
sum
, &
myid
[i]);

50 
i
 = 0; i < 
¡hªads
; i++)

51 
	`Pthªad_joö
(
tid
[
i
], 
NULL
);

54 
i
 = 0; i < 
¡hªads
; i++)

55 
ªsu…
 +
psum
[
i
];

58 
	`¥ötf
("ªsu… = %f\n", 
ªsu…
);

60 
	`exô
(0);

61 
	}
}

66 *
	$sum
(*
v¨gp
)

68 
myid
 = *((*)
v¨gp
);

69 
°¨t
 = 
myid
 * 
√Àms_≥r_thªad
;

70 
íd
 = 
°¨t
 + 
√Àms_≥r_thªad
;

71 
i
, 
sum
 = 0;

73 
i
 = 
°¨t
; i < 
íd
; i++) {

74 
sum
 +
	`sqπ
(
ve˘‹
[
i
]);

76 
psum
[
myid
] = 
sum
;

78  
NULL
;

79 
	}
}

	@data/bad-sum.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

8 
	$sum_ñemíts
(
a
[], 
Àngth
) {

9 
i
;

10 
ªsu…
 = 0;

12 
i
 = 0; i <
Àngth
-1; i++)

13 
ªsu…
 +
a
[
i
];

14  
ªsu…
;

15 
	}
}

18 
	ga
[5] = { 1.0, 2.0, 3.0, 4.0, 5.0};

20 
	$ã°
(
limô
)

22 
x
 = 
	`sum_ñemíts
(
a
, 
limô
);

24 
	`¥ötf
("Fú° %uÉÀmít†sumÅÿ%f\n", 
limô
, 
x
);

25 
	}
}

27 
	$maö
(
¨gc
, *
¨gv
[]) {

28 
vÆ
 = 5;

30 i‡(
¨gc
 > 1)

31 
	`ssˇnf
(
¨gv
[1], "%d", &
vÆ
);

32 
	`ã°
(
vÆ
);

34 
	}
}

	@data/bisbic.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

7 
bis
(
x
, 
m
);

8 
bic
(
x
, 
m
);

18 
	$bis
(
x
, 
m
) {

20 
ªsu…
 = 
x
 | 
m
;

25 
ªsu…
 = 
___________
;

30  
ªsu…
;

31 
	}
}

39 
	$bic
(
x
, 
m
) {

41 
ªsu…
 = 
x
 & ~
m
;

46 
ªsu…
 = 
___________
;

51  
ªsu…
;

52 
	}
}

61 
	$boﬁ_‹
(
x
, 
y
) {

63 
ªsu…
 = 
	`bis
(
x
,
y
);

67 
ªsu…
 = 
___________
;

72  
ªsu…
;

73 
	}
}

76 
	$boﬁ_x‹
(
x
, 
y
) {

78 
ªsu…
 = 
	`bis
(
	`bic
(
x
,
y
), bic(y,x));

82 
ªsu…
 = 
___________
;

87  
ªsu…
;

88 
	}
}

92 
	$maö
(
¨gc
, *
¨gv
[]) {

93 
x
, 
m
;

94 i‡(
¨gc
 != 3) {

95 
	`¥ötf
("Ußge: %†x m\n", 
¨gv
[0]);

96 
	`exô
(0);

98 
	`ssˇnf
(
¨gv
[1], "%x", &
x
);

99 
	`ssˇnf
(
¨gv
[2], "%x", &
m
);

100 
	`¥ötf
("Bô Së(0x%x, 0x%xË--> 0x%x\n", 
x
, 
m
, 
	`bis
(x,m));

101 
	`¥ötf
("Bô CÀ¨(0x%x, 0x%xË--> 0x%x\n", 
x
, 
m
, 
	`bic
(x,m));

102 
	`¥ötf
("Or(0x%x, 0x%xË--> 0x%x\n", 
x
, 
m
, 
	`boﬁ_‹
(x,m));

103 
	`¥ötf
("X‹(0x%x, 0x%xË--> 0x%x\n", 
x
, 
m
, 
	`boﬁ_x‹
(x,m));

106 
	}
}

	@data/casting.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

4 
	$t2u
() {

6 
x
 = -1;

7 
ux
 = (Ë
x
;

9  
ux
;

10 
	}
}

13 
	$ex∂icô_ˇ°
() {

15 
tx
, 
ty
;

16 
ux
, 
uy
;

18 
tx
 = (Ë
ux
;

19 
uy
 = (Ë
ty
;

21 
	}
}

23 
	$im∂icô_ˇ°
() {

25 
tx
, 
ty
;

26 
ux
, 
uy
;

28 
tx
 = 
ux
;

29 
uy
 = 
ty
;

31 
	}
}

33 
	$myåunc
() {

35 
x
 = 53191;

36 
sx
 = (Ë
x
;

37 
y
 = 
sx
;

39  
y
;

40 
	}
}

42 
	$maö
(
¨gc
, *
¨gv
[]) {

43 i‡(
¨gc
 > 1) {

45 
v
 = -12345;

46 
uv
 = (Ë
v
;

47 
	`¥ötf
("v = %d, uv = %u\n", 
v
, 
uv
);

53 
u
 = 4294967295u;

54 
tu
 = (Ë
u
;

55 
	`¥ötf
("u = %u,Åu = %d\n", 
u
, 
tu
);

59 
	}
}

	@data/code.c

2 
	gaccum
 = 0;

4 
	$sum
(
x
, 
y
)

6 
t
 = 
x
 + 
y
;

7 
accum
 +
t
;

8  
t
;

9 
	}
}

13 
	$p
(
x
)

15  
	`sum
(
x
,x);

16 
	}
}

18 
	$maö
() {

20 
	}
}

	@data/constants-eg.c

2 
	~<°dio.h
>

3 
	~<°döt.h
>

5 
	tŒ_t
;

7 
	$t32
() {

9 
dpos32
 = (-2147483648 > 0);

10 
hpos32
 = (0x80000000 > 0);

13 
dtmö32
 = -2147483648;

14 
dpos32a
 = (
dtmö32
 > 0);

15 
htmö32
 = 0x80000000;

16 
hpos32a
 = (
htmö32
 > 0);

18 
	`¥ötf
("dtmö32 = %d (0x%x)\n", 
dtmö32
, dtmin32);

19 
	`¥ötf
("htmö32 = %d (0x%x)\n", 
htmö32
, htmin32);

20 
	`¥ötf
("dpos32 = %d hpos32 = %d\n", 
dpos32
, 
hpos32
);

21 
	`¥ötf
("dpos32®%d hpos32®%d\n", 
dpos32a
, 
hpos32a
);

22 
	}
}

24 
	$t64
() {

26 
dpos64
 = (-9223372036854775808 > 0);

27 
hpos64
 = (0x8000000000000000 > 0);

30 
öt64_t
 
dtmö64
 = -9223372036854775808;

31 
dpos64a
 = (
dtmö64
 > 0);

32 
öt64_t
 
htmö64
 = 0x8000000000000000;

33 
hpos64a
 = (
htmö64
 > 0);

35 
	`¥ötf
("dtmö64 = %Œd (0x%Œx)\n", 
dtmö64
, dtmin64);

36 
	`¥ötf
("htmö64 = %Œd (0x%Œx)\n", 
htmö64
, htmin64);

37 
	`¥ötf
("dpos64 = %d, hpos64 = %d\n", 
dpos64
, 
hpos64
);

38 
	`¥ötf
("dpos64®%d, hpos64®%d\n", 
dpos64a
, 
hpos64a
);

39 
	}
}

41 
	$hm1
() {

42 
h32m1
 = -0x7FFFFFFF-1;

43 
h32m1pos
 = (-0x7FFFFFFF-1 > 0);

44 
	`¥ötf
("h32m1 = %d (0x%x). h32m1po†%d\n", 
h32m1
, h32m1, 
h32m1pos
);

45 
öt64_t
 
h64m1
 = -0x7FFFFFFFFFFFFFFF-1;

46 
h64m1pos
 = (-0x7FFFFFFFFFFFFFFF-1 > 0);

47 
	`¥ötf
("h64m1 = %Œd (0x%Œx). h64m1po†%d\n", 
h64m1
, h64m1, 
h64m1pos
);

48 
	}
}

50 
	$√w_defs32
() {

51 
Œ_t
 
vÆld
 =

56 
Œ_t
 
vÆlh
 =

61 
Œ_t
 
vÆhd
 =

66 
Œ_t
 
vÆhh
 =

71 
Œ_t
 
vÆhdn
 =

76 
Œ_t
 
vÆhhn
 =

81 
	`¥ötf
("2147483647 + 1 -> %Œd (0x%Œx)\n", 
vÆld
, valld);

82 
	`¥ötf
("0x7FFFFFFF + 1 -> %Œd (0x%Œx)\n", 
vÆlh
, vallh);

83 
	`¥ötf
("2147483649 - 1 -> %Œd (0x%Œx)\n", 
vÆhd
, valhd);

84 
	`¥ötf
("0x80000001 - 1 -> %Œd (0x%Œx)\n", 
vÆhh
, valhh);

85 
	`¥ötf
("-(2147483649 - 1Ë-> %Œd (0x%Œx)\n", 
vÆhdn
, valhdn);

86 
	`¥ötf
("-(0x80000001 - 1Ë-> %Œd (0x%Œx)\n", 
vÆhhn
, valhhn);

87 
	}
}

90 
	$maö
(
¨gc
, *
¨gv
[]) {

91 
	`¥ötf
("word size = %d\n", (*) * 8);

92 
	`t32
();

93 
	`t64
();

94 
	`hm1
();

95 
	`√w_defs32
();

97 
	}
}

	@data/constants.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<limôs.h
>

4 
	~<gë›t.h
>

5 
	~<öây≥s.h
>

7 
	#TMIN
 
INT_MIN


	)

9 
	#TMIN_DEC
 -2147483648

	)

11 
	#TMIN_HEX
 0x80000000

	)

13 
	#STMIN_DEC
 "-2147483648"

	)

15 
	#STMIN_HEX
 "0x80000000"

	)

18 íum { 
	mGCC
, 
	mC89
, 
	mC99
, 
	mC11
 } 
	tœng_t
;

20 *
	gœngs
[4] = {"GCC", "C89", "C99", "C11"};

23 #i‚de‡
LANG


24 
	#LANG
 
GCC


	)

27 
	#COMP_ZERO
(
x
Ë((xË< 0 ? "<" : (xË> 0 ? ">" : "=")

	)

28 
	#COMP_TMIN
(
x
Ë((xË< 
TMIN
 ? "<" : (xË> TMIN ? ">" : "=")

	)

29 
	#TWICE
(
x
Ë(2*(x))

	)

31 *
	$comp_zîo
(
x
)

33  
	`COMP_ZERO
(
x
);

34 
	}
}

36 *
	$comp_tmö
(
x
)

38  
	`COMP_TMIN
(
x
);

39 
	}
}

41 
	$maö
(
¨gc
, *
¨gv
[])

43 
ãr£_mode
 = 0;

44 
¥öt_hódî
 = 0;

45 
w‹d_size
 = 8*();

46 *
düÀ˘
 = 
œngs
[
LANG
];

47 
öt64_t
 
tmö_dec_vÆ
 = (öt64_tË
TMIN_DEC
;

48 
öt64_t
 
tmö_hex_vÆ
 = (öt64_tË
TMIN_HEX
;

49 * 
CZd
 = 
	`COMP_ZERO
(
TMIN_DEC
);

50 * 
CZh
 = 
	`COMP_ZERO
(
TMIN_HEX
);

51 * 
czd
 = 
	`comp_zîo
(
TMIN_DEC
);

52 * 
czh
 = 
	`comp_zîo
(
TMIN_HEX
);

53 
öt64_t
 
TWICEd
 = 
	`TWICE
(
TMIN_DEC
);

54 
öt64_t
 
TWICEh
 = 
	`TWICE
(
TMIN_HEX
);

56 
c
;

57 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "th")) != -1) {

58 
c
) {

60 
ãr£_mode
 = 1;

63 
¥öt_hódî
 = 1;

70 i‡(
ãr£_mode
) {

71 i‡(
¥öt_hódî
) {

72 
	`¥ötf
("word size:dialect:decimal:hex:CZ decimal: CZ hex:cz decimal:cz hex:2x decimal:2x hex\n");

74 
	`¥ötf
("%d:%s:%lld:%lld:%s:%s:%s:%s:%lld:%lld\n",

75 
w‹d_size
, 
düÀ˘
, 
tmö_dec_vÆ
, 
tmö_hex_vÆ
,

76 
CZd
, 
CZh
, 
czd
, 
czh
,

77 
TWICEd
, 
TWICEh
);

79 
	`¥ötf
("Long word size = %d\n", () (8*()));

80 
	`¥ötf
("DüÀ˘ = %s\n", 
œngs
[
LANG
]);

81 
	`¥ötf
(" COMP_ZERO\n");

82 
	`¥ötf
("\t%s\t(0x%" 
PRIx64
 "Ë%†0\n", 
STMIN_DEC
, (
öt64_t
Ë
TMIN_DEC
, 
	`COMP_ZERO
(TMIN_DEC));

83 
	`¥ötf
("\t%s\t(0x%" 
PRIx64
 "Ë%†0\n", 
STMIN_HEX
, (
öt64_t
Ë
TMIN_HEX
, 
	`COMP_ZERO
(TMIN_HEX));

85 
	`¥ötf
(" COMP_TMIN\n");

86 
	`¥ötf
("\t%s\t(0x%" 
PRIx64
 "Ë%†%s\n", 
STMIN_DEC
, (
öt64_t
Ë
TMIN_DEC
, 
	`COMP_TMIN
(TMIN_DEC), STMIN_DEC);

87 
	`¥ötf
("\t%s\t(0x%" 
PRIx64
 "Ë%†%s\n", 
STMIN_HEX
, (
öt64_t
Ë
TMIN_HEX
, 
	`COMP_TMIN
(TMIN_HEX), 
STMIN_DEC
);

89 
	`¥ötf
(" comp_zero\n");

90 
	`¥ötf
("\t%s\t(0x%" 
PRIx64
 "Ë%†0\n", 
STMIN_DEC
, (
öt64_t
Ë
TMIN_DEC
, 
	`comp_zîo
(TMIN_DEC));

91 
	`¥ötf
("\t%s\t(0x%" 
PRIx64
 "Ë%†0\n", 
STMIN_HEX
, (
öt64_t
Ë
TMIN_HEX
, 
	`comp_zîo
(TMIN_HEX));

93 
	`¥ötf
(" comp_tmin\n");

94 
	`¥ötf
("\t%s\t(0x%" 
PRIx64
 "Ë%†%s\n", 
STMIN_DEC
, (
öt64_t
Ë
TMIN_DEC
, 
	`comp_tmö
(TMIN_DEC), STMIN_DEC);

95 
	`¥ötf
("\t%s\t(0x%" 
PRIx64
 "Ë%†%s\n", 
STMIN_HEX
, (
öt64_t
Ë
TMIN_HEX
, 
	`comp_tmö
(TMIN_HEX), 
STMIN_DEC
);

97 
	`¥ötf
(" TWICE\n");

98 
	`¥ötf
("\t2*%s\t(2*0x%" 
PRIx64
 "Ë%Œd (0x%" PRIx64 ")\n", 
STMIN_DEC
, (
öt64_t
Ë
TMIN_DEC
, (öt64_tË
	`TWICE
(TMIN_DEC), (int64_t) TWICE(TMIN_DEC));

99 
	`¥ötf
("\t2*%s\t(2*0x%" 
PRIx64
 "Ë%Œd (0x%" PRIx64 ")\n", 
STMIN_HEX
, (
öt64_t
Ë
TMIN_HEX
, (öt64_tË
	`TWICE
(TMIN_HEX), (int64_t) TWICE(TMIN_HEX));

101 
	`¥ötf
("\n");

104 
	}
}

	@data/divconst.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

6 
	$div8
(
x
) {

8 
büs
 = (
x
 >> 31) & 0x7;

9  (
x
 + 
büs
) >> 3;

10 
	}
}

14 
	$div16
(
x
) {

16 
büs
 = (
x
 >> 31) & 0xF;

17  (
x
 + 
büs
) >> 4;

18 
	}
}

21 
	$div2k
(
x
, 
k
)

23  (
x
<0 ? x+(1<<
k
)-1 : x) >> k;

24 
	}
}

27 
	$maö
(
¨gc
, *
¨gv
[]) {

28 
i
;

29 
i
 = 1; i < 
¨gc
; i++) {

30 
x
 = 
	`°πﬁ
(
¨gv
[
i
], 
NULL
, 0);

31 
x8
 = 
	`div8
(
x
);

32 
x16
 = 
	`div16
(
x
);

33 
	`¥ötf
("x = %d, x/8 = %d, x/16 = %d\n", 
x
, 
x8
, 
x16
);

34 
x8
 = 
	`div2k
(
x
,3);

35 
x16
 = 
	`div2k
(
x
,4);

39 
	}
}

	@data/eg-dis.c

3 
	$¥oˇ
(*
a
, 
x
, 
y
)

5 
b
[99];

6 
t
[6];

7 *
c
 = 
b
+90;

10 
b
[3] = 
a
[5] + 
t
[4];

11 
a
[17] = 
b
[24];

12 
b
[33] = 
c
[-80] + c[-18];

13  
a
[
x
] = 
b
[
y
];

14 
	}
}

19 
	$maö
()

21 
a
[10];

22  
	`¥oˇ
(
a
, 5, 7);

23 
	}
}

	@data/extend.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

4 *
	tbyã_poöãr
;

6 
	$show_byãs
(
byã_poöãr
 
°¨t
, 
Àn
) {

7 
i
;

8 
i
 = 0; i < 
Àn
; i++)

9 
	`¥ötf
(" %.2x", 
°¨t
[
i
]);

10 
	`¥ötf
("\n");

11 
	}
}

13 
	$ã°
() {

15 
sx
 = -12345;

16 
usx
 = 
sx
;

17 
x
 = 
sx
;

18 
ux
 = 
usx
;

20 
	`¥ötf
("sx = %d:\t", 
sx
);

21 
	`show_byãs
((
byã_poöãr
Ë&
sx
, ());

22 
	`¥ötf
("usx = %u:\t", 
usx
);

23 
	`show_byãs
((
byã_poöãr
Ë&
usx
, ());

24 
	`¥ötf
("x = %d:\t", 
x
);

25 
	`show_byãs
((
byã_poöãr
Ë&
x
, ());

26 
	`¥ötf
("ux = %u:\t", 
ux
);

27 
	`show_byãs
((
byã_poöãr
Ë&
ux
, ());

29 
	}
}

31 
	$ã°2
() {

33 
sx
 = -12345;

34 
uy
 = 
sx
;

36 
	`¥ötf
("uy = %u:\t", 
uy
);

37 
	`show_byãs
((
byã_poöãr
Ë&
uy
, ());

39 
	}
}

42 
	$maö
(
¨gc
, *
¨gv
[]) {

43 
	`ã°
();

44 
	`ã°2
();

46 
	}
}

	@data/floatcomp-template.c

1 
f2u
(
x
);

4 
	$Êﬂt_ge
(
x
, 
y
) {

5 
ux
 = 
	`f2u
(
x
);

6 
uy
 = 
	`f2u
(
y
);

9 
sx
 = 
ux
 >> 31;

10 
sy
 = 
uy
 >> 31;

20  
sx
+
sy
;

23 
	}
}

27 
	$Êﬂt_À
(
x
, 
y
) {

28 
ux
 = 
	`f2u
(
x
);

29 
uy
 = 
	`f2u
(
y
);

32 
sx
 = 
ux
 >> 31;

33 
sy
 = 
uy
 >> 31;

43  
sx
+
sy
;

46 
	}
}

	@data/ieee.c

4 
	#_GNU_SOURCE
 1

	)

5 
	~<m©h.h
>

10 
	#POS_INFINITY


	)

11 
	#NEG_INFINITY


	)

12 
	#NEG_ZERO


	)

17 
	#POS_INFINITY
 1e400

	)

18 
	#NEG_INFINITY
 (-
POS_INFINITY
)

	)

19 
	#NEG_ZERO
 (-1.0/
POS_INFINITY
)

	)

22 
	$maö
()

24 
	`¥ötf
("POS_INFINITY = %f\n", 
POS_INFINITY
);

25 
	`¥ötf
("NEG_INFINITY = %f\n", 
NEG_INFINITY
);

26 
	`¥ötf
("NEG_ZERO = %f\n", 
NEG_ZERO
);

29 
	`¥ötf
("INFINITY = %f\n", 
INFINITY
);

30 
	`¥ötf
("NAN = %f\n", 
NAN
);

31 
	}
}

	@data/inplace-swap.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

6 
	$ö∂a˚_sw≠
(*
x
, *
y
) {

8 *
y
 = *
x
 ^ *y;

9 *
x
 = *x ^ *
y
;

10 *
y
 = *
x
 ^ *y;

11 
	}
}

14 
	$ö∂a˚_sw≠_b
(*
x
, *
y
) {

16 *
x
 = *x ^ *
y
;

17 *
y
 = *
x
 ^ *y;

18 *
x
 = *x ^ *
y
;

19 
	}
}

23 
	$ªvî£_¨øy
(
a
[], 
˙t
) {

24 
fú°
, 
œ°
;

25 
fú°
 = 0, 
œ°
 = 
˙t
-1;

26 
fú°
 <
œ°
;

27 
fú°
++,
œ°
--)

28 
	`ö∂a˚_sw≠
(&
a
[
fú°
], &a[
œ°
]);

29 
	}
}

33 
	$fix_ªvî£_¨øy
(
a
[], 
˙t
) {

34 
fú°
, 
œ°
;

35 
fú°
 = 0, 
œ°
 = 
˙t
-1;

36 
fú°
 < 
œ°
;

37 
fú°
++,
œ°
--)

38 
	`ö∂a˚_sw≠
(&
a
[
fú°
], &a[
œ°
]);

39 
	}
}

42 
	$maö
(
¨gc
, *
¨gv
[]) {

43 *
a
 = 
	`ˇŒoc
(
¨gc
-1, ());

44 
˙t
 = 
¨gc
-1;

45 
i
;

46 
i
 = 0; i < 
˙t
; i++) {

47 
a
[
i
] = 
	`©oi
(
¨gv
[i+1]);

49 
	`¥ötf
("First version:\n");

50 
	`¥ötf
(" InôüŒy:á[0..%d] =", 
˙t
-1);

51 
i
 = 0; i < 
˙t
; i++)

52 
	`¥ötf
(" %d", 
a
[
i
]);

53 
	`¥ötf
("\n");

54 
	`ªvî£_¨øy
(
a
, 
˙t
);

55 
	`¥ötf
(" FöÆly:á[0..%d] =", 
˙t
-1);

56 
i
 = 0; i < 
˙t
; i++)

57 
	`¥ötf
(" %d", 
a
[
i
]);

58 
	`¥ötf
("\n");

60 
i
 = 0; i < 
˙t
; i++) {

61 
a
[
i
] = 
	`©oi
(
¨gv
[i+1]);

63 
	`¥ötf
("Second version:\n");

64 
	`¥ötf
(" InôüŒy:á[0..%d] =", 
˙t
-1);

65 
i
 = 0; i < 
˙t
; i++)

66 
	`¥ötf
(" %d", 
a
[
i
]);

67 
	`¥ötf
("\n");

68 
	`fix_ªvî£_¨øy
(
a
, 
˙t
);

69 
	`¥ötf
(" FöÆly:á[0..%d] =", 
˙t
-1);

70 
i
 = 0; i < 
˙t
; i++)

71 
	`¥ötf
(" %d", 
a
[
i
]);

72 
	`¥ötf
("\n");

74 
	}
}

	@data/logic.c

1 
	~<°dlib.h
>

2 
	~<°dio.h
>

4 
	$logic_eg
(
x
, 
y
)

6 
	`¥ötf
("x = 0x%.2x\n", 0xFF&(
x
));

7 
	`¥ötf
("y = 0x%.2x\n", 0xFF&(
y
));

8 
	`¥ötf
("x&y = 0x%.2x\n", 0xFF&(
x
&
y
));

9 
	`¥ötf
("x&&y = 0x%.2x\n", 0xFF&(
x
&&
y
));

10 
	`¥ötf
("x|y = 0x%.2x\n", 0xFF&(
x
|
y
));

11 
	`¥ötf
("x||y = 0x%.2x\n", 0xFF&(
x
||
y
));

12 
	`¥ötf
("~x|~y = 0x%.2x\n", 0xFF&(~
x
|~
y
));

13 
	`¥ötf
("!x||!y = 0x%.2x\n", 0xFF&(!
x
||!
y
));

14 
	`¥ötf
("x&!y = 0x%.2x\n", 0xFF&(
x
&!
y
));

15 
	`¥ötf
("x&&~y = 0x%.2x\n", 0xFF&(
x
&&~
y
));

16 
	}
}

18 
	$maö
(
¨gc
, * 
¨gv
[])

20 
x
, 
y
;

21 i‡(
¨gc
 != 3) {

22 
	`¥ötf
("Ußge: %†x y\n", 
¨gv
[0]);

23 
	`exô
(0);

25 
	`ssˇnf
(
¨gv
[1], "%x", &
x
);

26 
	`ssˇnf
(
¨gv
[2], "%x", &
y
);

27 
	`logic_eg
(
x
, 
y
);

29 
	}
}

	@data/optarith.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

5 
	#M
 31

	)

6 
	#N
 8

	)

12 
	#M


	)

13 
	#N


	)

19 
	$¨ôh
(
x
, 
y
) {

20 
ªsu…
 = 0;

21 
ªsu…
 = 
x
*
M
 + 
y
/
N
;

22  
ªsu…
;

23 
	}
}

26 
	#MB
 15

	)

27 
	#NB
 4

	)

29 
	$¨ôhb
(
x
, 
y
) {

30 
ªsu…
 = 0;

31 
ªsu…
 = 
x
*
MB
 + 
y
/
NB
;

32  
ªsu…
;

33 
	}
}

38 
	$›èrôh
(
x
, 
y
) {

40 
t
 = 
x
;

41 
x
 <<= 5;

42 
x
 -
t
;

43 i‡(
y
 < 0) y += 7;

44 
y
 >>= 3;

45  
x
+
y
;

46 
	}
}

50 
	$›èrôhb
(
x
, 
y
) {

52 
t
 = 
x
;

53 
x
 <<= 4;

54 
x
 -
t
;

55 i‡(
y
 < 0) y += 3;

56 
y
 >>= 2;

57  
x
+
y
;

58 
	}
}

61 
	$maö
(
¨gc
, *
¨gv
[]) {

62 
x
 = 
	`©oi
(
¨gv
[1]);

63 
y
 = 
	`©oi
(
¨gv
[2]);

64 
a
 = 
	`¨ôh
(
x
,
y
);

65 
b
 = 
	`›èrôh
(
x
,
y
);

66 i‡(
a
 !
b
)

67 
	`¥ötf
("Whoops! ");

68 
	`¥ötf
("A: x = %d, y = %d,Ç‹mÆ --> %d, o± --> %d\n", 
x
, 
y
, 
a
, 
b
);

70 
a
 = 
	`¨ôhb
(
x
,
y
);

71 
b
 = 
	`›èrôhb
(
x
,
y
);

72 i‡(
a
 !
b
)

73 
	`¥ötf
("Whoops! ");

74 
	`¥ötf
("B: x = %d, y = %d,Ç‹mÆ --> %d, o± --> %d\n", 
x
, 
y
, 
a
, 
b
);

77 
	}
}

	@data/printf.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

9 
	$maö
 ()

12 
x
 = -1;

13 
u
 = 2147483648;

15 
	`¥ötf
("x = %u = %d\n", 
x
, x);

16 
	`¥ötf
("u = %u = %d\n", 
u
, u);

19 
	`exô
(0);

20 
	}
}

	@data/puzzle.c

1 
foo
();

2 
b¨
();

4 
	$puzzÀ
()

7 
x
 = 
	`foo
();

8 
y
 = 
	`b¨
();

10 
ux
 = 
x
;

11 
uy
 = 
y
;

14  
uy
+
ux
;

15 
	}
}

	@data/rbyte-ans.c

2 
ª∂a˚_byã
 (
x
, 
i
, 
b
);

5 
	$ª∂a˚_byã
 (
x
, 
i
, 
b
) {

7  
x
;

8 
	}
}

12 
put_byã
 (
x
, 
b
, 
i
);

	@data/rshift-templates.c

2 
	$§l
(
x
, 
k
) {

4 
x§a
 = (Ë
x
 >> 
k
;

9  
x§a
;

11 
	}
}

15 
	$§a
(
x
, 
k
) {

17 
x§l
 = (Ë
x
 >> 
k
;

22  
x§l
;

24 
	}
}

	@data/shift.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

4 
	$maö
(
¨gc
, *
¨gv
[]) {

5 i‡(
¨gc
 != 3) {

6 
	`Ârötf
(
°dîr
, "Ußge: %†xÇ\n", 
¨gv
[0]);

7 
	`exô
(0);

9 
x
 = (Ë
	`°πoul
(
¨gv
[1], 
NULL
, 0);

10 
k
 = (Ë
	`°πoul
(
¨gv
[2], 
NULL
, 0);

11 
¨vÆ
 = (
x
 >> 
k
);

12 
ÃvÆ
 = (Ë
x
 >> 
k
;

13 
lvÆ
 = (
x
 << 
k
);

14 
	`¥ötf
("x = 0x%lx, k = %d:\n", 
x
, 
k
);

15 
	`¥ötf
("\ée·:\t0x%lx\n", 
lvÆ
);

16 
	`¥ötf
("\éog:\t0x%lx\n", 
ÃvÆ
);

17 
	`¥ötf
("\èrôh:\t0x%lx\n", 
¨vÆ
);

20 
	}
}

	@data/show-bytes.c

2 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<°rög.h
>

8 *
	tbyã_poöãr
;

10 
	$show_byãs
(
byã_poöãr
 
°¨t
, 
size_t
 
Àn
) {

11 
size_t
 
i
;

12 
i
 = 0; i < 
Àn
; i++)

13 
	`¥ötf
(" %.2x", 
°¨t
[
i
]);

14 
	`¥ötf
("\n");

15 
	}
}

17 
	$show_öt
(
x
) {

18 
	`show_byãs
((
byã_poöãr
Ë&
x
, ());

19 
	}
}

21 
	$show_Êﬂt
(
x
) {

22 
	`show_byãs
((
byã_poöãr
Ë&
x
, ());

23 
	}
}

25 
	$show_poöãr
(*
x
) {

26 
	`show_byãs
((
byã_poöãr
Ë&
x
, (*));

27 
	}
}

32 
	$ã°_show_byãs
(
vÆ
) {

33 
ivÆ
 = 
vÆ
;

34 
fvÆ
 = (Ë
ivÆ
;

35 *
pvÆ
 = &
ivÆ
;

36 
	`show_öt
(
ivÆ
);

37 
	`show_Êﬂt
(
fvÆ
);

38 
	`show_poöãr
(
pvÆ
);

39 
	}
}

42 
	$sim∂e_show_a
() {

44 
vÆ
 = 0x87654321;

45 
byã_poöãr
 
vÆp
 = (byã_poöãrË&
vÆ
;

46 
	`show_byãs
(
vÆp
, 1);

47 
	`show_byãs
(
vÆp
, 2);

48 
	`show_byãs
(
vÆp
, 3);

50 
	}
}

52 
	$sim∂e_show_b
() {

54 
vÆ
 = 0x12345678;

55 
byã_poöãr
 
vÆp
 = (byã_poöãrË&
vÆ
;

56 
	`show_byãs
(
vÆp
, 1);

57 
	`show_byãs
(
vÆp
, 2);

58 
	`show_byãs
(
vÆp
, 3);

60 
	}
}

62 
	$Êﬂt_eg
() {

63 
x
 = 3490593;

64 
f
 = (Ë
x
;

65 
	`¥ötf
("F‹ x = %d\n", 
x
);

66 
	`show_öt
(
x
);

67 
	`show_Êﬂt
(
f
);

69 
x
 = 3510593;

70 
f
 = (Ë
x
;

71 
	`¥ötf
("F‹ x = %d\n", 
x
);

72 
	`show_öt
(
x
);

73 
	`show_Êﬂt
(
f
);

75 
	}
}

77 
	$°rög_ueg
() {

79 c⁄° *
s
 = "ABCDEF";

80 
	`show_byãs
((
byã_poöãr
Ë
s
, 
	`°æí
(s));

82 
	}
}

84 
	$°rög_Àg
() {

86 c⁄° *
s
 = "abcdef";

87 
	`show_byãs
((
byã_poöãr
Ë
s
, 
	`°æí
(s));

89 
	}
}

91 
	$show_twocomp
()

94 
x
 = 12345;

95 
mx
 = -
x
;

97 
	`show_byãs
((
byã_poöãr
Ë&
x
, ());

98 
	`show_byãs
((
byã_poöãr
Ë&
mx
, ());

100 
	}
}

102 
	$maö
(
¨gc
, *
¨gv
[])

104 
vÆ
 = 12345;

106 i‡(
¨gc
 > 1) {

107 i‡(
¨gc
 > 1) {

108 
vÆ
 = 
	`°πﬁ
(
¨gv
[1], 
NULL
, 0);

110 
	`¥ötf
("callingÅest_show_bytes\n");

111 
	`ã°_show_byãs
(
vÆ
);

113 
	`¥ötf
("calling show_twocomp\n");

114 
	`show_twocomp
();

115 
	`¥ötf
("Calling simple_show_a\n");

116 
	`sim∂e_show_a
();

117 
	`¥ötf
("Calling simple_show_b\n");

118 
	`sim∂e_show_b
();

119 
	`¥ötf
("Calling float_eg\n");

120 
	`Êﬂt_eg
();

121 
	`¥ötf
("Calling string_ueg\n");

122 
	`°rög_ueg
();

123 
	`¥ötf
("Calling string_leg\n");

124 
	`°rög_Àg
();

127 
	}
}

	@data/sign-extend.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

7 
	$fun1
(
w‹d
) {

8  (Ë((
w‹d
 << 24) >> 24);

9 
	}
}

11 
	$fun2
(
w‹d
) {

12  ((Ë
w‹d
 << 24) >> 24;

13 
	}
}

16 
	$maö
(
¨gc
, *
¨gv
[])

18 
i
;

19 
i
 = 1; i < 
¨gc
; i++) {

20 
w
 = 
	`©oi
(
¨gv
[
i
]);

21 
	`¥ötf
("word = %u, fun1(word) = %d, fun2(word) = %d\n",

22 
w
, 
	`fun1
(w), 
	`fun2
(w));

25 
	}
}

	@data/sizes.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

6 
	$maö
()

8 
	`¥ötf
("sizeof(unsigned) = %ld\n", ());

9 
	`¥ötf
("sizeof(size_tË%ld\n", (
size_t
));

10 
	`¥ötf
("sizeof(ssize_tË%ld\n", (
ssize_t
));

11 
	`¥ötf
("sizeof(int) = %ld\n", ());

12 
	`¥ötf
("sizeof(long int) = %ld\n", ());

13 
	`¥ötf
("sizeof(char) = %ld\n", ());

14 
	`¥ötf
("sizeof(short) = %ld\n", ());

15 
	`¥ötf
("sizeof(float) = %ld\n", ());

16 
	`¥ötf
("sizeof(double) = %ld\n", ());

17 
	`¥ötf
("sizeof(long double) = %ld\n", ());

18 
	`¥ötf
("sizeof(char *) = %ld\n", (*));

19 
	`exô
(0);

20 
	}
}

	@data/strlonger.c

2 
	~<°dlib.h
>

3 
	~<°dio.h
>

4 
	~<°rög.h
>

8 
size_t
 
°æí
(c⁄° *
s
);

14 
	$°æ⁄gî
(*
s
, *
t
) {

15  
	`°æí
(
s
Ë- såÀn(
t
) > 0;

16 
	}
}

20 
	$°æ⁄gî2
(*
s
, *
t
) {

22  
	`°æí
(
s
Ë> såÀn(
t
);

25 
	}
}

30 
	$°rsh‹ãr
(*
s
, *
t
) {

31  
	`°æí
(
s
Ë- såÀn(
t
) < 0;

32 
	}
}

36 
	$°rsh‹ãr2
(*
s
, *
t
) {

38  
	`°æí
(
s
Ë< såÀn(
t
);

40 
	}
}

43 
	$maö
(
¨gc
, *
¨gv
[]) {

44 *
s1
 = 
¨gc
 > 1 ? 
¨gv
[1] : (*) "howdy";

45 *
s2
 = 
¨gc
 > 2 ? 
¨gv
[2] : (*) "doddy";

46 
l1
 = 
	`°æ⁄gî
(
s1
, 
s2
);

47 
l2
 = 
	`°æ⁄gî2
(
s1
, 
s2
);

48 
r1
 = 
	`°rsh‹ãr
(
s1
, 
s2
);

49 
r2
 = 
	`°rsh‹ãr2
(
s1
, 
s2
);

50 
	`¥ötf
("'%s':'%s'. L⁄gî 1? : %d. L⁄gî 2? : %d\n", 
s1
, 
s2
, 
l1
, 
l2
);

51 
	`¥ötf
("'%s':'%s'. Sh‹ã∏1? : %d. Sh‹ã∏2? : %d\n", 
s1
, 
s2
, 
r1
, 
r2
);

53 
	}
}

	@data/sum.c

1 
	~<°dlib.h
>

2 
	~<°dio.h
>

5 
	$sum
(
x
, 
y
) {

6  
x
 + 
y
;

7 
	}
}

10 
	$maö
(
¨gc
, *
¨gv
[])

12 
vÆ
 = 0;

13 
i
;

15 
i
 = 1; i < 
¨gc
; i++) {

16 
x
 = 
	`©oi
(
¨gv
[
i
]);

17 
vÆ
 = 
	`sum
(vÆ, 
x
);

19 
	`¥ötf
("Sum = %d\n", 
vÆ
);

21 
	}
}

	@data/tmultcheck.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<limôs.h
>

4 
	~<öây≥s.h
>

7 
	$cmu…_ok
(
x
, 
y
) {

8 
p
 = 
x
*
y
;

10  !
x
 || 
p
/x =
y
;

11 
	}
}

15 
	$cmu…_ok2
(
x
, 
y
) {

16 i‡(
x
 =0 || 
y
 == 0)

18 i‡(
x
 < 0 && 
y
 < 0)

19  
CHAR_MAX
 / 
x
 <
y
;

20 i‡(
x
 < 0 && 
y
 > 0)

21  
CHAR_MIN
 / 
x
 >
y
;

22 i‡(
x
 > 0 && 
y
 < 0)

23  
CHAR_MIN
 / 
x
 <
y
;

25  
CHAR_MAX
 / 
x
 >
y
;

26 
	}
}

30 
	$cmu…_ok3
(
x
, 
y
) {

31 i‡(
x
 =0 || 
y
 == 0)

33 
x√g
 = 
x
 < 0;

34 
y√g
 = 
y
 < 0;

35 
≤eg
 = 
x√g
 ^ 
y√g
;

36 
lim
 = 
≤eg
 ? 
CHAR_MIN
 : 
CHAR_MAX
;

37 
div
 = 
lim
 / 
x
;

39  
y√g
 ? 
div
 <
y
 : y >= div;

40 
	}
}

45 
	$bad_cmu…_ok
(
x
, 
y
) {

46 i‡(
x
 == 0)

49 
absx
 = 
x
 < 0 ? x : -x;

50  
CHAR_MAX
 / 
absx
 >
y
;

51 
	}
}

55 
	$ã°_cmu…_ok
(
x
, 
y
) {

56 
p
 = 
x
*
y
;

57  
p
 >
CHAR_MIN
 &&Ö <
CHAR_MAX
;

58 
	}
}

62 
	$tmu…_ok
(
x
, 
y
) {

64 
p
 = 
x
*
y
;

66  !
x
 || 
p
/x =
y
;

67 
	}
}

73 
	$tmu…_ovf
(
x
, 
y
) {

75 
p
 = 
x
*
y
;

77  
x
 && 
p
/x !
y
;

78 
	}
}

82 
	$tmu…_ok2
(
x
, 
y
) {

85 
öt64_t
 
∂l
 = (öt64_tË
x
*
y
;

87  
∂l
 == ()Öll;

88 
	}
}

92 
	$tmu…_ovf2
(
x
, 
y
) {

95 
öt64_t
 
∂l
 = (öt64_tË
x
*
y
;

97  
∂l
 != ()Öll;

98 
	}
}

102 
	$bad_tmu…_ok
(
x
, 
y
) {

105 
öt64_t
 
∂l
 = 
x
*
y
;

108  
∂l
 == ()Öll;

109 
	}
}

111 
	$maö
() {

112 
x
, 
y
;

113 
x
 = 
CHAR_MIN
; x <
CHAR_MAX
; x++)

114 
y
 = 
CHAR_MIN
; 
x
 <
CHAR_MAX
; x++) {

115 
p
 = 
x
 * 
y
;

116 i‡(
	`cmu…_ok
(
x
,
y
Ë!
	`ã°_cmu…_ok
(x,y)) {

117 
	`¥ötf
("cmult_ok: Got differentÑesults for %d * %d -> %d\n",

118 
x
, 
y
, 
p
);

123 
x
 = 
CHAR_MIN
; x <
CHAR_MAX
; x++)

124 
y
 = 
CHAR_MIN
; 
x
 <
CHAR_MAX
; x++) {

125 
p
 = 
x
 * 
y
;

126 i‡(
	`cmu…_ok2
(
x
,
y
Ë!
	`ã°_cmu…_ok
(x,y)) {

127 
	`¥ötf
("cmult_ok2: Got differentÑesults for %d * %d -> %d\n",

128 
x
, 
y
, 
p
);

133 
x
 = 
CHAR_MIN
; x <
CHAR_MAX
; x++)

134 
y
 = 
CHAR_MIN
; 
x
 <
CHAR_MAX
; x++) {

135 
p
 = 
x
 * 
y
;

136 i‡(
	`cmu…_ok3
(
x
,
y
Ë!
	`ã°_cmu…_ok
(x,y)) {

137 
	`¥ötf
("cmult_ok3: Got differentÑesults for %d * %d -> %d\n",

138 
x
, 
y
, 
p
);

143 
x
 = 
CHAR_MIN
; x <
CHAR_MAX
; x++)

144 
y
 = 
CHAR_MIN
; 
x
 <
CHAR_MAX
; x++) {

145 
p
 = 
x
 * 
y
;

146 i‡(
	`bad_cmu…_ok
(
x
,
y
Ë!
	`ã°_cmu…_ok
(x,y)) {

147 
	`¥ötf
("bad_cmult_ok: Got differentÑesults for %d * %d -> %d\n",

148 
x
, 
y
, 
p
);

153 
	`¥ötf
("All OK\n");

155 
	}
}

	@data/uaddcheck.c

2 
	~<°dlib.h
>

3 
	~<°dio.h
>

4 
	~<öây≥s.h
>

5 
	~<limôs.h
>

9 
uadd_ok
(
x
, 
y
);

14 
	$uadd_ok
(
x
, 
y
) {

15 
sum
 = 
x
+
y
;

16  
sum
 >
x
;

17 
	}
}

22 
uadd_ovf
(
x
, 
y
);

27 
	$uadd_ovf
(
x
, 
y
) {

28 
sum
 = 
x
+
y
;

29  
sum
 < 
x
;

30 
	}
}

34 
	$ã°_uadd_ok
(
x
, 
y
) {

35 
uöt64_t
 
lx
 = (uöt64_tË
x
;

36 
uöt64_t
 
ly
 = (uöt64_tË
y
;

37  (
lx
 + 
ly
Ë=(
x
 + 
y
);

38 
	}
}

42 
	$ã°_uadd_ovf
(
x
, 
y
) {

43 
uöt64_t
 
lx
 = (uöt64_tË
x
;

44 
uöt64_t
 
ly
 = (uöt64_tË
y
;

45  (
lx
 + 
ly
Ë!(
x
 + 
y
);

46 
	}
}

48 
	$maö
(
¨gc
, *
¨gv
[]) {

49 
x
 = 
¨gc
 > 1 ? 
	`°πoul
(
¨gv
[1], 
NULL
, 0Ë: 
UINT_MAX
;

50 
y
 = 
¨gc
 > 1 ? 
	`°πoul
(
¨gv
[2], 
NULL
, 0Ë: 
UINT_MAX
;

51 
ok
 = 
	`uadd_ok
(
x
, 
y
);

52 
ovf
 = 
	`uadd_ovf
(
x
, 
y
);

53 
tok
 = 
	`ã°_uadd_ok
(
x
, 
y
);

54 
tovf
 = 
	`ã°_uadd_ovf
(
x
, 
y
);

55 
	`¥ötf
("x = %u, y = %u, x+y = %u\n", 
x
, 
y
, x+y);

56 i‡(
ok
 !
tok
)

57 
	`¥ötf
("\tok = %d,Åok = %d\n", 
ok
, 
tok
);

58 i‡(
ovf
 !
tovf
)

59 
	`¥ötf
("\tov‡%d,Åov‡%d\n", 
ovf
, 
tovf
);

61 
	}
}

	@data/uhp-ans.c

2 
sig√d_high_¥od
(
x
, 
y
);

6 
unsig√d_high_¥od
(
x
, 
y
);

11 
	$unsig√d_high_¥od
(
x
, 
y
) {

12 
p
 = (Ë
	`sig√d_high_¥od
((Ë
x
, (Ë
y
);

15  
p
;

16 
	}
}

	@data/vulnerabilities.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<öây≥s.h
>

13 *
mem˝y
(*
de°
, *
§c
, 
size_t
 
n
);

16 
	#KSIZE
 1024

	)

17 
	gkbuf
[
KSIZE
];

20 
	$c›y_‰om_kî√l
(*
u£r_de°
, 
maxÀn
) {

22 
Àn
 = 
KSIZE
 < 
maxÀn
 ? KSIZE : maxlen;

23 
	`mem˝y
(
u£r_de°
, 
kbuf
, 
Àn
);

24  
Àn
;

25 
	}
}

33 * 
	$c›y_ñemíts
(*
ñe_§c
[], 
ñe_˙t
, 
size_t
 
ñe_size
) {

38 *
ªsu…
 = 
	`mÆloc
(
ñe_˙t
 * 
ñe_size
);

39 i‡(
ªsu…
 =
NULL
)

41  
NULL
;

42 *
√xt
 = 
ªsu…
;

43 
i
;

44 
i
 = 0; i < 
ñe_˙t
; i++) {

46 
	`mem˝y
(
√xt
, 
ñe_§c
[
i
], 
ñe_size
);

48 
√xt
 +
ñe_size
;

50  
ªsu…
;

51 
	}
}

57 * 
	$nŸ_ß„_c›y_ñemíts
(*
ñe_§c
[], 
ñe_˙t
, 
size_t
 
ñe_size
) {

63 
uöt64_t
 
asize
 =

64 
ñe_˙t
 * (
uöt64_t
Ë
ñe_size
;

65 *
ªsu…
 = 
	`mÆloc
(
asize
);

67 i‡(
ªsu…
 =
NULL
)

69  
NULL
;

70 *
√xt
 = 
ªsu…
;

71 
i
;

72 
i
 = 0; i < 
ñe_˙t
; i++) {

74 
	`mem˝y
(
√xt
, 
ñe_§c
[
i
], 
ñe_size
);

76 
√xt
 +
ñe_size
;

78  
ªsu…
;

79 
	}
}

85 * 
	$ß„_c›y_ñemíts
(*
ñe_§c
[], 
ñe_˙t
, 
size_t
 
ñe_size
) {

91 
uöt64_t
 
ªquúed_size
 =

92 
ñe_˙t
 * (
uöt64_t
Ë
ñe_size
;

93 
size_t
 
ªque°_size
 = (size_tË
ªquúed_size
;

94 i‡(
ªquúed_size
 !
ªque°_size
)

96  
NULL
;

97 *
ªsu…
 = 
	`mÆloc
(
ªque°_size
);

98 i‡(
ªsu…
 =
NULL
)

100  
NULL
;

102 *
√xt
 = 
ªsu…
;

103 
i
;

104 
i
 = 0; i < 
ñe_˙t
; i++) {

106 
	`mem˝y
(
√xt
, 
ñe_§c
[
i
], 
ñe_size
);

108 
√xt
 +
ñe_size
;

110  
ªsu…
;

111 
	}
}

	@data/wordsize.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

17 
	$bad_öt_size_is_32
() {

19 
£t_msb
 = 1 << 31;

21 
bey⁄d_msb
 = 1 << 32;

25  
£t_msb
 && !
bey⁄d_msb
;

26 
	}
}

29 
	$föd_w‹d_size
() {

30 
x
 = 1L;

31 
w
 = 0;

33 
x
) {

34 
w
++;

35 
x
 <<= 1;

37  
w
;

38 
	}
}

41 
	$maö
(
¨gc
, *
¨gv
[]) {

42 
w32
 = 
	`bad_öt_size_is_32
();

43 
w
 = 
	`föd_w‹d_size
();

45 
	`¥ötf
("OnÅhis %d-bit machine, 32? = %s\n",

46 
w
, 
w32
 ? "Yes" : "No");

48 
	}
}

	@data/xbyte.c

4 
	t∑cked_t
;

7 
xbyã
(
∑cked_t
 
w‹d
, 
byãnum
);

12 
	$xbyã
(
∑cked_t
 
w‹d
, 
byãnum
) {

14 
	}
}

17 
	$xbyã_bad
(
∑cked_t
 
w‹d
, 
byãnum
)

21 
	$xbyã
(
∑cked_t
 
w‹d
, 
byãnum
)

27 (
w‹d
 >> (
byãnum
 << 3)) & 0xFF;

28 
	}
}

32 
	$maö
(
¨gc
, *
¨gv
[]) {

33 
x
;

34 
i
;

35 i‡(*
¨gv
[1] == '0')

36 
	`ssˇnf
(
¨gv
[1], "%x", &
x
);

38 
	`ssˇnf
(
¨gv
[1], "%d", &
x
);

39 
i
 = 0; i < 4; i++) {

40 
xbb
 = 
	`xbyã_bad
(
x
, 
i
);

41 
xb
 = 
	`xbyã
(
x
, 
i
);

42 
	`¥ötf
("x = %d (0x%x), bad = %d, good = %d\n",

43 
x
, x, 
xbb
, 
xb
);

45 
	}
}

	@ecf/alarm.c

2 
	~"cßµ.h
"

4 
	$h™dÀr
(
sig
)

6 
bìps
 = 0;

8 
	`¥ötf
("BEEP\n");

9 i‡(++
bìps
 < 5)

10 
	`Aœrm
(1);

12 
	`¥ötf
("BOOM!\n");

13 
	`exô
(0);

15 
	}
}

17 
	$maö
()

19 
	`Sig«l
(
SIGALRM
, 
h™dÀr
);

20 
	`Aœrm
(1);

25 
	`exô
(0);

26 
	}
}

	@ecf/blockone.c

1 
	~"cßµ.h
"

3 
	$maö
(
¨gc
, **
¨gv
)

6 
sig£t_t
 
mask
, 
¥ev_mask
;

8 
	`Sigem±y£t
(&
mask
);

9 
	`Sigadd£t
(&
mask
, 
SIGINT
);

12 
	`Sig¥ocmask
(
SIG_BLOCK
, &
mask
, &
¥ev_mask
);

17 
	`Sig¥ocmask
(
SIG_SETMASK
, &
¥ev_mask
, 
NULL
);

20 
	`exô
(0);

21 
	}
}

	@ecf/cmdline.c

1 
	~<°dio.h
>

3 
	$maö
(
¨gc
, *
¨gv
[], *
ívp
[])

5 i‡(
¨gc
 < 2) {

6 
	`¥ötf
("ußge: %†<n>\n", 
¨gv
[0]);

9 
	`¥ötf
("%s\n", 
¨gv
[1]);

11 
	}
}

	@ecf/counterprob.c

2 
	~"cßµ.h
"

4 
	gcou¡î
 = 0;

6 
	$h™dÀr
(
sig
)

8 
cou¡î
++;

9 
	`¶ìp
(1);

11 
	}
}

13 
	$maö
()

15 
i
;

17 
	`Sig«l
(
SIGUSR2
, 
h™dÀr
);

19 i‡(
	`F‹k
() == 0) {

20 
i
 = 0; i < 5; i++) {

21 
	`Kûl
(
	`gëµid
(), 
SIGUSR2
);

22 
	`¥ötf
("sent SIGUSR2ÅoÖarent\n");

24 
	`exô
(0);

27 
	`Waô
(
NULL
);

28 
	`¥ötf
("cou¡î=%d\n", 
cou¡î
);

29 
	`exô
(0);

30 
	}
}

	@ecf/fork.c

1 
	~"cßµ.h
"

5 
	$maö
()

7 
pid_t
 
pid
;

8 
x
 = 1;

10 
pid
 = 
	`F‹k
();

11 i‡(
pid
 == 0) {

12 
	`¥ötf
("chûd : x=%d\n", ++
x
);

13 
	`exô
(0);

17 
	`¥ötf
("∑ª¡: x=%d\n", --
x
);

18 
	`exô
(0);

19 
	}
}

	@ecf/fork1.c

1 
	~"cßµ.h
"

5 
	$maö
()

7 
	`F‹k
();

8 
	`¥ötf
("hello\n");

9 
	`exô
(0);

10 
	}
}

	@ecf/fork2.c

1 
	~"cßµ.h
"

5 
	$maö
()

7 
	`F‹k
();

8 
	`F‹k
();

9 
	`¥ötf
("hello\n");

10 
	`exô
(0);

11 
	}
}

	@ecf/fork3.c

1 
	~"cßµ.h
"

4 
	$maö
()

6 
	`F‹k
();

7 
	`F‹k
();

8 
	`F‹k
();

9 
	`¥ötf
("hello\n");

10 
	`exô
(0);

11 
	}
}

	@ecf/forkprob0.c

1 
	~"cßµ.h
"

4 
	$maö
()

6 
x
 = 1;

8 i‡(
	`F‹k
() == 0)

9 
	`¥ötf
("p1: x=%d\n", ++
x
);

10 
	`¥ötf
("p2: x=%d\n", --
x
);

11 
	`exô
(0);

12 
	}
}

	@ecf/forkprob1.c

2 
	~"cßµ.h
"

4 
	$maö
()

6 
i
;

8 
i
 = 0; i < 2; i++)

9 
	`F‹k
();

10 
	`¥ötf
("hello\n");

11 
	`exô
(0);

12 
	}
}

	@ecf/forkprob2.c

2 
	~"cßµ.h
"

4 
	$íd
()

6 
	`¥ötf
("2"); 
	`fÊush
(
°dout
);

7 
	}
}

9 
	$maö
()

11 i‡(
	`F‹k
() == 0)

12 
	`©exô
(
íd
);

13 i‡(
	`F‹k
() == 0) {

14 
	`¥ötf
("0"); 
	`fÊush
(
°dout
);

17 
	`¥ötf
("1"); 
	`fÊush
(
°dout
);

19 
	`exô
(0);

20 
	}
}

	@ecf/forkprob3.c

2 
	~"cßµ.h
"

4 
	$maö
()

6 
x
 = 3;

8 i‡(
	`F‹k
() != 0)

9 
	`¥ötf
("x=%d\n", ++
x
);

11 
	`¥ötf
("x=%d\n", --
x
);

12 
	`exô
(0);

13 
	}
}

	@ecf/forkprob4.c

2 
	~"cßµ.h
"

4 
	$doô
()

6 
	`F‹k
();

7 
	`F‹k
();

8 
	`¥ötf
("hello\n");

10 
	}
}

12 
	$maö
()

14 
	`doô
();

15 
	`¥ötf
("hello\n");

16 
	`exô
(0);

17 
	}
}

	@ecf/forkprob5.c

2 
	~"cßµ.h
"

4 
	$doô
()

6 i‡(
	`F‹k
() == 0) {

7 
	`F‹k
();

8 
	`¥ötf
("hello\n");

9 
	`exô
(0);

12 
	}
}

14 
	$maö
()

16 
	`doô
();

17 
	`¥ötf
("hello\n");

18 
	`exô
(0);

19 
	}
}

	@ecf/forkprob6.c

2 
	~"cßµ.h
"

4 
	$doô
()

6 i‡(
	`F‹k
() == 0) {

7 
	`F‹k
();

8 
	`¥ötf
("hello\n");

12 
	}
}

14 
	$maö
()

16 
	`doô
();

17 
	`¥ötf
("hello\n");

18 
	`exô
(0);

19 
	}
}

	@ecf/forkprob7.c

2 
	~"cßµ.h
"

3 
	gcou¡î
 = 1;

5 
	$maö
()

7 i‡(
	`f‹k
() == 0) {

8 
cou¡î
--;

9 
	`exô
(0);

12 
	`Waô
(
NULL
);

13 
	`¥ötf
("cou¡î = %d\n", ++
cou¡î
);

15 
	`exô
(0);

16 
	}
}

	@ecf/forkprob8.c

1 
	~"cßµ.h
"

4 
	$foo
(
n
)

6 
i
;

8 
i
 = 0; i < 
n
; i++)

9 
	`F‹k
();

10 
	`¥ötf
("hello\n");

11 
	`exô
(0);

12 
	}
}

15 
	$maö
(
¨gc
, **
¨gv
)

17 i‡(
¨gc
 < 2) {

18 
	`¥ötf
("ußge: %†<n>\n", 
¨gv
[0]);

19 
	`exô
(0);

21 
	`foo
(
	`©oi
(
¨gv
[1]));

22 
	`exô
(0);

23 
	}
}

	@ecf/fragments.c

1 
	~"cßµ.h
"

3 
	$ö£π
(*
li°
, 
ôem
)

5 
	}
}

7 
	$‰agmíts
()

9 
pid
=0;

10 
sig£t_t
 
mask
, 
¥ev
;

13 vﬁ©ûê
sig_©omic_t
 
Êag
;

17 vﬁ©ûê
g
;

20 
˙t
 = 0;

21 
Êag
 = 0;

22 
Êag
 = 
˙t
;

23 
˙t
 = 
Êag
;

26 !
pid
)

27 
	`∑u£
();

31 !
pid
)

32 
	`¶ìp
(1);

36 
	`sig¥ocmask
(
SIG_BLOCK
, &
mask
, &
¥ev
);

37 
	`∑u£
();

38 
	`sig¥ocmask
(
SIG_SETMASK
, &
¥ev
, 
NULL
);

42 i‡((
pid
 = 
	`f‹k
()) < 0) {

43 
	`Ârötf
(
°dîr
, "f‹kÉº‹: %s\n", 
	`°ªº‹
(
î∫o
));

44 
	`exô
(0);

49 i‡((
pid
 = 
	`f‹k
()) < 0)

50 
	`unix_îr‹
("forkÉrror");

54 
pid
 = 
	`F‹k
();

58 
	}
}

	@ecf/getpid.c

1 
	~"cßµ.h
"

3 
	$maö
()

5 
pid_t
 
pid
 = 
	`gëpid
();

6 
pid_t
 
µid
 = 
	`gëµid
();

8 
	`¥ötf
("pid=%dÖpid=%d\n", 
pid
, 
µid
);

10 
	`exô
(0);

11 
	}
}

	@ecf/hello.c

1 
	~"cßµ.h
"

4 
	$maö
()

6 
	`wrôe
(1, "hello, world\n", 13);

7 
	`_exô
(0);

8 
	}
}

	@ecf/jmpbuf.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<£tjmp.h
>

5 
	$maö
()

7 
	`¥ötf
("sizeof(jmpbuf)=%ld\n", (
jmp_buf
));

8 
	`exô
(0);

9 
	}
}

	@ecf/kill.c

2 
	~"cßµ.h
"

4 
	$maö
()

6 
pid_t
 
pid
;

9 i‡((
pid
 = 
	`F‹k
()) == 0) {

10 
	`Pau£
();

11 
	`¥ötf
("control shouldÇeverÑeach here!\n");

12 
	`exô
(0);

16 
	`Kûl
(
pid
, 
SIGKILL
);

17 
	`exô
(0);

18 
	}
}

	@ecf/myecho.c

2 
	~"cßµ.h
"

4 
	$maö
(
¨gc
, *
¨gv
[], *
ívp
[])

6 
i
;

8 
	`¥ötf
("Command-lineárguments:\n");

9 
i
=0; 
¨gv
[i] !
NULL
; i++)

10 
	`¥ötf
("árgv[%2d]: %s\n", 
i
, 
¨gv
[i]);

12 
	`¥ötf
("\n");

13 
	`¥ötf
("Environment variables:\n");

14 
i
=0; 
ívp
[i] !
NULL
; i++)

15 
	`¥ötf
("Énvp[%2d]: %s\n", 
i
, 
ívp
[i]);

17 
	`exô
(0);

18 
	}
}

	@ecf/orphan.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<uni°d.h
>

5 
	$maö
()

7 i‡(!
	`f‹k
()) {

10 
	`exô
(0);

11 
	}
}

	@ecf/pg.c

1 
	~"cßµ.h
"

3 
pid_t
 
gëpgid
’id_à
pid
);

5 
	$h™dÀr
(
sig
)

7 i‡(
sig
 =
SIGINT
)

8 
	`¥ötf
("pg :Öid[%5d]Ögid[%5d]:Ñeceived SIGINT\n",

9 
	`gëpid
(), 
	`gëpgΩ
());

10 i‡(
sig
 =
SIGTSTP
)

11 
	`¥ötf
("pg :Öid[%5d]Ögid[%5d]:Ñeceived SIGTSTP\n",

12 
	`gëpid
(), 
	`gëpgΩ
());

14 
	`¥ötf
("pg : unknow¿sig«l: %d\n", 
sig
);

16 
	}
}

18 
	$maö
()

20 
	`Sig«l
(
SIGINT
, 
h™dÀr
);

23 i‡(
	`F‹k
() == 0) {

24 
	`Execve
("pgchûd", 
NULL
, NULL);

27 
	`¥ötf
("pg :Öid[%5d]Öpid[%5d]Ögid[%5d]Öpgid[%5d]: hello\n",

28 
	`gëpid
(), 
	`gëµid
(), 
	`gëpgΩ
(), 
	`gëpgid
(getppid()));

29 
	`∑u£
();

30 
	`exô
(0);

31 
	}
}

	@ecf/pgchild.c

1 
	~"cßµ.h
"

3 
	$h™dÀr
(
sig
)

5 i‡(
sig
 =
SIGINT
)

6 
	`¥ötf
("pgchild:Öid[%5d]Ögid[%5d]:Ñeceived SIGINT\n",

7 
	`gëpid
(), 
	`gëpgΩ
());

8 i‡(
sig
 =
SIGTSTP
)

9 
	`¥ötf
("pgchild:Öid[%5d]Ögid[%5d]:Ñeceived SIGTSTP\n",

10 
	`gëpid
(), 
	`gëpgΩ
());

12 
	`¥ötf
("pgchûd: unknow¿sig«l: %d\n", 
sig
);

14 
	}
}

16 
	$maö
()

18 
	`Sig«l
(
SIGINT
, 
h™dÀr
);

19 
	`Sig«l
(
SIGTSTP
, 
h™dÀr
);

21 
	`¥ötf
("pgchild:Öid[%5d]Öpid[%5d]Ögid[%5d]Öpgid[%5d]: hello\n",

22 
	`gëpid
(), 
	`gëµid
(), 
	`gëpgΩ
(), 
	`gëpgid
(getppid()));

23 
	`∑u£
();

24 
	`exô
(0);

25 
	}
}

	@ecf/procmask.c

1 
	~"cßµ.h
"

3 
	$öôjobs
()

5 
	}
}

7 
	$addjob
(
pid
)

9 
	}
}

11 
	$dñëejob
(
pid
)

13 
	}
}

16 
	$h™dÀr
(
sig
)

18 
pid_t
 
pid
;

19 (
pid
 = 
	`waôpid
(-1, 
NULL
, 0)) > 0)

20 
	`dñëejob
(
pid
);

21 i‡(
î∫o
 !
ECHILD
)

22 
	`unix_îr‹
("waitpidÉrror");

23 
	}
}

25 
	$maö
(
¨gc
, **
¨gv
)

27 
pid
;

28 
sig£t_t
 
mask
;

30 
	`Sig«l
(
SIGCHLD
, 
h™dÀr
);

31 
	`öôjobs
();

34 
	`Sigem±y£t
(&
mask
);

35 
	`Sigadd£t
(&
mask
, 
SIGCHLD
);

36 
	`Sig¥ocmask
(
SIG_BLOCK
, &
mask
, 
NULL
);

39 i‡((
pid
 = 
	`F‹k
()) == 0) {

40 
	`Sig¥ocmask
(
SIG_UNBLOCK
, &
mask
, 
NULL
);

41 
	`Execve
("/bö/ls", 
¨gv
, 
NULL
);

45 
	`addjob
(
pid
);

46 
	`Sig¥ocmask
(
SIG_UNBLOCK
, &
mask
, 
NULL
);

48 
	`exô
(0);

49 
	}
}

	@ecf/procmask1.c

1 
	~"cßµ.h
"

3 
	$öôjobs
()

5 
	}
}

7 
	$addjob
(
pid
)

9 
	}
}

11 
	$dñëejob
(
pid
)

13 
	}
}

17 
	$h™dÀr
(
sig
)

19 
ﬁdî∫o
 = 
î∫o
;

20 
sig£t_t
 
mask_Æl
, 
¥ev_Æl
;

21 
pid_t
 
pid
;

23 
	`Sigfûl£t
(&
mask_Æl
);

24 (
pid
 = 
	`waôpid
(-1, 
NULL
, 0)) > 0) {

25 
	`Sig¥ocmask
(
SIG_BLOCK
, &
mask_Æl
, &
¥ev_Æl
);

26 
	`dñëejob
(
pid
);

27 
	`Sig¥ocmask
(
SIG_SETMASK
, &
¥ev_Æl
, 
NULL
);

29 i‡(
î∫o
 !
ECHILD
)

30 
	`Sio_îr‹
("waitpidÉrror");

31 
î∫o
 = 
ﬁdî∫o
;

32 
	}
}

34 
	$maö
(
¨gc
, **
¨gv
)

36 
pid
;

37 
sig£t_t
 
mask_Æl
, 
¥ev_Æl
;

39 
	`Sigfûl£t
(&
mask_Æl
);

40 
	`Sig«l
(
SIGCHLD
, 
h™dÀr
);

41 
	`öôjobs
();

44 i‡((
pid
 = 
	`F‹k
()) == 0) {

45 
	`Execve
("/bö/d©e", 
¨gv
, 
NULL
);

47 
	`Sig¥ocmask
(
SIG_BLOCK
, &
mask_Æl
, &
¥ev_Æl
);

48 
	`addjob
(
pid
);

49 
	`Sig¥ocmask
(
SIG_SETMASK
, &
¥ev_Æl
, 
NULL
);

51 
	`exô
(0);

52 
	}
}

	@ecf/procmask2.c

1 
	~"cßµ.h
"

3 
	$öôjobs
()

5 
	}
}

7 
	$addjob
(
pid
)

9 
	}
}

11 
	$dñëejob
(
pid
)

13 
	}
}

16 
	$h™dÀr
(
sig
)

18 
ﬁdî∫o
 = 
î∫o
;

19 
sig£t_t
 
mask_Æl
, 
¥ev_Æl
;

20 
pid_t
 
pid
;

22 
	`Sigfûl£t
(&
mask_Æl
);

23 (
pid
 = 
	`waôpid
(-1, 
NULL
, 0)) > 0) {

24 
	`Sig¥ocmask
(
SIG_BLOCK
, &
mask_Æl
, &
¥ev_Æl
);

25 
	`dñëejob
(
pid
);

26 
	`Sig¥ocmask
(
SIG_SETMASK
, &
¥ev_Æl
, 
NULL
);

28 i‡(
î∫o
 !
ECHILD
)

29 
	`Sio_îr‹
("waitpidÉrror");

30 
î∫o
 = 
ﬁdî∫o
;

31 
	}
}

33 
	$maö
(
¨gc
, **
¨gv
)

35 
pid
;

36 
sig£t_t
 
mask_Æl
, 
mask_⁄e
, 
¥ev_⁄e
;

38 
	`Sigfûl£t
(&
mask_Æl
);

39 
	`Sigem±y£t
(&
mask_⁄e
);

40 
	`Sigadd£t
(&
mask_⁄e
, 
SIGCHLD
);

41 
	`Sig«l
(
SIGCHLD
, 
h™dÀr
);

42 
	`öôjobs
();

45 
	`Sig¥ocmask
(
SIG_BLOCK
, &
mask_⁄e
, &
¥ev_⁄e
);

46 i‡((
pid
 = 
	`F‹k
()) == 0) {

47 
	`Sig¥ocmask
(
SIG_SETMASK
, &
¥ev_⁄e
, 
NULL
);

48 
	`Execve
("/bö/d©e", 
¨gv
, 
NULL
);

50 
	`Sig¥ocmask
(
SIG_BLOCK
, &
mask_Æl
, 
NULL
);

51 
	`addjob
(
pid
);

52 
	`Sig¥ocmask
(
SIG_SETMASK
, &
¥ev_⁄e
, 
NULL
);

54 
	`exô
(0);

55 
	}
}

	@ecf/psignal.c

1 
	~"cßµ.h
"

3 
	$maö
()

5 
i
;

6 
buf
[128];

8 
i
 = 1; i < 31; i++) {

9 
	`•rötf
(
buf
, "%2d", 
i
);

10 
	`psig«l
(
i
, 
buf
);

13 
	}
}

	@ecf/restart.c

2 
	~"cßµ.h
"

4 
sigjmp_buf
 
	gbuf
;

6 
	$h™dÀr
(
sig
)

8 
	`sigl⁄gjmp
(
buf
, 1);

9 
	}
}

11 
	$maö
()

13 i‡(!
	`sig£tjmp
(
buf
, 1)) {

14 
	`Sig«l
(
SIGINT
, 
h™dÀr
);

15 
	`Sio_puts
("starting\n");

18 
	`Sio_puts
("restarting\n");

21 
	`SÀï
(1);

22 
	`Sio_puts
("processing...\n");

24 
	`exô
(0);

25 
	}
}

	@ecf/rfork-driver.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

4 
	#ITERS
 10

	)

6 
	$maö
()

8 
pid_t
 
pid
;

9 
i
;

11 
i
 = 0; i < 
ITERS
; i++) {

12 
	`¥ötf
("Te° %d\n", 
i
);

13 
	`fÊush
(
°dout
);

16 i‡(
	`F‹k
() == 0) {

17 
	`¥ötf
("C%d\n", 
i
);

18 
	`fÊush
(
°dout
);

19 
	`exô
(0);

24 
	`¥ötf
("P%d\n", 
i
);

25 
	`fÊush
(
°dout
);

27 
	`fÊush
(
°dout
);

28 
	`waô
();

29 
	`fÊush
(
°dout
);

32 
	`¥ötf
("\n");

33 
	`fÊush
(
°dout
);

34 
	`exô
(0);

35 
	}
}

	@ecf/rfork.c

6 
	~<°dio.h
>

7 
	~<°dlib.h
>

8 
	~<uni°d.h
>

9 
	~<sys/time.h
>

10 
	~<sys/ty≥s.h
>

13 
	#MAX_SLEEP
 100000

	)

16 
	#CONVERT
(
vÆ
Ë((()vÆ)/()
RAND_MAX
)

	)

18 
pid_t
 
	$F‹k
()

20 
timevÆ
 
time
;

21 
boﬁ
, 
£cs
;

22 
pid_t
 
pid
;

25 
	`gëtimeofday
(&
time
, 
NULL
);

26 
	`§™d
(
time
.
tv_u£c
);

29 
boﬁ
 = ()(
	`CONVERT
(
	`ønd
()) + 0.5);

30 
£cs
 = ()(
	`CONVERT
(
	`ønd
()Ë* 
MAX_SLEEP
);

33 i‡((
pid
 = 
	`f‹k
()) < 0)

34  
pid
;

37 i‡(
pid
 == 0) {

38 if(
boﬁ
) {

39 
	`u¶ìp
(
£cs
);

43 i‡(!
boﬁ
) {

44 
	`u¶ìp
(
£cs
);

49  
pid
;

50 
	}
}

	@ecf/setjmp.c

2 
	~"cßµ.h
"

4 
jmp_buf
 
	gbuf
;

6 
	gîr‹1
 = 0;

7 
	gîr‹2
 = 1;

9 
foo
(), 
b¨
();

11 
	$maö
()

13 
	`£tjmp
(
buf
)) {

15 
	`foo
();

18 
	`¥ötf
("DetectedánÉrror1 condition in foo\n");

21 
	`¥ötf
("DetectedánÉrror2 condition in foo\n");

24 
	`¥ötf
("UnknownÉrror condition in foo\n");

26 
	`exô
(0);

27 
	}
}

30 
	$foo
()

32 i‡(
îr‹1
)

33 
	`l⁄gjmp
(
buf
, 1);

34 
	`b¨
();

35 
	}
}

37 
	$b¨
()

39 i‡(
îr‹2
)

40 
	`l⁄gjmp
(
buf
, 2);

41 
	}
}

	@ecf/shell.c

7 
	~"cßµ.h
"

9 
	#MAXARGS
 128

	)

10 
	#MAXJOBS
 16

	)

13 
	#UNDEF
 0

	)

14 
	#FG
 1

	)

15 
	#BG
 2

	)

16 
	#ST
 3

	)

28 
	g¥om±
[] = "> ";

29 
	gvîbo£
 = 0;

30 
	gsbuf
[
MAXLINE
];

32 
	sjob_t
 {

33 
pid_t
 
	mpid
;

34 
	m°©e
;

35 
	mcmdlöe
[
MAXLINE
];

37 
job_t
 
	gjobs
[
MAXJOBS
];

46 
	$˛órjob
(
job_t
 *
job
) {

47 
job
->
pid
 = 0;

48 
job
->
°©e
 = 
UNDEF
;

49 
job
->
cmdlöe
[0] = '\0';

50 
	}
}

53 
	$öôjobs
(
job_t
 *
jobs
) {

54 
i
;

56 
i
 = 0; i < 
MAXJOBS
; i++)

57 
	`˛órjob
(&
jobs
[
i
]);

58 
	}
}

61 
	$addjob
(
job_t
 *
jobs
, 
pid_t
 
pid
, 
°©e
, *
cmdlöe
)

63 
i
;

65 
i
 = 0; i < 
MAXJOBS
; i++) {

66 i‡(
jobs
[
i
].
pid
 == 0) {

67 
jobs
[
i
].
pid
 =Öid;

68 
jobs
[
i
].
°©e
 = state;

69 
	`°r˝y
(
jobs
[
i
].
cmdlöe
, cmdline);

73 
	`¥ötf
("TriedÅo createÅoo many jobs\n");

75 
	}
}

78 
	$dñëejob
(
job_t
 *
jobs
, 
pid_t
 
pid
)

80 
i
;

82 
i
 = 0; i < 
MAXJOBS
; i++) {

83 i‡(
jobs
[
i
].
pid
 ==Öid) {

84 
	`˛órjob
(&
jobs
[
i
]);

89 
	}
}

92 
	$upd©ejob
(
job_t
 *
jobs
, 
pid_t
 
pid
, 
°©e
)

94 
i
;

96 
i
 = 0; i < 
MAXJOBS
; i++) {

97 i‡(
jobs
[
i
].
pid
 ==Öid) {

98 
jobs
[
i
].
°©e
 = state;

102 
	`¥ötf
("Job %dÇŸ found\n", 
pid
);

104 
	}
}

107 
pid_t
 
	$fgpid
(
job_t
 *
jobs
) {

108 
i
;

110 
i
 = 0; i < 
MAXJOBS
; i++)

111 i‡(
jobs
[
i
].
°©e
 =
FG
)

112  
jobs
[
i
].
pid
;

114 
	}
}

117 
job_t
 *
	$gëjob
(
job_t
 *
jobs
, 
pid_t
 
pid
) {

118 
i
;

120 
i
 = 0; i < 
MAXJOBS
; i++)

121 i‡(
jobs
[
i
].
pid
 ==Öid)

122  &
jobs
[
i
];

123  
NULL
;

124 
	}
}

127 
	$li°jobs
(
job_t
 *
jobs
) {

128 
i
;

130 
i
 = 0; i < 
MAXJOBS
; i++) {

131 i‡(
jobs
[
i
].
pid
 != 0) {

134 
	`¥ötf
("%5d ", ()
jobs
[
i
].
pid
);

137 
jobs
[
i
].
°©e
) {

138 
BG
:

139 
	`¥ötf
("Running ");

141 
FG
:

142 
	`¥ötf
("Foreground ");

144 
ST
:

145 
	`¥ötf
("Stopped ");

148 
	`¥ötf
("internalÉrror: job[%d].state=%d ",

149 
i
, 
jobs
[i].
°©e
);

153 
	`¥ötf
("%s", 
jobs
[
i
].
cmdlöe
);

156 
	}
}

164 
	$∑r£löe
(c⁄° *
cmdlöe
, **
¨gv
)

166 
¨øy
[
MAXLINE
];

167 *
buf
 = 
¨øy
;

168 *
dñim
;

169 
¨gc
;

170 
bg
;

172 
	`°r˝y
(
buf
, 
cmdlöe
);

173 
buf
[
	`°æí
(buf)-1] = ' ';

174 *
buf
 && (*buf == ' '))

175 
buf
++;

178 
¨gc
 = 0;

179 (
dñim
 = 
	`°rchr
(
buf
, ' '))) {

180 
¨gv
[
¨gc
++] = 
buf
;

181 *
dñim
 = '\0';

182 
buf
 = 
dñim
 + 1;

183 *
buf
 && (*buf == ' '))

184 
buf
++;

186 
¨gv
[
¨gc
] = 
NULL
;

188 i‡(
¨gc
 == 0)

192 i‡((
bg
 = (*
¨gv
[
¨gc
-1] == '&')) != 0)

193 
¨gv
[--
¨gc
] = 
NULL
;

195  
bg
;

196 
	}
}

201 
	$waôfg
(
pid_t
 
pid
)

203 
°©us
;

206 i‡(
	`waôpid
(
pid
, &
°©us
, 
WUNTRACED
) < 0)

207 
	`unix_îr‹
("waitfg: waitpidÉrror");

210 i‡(
	`WIFSTOPPED
(
°©us
)) {

211 
	`•rötf
(
sbuf
, "Job %d st›≥d by sig«l", 
pid
);

212 
	`psig«l
(
	`WSTOPSIG
(
°©us
), 
sbuf
);

213 
	`upd©ejob
(
jobs
, 
pid
, 
ST
);

219 i‡(
	`WIFSIGNALED
(
°©us
)) {

220 
	`•rötf
(
sbuf
, "Job %dÅîmö©ed by sig«l", 
pid
);

221 
	`psig«l
(
	`WTERMSIG
(
°©us
), 
sbuf
);

223 
	`dñëejob
(
jobs
, 
pid
);

224 i‡(
vîbo£
)

225 
	`¥ötf
("waôfg: job %d dñëed\n", 
pid
);

227 
	}
}

232 
	$buûtö_comm™d
(**
¨gv
) {

233 *
cmd
 = 
¨gv
[0];

236 i‡(!
	`°rcmp
(
cmd
, "jobs")) {

237 
	`li°jobs
(
jobs
);

242 i‡(!
	`°rcmp
(
cmd
, "bg") || !strcmp(cmd, "fg")) {

243 
pid
;

244 
job_t
 *
jobp
;

247 i‡(
¨gv
[1] =
NULL
) {

248 
	`¥ötf
("%†comm™dÇìd†PIDárgumít\n", 
cmd
);

251 
pid
 = 
	`©oi
(
¨gv
[1]);

253 i‡((
jobp
 = 
	`gëjob
(
jobs
, 
pid
)Ë!
NULL
) {

254 i‡(!
	`°rcmp
(
cmd
, "bg")) {

255 
	`Kûl
(
pid
, 
SIGCONT
);

256 
	`upd©ejob
(
jobs
, 
pid
, 
BG
);

257 
	`¥ötf
("%d %s", 
pid
, 
jobs
->
cmdlöe
);

259 i‡(!
	`°rcmp
(
cmd
, "fg")) {

260 
	`Kûl
(
pid
, 
SIGCONT
);

261 
	`upd©ejob
(
jobs
, 
pid
, 
FG
);

262 
	`waôfg
(
pid
);

266 
	`¥ötf
("Job %dÇŸ found\n", 
pid
);

271 i‡(!
	`°rcmp
(
¨gv
[0], "&")) {

277 
	}
}

286 
	$sigchld_h™dÀr
(
sig
)

288 
pid_t
 
pid
;

289 
°©us
;

291 i‡(
vîbo£
)

292 
	`¥ötf
("sigchld_handler:Éntering \n");

301 (
pid
 = 
	`waôpid
(-1, &
°©us
, 
WNOHANG
)) > 0) {

302 
	`dñëejob
(
jobs
, 
pid
);

303 i‡(
vîbo£
)

304 
	`¥ötf
("sigchld_h™dÀr: job %d dñëed\n", 
pid
);

315 i‡(!((
pid
 =0Ë|| (pid =-1 && 
î∫o
 =
ECHILD
)))

316 
	`unix_îr‹
("sigchld_handler waitÉrror");

318 i‡(
vîbo£
)

319 
	`¥ötf
("sigchld_handler:Éxiting\n");

322 
	}
}

328 
	$sigöt_h™dÀr
(
sig
)

330 i‡(
vîbo£
)

331 
	`¥ötf
("sigint_handler: shell caught SIGINT\n");

332 
	}
}

338 
	$sigt°p_h™dÀr
(
sig
)

340 i‡(
vîbo£
)

341 
	`¥ötf
("sigtstp_handler: shell caught SIGTSTP\n");

342 
	}
}

347 
	$evÆ
(*
cmdlöe
)

349 *
¨gv
[
MAXARGS
];

350 
bg
;

351 
pid_t
 
pid
;

354 
bg
 = 
	`∑r£löe
(
cmdlöe
, 
¨gv
);

355 i‡(
¨gv
[0] =
NULL
)

357 i‡(!
	`°rcmp
(
¨gv
[0], "quit"))

358 
	`exô
(0);

360 i‡(!
	`buûtö_comm™d
(
¨gv
)) {

362 i‡((
pid
 = 
	`F‹k
()) == 0) {

366 i‡(
bg
) {

367 
	`Sig«l
(
SIGINT
, 
SIG_IGN
);

368 
	`Sig«l
(
SIGTSTP
, 
SIG_IGN
);

371 i‡(
	`execve
(
¨gv
[0],árgv, 
ívú⁄
) < 0) {

372 
	`¥ötf
("%s: Comm™dÇŸ found.\n", 
¨gv
[0]);

373 
	`fÊush
(
°dout
);

374 
	`exô
(0);

379 
	`addjob
(
jobs
, 
pid
, (
bg
 =1 ? 
BG
 : 
FG
), 
cmdlöe
);

380 i‡(!
bg
)

381 
	`waôfg
(
pid
);

383 
	`¥ötf
("%d %s", 
pid
, 
cmdlöe
);

386 
	}
}

388 
	$ußge
()

390 
	`Ârötf
(
°dîr
, "usage: shell [-v]\n");

391 
	`exô
(0);

392 
	}
}

397 
	$maö
(
¨gc
, **
¨gv
)

399 
cmdlöe
[
MAXLINE
];

401 i‡(
¨gc
 > 2)

402 
	`ußge
();

403 i‡(
¨gc
 == 2) {

404 i‡(!
	`°rcmp
(
¨gv
[1], "-v"))

405 
vîbo£
 = 1;

407 
	`ußge
();

410 
	`Sig«l
(
SIGINT
, 
sigöt_h™dÀr
);

411 
	`Sig«l
(
SIGCHLD
, 
sigchld_h™dÀr
);

412 
	`Sig«l
(
SIGTSTP
, 
sigt°p_h™dÀr
);

414 
	`öôjobs
(
jobs
);

419 
	`¥ötf
("%s", 
¥om±
);

420 
	`Fgës
(
cmdlöe
, 
MAXLINE
, 
°dö
);

421 i‡(
	`„of
(
°dö
))

422 
	`exô
(0);

425 
	`evÆ
(
cmdlöe
);

428 
	`exô
(0);

429 
	}
}

	@ecf/shellex.c

2 
	~"cßµ.h
"

3 
	#MAXARGS
 128

	)

6 
evÆ
(*
cmdlöe
);

7 
∑r£löe
(*
buf
, **
¨gv
);

8 
buûtö_comm™d
(**
¨gv
);

10 
	$maö
()

12 
cmdlöe
[
MAXLINE
];

16 
	`¥ötf
("> ");

17 
	`Fgës
(
cmdlöe
, 
MAXLINE
, 
°dö
);

18 i‡(
	`„of
(
°dö
))

19 
	`exô
(0);

22 
	`evÆ
(
cmdlöe
);

24 
	}
}

29 
	$evÆ
(*
cmdlöe
)

31 *
¨gv
[
MAXARGS
];

32 
buf
[
MAXLINE
];

33 
bg
;

34 
pid_t
 
pid
;

36 
	`°r˝y
(
buf
, 
cmdlöe
);

37 
bg
 = 
	`∑r£löe
(
buf
, 
¨gv
);

38 i‡(
¨gv
[0] =
NULL
)

41 i‡(!
	`buûtö_comm™d
(
¨gv
)) {

42 i‡((
pid
 = 
	`F‹k
()) == 0) {

43 i‡(
	`execve
(
¨gv
[0],árgv, 
ívú⁄
) < 0) {

44 
	`¥ötf
("%s: Comm™dÇŸ found.\n", 
¨gv
[0]);

45 
	`exô
(0);

50 i‡(!
bg
) {

51 
°©us
;

52 i‡(
	`waôpid
(
pid
, &
°©us
, 0) < 0)

53 
	`unix_îr‹
("waitfg: waitpidÉrror");

56 
	`¥ötf
("%d %s", 
pid
, 
cmdlöe
);

59 
	}
}

62 
	$buûtö_comm™d
(**
¨gv
)

64 i‡(!
	`°rcmp
(
¨gv
[0], "quit"))

65 
	`exô
(0);

66 i‡(!
	`°rcmp
(
¨gv
[0], "&"))

69 
	}
}

74 
	$∑r£löe
(*
buf
, **
¨gv
)

76 *
dñim
;

77 
¨gc
;

78 
bg
;

80 
buf
[
	`°æí
(buf)-1] = ' ';

81 *
buf
 && (*buf == ' '))

82 
buf
++;

85 
¨gc
 = 0;

86 (
dñim
 = 
	`°rchr
(
buf
, ' '))) {

87 
¨gv
[
¨gc
++] = 
buf
;

88 *
dñim
 = '\0';

89 
buf
 = 
dñim
 + 1;

90 *
buf
 && (*buf == ' '))

91 
buf
++;

93 
¨gv
[
¨gc
] = 
NULL
;

95 i‡(
¨gc
 == 0)

99 i‡((
bg
 = (*
¨gv
[
¨gc
-1] == '&')) != 0)

100 
¨gv
[--
¨gc
] = 
NULL
;

102  
bg
;

103 
	}
}

	@ecf/sigbus.c

1 
	~"cßµ.h
"

3 
	#START
 5

	)

4 
	#END
 1<<30

	)

5 
	#INCR
 128

	)

7 *
°rsig«l
(
sig
);

9 
	gi
;

11 
	$h™dÀr
(
sig
) {

12 
	`¥ötf
("%ld\n", 
i
);

13 i‡(
sig
 =
SIGBUS
) {

14 
	`¥ötf
("ˇughà%s\n", 
	`°rsig«l
(
sig
));

15 
	`exô
(0);

18 
	}
}

20 
	$maö
() {

21 vﬁ©ûê
x
;

26 
i
 = 
START
; i < 
END
; i +
INCR
) {

27 
x
 = *(*)
i
;

28 *(*)
i
 = 
x
;

31 
	`exô
(0);

32 
	}
}

	@ecf/sigfpe.c

1 
	~"cßµ.h
"

4 
	$maö
() {

5 
a
 = 1;

6 
b
 = 0;

7 
c
 = 
a
/
b
;

9 
	`¥ötf
("c=%d\n", 
c
);

10 
	`exô
(0);

11 
	}
}

	@ecf/sigint.c

2 
	~"cßµ.h
"

4 
	$sigöt_h™dÀr
(
sig
)

6 
	`¥ötf
("Caught SIGINT!\n");

7 
	`exô
(0);

8 
	}
}

10 
	$maö
()

13 i‡(
	`sig«l
(
SIGINT
, 
sigöt_h™dÀr
Ë=
SIG_ERR
)

14 
	`unix_îr‹
("signalÉrror");

16 
	`∑u£
();

19 
	}
}

	@ecf/sigintsafe.c

2 
	~"cßµ.h
"

4 
	$sigöt_h™dÀr
(
sig
)

6 
	`Sio_puts
("Caught SIGINT!\n");

7 
	`_exô
(0);

8 
	}
}

11 
	$maö
()

14 i‡(
	`sig«l
(
SIGINT
, 
sigöt_h™dÀr
Ë=
SIG_ERR
)

15 
	`unix_îr‹
("signalÉrror");

17 
	`∑u£
();

20 
	}
}

	@ecf/signal1.c

1 
	~"cßµ.h
"

5 
	$h™dÀr1
(
sig
)

7 
ﬁdî∫o
 = 
î∫o
;

9 i‡((
	`waôpid
(-1, 
NULL
, 0)) < 0)

10 
	`sio_îr‹
("waitpidÉrror");

11 
	`Sio_puts
("HandlerÑeaped child\n");

12 
	`SÀï
(1);

13 
î∫o
 = 
ﬁdî∫o
;

14 
	}
}

16 
	$maö
()

18 
i
, 
n
;

19 
buf
[
MAXBUF
];

21 i‡(
	`sig«l
(
SIGCHLD
, 
h™dÀr1
Ë=
SIG_ERR
)

22 
	`unix_îr‹
("signalÉrror");

25 
i
 = 0; i < 3; i++) {

26 i‡(
	`F‹k
() == 0) {

27 
	`¥ötf
("Hñlÿ‰om chûd %d\n", ()
	`gëpid
());

28 
	`exô
(0);

33 i‡((
n
 = 
	`ªad
(
STDIN_FILENO
, 
buf
, (buf))) < 0)

34 
	`unix_îr‹
("read");

36 
	`¥ötf
("ParentÖrocessing input\n");

40 
	`exô
(0);

41 
	}
}

	@ecf/signal2.c

1 
	~"cßµ.h
"

4 
	$h™dÀr2
(
sig
)

6 
ﬁdî∫o
 = 
î∫o
;

8 
	`waôpid
(-1, 
NULL
, 0) > 0) {

9 
	`Sio_puts
("HandlerÑeaped child\n");

11 i‡(
î∫o
 !
ECHILD
)

12 
	`Sio_îr‹
("waitpidÉrror");

13 
	`SÀï
(1);

14 
î∫o
 = 
ﬁdî∫o
;

15 
	}
}

18 
	$maö
()

20 
i
, 
n
;

21 
buf
[
MAXBUF
];

23 i‡(
	`sig«l
(
SIGCHLD
, 
h™dÀr2
Ë=
SIG_ERR
)

24 
	`unix_îr‹
("signalÉrror");

27 
i
 = 0; i < 3; i++) {

28 i‡(
	`F‹k
() == 0) {

29 
	`¥ötf
("Hñlÿ‰om chûd %d\n", ()
	`gëpid
());

30 
	`exô
(0);

35 i‡((
n
 = 
	`ªad
(
STDIN_FILENO
, 
buf
, (buf))) < 0)

36 
	`unix_îr‹
("read");

38 
	`¥ötf
("ParentÖrocessing input\n");

42 
	`exô
(0);

43 
	}
}

	@ecf/signal3.c

2 
	~"cßµ.h
"

4 
	$h™dÀr2
(
sig
)

6 
pid_t
 
pid
;

7 
buf
[
MAXBUF
];

9 (
pid
 = 
	`waôpid
(-1, 
NULL
, 0)) > 0) {

10 
	`¢¥ötf
(
buf
, 
MAXBUF
, "H™dÀ∏ª≠ed chûd %d\n", ()
pid
);

11 
	`wrôe
(1, 
buf
, 
	`°æí
(buf));

13 i‡(
î∫o
 !
ECHILD
)

14 
	`unix_îr‹
("waitpidÉrror");

15 
	`SÀï
(2);

17 
	}
}

19 
	$maö
() {

20 
i
, 
n
;

21 
buf
[
MAXBUF
];

22 
pid_t
 
pid
;

24 i‡(
	`sig«l
(
SIGCHLD
, 
h™dÀr2
Ë=
SIG_ERR
)

25 
	`unix_îr‹
("signalÉrror");

28 
i
 = 0; i < 3; i++) {

29 
pid
 = 
	`F‹k
();

30 i‡(
pid
 == 0) {

31 
	`¥ötf
("Hñlÿ‰om chûd %d\n", ()
	`gëpid
());

32 
	`SÀï
(1);

33 
	`exô
(0);

38 (
n
 = 
	`ªad
(
STDIN_FILENO
, 
buf
, (buf))) < 0)

39 i‡(
î∫o
 !
EINTR
)

40 
	`unix_îr‹
("readÉrror");

42 
	`¥ötf
("ParentÖrocessing input\n");

46 
	`exô
(0);

47 
	}
}

	@ecf/signal4.c

2 
	~"cßµ.h
"

4 
	$h™dÀr2
(
sig
)

6 
pid_t
 
pid
;

8 (
pid
 = 
	`waôpid
(-1, 
NULL
, 0)) > 0)

9 
	`¥ötf
("H™dÀ∏ª≠ed chûd %d\n", ()
pid
);

10 i‡(
î∫o
 !
ECHILD
)

11 
	`unix_îr‹
("waitpidÉrror");

12 
	`SÀï
(2);

14 
	}
}

16 
	$maö
()

18 
i
, 
n
;

19 
buf
[
MAXBUF
];

20 
pid_t
 
pid
;

22 
	`Sig«l
(
SIGCHLD
, 
h™dÀr2
);

25 
i
 = 0; i < 3; i++) {

26 
pid
 = 
	`F‹k
();

27 i‡(
pid
 == 0) {

28 
	`¥ötf
("Hñlÿ‰om chûd %d\n", ()
	`gëpid
());

29 
	`SÀï
(1);

30 
	`exô
(0);

35 i‡((
n
 = 
	`ªad
(
STDIN_FILENO
, 
buf
, (buf))) < 0)

36 
	`unix_îr‹
("readÉrror");

38 
	`¥ötf
("ParentÖrocessing input\n");

41 
	`exô
(0);

42 
	}
}

	@ecf/signalprob0.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<uni°d.h
>

4 
	~<waô.h
>

5 
	~<sig«l.h
>

6 
	~"cßµ.h
"

9 vﬁ©ûê
	gcou¡î
 = 2;

11 
	$h™dÀr1
(
sig
)

13 
sig£t_t
 
mask
, 
¥ev_mask
;

15 
	`Sigfûl£t
(&
mask
);

16 
	`Sig¥ocmask
(
SIG_BLOCK
, &
mask
, &
¥ev_mask
);

17 
	`Sio_pué
(--
cou¡î
);

18 
	`Sig¥ocmask
(
SIG_SETMASK
, &
¥ev_mask
, 
NULL
);

20 
	`_exô
(0);

21 
	}
}

23 
	$maö
()

25 
pid_t
 
pid
;

26 
sig£t_t
 
mask
, 
¥ev_mask
;

28 
	`¥ötf
("%ld", 
cou¡î
);

29 
	`fÊush
(
°dout
);

31 
	`sig«l
(
SIGUSR1
, 
h™dÀr1
);

32 i‡((
pid
 = 
	`F‹k
()) == 0) {

35 
	`Kûl
(
pid
, 
SIGUSR1
);

36 
	`Waôpid
(-1, 
NULL
, 0);

38 
	`Sigfûl£t
(&
mask
);

39 
	`Sig¥ocmask
(
SIG_BLOCK
, &
mask
, &
¥ev_mask
);

40 
	`¥ötf
("%ld", ++
cou¡î
);

41 
	`Sig¥ocmask
(
SIG_SETMASK
, &
¥ev_mask
, 
NULL
);

43 
	`exô
(0);

44 
	}
}

	@ecf/sigsegv.c

1 
	~"cßµ.h
"

4 
	$maö
() {

6 *
a
 = 0;

7 
b
 = *
a
;

9 
	`¥ötf
("b=%d\n", 
b
);

10 
	`exô
(0);

11 
	}
}

	@ecf/sigsuspend.c

2 
	~"cßµ.h
"

4 vﬁ©ûê
sig_©omic_t
 
	gpid
;

6 
	$sigchld_h™dÀr
(
s
)

8 
ﬁdî∫o
 = 
î∫o
;

9 
pid
 = 
	`Waôpid
(-1, 
NULL
, 0);

10 
î∫o
 = 
ﬁdî∫o
;

11 
	}
}

13 
	$sigöt_h™dÀr
(
s
)

15 
	}
}

17 
	$maö
(
¨gc
, **
¨gv
)

19 
sig£t_t
 
mask
, 
¥ev
;

21 
	`Sig«l
(
SIGCHLD
, 
sigchld_h™dÀr
);

22 
	`Sig«l
(
SIGINT
, 
sigöt_h™dÀr
);

23 
	`Sigem±y£t
(&
mask
);

24 
	`Sigadd£t
(&
mask
, 
SIGCHLD
);

27 
	`Sig¥ocmask
(
SIG_BLOCK
, &
mask
, &
¥ev
);

28 i‡(
	`F‹k
() == 0)

29 
	`exô
(0);

32 
pid
 = 0;

33 !
pid
)

34 
	`Sigsu•íd
(&
¥ev
);

37 
	`Sig¥ocmask
(
SIG_SETMASK
, &
¥ev
, 
NULL
);

40 
	`¥ötf
(".");

42 
	`exô
(0);

43 
	}
}

	@ecf/snooze.c

2 
	~"cßµ.h
"

5 
	$h™dÀr
(
sig
)

8 
	}
}

11 
	$¢ooze
(
£cs
) {

12 
rc
 = 
	`¶ìp
(
£cs
);

14 
	`¥ötf
("SÀ± f‹ %d o‡%d secs.\n", 
£cs
-
rc
, secs);

15  
rc
;

16 
	}
}

19 
	$maö
(
¨gc
, **
¨gv
) {

21 i‡(
¨gc
 != 2) {

22 
	`Ârötf
(
°dîr
, "ußge: %†<£cs>\n", 
¨gv
[0]);

23 
	`exô
(0);

26 i‡(
	`sig«l
(
SIGINT
, 
h™dÀr
Ë=
SIG_ERR
)

27 
	`unix_îr‹
("signalÉrror\n");

28 ()
	`¢ooze
(
	`©oi
(
¨gv
[1]));

29 
	`exô
(0);

30 
	}
}

	@ecf/stack.c

6 
	~"cßµ.h
"

8 
	$maö
(
¨gc
, **
¨gv
, **
ívp
)

10 
i
;

13 
	`¥ötf
("&¨g¯ = %p\n", &
¨gc
);

14 
	`¥ötf
("&¨gv = %p\n", &
¨gv
);

15 
	`¥ötf
("&ív∞ = %p\n", &
ívp
);

16 
	`¥ötf
("&¨gv[] = %p\n", 
¨gv
);

17 
	`¥ötf
("&ívú⁄ = %p\n", &
ívú⁄
);

18 
	`¥ötf
("&ívú⁄[] = %p\n", 
ívú⁄
);

19 
	`¥ötf
("&ò = %p\n", &
i
);

20 
	`¥ötf
("ív∞ = %p\n", 
ívp
);

21 
	`¥ötf
("ívú⁄ = %p\n", 
ívú⁄
);

24 
	`¥ötf
("ArgumentÜist:\n");

25 
i
=0;

26 
¨gv
[
i
]) {

27 
	`¥ötf
(" %p: (%p)árgv[%2d]: %s\n",

28 &
¨gv
[
i
],árgv[i], i,árgv[i]);

29 
i
++;

33 
	`¥ötf
("EnvironmentÜist:\n");

34 
i
=0;

35 
ívú⁄
[
i
]) {

36 
	`¥ötf
(" %p: (%p)Énviron[%2d]: %s\n",

37 &
ívú⁄
[
i
],Énviron[i], i,Énviron[i]);

38 
i
++;

41 
	`exô
(0);

42 
	}
}

	@ecf/test.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

9 
	$maö
(
¨gc
, **
¨gv
) {

11 
	`¥ötf
("hñlÿ‰omÅe° (%d)\n", 
	`©oi
(
¨gv
[1]));

12 i‡(
¨gc
 == 1)

13 *(*)
maö
 = 0;

15 
	`exô
(
	`©oi
(
¨gv
[1]));

17 
	`exô
(0);

18 
	}
}

	@ecf/waitforsignal.c

2 
	~"cßµ.h
"

4 vﬁ©ûê
sig_©omic_t
 
	gpid
;

6 
	$sigchld_h™dÀr
(
s
)

8 
ﬁdî∫o
 = 
î∫o
;

9 
pid
 = 
	`Waôpid
(-1, 
NULL
, 0);

10 
î∫o
 = 
ﬁdî∫o
;

11 
	}
}

13 
	$sigöt_h™dÀr
(
s
)

15 
	}
}

17 
	$maö
(
¨gc
, **
¨gv
)

19 
sig£t_t
 
mask
, 
¥ev
;

21 
	`Sig«l
(
SIGCHLD
, 
sigchld_h™dÀr
);

22 
	`Sig«l
(
SIGINT
, 
sigöt_h™dÀr
);

23 
	`Sigem±y£t
(&
mask
);

24 
	`Sigadd£t
(&
mask
, 
SIGCHLD
);

27 
	`Sig¥ocmask
(
SIG_BLOCK
, &
mask
, &
¥ev
);

28 i‡(
	`F‹k
() == 0)

29 
	`exô
(0);

32 
pid
 = 0;

33 
	`Sig¥ocmask
(
SIG_SETMASK
, &
¥ev
, 
NULL
);

36 !
pid
)

40 
	`¥ötf
(".");

42 
	`exô
(0);

43 
	}
}

	@ecf/waitpid1.c

2 
	~"cßµ.h
"

3 
	#N
 2

	)

5 
	$maö
()

7 
°©us
, 
i
;

8 
pid_t
 
pid
;

11 
i
 = 0; i < 
N
; i++)

12 i‡((
pid
 = 
	`F‹k
()) == 0)

13 
	`exô
(100+
i
);

16 (
pid
 = 
	`waôpid
(-1, &
°©us
, 0)) > 0) {

17 i‡(
	`WIFEXITED
(
°©us
))

18 
	`¥ötf
("child %dÅerminatedÇormally withÉxit status=%d\n",

19 
pid
, 
	`WEXITSTATUS
(
°©us
));

21 
	`¥ötf
("chûd %dÅîmö©edábn‹mÆly\n", 
pid
);

25 i‡(
î∫o
 !
ECHILD
)

26 
	`unix_îr‹
("waitpidÉrror");

28 
	`exô
(0);

29 
	}
}

	@ecf/waitpid2.c

2 
	~"cßµ.h
"

3 
	#N
 2

	)

5 
	$maö
()

7 
°©us
, 
i
;

8 
pid_t
 
pid
[
N
], 
ªçid
;

11 
i
 = 0; i < 
N
; i++)

12 i‡((
pid
[
i
] = 
	`F‹k
()) == 0)

13 
	`exô
(100+
i
);

16 
i
 = 0;

17 (
ªçid
 = 
	`waôpid
(
pid
[
i
++], &
°©us
, 0)) > 0) {

18 i‡(
	`WIFEXITED
(
°©us
))

19 
	`¥ötf
("child %dÅerminatedÇormally withÉxit status=%d\n",

20 
ªçid
, 
	`WEXITSTATUS
(
°©us
));

22 
	`¥ötf
("chûd %dÅîmö©edábn‹mÆly\n", 
ªçid
);

26 i‡(
î∫o
 !
ECHILD
)

27 
	`unix_îr‹
("waitpidÉrror");

29 
	`exô
(0);

30 
	}
}

	@ecf/waitprob0.c

1 
	~"cßµ.h
"

5 
	$maö
()

7 i‡(
	`F‹k
() == 0) {

8 
	`¥ötf
("a"); 
	`fÊush
(
°dout
);

11 
	`¥ötf
("b"); 
	`fÊush
(
°dout
);

12 
	`waôpid
(-1, 
NULL
, 0);

14 
	`¥ötf
("c"); 
	`fÊush
(
°dout
);

15 
	`exô
(0);

16 
	}
}

	@ecf/waitprob1.c

1 
	~"cßµ.h
"

5 
	$maö
()

7 
°©us
;

8 
pid_t
 
pid
;

10 
	`¥ötf
("Hello\n");

11 
pid
 = 
	`F‹k
();

12 
	`¥ötf
("%d\n", !
pid
);

13 i‡(
pid
 != 0) {

14 i‡(
	`waôpid
(-1, &
°©us
, 0) > 0) {

15 i‡(
	`WIFEXITED
(
°©us
) != 0)

16 
	`¥ötf
("%d\n", 
	`WEXITSTATUS
(
°©us
));

19 
	`¥ötf
("Bye\n");

20 
	`exô
(2);

21 
	}
}

	@ecf/waitprob3.c

1 
	~"cßµ.h
"

4 
	$maö
()

6 i‡(
	`f‹k
() == 0) {

7 
	`¥ötf
("a"); 
	`fÊush
(
°dout
);

8 
	`exô
(0);

11 
	`¥ötf
("b"); 
	`fÊush
(
°dout
);

12 
	`waôpid
(-1, 
NULL
, 0);

14 
	`¥ötf
("c"); 
	`fÊush
(
°dout
);

15 
	`exô
(0);

16 
	}
}

	@error/fragments.c

1 
	~"cßµ.h
"

3 *
	$thªad
(*
v±r
)

5  
NULL
;

6 
	}
}

8 
	$‰agmíts
()

10 
pid
, 
ªtcode
;

11 
±hªad_t
 
tid
;

12 
addröfo
 
höts
, *
ªsu…
;

13 *
ho°
="°uff", *
£rvi˚
="stuff";

15 i‡((
pid
 = 
	`waô
(
NULL
)) < 0) {

16 
	`Ârötf
(
°dîr
, "waôÉº‹: %s\n", 
	`°ªº‹
(
î∫o
));

17 
	`exô
(0);

22 i‡((
ªtcode
 = 
	`±hªad_¸óã
(&
tid
, 
NULL
, 
thªad
, NULL)) != 0) {

23 
	`Ârötf
(
°dîr
, "±hªad_¸óãÉº‹: %s\n", 
	`°ªº‹
(
ªtcode
));

24 
	`exô
(0);

29 i‡((
ªtcode
 = 
	`gëaddröfo
(
ho°
, 
£rvi˚
, &
höts
, &
ªsu…
)) != 0) {

30 
	`Ârötf
(
°dîr
, "gëaddröfÿîr‹: %s\n", 
	`gai_°ªº‹
(
ªtcode
));

31 
	`exô
(0);

35 
	`exô
(0);

36 
	}
}

	@include/clock.h

4 
°¨t_cou¡î
();

7 
gë_cou¡î
();

10 
mhz
(
vîbo£
);

13 
mhz_fuŒ
(
vîbo£
, 
¶ì±ime
);

	@include/cpe.h

4 (*
	tñem_fun_t
)();

11 íum {
UNI_SAMPLE
, 
RAN_SAMPLE
}

12 
	tßm∂e_t
;

17 
	`föd_˝e
(
ñem_fun_t
 
f
, 
max˙t
);

24 
	`föd_˝e_fuŒ
(
ñem_fun_t
 
f
, 
max˙t
, 
ßm∂es
, 
FILE
 *
d©a_fûe
,

25 
ßm∂e_t
 
smëhod
, 
büs
, 
vîbo£
);

31 
	`mósuª_fun˘i⁄
(
ñem_fun_t
 
f
, 
˙t
);

	@include/csapp.h

5 #i‚de‡
__CSAPP_H__


6 
	#__CSAPP_H__


	)

8 
	~<°dio.h
>

9 
	~<°dlib.h
>

10 
	~<°d¨g.h
>

11 
	~<uni°d.h
>

12 
	~<°rög.h
>

13 
	~<˘y≥.h
>

14 
	~<£tjmp.h
>

15 
	~<sig«l.h
>

16 
	~<dúít.h
>

17 
	~<sys/time.h
>

18 
	~<sys/ty≥s.h
>

19 
	~<sys/waô.h
>

20 
	~<sys/°©.h
>

21 
	~<f˙é.h
>

22 
	~<sys/mm™.h
>

23 
	~<î∫o.h
>

24 
	~<m©h.h
>

25 
	~<±hªad.h
>

26 
	~<£m≠h‹e.h
>

27 
	~<sys/sockë.h
>

28 
	~<√tdb.h
>

29 
	~<√töë/ö.h
>

30 
	~<¨∑/öë.h
>

34 
	#DEF_MODE
 
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH


	)

35 
	#DEF_UMASK
 
S_IWGRP
|
S_IWOTH


	)

40 
sockaddr
 
	tSA
;

45 
	#RIO_BUFSIZE
 8192

	)

47 
	mrio_fd
;

48 
	mrio_˙t
;

49 *
	mrio_buÂå
;

50 
	mrio_buf
[
RIO_BUFSIZE
];

51 } 
	trio_t
;

55 
h_î∫o
;

56 **
ívú⁄
;

59 
	#MAXLINE
 8192

	)

60 
	#MAXBUF
 8192

	)

61 
	#LISTENQ
 1024

	)

64 
unix_îr‹
(*
msg
);

65 
posix_îr‹
(
code
, *
msg
);

66 
dns_îr‹
(*
msg
);

67 
gai_îr‹
(
code
, *
msg
);

68 
≠p_îr‹
(*
msg
);

71 
pid_t
 
F‹k
();

72 
Execve
(c⁄° *
fûíame
, *c⁄° 
¨gv
[], *c⁄° 
ívp
[]);

73 
pid_t
 
Waô
(*
°©us
);

74 
pid_t
 
Waôpid
’id_à
pid
, *
ùå
, 
›ti⁄s
);

75 
Kûl
(
pid_t
 
pid
, 
signum
);

76 
SÀï
(
£cs
);

77 
Pau£
();

78 
Aœrm
(
£c⁄ds
);

79 
Sëpgid
(
pid_t
 
pid
,Öid_à
pgid
);

80 
pid_t
 
GëpgΩ
();

83 
	th™dÀr_t
();

84 
h™dÀr_t
 *
Sig«l
(
signum
, h™dÀr_à*
h™dÀr
);

85 
Sig¥ocmask
(
how
, c⁄° 
sig£t_t
 *
£t
, sig£t_à*
ﬁd£t
);

86 
Sigem±y£t
(
sig£t_t
 *
£t
);

87 
Sigfûl£t
(
sig£t_t
 *
£t
);

88 
Sigadd£t
(
sig£t_t
 *
£t
, 
signum
);

89 
Sigdñ£t
(
sig£t_t
 *
£t
, 
signum
);

90 
Sigismembî
(c⁄° 
sig£t_t
 *
£t
, 
signum
);

91 
Sigsu•íd
(c⁄° 
sig£t_t
 *
£t
);

94 
ssize_t
 
sio_puts
(
s
[]);

95 
ssize_t
 
sio_pué
(
v
);

96 
sio_îr‹
(
s
[]);

99 
ssize_t
 
Sio_puts
(
s
[]);

100 
ssize_t
 
Sio_pué
(
v
);

101 
Sio_îr‹
(
s
[]);

104 
O≥n
(c⁄° *
∑th«me
, 
Êags
, 
mode_t
 
mode
);

105 
ssize_t
 
Ród
(
fd
, *
buf
, 
size_t
 
cou¡
);

106 
ssize_t
 
Wrôe
(
fd
, c⁄° *
buf
, 
size_t
 
cou¡
);

107 
off_t
 
L£ek
(
fûdes
, off_à
off£t
, 
whí˚
);

108 
Clo£
(
fd
);

109 
Sñe˘
(
n
, 
fd_£t
 *
ªadfds
, fd_£à*
wrôefds
, fd_£à*
ex˚±fds
,

110 
timevÆ
 *
timeout
);

111 
Dup2
(
fd1
, 
fd2
);

112 
Sèt
(c⁄° *
fûíame
, 
°©
 *
buf
);

113 
F°©
(
fd
, 
°©
 *
buf
) ;

116 
DIR
 *
O≥ndú
(c⁄° *
«me
);

117 
dúít
 *
Róddú
(
DIR
 *
dúp
);

118 
Clo£dú
(
DIR
 *
dúp
);

121 *
Mm≠
(*
addr
, 
size_t
 
Àn
, 
¥Ÿ
, 
Êags
, 
fd
, 
off_t
 
off£t
);

122 
Munm≠
(*
°¨t
, 
size_t
 
Àngth
);

125 
F˛o£
(
FILE
 *
Â
);

126 
FILE
 *
Fd›í
(
fd
, c⁄° *
ty≥
);

127 *
Fgës
(*
±r
, 
n
, 
FILE
 *
°ªam
);

128 
FILE
 *
F›í
(c⁄° *
fûíame
, c⁄° *
mode
);

129 
Fputs
(c⁄° *
±r
, 
FILE
 *
°ªam
);

130 
size_t
 
Fªad
(*
±r
, size_à
size
, size_à
nmemb
, 
FILE
 *
°ªam
);

131 
Fwrôe
(c⁄° *
±r
, 
size_t
 
size
, size_à
nmemb
, 
FILE
 *
°ªam
);

134 *
MÆloc
(
size_t
 
size
);

135 *
RóŒoc
(*
±r
, 
size_t
 
size
);

136 *
CÆloc
(
size_t
 
nmemb
, size_à
size
);

137 
Fªe
(*
±r
);

140 
Sockë
(
domaö
, 
ty≥
, 
¥Ÿocﬁ
);

141 
Sësock›t
(
s
, 
Àvñ
, 
›äame
, c⁄° *
›tvÆ
, 
›éí
);

142 
Böd
(
sockfd
, 
sockaddr
 *
my_addr
, 
addæí
);

143 
Li°í
(
s
, 
backlog
);

144 
Ac˚±
(
s
, 
sockaddr
 *
addr
, 
sockÀn_t
 *
addæí
);

145 
C⁄√˘
(
sockfd
, 
sockaddr
 *
£rv_addr
, 
addæí
);

148 
Gëaddröfo
(c⁄° *
node
, c⁄° *
£rvi˚
,

149 c⁄° 
addröfo
 *
höts
, addröfÿ**
ªs
);

150 
Gë«meöfo
(c⁄° 
sockaddr
 *
ß
, 
sockÀn_t
 
ßÀn
, *
ho°
,

151 
size_t
 
ho°Àn
, *
£rv
, size_à
£rvÀn
, 
Êags
);

152 
Fªóddröfo
(
addröfo
 *
ªs
);

153 
I√t_¡›
(
af
, c⁄° *
§c
, *
d°
, 
sockÀn_t
 
size
);

154 
I√t_±⁄
(
af
, c⁄° *
§c
, *
d°
);

157 
ho°ít
 *
Gëho°by«me
(c⁄° *
«me
);

158 
ho°ít
 *
Gëho°byaddr
(c⁄° *
addr
, 
Àn
, 
ty≥
);

161 
Pthªad_¸óã
(
±hªad_t
 *
tidp
, 
±hªad_©å_t
 *
©åp
,

162 * (*
routöe
)(*), *
¨gp
);

163 
Pthªad_joö
(
±hªad_t
 
tid
, **
thªad_ªtu∫
);

164 
Pthªad_ˇn˚l
(
±hªad_t
 
tid
);

165 
Pthªad_dëach
(
±hªad_t
 
tid
);

166 
Pthªad_exô
(*
ªtvÆ
);

167 
±hªad_t
 
Pthªad_£lf
();

168 
Pthªad_⁄˚
(
±hªad_⁄˚_t
 *
⁄˚_c⁄åﬁ
, (*
öô_fun˘i⁄
)());

171 
Sem_öô
(
£m_t
 *
£m
, 
psh¨ed
, 
vÆue
);

172 
P
(
£m_t
 *
£m
);

173 
V
(
£m_t
 *
£m
);

176 
ssize_t
 
rio_ªadn
(
fd
, *
u§buf
, 
size_t
 
n
);

177 
ssize_t
 
rio_wrôí
(
fd
, *
u§buf
, 
size_t
 
n
);

178 
rio_ªadöôb
(
rio_t
 *
Ω
, 
fd
);

179 
ssize_t
 
rio_ªadnb
(
rio_t
 *
Ω
, *
u§buf
, 
size_t
 
n
);

180 
ssize_t
 
rio_ªadlöeb
(
rio_t
 *
Ω
, *
u§buf
, 
size_t
 
maxÀn
);

183 
ssize_t
 
Rio_ªadn
(
fd
, *
u§buf
, 
size_t
 
n
);

184 
Rio_wrôí
(
fd
, *
u§buf
, 
size_t
 
n
);

185 
Rio_ªadöôb
(
rio_t
 *
Ω
, 
fd
);

186 
ssize_t
 
Rio_ªadnb
(
rio_t
 *
Ω
, *
u§buf
, 
size_t
 
n
);

187 
ssize_t
 
Rio_ªadlöeb
(
rio_t
 *
Ω
, *
u§buf
, 
size_t
 
maxÀn
);

190 
›í_˛õ¡fd
(*
ho°«me
, *
p‹t
);

191 
›í_li°ífd
(*
p‹t
);

194 
O≥n_˛õ¡fd
(*
ho°«me
, *
p‹t
);

195 
O≥n_li°ífd
(*
p‹t
);

	@include/fcyc.h

7 (*
	tã°_fun˘
)(*);

10 
	`fcyc
(
ã°_fun˘
 
f
, * 
∑øms
);

19 
	`£t_fcyc_˛ór_ˇche
(
˛ór
);

24 
	`£t_fcyc_ˇche_size
(
byãs
);

29 
	`£t_fcyc_ˇche_block
(
byãs
);

34 
	`£t_fcyc_com≥nßã
(
com≥nßã
);

39 
	`£t_fcyc_k
(
k
);

45 
	`£t_fcyc_maxßm∂es
(
maxßm∂es
);

50 
	`£t_fcyc_ïsû⁄
(
ïsû⁄
);

	@include/lsquare.h

4 
ls_¶›e
(*
xvÆ
, *
yvÆ
, 
˙t
);

5 
ls_öãr˚±
(*
xvÆ
, *
yvÆ
, 
˙t
);

7 íum {
	mLS_AVG
, 
	mLS_MAX
} 
	tls_îr_t
;

10 
ls_îr‹
(*
xvÆ
, *
yvÆ
, 
˙t
, 
ls_îr_t
 
ëy≥
);

	@intro/hello.c

2 
	~<°dio.h
>

4 
	$maö
()

6 
	`¥ötf
("hello, world\n");

8 
	}
}

	@io/cpfile.c

2 
	~"cßµ.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
n
;

7 
rio_t
 
rio
;

8 
buf
[
MAXLINE
];

10 
	`Rio_ªadöôb
(&
rio
, 
STDIN_FILENO
);

11 (
n
 = 
	`Rio_ªadlöeb
(&
rio
, 
buf
, 
MAXLINE
)) != 0)

12 
	`Rio_wrôí
(
STDOUT_FILENO
, 
buf
, 
n
);

14 
	`exô
(0);

16 
	}
}

	@io/cpstdin.c

2 
	~"cßµ.h
"

4 
	$maö
()

6 
c
;

8 
	`Ród
(
STDIN_FILENO
, &
c
, 1) != 0)

9 
	`Wrôe
(
STDOUT_FILENO
, &
c
, 1);

10 
	`exô
(0);

11 
	}
}

	@io/fdprob1.c

2 
	~"cßµ.h
"

4 
	$maö
()

6 
fd1
, 
fd2
;

8 
fd1
 = 
	`O≥n
("foo.txt", 
O_RDONLY
, 0);

9 
	`Clo£
(
fd1
);

10 
fd2
 = 
	`O≥n
("baz.txt", 
O_RDONLY
, 0);

11 
	`¥ötf
("fd2 = %d\n", 
fd2
);

12 
	`exô
(0);

13 
	}
}

	@io/fdprob2.c

2 
	~"cßµ.h
"

4 
	$maö
()

6 
fd1
, 
fd2
;

8 
fd1
 = 
	`O≥n
("foo.txt", 
O_RDONLY
, 0);

9 
fd2
 = 
	`O≥n
("b¨.txt", 
O_RDONLY
, 0);

10 
	`Clo£
(
fd2
);

11 
fd2
 = 
	`O≥n
("baz.txt", 
O_RDONLY
, 0);

12 
	`¥ötf
("fd2 = %d\n", 
fd2
);

13 
	`exô
(0);

14 
	}
}

	@io/iofragments.c

1 
	~"cßµ.h
"

3 
	$‰agmíts
()

5 
sockfd
=0;

8 
FILE
 *
Âö
, *
Âout
;

10 
Âö
 = 
	`fd›í
(
sockfd
, "r");

11 
Âout
 = 
	`fd›í
(
sockfd
, "w");

15 
	`f˛o£
(
Âö
);

16 
	`f˛o£
(
Âout
);

20 
	sdúít
 {

21 
öo_t
 
d_öo
;

22 
d_«me
[256];

26 
	}
}

	@io/openexamples.c

1 
	~"cßµ.h
"

3 
	$maö
()

5 
fd
;

9 
fd
 = 
	`O≥n
("foo.txt", 
O_RDONLY
, 0);

14 
fd
 = 
	`O≥n
("foo.txt", 
O_WRONLY
|
O_APPEND
, 0);

19 
	`umask
(
DEF_UMASK
);

20 
fd
 = 
	`O≥n
("foo.txt", 
O_CREAT
|
O_TRUNC
|
O_WRONLY
, 
DEF_MODE
);

23 
	`¥ötf
("fd = %d\n", 
fd
);

24 
	`exô
(0);

25 
	}
}

	@io/readdir.c

2 
	~"cßµ.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
DIR
 *
°ªamp
;

7 
dúít
 *
dï
;

10 i‡(
¨gc
 != 2) {

11 
	`¥ötf
("ußge: %†<∑th«me>\n", 
¨gv
[0]);

12 
	`exô
(1);

15 
°ªamp
 = 
	`O≥ndú
(
¨gv
[1]);

17 
î∫o
 = 0;

18 (
dï
 = 
	`ªaddú
(
°ªamp
)Ë!
NULL
) {

19 
	`¥ötf
("Found fûe: %s\n", 
dï
->
d_«me
);

21 i‡(
î∫o
 != 0)

22 
	`unix_îr‹
("readdirÉrror");

24 
	`Clo£dú
(
°ªamp
);

25 
	`exô
(0);

26 
	}
}

	@io/sharing1.c

2 
	~"cßµ.h
"

4 
	$maö
()

6 
fd1
, 
fd2
;

7 
c
;

9 
fd1
 = 
	`O≥n
("foob¨.txt", 
O_RDONLY
, 0);

10 
fd2
 = 
	`O≥n
("foob¨.txt", 
O_RDONLY
, 0);

11 
	`Ród
(
fd1
, &
c
, 1);

12 
	`Ród
(
fd2
, &
c
, 1);

13 
	`¥ötf
("¯%c\n", 
c
);

14 
	`exô
(0);

15 
	}
}

	@io/sharing2.c

2 
	~"cßµ.h
"

4 
	$maö
()

6 
fd
;

7 
c
;

9 
fd
 = 
	`O≥n
("foob¨.txt", 
O_RDONLY
, 0);

10 i‡(
	`F‹k
() == 0) {

11 
	`Ród
(
fd
, &
c
, 1);

12 
	`exô
(0);

14 
	`Waô
(
NULL
);

15 
	`Ród
(
fd
, &
c
, 1);

16 
	`¥ötf
("¯%c\n", 
c
);

17 
	`exô
(0);

18 
	}
}

	@io/sharing3.c

2 
	~"cßµ.h
"

4 
	$maö
()

6 
fd1
, 
fd2
;

7 
c
;

9 
fd1
 = 
	`O≥n
("foob¨.txt", 
O_RDONLY
, 0);

10 
fd2
 = 
	`O≥n
("foob¨.txt", 
O_RDONLY
, 0);

11 
	`Ród
(
fd2
, &
c
, 1);

12 
	`Dup2
(
fd2
, 
fd1
);

13 
	`Ród
(
fd1
, &
c
, 1);

14 
	`¥ötf
("¯%c\n", 
c
);

15 
	`exô
(0);

16 
	}
}

	@io/statcheck.c

2 
	~"cßµ.h
"

4 
	$maö
 (
¨gc
, **
¨gv
)

6 
°©
 stat;

7 *
ty≥
, *
ªadok
;

10 i‡(
¨gc
 != 2) {

11 
	`Ârötf
(
°dîr
, "ußge: %†<fûíame>\n", 
¨gv
[0]);

12 
	`exô
(0);

15 
	`Sèt
(
¨gv
[1], &
°©
);

16 i‡(
	`S_ISREG
(
°©
.
°_mode
))

17 
ty≥
 = "regular";

18 i‡(
	`S_ISDIR
(
°©
.
°_mode
))

19 
ty≥
 = "directory";

21 
ty≥
 = "other";

22 i‡((
°©
.
°_mode
 & 
S_IRUSR
))

23 
ªadok
 = "yes";

25 
ªadok
 = "no";

27 
	`¥ötf
("ty≥: %s,Ñód: %s\n", 
ty≥
, 
ªadok
);

28 
	`exô
(0);

29 
	}
}

	@io/test-readlineb/cpfile.c

2 
	~"cßµ.h
"

4 
	#LEN
 4

	)

6 
	$maö
(
¨gc
, **
¨gv
)

8 
n
;

9 
rio_t
 
rio
;

10 
buf
[
LEN
];

12 
	`Rio_ªadöôb
(&
rio
, 
STDIN_FILENO
);

13 (
n
 = 
	`Rio_ªadlöeb
(&
rio
, 
buf
, 
LEN
)) != 0) {

14 
	`Ârötf
(
°dîr
, "n=%d\n", 
n
);

15 
	`Rio_wrôí
(
STDOUT_FILENO
, 
buf
, 
n
);

18 
	`exô
(0);

20 
	}
}

	@link/addvec.c

3 
	gadd˙t
 = 0;

5 
	$addvec
(*
x
, *
y
,

6 *
z
, 
n
)

8 
i
;

10 
add˙t
++;

12 
i
 = 0; i < 
n
; i++)

13 
z
[
i
] = 
x
[i] + 
y
[i];

14 
	}
}

	@link/bar1.c

3 
	$maö
()

6 
	}
}

	@link/bar2.c

3 
	gx
 = 15213;

5 
	$f
()

7 
	}
}

	@link/bar3.c

3 
	gx
;

5 
	$f
()

7 
x
 = 15212;

8 
	}
}

	@link/bar4.c

3 
	gx
;

5 
	$f
()

7 
x
 = 15212;

8 
	}
}

	@link/bar5.c

3 
	gx
;

5 
	$f
()

7 
x
 = -0.0;

8 
	}
}

	@link/bar6.c

3 
	~<°dio.h
>

5 
	gmaö
;

7 
	$p2
()

9 
	`¥ötf
("0x%x\n", 
maö
);

10 
	}
}

	@link/dll.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<dlf˙.h
>

6 
	gx
[2] = {1, 2};

7 
	gy
[2] = {3, 4};

8 
	gz
[2];

10 
	$maö
()

12 *
h™dÀ
;

13 (*
addvec
)(*, *, *, );

14 *
îr‹
;

17 
h™dÀ
 = 
	`dl›í
("./libve˘‹.so", 
RTLD_LAZY
);

18 i‡(!
h™dÀ
) {

19 
	`Ârötf
(
°dîr
, "%s\n", 
	`dÀº‹
());

20 
	`exô
(1);

24 
addvec
 = 
	`dlsym
(
h™dÀ
, "addvec");

25 i‡((
îr‹
 = 
	`dÀº‹
()Ë!
NULL
) {

26 
	`Ârötf
(
°dîr
, "%s\n", 
îr‹
);

27 
	`exô
(1);

31 
	`addvec
(
x
, 
y
, 
z
, 2);

32 
	`¥ötf
("z = [%d %d]\n", 
z
[0], z[1]);

35 i‡(
	`dl˛o£
(
h™dÀ
) < 0) {

36 
	`Ârötf
(
°dîr
, "%s\n", 
	`dÀº‹
());

37 
	`exô
(1);

40 
	}
}

	@link/elfstructs.c

3 
	m«me
;

4 
	mty≥
:4,

5 
	mbödög
:4;

6 
	mª£rved
;

7 
	m£˘i⁄
;

8 
	mvÆue
;

9 
	msize
;

10 } 
	tElf64_Symbﬁ
;

15 
	moff£t
;

16 
	mty≥
:32,

17 
	msymbﬁ
:32;

18 
	maddíd
;

19 } 
	tElf64_Rña
;

	@link/foo1.c

3 
	$maö
()

6 
	}
}

	@link/foo2.c

3 
	gx
 = 15213;

5 
	$maö
()

8 
	}
}

	@link/foo3.c

3 
	~<°dio.h
>

4 
f
();

6 
	gx
 = 15213;

8 
	$maö
()

10 
	`f
();

11 
	`¥ötf
("x = %d\n", 
x
);

13 
	}
}

	@link/foo4.c

3 
	~<°dio.h
>

4 
f
();

6 
	gx
;

8 
	$maö
()

10 
x
 = 15213;

11 
	`f
();

12 
	`¥ötf
("x = %d\n", 
x
);

14 
	}
}

	@link/foo5.c

3 
	~<°dio.h
>

4 
f
();

6 
	gy
 = 15212;

7 
	gx
 = 15213;

9 
	$maö
()

11 
	`f
();

12 
	`¥ötf
("x = 0x%x y = 0x%x \n",

13 
x
, 
y
);

15 
	}
}

	@link/foo6.c

3 
p2
();

5 
	$maö
()

7 
	`p2
();

9 
	}
}

	@link/fragments.c

5 
f‹óch
 
£˘i⁄
 
	gs
 {

6 
f‹óch
 
ªloˇti⁄
 
íåy
 
	gr
 {

7 
	gªÂå
 = 
s
 + 
r
.
off£t
;

10 i‡(
	gr
.
	gty≥
 =
R_X86_64_PC32
) {

11 
ªÁddr
 = 
ADDR
(
s
Ë+ 
r
.
off£t
;

12 *
	gªÂå
 = (Ë(
ADDR
(
r
.
symbﬁ
Ë+Ñ.
addíd
 - 
ªÁddr
);

16 i‡(
	gr
.
	gty≥
 =
R_X86_64_32
)

17 *
ªÂå
 = (Ë(
ADDR
(
r
.
symbﬁ
Ë+Ñ.
addíd
);

23 0x080480c0 <
	g_°¨t
>:

24 
ˇŒ
 
__libc_öô_fú°


25 
ˇŒ
 
_öô


26 
ˇŒ
 
©exô


27 
ˇŒ
 
maö


28 
ˇŒ
 
_exô


	@link/hello.c

1 
	~<°dio.h
>

3 
	$maö
() {

4 
	`¥ötf
("hello, world\n");

5 
	}
}

	@link/interpose/int.c

9 
	~<°dio.h
>

10 
	~<mÆloc.h
>

12 
	$maö
()

14 *
p
 = 
	`mÆloc
(32);

15 
	`‰ì
(
p
);

17 
	}
}

	@link/interpose/malloc.h

3 
	#mÆloc
(
size
Ë
	`mymÆloc
(size)

	)

4 
	#‰ì
(
±r
Ë
	`my‰ì
’å)

	)

6 *
mymÆloc
(
size_t
 
size
);

7 
my‰ì
(*
±r
);

	@link/interpose/mymalloc.c

18 #ifde‡
RUNTIME


19 
	#_GNU_SOURCE


	)

20 
	~<°dio.h
>

21 
	~<°dlib.h
>

22 
	~<dlf˙.h
>

25 *
	$mÆloc
(
size_t
 
size
)

27 *(*
mÆlo˝
)(
size_t
 
size
);

28 *
îr‹
;

30 
mÆlo˝
 = 
	`dlsym
(
RTLD_NEXT
, "malloc");

31 i‡((
îr‹
 = 
	`dÀº‹
()Ë!
NULL
) {

32 
	`Âuts
(
îr‹
, 
°dîr
);

33 
	`exô
(1);

35 *
±r
 = 
	`mÆlo˝
(
size
);

36 
	`¥ötf
("mÆloc(%dË%p\n", ()
size
, 
±r
);

37  
±r
;

38 
	}
}

41 
	$‰ì
(*
±r
)

43 (*
‰ìp
)(*Ë
NULL
;

44 *
îr‹
;

46 i‡(!
±r
)

49 
‰ìp
 = 
	`dlsym
(
RTLD_NEXT
, "free");

50 i‡((
îr‹
 = 
	`dÀº‹
()Ë!
NULL
) {

51 
	`Âuts
(
îr‹
, 
°dîr
);

52 
	`exô
(1);

54 
	`‰ìp
(
±r
);

55 
	`¥ötf
("‰ì(%p)\n", 
±r
);

56 
	}
}

70 #ifde‡
LINKTIME


71 
	~<°dio.h
>

73 *
__ªÆ_mÆloc
(
size_t
 
size
);

74 
__ªÆ_‰ì
(*
±r
);

77 *
	$__wøp_mÆloc
(
size_t
 
size
)

79 *
±r
 = 
	`__ªÆ_mÆloc
(
size
);

80 
	`¥ötf
("mÆloc(%dË%p\n", ()
size
, 
±r
);

81  
±r
;

82 
	}
}

85 
	$__wøp_‰ì
(*
±r
)

87 
	`__ªÆ_‰ì
(
±r
);

88 
	`¥ötf
("‰ì(%p)\n", 
±r
);

89 
	}
}

99 #ifde‡
COMPILETIME


100 
	~<°dio.h
>

101 
	~<mÆloc.h
>

104 *
	$mymÆloc
(
size_t
 
size
)

106 *
±r
 = 
	`mÆloc
(
size
);

107 
	`¥ötf
("malloc(%d)=%p\n",

108 ()
size
, 
±r
);

109  
±r
;

110 
	}
}

113 
	$my‰ì
(*
±r
)

115 
	`‰ì
(
±r
);

116 
	`¥ötf
("‰ì(%p)\n", 
±r
);

117 
	}
}

	@link/linkerror.c

2 
foo
();

4 
	$maö
() {

5 
	`foo
();

7 
	}
}

	@link/m.c

3 
sw≠
();

5 
	gbuf
[2] = {1, 2};

7 
	$maö
()

9 
	`sw≠
();

11 
	}
}

	@link/main.c

3 
sum
(*
a
, 
n
);

5 
	g¨øy
[2] = {1, 2};

7 
	$maö
()

9 
vÆ
 = 
	`sum
(
¨øy
, 2);

10  
vÆ
;

11 
	}
}

	@link/main2.c

3 
	~<°dio.h
>

4 
	~"ve˘‹.h
"

6 
	gx
[2] = {1, 2};

7 
	gy
[2] = {3, 4};

8 
	gz
[2];

10 
	$maö
()

12 
	`addvec
(
x
, 
y
, 
z
, 2);

13 
	`¥ötf
("z = [%d %d]\n", 
z
[0], z[1]);

15 
	}
}

	@link/map.c

8 
	~<°dio.h
>

9 
	~<°dlib.h
>

10 
	~<uni°d.h
>

12 
ëext
, 
ed©a
, 
íd
;

14 
	gbssv¨
;

15 
	gd©av¨
[1024]={'a'};

17 
	$maö
(
¨gc
, **
¨gv
, **
ívp
)

19 
byã˙t
 = 0;

20 *
hó∑ddΩ
, *
œ°blockp
;

21 
size_t
 
blocksize
;

22 
i
, 
ôî
, 
numblocks
, 
block˙t
;

23 **
p
, **
ív≤
=
NULL
;

26 
p
 = 
ívp
; *p;Ö++)

27 
ív≤
 = 
p
;

29 
	`¥ötf
("FirstáddressÖast:\n");

30 
	`¥ötf
("ÖrogømÅexà”ãxtË %10p\n", &
ëext
);

31 
	`¥ötf
(" inôülized d©®”d©aË %10p\n", &
ed©a
);

32 
	`¥ötf
(" unöôülized d©®”ndË %10p\n", &
íd
);

33 
	`¥ötf
("\n");

34 
	`¥ötf
("size_à = %d\n", ()(
size_t
));

35 
	`¥ötf
("sockÀn_à%d\n", ()(
sockÀn_t
));

36 
	`¥ötf
("&maö = %p\n", &
maö
);

37 
	`¥ötf
("&d©av¨ = %p\n", &
d©av¨
);

38 
	`¥ötf
("&bssv¨ = %p\n", &
bssv¨
);

39 
	`¥ötf
("loˇlv¨ = %p\n", &
byã˙t
);

40 
	`¥ötf
("¨gv = %p\n", 
¨gv
);

41 
	`¥ötf
("ív∞ = %p\n", 
ívp
);

42 
	`¥ötf
("°ackt› = %p\n", *
ív≤
);

43 
	`¥ötf
("\n");

48 
	`¥ötf
("Heapáddresses:\n");

49 
blocksize
 = (1L << 10);

50 
numblocks
 = 8;

51 
block˙t
 = 0;

52 
	`¥ötf
("Hó∞°¨à%p\n", 
	`sbrk
(0));

53 
i
=0; i<
numblocks
; i++) {

54 i‡((
hó∑ddΩ
 = 
	`mÆloc
(
blocksize
)Ë=
NULL
)

56 
block˙t
 +
blocksize
;

57 
	`¥ötf
("blockadd∏%∞[Hó∞íd = %p]\n", 
hó∑ddΩ
, 
	`sbrk
(0));

59 
	`¥ötf
("...\n");

63 
blocksize
 = (1<<30);

64 
ôî
 = 0;

65 (
hó∑ddΩ
 = 
	`mÆloc
(
blocksize
))) {

66 
œ°blockp
 = 
hó∑ddΩ
;

67 
œ°blockp
[0] = 1;

68 
block˙t
 +
blocksize
;

69 i‡((
ôî
++ % (1<<14)) == 0)

70 
	`¥ötf
("blockadd∏%∞[Hó∞íd = %p]\n", 
œ°blockp
, 
	`sbrk
(0));

72 
	`¥ötf
("blockadd∏%∞[Hó∞íd = %p]\n", 
œ°blockp
, 
	`sbrk
(0));

73 
	`¥ötf
("TŸÆáŒoˇãd byã†0x%lx\n", 
block˙t
);

75 
	`¥ötf
("pausing soÅhat you can check .soÜocations withÖmap\n");

77 
	`exô
(0);

78 
	}
}

	@link/multvec.c

3 
	gmu…˙t
 = 0;

5 
	$mu…vec
(*
x
, *
y
,

6 *
z
, 
n
)

8 
i
;

10 
mu…˙t
++;

12 
i
 = 0; i < 
n
; i++)

13 
z
[
i
] = 
x
[i] * 
y
[i];

14 
	}
}

	@link/share.c

1 
	gmyglobÆ
=128;

3 
	$func
()

5  
myglobÆ
;

6 
	}
}

	@link/static.c

2 
	$f
()

4 
x
 = 0;

5  
x
;

6 
	}
}

8 
	$g
()

10 
x
 = 1;

11  
x
;

12 
	}
}

	@link/sum.c

3 
	$sum
(*
a
, 
n
)

5 
i
, 
s
 = 0;

7 
i
 = 0; i < 
n
; i++) {

8 
s
 +
a
[
i
];

10  
s
;

11 
	}
}

	@link/swap.c

3 
buf
[];

5 *
	gbuÂ0
 = &
buf
[0];

6 *
	gbuÂ1
;

8 
	$sw≠
()

10 
ãmp
;

12 
buÂ1
 = &
buf
[1];

13 
ãmp
 = *
buÂ0
;

14 *
buÂ0
 = *
buÂ1
;

15 *
buÂ1
 = 
ãmp
;

16 
	}
}

	@link/swap2.c

2 
buf
[];

4 *
	gbuÂ0
 = &
buf
[0];

5 *
	gbuÂ1
;

7 
	$ö¸
()

9 
cou¡
=0;

11 
cou¡
++;

12 
	}
}

14 
	$sw≠
()

16 
ãmp
;

18 
	`ö¸
();

19 
buÂ1
 = &
buf
[1];

20 
ãmp
 = *
buÂ0
;

21 *
buÂ0
 = *
buÂ1
;

22 *
buÂ1
 = 
ãmp
;

23 
	}
}

	@link/t1.c

1 
	$maö
()

3 
x
=0;

4 
y
;

5 
z
=1;

7 
	}
}

	@link/t2.c

1 
	gx
;

3 
	$foo
()

5 
	}
}

	@link/vector.h

2 
addvec
(*
x
, *
y
, *
z
, 
n
);

3 
mu…vec
(*
x
, *
y
, *
z
, 
n
);

4 
gëcou¡
();

	@mem/cleararray.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

5 
	#N
 1000

	)

8 
	mvñ
[3];

9 
	macc
[3];

10 } 
	tpoöt
;

12 
poöt
 
	gp
[
N
];

16 
	$˛ór1
(
poöt
 *
p
, 
n
)

18 
i
, 
j
;

20 
i
 = 0; i < 
n
; i++) {

21 
j
 = 0; j < 3; j++)

22 
p
[
i
].
vñ
[
j
] = 0;

23 
j
 = 0; j < 3; j++)

24 
p
[
i
].
acc
[
j
] = 0;

26 
	}
}

30 
	$˛ór2
(
poöt
 *
p
, 
n
)

32 
i
, 
j
;

34 
i
 = 0; i < 
n
; i++) {

35 
j
 = 0; j < 3; j++) {

36 
p
[
i
].
vñ
[
j
] = 0;

37 
p
[
i
].
acc
[
j
] = 0;

40 
	}
}

44 
	$˛ór3
(
poöt
 *
p
, 
n
)

46 
i
, 
j
;

48 
j
 = 0; j < 3; j++) {

49 
i
 = 0; i < 
n
; i++)

50 
p
[
i
].
vñ
[
j
] = 0;

51 
i
 = 0; i < 
n
; i++)

52 
p
[
i
].
acc
[
j
] = 0;

54 
	}
}

57 
	$maö
()

59 
	`˛ór1
(
p
, 
N
);

60 
	`˛ór2
(
p
, 
N
);

61 
	`˛ór3
(
p
, 
N
);

62 
	`exô
(0);

63 
	}
}

	@mem/dotprod.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

4 
	gx
[8], 
	gy
[8];

7 
	$dŸ¥od
(
x
[8], 
y
[8])

9 
sum
 = 0.0;

10 
i
;

12 
i
 = 0; i < 8; i++)

13 
sum
 +
x
[
i
] * 
y
[i];

14  
sum
;

15 
	}
}

18 
	$maö
()

20 
i
;

22 
i
 = 0; i < 8; i++) {

23 
x
[
i
] = i;

24 
y
[
i
] = i;

27 
	`¥ötf
("dŸ¥od=%f\n", 
	`dŸ¥od
(
x
, 
y
));

28 
	`exô
(0);

29 
	}
}

	@mem/game.c

3 
	spixñ
 {

4 
	mr
;

5 
	mg
;

6 
	mb
;

7 
	ma
;

10 
pixñ
 
	gbuf„r
[480][640];

11 
	gi
, 
	gj
;

12 *
	g˝å
;

13 *
	gùå
;

16 
	$lo›s
()

20 
j
 = 0; j < 640; j++) {

21 
i
 = 0; i < 480; i++){

22 
buf„r
[
i
][
j
].
r
 = 0;

23 
buf„r
[
i
][
j
].
g
 = 0;

24 
buf„r
[
i
][
j
].
b
 = 0;

25 
buf„r
[
i
][
j
].
a
 = 0;

33 *
˝å
 = (*Ë
buf„r
;

34 ; 
˝å
 < (((*Ë
buf„r
) + 640 * 480 * 4); cptr++)

35 *
˝å
 = 0;

41 *
ùå
 = (*)
buf„r
;

42 ; 
ùå
 < ((*)
buf„r
 + 640*480); iptr++)

43 *
ùå
 = 0;

48 
	}
}

	@mem/matmult/bmm.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~"mm.h
"

5 
	~"fcycbmm.h
"

6 
	~"˛ock.h
"

9 
	#CLEARCACHE
 1

	)

12 
¨øy
 
	gga
, 
	ggb
, 
	ggc
;

15 
	$checkªsu…
(
¨øy
 
c
, 
n
)

17 
i
, 
j
;

19 
i
 = 0; i < 
n
; i++)

20 
j
 = 0; j < 
n
; j++)

21 i‡(
c
[
i
][
j
] !()
n
) {

22 
	`¥ötf
("Error: badÇumber (%f) inÑesult matrix (%d,%d)\n",

23 
c
[
i
][
j
], i, j);

24 
	`exô
(0);

26 
	}
}

29 
	$run
(
ã°_fun˘
 
f
, 
n
, 
bsize
)

31 
˝i
;

33 
˝i
 = 
	`fcyc
(
f
, 
n
, 
bsize
, 
CLEARCACHE
) / (n*n*n);

34 
	`checkªsu…
(
gc
, 
n
);

35 (
˝i
);

36 
	}
}

39 
	$ª£t
(
¨øy
 
c
, 
n
)

41 
i
,
j
;

43 
i
 = 0; i < 
n
; i++) {

44 
j
 = 0; j < 
n
; j++) {

45 
c
[
i
][
j
] = 0.0;

48 
	}
}

51 
	$öô
(
¨øy
 
a
,áºay 
b
, 
n
)

53 
i
,
j
;

55 
i
 = 0; i < 
n
; i++) {

56 
j
 = 0; j < 
n
; j++) {

57 
a
[
i
][
j
] = 1.0;

58 
b
[
i
][
j
] = 1.0;

61 
	}
}

64 
	$¥öèºay
(
¨øy
 
a
, 
n
)

66 
i
, 
j
;

68 
i
 = 0; i < 
n
; i++) {

69 
j
 = 0; j < 
n
; j++) {

70 
	`¥ötf
("%5.1‡", 
a
[
i
][
j
]);

72 
	`¥ötf
("\n");

74 
	}
}

80 
	$bijk
(
¨øy
 
A
,áºay 
B
,áºay 
C
, 
n
, 
bsize
)

82 
i
, 
j
, 
k
, 
kk
, 
jj
;

83 
sum
;

84 
í
 = 
bsize
 * (
n
/bsize);

86 
i
 = 0; i < 
n
; i++)

87 
j
 = 0; j < 
n
; j++)

88 
C
[
i
][
j
] = 0.0;

90 
kk
 = 0; kk < 
í
; kk +
bsize
) {

91 
jj
 = 0; jj < 
í
; jj +
bsize
) {

92 
i
 = 0; i < 
n
; i++) {

93 
j
 = 
jj
; j < jj + 
bsize
; j++) {

94 
sum
 = 
C
[
i
][
j
];

95 
k
 = 
kk
; k < kk + 
bsize
; k++) {

96 
sum
 +
A
[
i
][
k
]*
B
[k][
j
];

98 
C
[
i
][
j
] = 
sum
;

104 
i
 = 0; i < 
n
; i++) {

105 
j
 = 
í
; j < 
n
; j++) {

106 
sum
 = 
C
[
i
][
j
];

107 
k
 = 
kk
; k < kk + 
bsize
; k++) {

108 
sum
 +
A
[
i
][
k
]*
B
[k][
j
];

110 
C
[
i
][
j
] = 
sum
;

117 
jj
 = 0; jj < 
í
; jj +
bsize
) {

118 
i
 = 0; i < 
n
; i++) {

119 
j
 = 
jj
; j < jj + 
bsize
; j++) {

120 
sum
 = 
C
[
i
][
j
];

121 
k
 = 
í
; k < 
n
; k++) {

122 
sum
 +
A
[
i
][
k
]*
B
[k][
j
];

124 
C
[
i
][
j
] = 
sum
;

130 
i
 = 0; i < 
n
; i++) {

131 
j
 = 
í
; j < 
n
; j++) {

132 
sum
 = 
C
[
i
][
j
];

133 
k
 = 
í
; k < 
n
; k++) {

134 
sum
 +
A
[
i
][
k
]*
B
[k][
j
];

136 
C
[
i
][
j
] = 
sum
;

140 
	}
}

143 
	$bikj
(
¨øy
 
A
,áºay 
B
,áºay 
C
, 
n
, 
bsize
)

145 
i
, 
j
, 
k
;

146 
kk
, 
jj
;

147 
r
;

149 
í
 = 
bsize
*(
n
/bsize);

150 
i
 = 0; i < 
n
; i++)

151 
j
 = 0; j < 
n
; j++)

152 
C
[
i
][
j
] = 0.0;

154 
kk
 = 0; kk < 
í
; kk +
bsize
) {

155 
jj
 = 0; jj < 
í
; jj +
bsize
) {

156 
i
 = 0; i < 
n
; i++) {

157 
k
 = 
kk
; k < kk + 
bsize
; k++) {

158 
r
 = 
A
[
i
][
k
];

159 
j
 = 
jj
; j < jj + 
bsize
; j++) {

160 
C
[
i
][
j
] +
r
*
B
[
k
][j];

167 
i
 = 0; i < 
n
; i++) {

168 
k
 = 
kk
; k < kk + 
bsize
; k++) {

169 
r
 = 
A
[
i
][
k
];

170 
j
 = 
í
; j < 
n
; j++) {

171 
C
[
i
][
j
] +
r
*
B
[
k
][j];

178 
jj
 = 0; jj < 
í
; jj +
bsize
) {

179 
i
 = 0; i < 
n
; i++) {

180 
k
 = 
í
; k < 
n
; k++) {

181 
r
 = 
A
[
i
][
k
];

182 
j
 = 
jj
; j < jj + 
bsize
; j++) {

183 
C
[
i
][
j
] +
r
*
B
[
k
][j];

190 
i
 = 0; i<
n
; i++) {

191 
k
 = 
í
; k < 
n
; k++) {

192 
r
 = 
A
[
i
][
k
];

193 
j
 = 
í
; j < 
n
; j++) {

194 
C
[
i
][
j
] +
r
*
B
[
k
][j];

198 
	}
}

203 
	$maö
(
¨gc
, **
¨gv
)

205 
n
, 
bsize
;

207 
	`öô
(
ga
, 
gb
, 
MAXN
);

209 
	`¥ötf
("blocked mm cycles/iteration (for varying matrix sizes)\n");

210 
	`¥ötf
("%3s%3s%7s%7s\n", "n", "b", "ijk", "ikj");

213 
bsize
 = 
INCN
;

214 
n
 = 
MINN
;Ç <
MAXN
;Ç +
bsize
) {

215 
	`¥ötf
("%3d %3d ", 
n
, 
bsize
);

216 
	`¥ötf
("%5.2‡", 
	`run
(
bijk
, 
n
, 
bsize
));

217 
	`fÊush
(
°dout
);

218 
	`¥ötf
("%5.2‡", 
	`run
(
bikj
, 
n
, 
bsize
));

219 
	`¥ötf
("\n");

221 
	`¥ötf
("\n");

224 
	`¥ötf
("blocked mm cycles/iteration (for varying block sizes)\n");

225 
	`¥ötf
("%3s%3s%7s%7s\n", "n", "b", "ijk", "ikj");

227 
n
 = 
MAXN
;

228 
bsize
 = 
INCN
; bsizê<
n
; bsize += INCN) {

229 
	`¥ötf
("%3d %3d ", 
n
, 
bsize
);

230 
	`¥ötf
("%5.2‡", 
	`run
(
bijk
, 
n
, 
bsize
));

231 
	`fÊush
(
°dout
);

232 
	`¥ötf
("%5.2‡", 
	`run
(
bikj
, 
n
, 
bsize
));

233 
	`¥ötf
("\n");

236 
	`exô
(0);

237 
	}
}

	@mem/matmult/clock.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<uni°d.h
>

4 
	~<sys/times.h
>

5 
	~"˛ock.h
"

9 
	gcyc_hi
 = 0;

10 
	gcyc_lo
 = 0;

12 
	$ac˚ss_cou¡î
(*
hi
, *
lo
)

15 
	`asm
("rdtsc; movl %%edx,%0; movl %%eax,%1"

16 : "Ù" (*
hi
), "Ù" (*
lo
)

19 
	}
}

21 
	$°¨t_cou¡î
()

23 
	`ac˚ss_cou¡î
(&
cyc_hi
, &
cyc_lo
);

24 
	}
}

26 
	$gë_cou¡î
()

28 
ncyc_hi
, 
ncyc_lo
;

29 
hi
, 
lo
, 
b‹row
;

30 
ªsu…
;

32 
	`ac˚ss_cou¡î
(&
ncyc_hi
, &
ncyc_lo
);

34 
lo
 = 
ncyc_lo
 - 
cyc_lo
;

35 
b‹row
 = 
lo
 > 
ncyc_lo
;

36 
hi
 = 
ncyc_hi
 - 
cyc_hi
 - 
b‹row
;

37 
ªsu…
 = (Ë
hi
 * (1 << 30Ë* 4 + 
lo
;

38 i‡(
ªsu…
 < 0) {

39 
	`Ârötf
(
°dîr
, "Eº‹: Cy˛êcou¡îÑëu∫ögÇeg©ivêvÆue: %.0f\n", 
ªsu…
);

41  
ªsu…
;

42 
	}
}

44 
	$ovhd
()

47 
i
;

48 
ªsu…
;

49 
i
 = 0; i < 2; i++) {

50 
	`°¨t_cou¡î
();

51 
ªsu…
 = 
	`gë_cou¡î
();

53  
ªsu…
;

54 
	}
}

58 
	$mhz_fuŒ
(
vîbo£
, 
¶ì±ime
)

60 
øã
;

61 
	`°¨t_cou¡î
();

62 
	`¶ìp
(
¶ì±ime
);

63 
øã
 = 
	`gë_cou¡î
()/(1e6*
¶ì±ime
);

64 i‡(
vîbo£
)

65 
	`¥ötf
("Pro˚ss‹ Clock R©ê~%.1‡MHz\n", 
øã
);

66  
øã
;

67 
	}
}

70 
	$mhz
(
vîbo£
)

72  
	`mhz_fuŒ
(
vîbo£
, 2);

73 
	}
}

77 
	gcyc_≥r_tick
 = 0.0;

79 
	#NEVENT
 100

	)

80 
	#THRESHOLD
 1000

	)

81 
	#RECORDTHRESH
 3000

	)

84 
	$ˇŒibøã
(
vîbo£
)

86 
ﬁdt
;

87 
tms
 
t
;

88 
˛ock_t
 
ﬁdc
;

89 
e
 = 0;

90 
	`times
(&
t
);

91 
ﬁdc
 = 
t
.
tms_utime
;

92 
	`°¨t_cou¡î
();

93 
ﬁdt
 = 
	`gë_cou¡î
();

94 
e
 <
NEVENT
) {

95 
√wt
 = 
	`gë_cou¡î
();

96 i‡(
√wt
-
ﬁdt
 >
THRESHOLD
) {

97 
˛ock_t
 
√wc
;

98 
	`times
(&
t
);

99 
√wc
 = 
t
.
tms_utime
;

100 i‡(
√wc
 > 
ﬁdc
) {

101 
˝t
 = (
√wt
-
ﬁdt
)/(
√wc
-
ﬁdc
);

102 i‡((
cyc_≥r_tick
 =0.0 || cyc_≥r_tick > 
˝t
Ë&& c± > 
RECORDTHRESH
)

103 
cyc_≥r_tick
 = 
˝t
;

109 
e
++;

110 
ﬁdc
 = 
√wc
;

112 
ﬁdt
 = 
√wt
;

115 i‡(
vîbo£
)

116 
	`¥ötf
("Sëtög cyc_≥r_tickÅÿ%f\n", 
cyc_≥r_tick
);

117 
	}
}

119 
˛ock_t
 
	g°¨t_tick
 = 0;

121 
	$°¨t_comp_cou¡î
() {

122 
tms
 
t
;

123 i‡(
cyc_≥r_tick
 == 0.0)

124 
	`ˇŒibøã
(1);

125 
	`times
(&
t
);

126 
°¨t_tick
 = 
t
.
tms_utime
;

127 
	`°¨t_cou¡î
();

128 
	}
}

130 
	$gë_comp_cou¡î
() {

131 
time
 = 
	`gë_cou¡î
();

132 
˘ime
;

133 
tms
 
t
;

134 
˛ock_t
 
ticks
;

135 
	`times
(&
t
);

136 
ticks
 = 
t
.
tms_utime
 - 
°¨t_tick
;

137 
˘ime
 = 
time
 - 
ticks
*
cyc_≥r_tick
;

142  
˘ime
;

143 
	}
}

	@mem/matmult/clock.h

4 
°¨t_cou¡î
();

7 
gë_cou¡î
();

11 
ovhd
();

14 
mhz
(
vîbo£
);

17 
mhz_fuŒ
(
vîbo£
, 
¶ì±ime
);

21 
°¨t_comp_cou¡î
();

23 
gë_comp_cou¡î
();

	@mem/matmult/fcycbmm.c

5 
	~<°dlib.h
>

6 
	~<sys/times.h
>

7 
	~<°dio.h
>

9 
	~"mm.h
"

10 
	~"˛ock.h
"

11 
	~"fcycbmm.h
"

15 
¨øy
 
ga
, 
gb
, 
gc
;

16 
ª£t
(
¨øy
 
c
, 
n
);

18 *
	gvÆues
 = 
NULL
;

19 
	gßm∂ecou¡
 = 0;

21 
	#KEEP_VALS
 1

	)

22 
	#KEEP_SAMPLES
 1

	)

24 #i‡
KEEP_SAMPLES


25 *
	gßm∂es
 = 
NULL
;

29 
	$öô_ßm∂î
(
k
, 
maxßm∂es
)

31 i‡(
vÆues
)

32 
	`‰ì
(
vÆues
);

33 
vÆues
 = 
	`ˇŒoc
(
k
, ());

34 #i‡
KEEP_SAMPLES


35 i‡(
ßm∂es
)

36 
	`‰ì
(
ßm∂es
);

38 
ßm∂es
 = 
	`ˇŒoc
(
maxßm∂es
+
k
, ());

40 
ßm∂ecou¡
 = 0;

41 
	}
}

44 
	$add_ßm∂e
(
vÆ
, 
k
)

46 
pos
 = 0;

47 i‡(
ßm∂ecou¡
 < 
k
) {

48 
pos
 = 
ßm∂ecou¡
;

49 
vÆues
[
pos
] = 
vÆ
;

50 } i‡(
vÆ
 < 
vÆues
[
k
-1]) {

51 
pos
 = 
k
-1;

52 
vÆues
[
pos
] = 
vÆ
;

54 #i‡
KEEP_SAMPLES


55 
ßm∂es
[
ßm∂ecou¡
] = 
vÆ
;

57 
ßm∂ecou¡
++;

59 
pos
 > 0 && 
vÆues
[pos-1] > values[pos]) {

60 
ãmp
 = 
vÆues
[
pos
-1];

61 
vÆues
[
pos
-1] = values[pos];

62 
vÆues
[
pos
] = 
ãmp
;

63 
pos
--;

65 
	}
}

68 
	$gë_mö
()

70  
vÆues
[0];

71 
	}
}

74 
	$îr
(
k
)

76 i‡(
ßm∂ecou¡
 < 
k
)

78  (
vÆues
[
k
-1] - values[0])/values[0];

79 
	}
}

82 
	$has_c⁄vîged
(
k_¨g
, 
ïsû⁄_¨g
, 
maxßm∂es
)

84 i‡((
ßm∂ecou¡
 >
k_¨g
) &&

85 ((1 + 
ïsû⁄_¨g
)*
vÆues
[0] >vÆues[
k_¨g
-1]))

86  
ßm∂ecou¡
;

87 i‡((
ßm∂ecou¡
 >
maxßm∂es
))

90 
	}
}

94 
	#ASIZE
 (1 << 17)

	)

96 
	#STRIDE
 8

	)

97 
	g°uff
[
ASIZE
];

98 
	gsök
;

100 
	$˛ór
()

102 
x
 = 
sök
;

103 
i
;

104 
i
 = 0; i < 
ASIZE
; i +
STRIDE
)

105 
x
 +
°uff
[
i
];

106 
sök
 = 
x
;

107 
	}
}

109 
	$fcyc_fuŒ
(
ã°_fun˘
 
f
, 
n
, 
bsize
, 
˛ór_ˇche
,

110 
k
, 
ïsû⁄
, 
maxßm∂es
, 
com≥nßã
)

112 
ªsu…
;

113 
	`öô_ßm∂î
(
k
, 
maxßm∂es
);

114 i‡(
com≥nßã
) {

116 
cyc
;

117 i‡(
˛ór_ˇche
)

118 
	`˛ór
();

119 
	`ª£t
(
gc
, 
n
);

120 
	`°¨t_comp_cou¡î
();

121 
	`f
(
ga
, 
gb
, 
gc
, 
n
, 
bsize
);

122 
cyc
 = 
	`gë_comp_cou¡î
();

123 
	`add_ßm∂e
(
cyc
, 
k
);

124 } !
	`has_c⁄vîged
(
k
, 
ïsû⁄
, 
maxßm∂es
Ë&& 
ßm∂ecou¡
 < maxsamples);

127 
cyc
;

128 i‡(
˛ór_ˇche
)

129 
	`˛ór
();

130 
	`ª£t
(
gc
, 
n
);

131 
	`°¨t_cou¡î
();

132 
	`f
(
ga
, 
gb
, 
gc
, 
n
, 
bsize
);

133 
cyc
 = 
	`gë_cou¡î
();

134 
	`add_ßm∂e
(
cyc
, 
k
);

135 } !
	`has_c⁄vîged
(
k
, 
ïsû⁄
, 
maxßm∂es
Ë&& 
ßm∂ecou¡
 < maxsamples);

137 #ifde‡
DEBUG


139 
i
;

140 
	`¥ötf
(" %d smÆÀ° vÆues: [", 
k
);

141 
i
 = 0; i < 
k
; i++)

142 
	`¥ötf
("%.0f%s", 
vÆues
[
i
], i==
k
-1 ? "]\n" : ", ");

145 
ªsu…
 = 
vÆues
[0];

146 #i‡!
KEEP_VALS


147 
	`‰ì
(
vÆues
);

148 
vÆues
 = 
NULL
;

150  
ªsu…
;

151 
	}
}

153 
	$fcyc
(
ã°_fun˘
 
f
, 
n
, 
bsize
, 
˛órˇche
)

155  
	`fcyc_fuŒ
(
f
, 
n
, 
bsize
, 
˛órˇche
, 3, 0.01, 20, 0);

156 
	}
}

	@mem/matmult/fcycbmm.h

4 (*
	tã°_fun˘
)(
	t¨øy
,árray,árray, , );

7 
	`fcyc
(
ã°_fun˘
 
f
, 
n
, 
bsize
, 
˛órˇche
);

19 
	`fcyc_fuŒ
(
ã°_fun˘
 
f
, 
n
, 
bsize
, 
˛ór_ˇche
,

20 
k
, 
ïsû⁄
, 
maxßm∂es
, 
com≥nßã
);

23 
	`gë_mö
();

30 
	`has_c⁄vîged
(
k
, 
ïsû⁄
, 
maxßm∂es
);

33 
	`îr
(
k
);

	@mem/matmult/fcycmm.c

6 
	~<°dlib.h
>

7 
	~<sys/times.h
>

8 
	~<°dio.h
>

10 
	~"mm.h
"

11 
	~"˛ock.h
"

12 
	~"fcycmm.h
"

15 
¨øy
 
ga
, 
gb
, 
gc
;

16 
ª£t
(
¨øy
, );

18 *
	gvÆues
 = 
NULL
;

19 
	gßm∂ecou¡
 = 0;

21 
	#KEEP_VALS
 1

	)

22 
	#KEEP_SAMPLES
 1

	)

24 #i‡
KEEP_SAMPLES


25 *
	gßm∂es
 = 
NULL
;

29 
	$öô_ßm∂î
(
k
, 
maxßm∂es
)

31 i‡(
vÆues
)

32 
	`‰ì
(
vÆues
);

33 
vÆues
 = 
	`ˇŒoc
(
k
, ());

34 #i‡
KEEP_SAMPLES


35 i‡(
ßm∂es
)

36 
	`‰ì
(
ßm∂es
);

38 
ßm∂es
 = 
	`ˇŒoc
(
maxßm∂es
+
k
, ());

40 
ßm∂ecou¡
 = 0;

41 
	}
}

44 
	$add_ßm∂e
(
vÆ
, 
k
)

46 
pos
 = 0;

47 i‡(
ßm∂ecou¡
 < 
k
) {

48 
pos
 = 
ßm∂ecou¡
;

49 
vÆues
[
pos
] = 
vÆ
;

50 } i‡(
vÆ
 < 
vÆues
[
k
-1]) {

51 
pos
 = 
k
-1;

52 
vÆues
[
pos
] = 
vÆ
;

54 #i‡
KEEP_SAMPLES


55 
ßm∂es
[
ßm∂ecou¡
] = 
vÆ
;

57 
ßm∂ecou¡
++;

59 
pos
 > 0 && 
vÆues
[pos-1] > values[pos]) {

60 
ãmp
 = 
vÆues
[
pos
-1];

61 
vÆues
[
pos
-1] = values[pos];

62 
vÆues
[
pos
] = 
ãmp
;

63 
pos
--;

65 
	}
}

68 
	$gë_mö
()

70  
vÆues
[0];

71 
	}
}

74 
	$îr
(
k
)

76 i‡(
ßm∂ecou¡
 < 
k
)

78  (
vÆues
[
k
-1] - values[0])/values[0];

79 
	}
}

82 
	$has_c⁄vîged
(
k_¨g
, 
ïsû⁄_¨g
, 
maxßm∂es
)

84 i‡((
ßm∂ecou¡
 >
k_¨g
) &&

85 ((1 + 
ïsû⁄_¨g
)*
vÆues
[0] >vÆues[
k_¨g
-1]))

86  
ßm∂ecou¡
;

87 i‡((
ßm∂ecou¡
 >
maxßm∂es
))

90 
	}
}

94 
	#ASIZE
 (1 << 17)

	)

96 
	#STRIDE
 8

	)

97 
	g°uff
[
ASIZE
];

98 
	gsök
;

100 
	$˛ór
()

102 
x
 = 
sök
;

103 
i
;

104 
i
 = 0; i < 
ASIZE
; i +
STRIDE
)

105 
x
 +
°uff
[
i
];

106 
sök
 = 
x
;

107 
	}
}

109 
	$fcyc_fuŒ
(
ã°_fun˘
 
f
, 
n
, 
˛ór_ˇche
,

110 
k
, 
ïsû⁄
, 
maxßm∂es
, 
com≥nßã
)

112 
ªsu…
;

113 
	`öô_ßm∂î
(
k
, 
maxßm∂es
);

114 i‡(
com≥nßã
) {

116 
cyc
;

117 i‡(
˛ór_ˇche
)

118 
	`˛ór
();

119 
	`ª£t
(
gc
, 
n
);

120 
	`°¨t_comp_cou¡î
();

121 
	`f
(
ga
, 
gb
, 
gc
, 
n
);

122 
cyc
 = 
	`gë_comp_cou¡î
();

123 
	`add_ßm∂e
(
cyc
, 
k
);

124 } !
	`has_c⁄vîged
(
k
, 
ïsû⁄
, 
maxßm∂es
Ë&& 
ßm∂ecou¡
 < maxsamples);

127 
cyc
;

128 i‡(
˛ór_ˇche
)

129 
	`˛ór
();

130 
	`ª£t
(
gc
, 
n
);

131 
	`°¨t_cou¡î
();

132 
	`f
(
ga
, 
gb
, 
gc
, 
n
);

133 
cyc
 = 
	`gë_cou¡î
();

134 
	`add_ßm∂e
(
cyc
, 
k
);

135 } !
	`has_c⁄vîged
(
k
, 
ïsû⁄
, 
maxßm∂es
Ë&& 
ßm∂ecou¡
 < maxsamples);

137 #ifde‡
DEBUG


139 
i
;

140 
	`¥ötf
(" %d smÆÀ° vÆues: [", 
k
);

141 
i
 = 0; i < 
k
; i++)

142 
	`¥ötf
("%.0f%s", 
vÆues
[
i
], i==
k
-1 ? "]\n" : ", ");

145 
ªsu…
 = 
vÆues
[0];

146 #i‡!
KEEP_VALS


147 
	`‰ì
(
vÆues
);

148 
vÆues
 = 
NULL
;

150  
ªsu…
;

151 
	}
}

153 
	$fcyc
(
ã°_fun˘
 
f
, 
n
, 
˛ór_ˇche
)

155  
	`fcyc_fuŒ
(
f
, 
n
, 
˛ór_ˇche
, 3, 0.01, 20, 0);

156 
	}
}

	@mem/matmult/fcycmm.h

4 (*
	tã°_fun˘
)(
	t¨øy
,árray,árray, );

8 
	`fcyc
(
ã°_fun˘
 
f
, 
∑øm
, 
˛ór_ˇche
);

20 
	`fcyc_fuŒ
(
ã°_fun˘
 
f
, 
∑øm
, 
˛ór_ˇche
,

21 
k
, 
ïsû⁄
, 
maxßm∂es
, 
com≥nßã
);

24 
	`gë_mö
();

31 
	`has_c⁄vîged
(
k
, 
ïsû⁄
, 
maxßm∂es
);

34 
	`îr
(
k
);

39 
	`fcyc_fuŒ_tod
(
ã°_fun˘
 
f
, 
∑øm
, 
˛ór_ˇche
,

40 
k
, 
ïsû⁄
, 
maxßm∂es
, 
com≥nßã
);

42 
	`fcyc_tod
(
ã°_fun˘
 
f
, 
∑øm
, 
˛ór_ˇche
);

	@mem/matmult/mm.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~"mm.h
"

5 
	~"fcycmm.h
"

6 
	~"˛ock.h
"

9 
	#CLEARCACHE
 1

	)

12 
¨øy
 
	gga
, 
	ggb
, 
	ggc
;

15 
	$checkªsu…
(
¨øy
 
c
, 
n
)

17 
i
, 
j
;

19 
i
 = 0; i < 
n
; i++)

20 
j
 = 0; j < 
n
; j++)

21 i‡(
c
[
i
][
j
] !()
n
) {

22 
	`¥ötf
("Error: badÇumber (%f) inÑesult matrix (%d,%d)\n",

23 
c
[
i
][
j
], i, j);

24 
	`fÊush
(
°dout
);

25 
	`exô
(0);

27 
	}
}

30 
	$run
(
ã°_fun˘
 
f
, 
n
)

32 
˝i
;

34 
˝i
 = 
	`fcyc
(
f
, 
n
, 
CLEARCACHE
) / (n*n*n);

35 
	`checkªsu…
(
gc
, 
n
);

36 (
˝i
);

37 
	}
}

40 
	$ª£t
(
¨øy
 
c
, 
n
)

42 
i
,
j
;

44 
i
 = 0; i < 
n
; i++) {

45 
j
 = 0; j < 
n
; j++) {

46 
c
[
i
][
j
] = 0.0;

49 
	}
}

52 
	$öô
(
¨øy
 
a
,áºay 
b
, 
n
)

54 
i
,
j
;

56 
i
 = 0; i < 
n
; i++) {

57 
j
 = 0; j < 
n
; j++) {

58 
a
[
i
][
j
] = 1.0;

59 
b
[
i
][
j
] = 1.0;

62 
	}
}

66 
	$¥öèºay
(
¨øy
 
a
, 
n
)

68 
i
, 
j
;

70 
i
 = 0; i < 
n
; i++) {

71 
j
 = 0; j < 
n
; j++) {

72 
	`¥ötf
("%5.1‡", 
a
[
i
][
j
]);

74 
	`¥ötf
("\n");

76 
	}
}

81 
	$ijk
(
¨øy
 
A
,áºay 
B
,áºay 
C
, 
n
)

83 
i
, 
j
, 
k
;

84 
sum
;

87 
i
 = 0; i < 
n
; i++)

88 
j
 = 0; j < 
n
; j++) {

89 
sum
 = 0.0;

90 
k
 = 0; k < 
n
; k++)

91 
sum
 +
A
[
i
][
k
]*
B
[k][
j
];

92 
C
[
i
][
j
] +
sum
;

96 
	}
}

98 
	$jik
(
¨øy
 
A
,áºay 
B
,áºay 
C
, 
n
)

100 
i
, 
j
, 
k
;

101 
sum
;

104 
j
 = 0; j < 
n
; j++)

105 
i
 = 0; i < 
n
; i++) {

106 
sum
 = 0.0;

107 
k
 = 0; k < 
n
; k++)

108 
sum
 +
A
[
i
][
k
]*
B
[k][
j
];

109 
C
[
i
][
j
] +
sum
;

112 
	}
}

114 
	$ikj
(
¨øy
 
A
,áºay 
B
,áºay 
C
, 
n
)

116 
i
, 
j
, 
k
;

117 
r
;

120 
i
 = 0; i < 
n
; i++)

121 
k
 = 0; k < 
n
; k++) {

122 
r
 = 
A
[
i
][
k
];

123 
j
 = 0; j < 
n
; j++)

124 
C
[
i
][
j
] +
r
*
B
[
k
][j];

127 
	}
}

129 
	$kij
(
¨øy
 
A
,áºay 
B
,áºay 
C
, 
n
)

131 
i
, 
j
, 
k
;

132 
r
;

135 
k
 = 0; k < 
n
; k++)

136 
i
 = 0; i < 
n
; i++) {

137 
r
 = 
A
[
i
][
k
];

138 
j
 = 0; j < 
n
; j++)

139 
C
[
i
][
j
] +
r
*
B
[
k
][j];

142 
	}
}

144 
	$kji
(
¨øy
 
A
,áºay 
B
,áºay 
C
, 
n
)

146 
i
, 
j
, 
k
;

147 
r
;

150 
k
 = 0; k < 
n
; k++)

151 
j
 = 0; j < 
n
; j++) {

152 
r
 = 
B
[
k
][
j
];

153 
i
 = 0; i < 
n
; i++)

154 
C
[
i
][
j
] +
A
[i][
k
]*
r
;

157 
	}
}

159 
	$jki
(
¨øy
 
A
,áºay 
B
,áºay 
C
, 
n
)

161 
i
, 
j
, 
k
;

162 
r
;

165 
j
 = 0; j < 
n
; j++)

166 
k
 = 0; k < 
n
; k++) {

167 
r
 = 
B
[
k
][
j
];

168 
i
 = 0; i < 
n
; i++)

169 
C
[
i
][
j
] +
A
[i][
k
]*
r
;

172 
	}
}

179 
	$maö
()

181 
n
;

183 
	`öô
(
ga
, 
gb
, 
MAXN
);

185 
	`¥ötf
("matmult cycles/loop iteration\n");

186 
	`¥ötf
("%3s%6s%6s%6s%6s%6s%6s\n", "n",

188 
	`fÊush
(
°dout
);

189 
n
 = 
MINN
;Ç <
MAXN
;Ç +
INCN
) {

190 
	`¥ötf
("%3d ", 
n
);

192 
	`¥ötf
("%5.2‡", 
	`run
(
jki
, 
n
));

193 
	`¥ötf
("%5.2‡", 
	`run
(
kji
, 
n
));

194 
	`¥ötf
("%5.2‡", 
	`run
(
ijk
, 
n
));

195 
	`¥ötf
("%5.2‡", 
	`run
(
jik
, 
n
));

196 
	`¥ötf
("%5.2‡", 
	`run
(
kij
, 
n
));

197 
	`¥ötf
("%5.2‡", 
	`run
(
ikj
, 
n
));

198 
	`¥ötf
("\n");

199 
	`fÊush
(
°dout
);

201 
	`exô
(0);

202 
	}
}

	@mem/matmult/mm.h

1 
	#MINN
 50

	)

2 
	#MAXN
 700

	)

3 
	#INCN
 50

	)

5 
	t¨øy
[
MAXN
][MAXN+513];

7 
	#mö
(
x
,
y
Ë(x<y?x:y)

	)

	@mem/memperf/bind_to_cpu.c

1 
	~<löux/sched.h
>

2 
	~<löux/kî√l.h
>

3 
	~<löux/smp.h
>

4 
	~<löux/î∫o.h
>

6 
asmlökage
 
	$sys_böd_to_˝u
(
mask
)

8 i‡(!
mask
 || !(mask & 
˝u_¥e£¡_m≠
))

9  -
EINVAL
;

11 
cuºít
->
¥o˚ss‹_mask
 = 
mask
;

12 i‡–!(
mask
 & (1<<
cuºít
->
¥o˚ss‹
)) ) {

13 
i
 = 0;

14 
i
 = 0; !(
mask
 & (1<<i)); i++) ;

15 
cuºít
->
œ°_¥o˚ss‹
 = 
i
;

16 
√ed_ªsched
 = 1;

19 
	}
}

	@mem/memperf/cpy.c

1 
	~"˝y.h
"

3 #ifde‡
WIN32


4 
	~<°dlib.h
>

5 
	~<wödows.h
>

6 
	~"gëtimít.h
"

7 
	#gëtime
 
gëcou¡î


	)

10 #ifde‡
PENTIUMCOUNTER


11 
	~"p5tsc.h
"

12 
	#gëtime
 
rdtsc


	)

14 #ifde‡
ALPHACOUNTER


15 
	~"gëtimóÕha.h
"

16 
	#gëtime
 
gë˛ock


	)

18 
	~"gëtime.h
"

19 
	#gëtime
 
gëtimeus


	)

24 
	gu
;

32 
	$˝y_ls1
(* 
a
,
l
,
mx
,
ô
)

34 
¬
;

35 
uöt32
 
hi0
, 
lo0
, 
hi1
, 
lo1
;

37 
¬
=
mx
/
l
;

38 
	`gëtime
(&
hi0
, &
lo0
);

40 *
ay
,*
ax
;

41 
u0
=0;

42 
i
,
j
,
k
;

44 
k
=0; k<
ô
; k++) {

45 
ay
=
a
;

46 
u0
=0;

47 
j
=0; j<
l
; j++) {

48 
i
=0;

49 
ax
=
ay
;

50 
i
<=
¬
-1) {

51 
i
=i+1;

52 
u0
+=*
ax
;

53 
ax
˜x+
l
;

55 
ay
++;

58 
u
=
u0
;

60 
	`gëtime
(&
hi1
, &
lo1
);

61  
	`subåa˘64
(
hi0
,
lo0
,
hi1
,
lo1
);

62 
	}
}

65 
	$˝y_ls2
(* 
a
,
l
,
mx
,
ô
){

66 
¬
;

67 
uöt32
 
hi0
, 
lo0
, 
hi1
, 
lo1
;

69 
¬
=
mx
/
l
;

70 
	`gëtime
(&
hi0
, &
lo0
);

72 *
ay
,*
ax
,*
bx
;

73 
u0
=0,
u1
=0;

74 
m
,
i
,
j
,
k
;

76 
k
=0; k<
ô
; k++) {

77 
ay
=
a
;

78 
u0
=0; 
u1
=0;

79 
j
=0; j<
l
; j++) {

80 
i
=0;

81 
ax
=
ay
;

82 
m
=
l
;

83 
bx
=
ay
+
m
;

84 
m
=m+
l
;

85 
i
<=
¬
-2) {

86 
i
=i+2;

87 
u0
+=*
ax
;

88 
ax
˜x+
m
;

89 
u1
+=*
bx
;

90 
bx
=bx+
m
;

92 
i
<=
¬
-1) {

93 
i
=i+1;

94 
u0
+=*
ax
;

95 
ax
˜x+
l
;

97 
ay
++;

100 
u
=
u0
+
u1
;

102 
	`gëtime
(&
hi1
, &
lo1
);

103  
	`subåa˘64
(
hi0
,
lo0
,
hi1
,
lo1
);

104 
	}
}

107 
	$˝y_ls4
(* 
a
,
l
,
mx
,
ô
)

109 
¬
;

110 
uöt32
 
hi0
, 
lo0
, 
hi1
, 
lo1
;

112 
¬
=
mx
/
l
;

113 
	`gëtime
(&
hi0
, &
lo0
);

115 *
ay
,*
ax
,*
bx
,*
cx
,*
dx
;

116 
u0
=0,
u1
=0,
u2
=0,
u3
=0;

117 
m
,
m2
,
i
,
j
,
k
;

119 
k
=0; k<
ô
; k++) {

120 
ay
=
a
;

121 
u0
=0; 
u1
=0; 
u2
=0; 
u3
=0;

122 
j
=0; j<
l
; j++) {

123 
i
=0;

124 
ax
=
ay
;

125 
m
=
l
;

126 
bx
=
ay
+
m
;

127 
m
=m+
l
;

128 
m2
=
m
;

129 
cx
=
ay
+
m
;

130 
m
=m+
l
;

131 
dx
=
ay
+
m
;

132 
m
=m+
l
;

133 
i
<=
¬
-4) {

134 
i
=i+4;

135 
u0
 +*
ax
;

136 
ax
˜x+
m
;

137 
u1
 +*
bx
;

138 
bx
=bx+
m
;

139 
u2
 +*
cx
;

140 
cx
=cx+
m
;

141 
u3
 +*
dx
;

142 
dx
=dx+
m
;

144 
i
<=
¬
-2) {

145 
i
=i+2;

146 
u0
 +*
ax
;

147 
ax
˜x+
m2
;

148 
u1
 +*
bx
;

149 
bx
=bx+
m2
;

151 
i
<=
¬
-1) {

152 
i
=i+1;

153 
u0
 +*
ax
;

154 
ax
˜x+
l
;

156 
ay
++;

159 
u
=
u0
+
u1
+
u2
+
u3
;

161 
	`gëtime
(&
hi1
, &
lo1
);

162  
	`subåa˘64
(
hi0
,
lo0
,
hi1
,
lo1
);

163 
	}
}

165 
	$˝y_ls8
(*
a
,
l
,
mx
,
ô
)

167 
¬
;

168 
uöt32
 
hi0
, 
lo0
, 
hi1
, 
lo1
;

170 
¬
=
mx
/
l
;

171 i‡(
¬
>16) {

172 
	`gëtime
(&
hi0
, &
lo0
);

174 *
ay
,*
ax
,*
bx
,*
cx
,*
dx
,*
ex
,*
fx
,*
gx
,*
hx
;

175 
u0
=0,
u1
=0,
u2
=0,
u3
=0,
u4
=0,
u5
=0,
u6
=0,
u7
=0;

176 
m
,
m2
,
m4
,
i
,
j
,
k
;

178 
k
=0; k<
ô
; k++) {

179 
ay
=
a
;

180 
u0
=0; 
u1
=0; 
u2
=0; 
u3
=0; 
u4
=0; 
u5
=0; 
u6
=0; 
u7
=0;

181 
j
=0; j<
l
; j++) {

182 
i
=0;

183 
ax
=
ay
;

184 
m
=
l
;

185 
bx
=
ay
+
m
;

186 
m
=m+
l
;

187 
m2
=
m
;

188 
cx
=
ay
+
m
;

189 
m
=m+
l
;

190 
dx
=
ay
+
m
;

191 
m
=m+
l
;

192 
m4
=
m
;

193 
ex
=
ay
+
m
;

194 
m
=m+
l
;

195 
fx
=
ay
+
m
;

196 
m
=m+
l
;

197 
gx
=
ay
+
m
;

198 
m
=m+
l
;

199 
hx
=
ay
+
m
;

200 
m
=m+
l
;

201 
i
<=
¬
-8) {

202 
i
=i+8;

203 
u0
 +*
ax
;

204 
ax
˜x+
m
;

205 
u1
 +*
bx
;

206 
bx
=bx+
m
;

207 
u2
 +*
cx
;

208 
cx
=cx+
m
;

209 
u3
 +*
dx
;

210 
dx
=dx+
m
;

211 
u4
 +*
ex
;

212 
ex
Ûx+
m
;

213 
u5
 +*
fx
;

214 
fx
=fx+
m
;

215 
u6
 +*
gx
;

216 
gx
=gx+
m
;

217 
u7
 +*
hx
;

218 
hx
=hx+
m
;

220 
i
<=
¬
-4) {

221 
i
=i+4;

222 
u0
 +*
ax
;

223 
ax
˜x+
m4
;

224 
u1
 +*
bx
;

225 
bx
=bx+
m4
;

226 
u2
 +*
cx
;

227 
cx
=cx+
m4
;

228 
u3
 +*
dx
;

229 
dx
=dx+
m4
;

231 
i
<=
¬
-2) {

232 
i
=i+2;

233 
u0
 +*
ax
;

234 
ax
˜x+
m2
;

235 
u1
 +*
bx
;

236 
bx
=bx+
m2
;

238 
i
<=
¬
-1) {

239 
i
=i+1;

240 
u0
 +*
ax
;

241 
ax
˜x+
l
;

243 
ay
++;

246 
u
=
u0
+
u1
+
u2
+
u3
+
u4
+
u5
+
u6
+
u7
;

248 
	`gëtime
(&
hi1
, &
lo1
);

250 
	`gëtime
(&
hi0
, &
lo0
);

252 *
ay
,*
ax
,*
bx
,*
cx
,*
dx
;

253 
u0
=0,
u1
=0,
u2
=0,
u3
=0;

254 
m
,
m2
,
i
,
j
,
k
;

256 
k
=0; k<
ô
; k++) {

257 
ay
=
a
;

258 
u0
=0; 
u1
=0; 
u2
=0; 
u3
=0;

259 
j
=0; j<
l
; j++) {

260 
i
=0;

261 
ax
=
ay
;

262 
m
=
l
;

263 
bx
=
ay
+
m
;

264 
m
=m+
l
;

265 
m2
=
m
;

266 
cx
=
ay
+
m
;

267 
m
=m+
l
;

268 
dx
=
ay
+
m
;

269 
m
=m+
l
;

270 
i
<=
¬
-4) {

271 
i
=i+4;

272 
u0
 +*
ax
;

273 
ax
˜x+
m
;

274 
u1
 +*
bx
;

275 
bx
=bx+
m
;

276 
u2
 +*
cx
;

277 
cx
=cx+
m
;

278 
u3
 +*
dx
;

279 
dx
=dx+
m
;

281 
i
<=
¬
-2) {

282 
i
=i+2;

283 
u0
 +*
ax
;

284 
ax
˜x+
m2
;

285 
u1
 +*
bx
;

286 
bx
=bx+
m2
;

288 
i
<=
¬
-1) {

289 
i
=i+1;

290 
u0
 +*
ax
;

291 
ax
˜x+
l
;

293 
ay
++;

296 
u
=
u0
+
u1
+
u2
+
u3
;

298 
	`gëtime
(&
hi1
, &
lo1
);

300  
	`subåa˘64
(
hi0
,
lo0
,
hi1
,
lo1
);

301 
	}
}

306 
	$˝y_vs1
(* 
a
,
l
,
mx
,
ô
)

308 
¬
;

309 
uöt32
 
hi0
, 
lo0
, 
hi1
, 
lo1
;

311 
¬
=
mx
/
l
;

312 
	`gëtime
(&
hi0
, &
lo0
);

314 *
ay
,*
ax
;

315 
u0
;

316 
i
,
j
,
k
;

318 
k
=0; k<
ô
; k++) {

319 
ay
=
a
;

320 
u0
=0;

321 
j
=0; j<
l
; j++) {

322 
i
=0;

323 
ax
=
ay
;

324 
i
<=
¬
-1) {

325 
i
=i+1;

326 *
ax
=
u0
;

327 
ax
˜x+
l
;

329 
ay
++;

333 
	`gëtime
(&
hi1
, &
lo1
);

334  
	`subåa˘64
(
hi0
,
lo0
,
hi1
,
lo1
);

335 
	}
}

337 
	$˝y_vs2
(* 
a
,
l
,
mx
,
ô
)

339 
¬
;

340 
uöt32
 
hi0
, 
lo0
, 
hi1
, 
lo1
;

342 
¬
=
mx
/
l
;

343 
	`gëtime
(&
hi0
, &
lo0
);

345 *
ay
,*
ax
,*
bx
;

346 
u0
,
u1
;

347 
m
,
i
,
j
,
k
;

349 
k
=0; k<
ô
; k++) {

350 
ay
=
a
;

351 
u0
=0; 
u1
=0;

352 
j
=0; j<
l
; j++) {

353 
i
=0;

354 
ax
=
ay
;

355 
m
=
l
;

356 
bx
=
ay
+
m
;

357 
m
=m+
l
;

358 
i
<=
¬
-2) {

359 
i
=i+2;

360 *
ax
=
u0
;

361 
ax
˜x+
m
;

362 *
bx
=
u0
;

363 
bx
=bx+
m
;

365 
i
<=
¬
-1) {

366 
i
=i+1;

367 *
ax
=
u0
;

368 
ax
˜x+
l
;

370 
ay
++;

374 
	`gëtime
(&
hi1
, &
lo1
);

375  
	`subåa˘64
(
hi0
,
lo0
,
hi1
,
lo1
);

376 
	}
}

378 
	$˝y_vs4
(* 
a
,
l
,
mx
,
ô
)

380 
¬
;

381 
uöt32
 
hi0
, 
lo0
, 
hi1
, 
lo1
;

383 
¬
=
mx
/
l
;

384 
	`gëtime
(&
hi0
, &
lo0
);

386 *
ay
,*
ax
,*
bx
,*
cx
,*
dx
;

387 
u0
,
u1
,
u2
,
u3
;

388 
m
,
m2
,
i
,
j
,
k
;

390 
k
=0; k<
ô
; k++) {

391 
ay
=
a
;

392 
u0
=0; 
u1
=0; 
u2
=0; 
u3
=0;

393 
j
=0; j<
l
; j++) {

394 
i
=0;

395 
ax
=
ay
;

396 
m
=
l
;

397 
bx
=
ay
+
m
;

398 
m
=m+
l
;

399 
m2
=
m
;

400 
cx
=
ay
+
m
;

401 
m
=m+
l
;

402 
dx
=
ay
+
m
;

403 
m
=m+
l
;

404 
i
<=
¬
-4) {

405 
i
=i+4;

406 *
ax
=
u0
;

407 
ax
˜x+
m
;

408 *
bx
=
u0
;

409 
bx
=bx+
m
;

410 *
cx
=
u0
;

411 
cx
=cx+
m
;

412 *
dx
=
u0
;

413 
dx
=dx+
m
;

415 
i
<=
¬
-2) {

416 
i
=i+2;

417 *
ax
=
u0
;

418 
ax
˜x+
m2
;

419 *
bx
=
u0
;

420 
bx
=bx+
m2
;

422 
i
<=
¬
-1) {

423 
i
=i+1;

424 *
ax
=
u0
;

425 
ax
˜x+
l
;

427 
ay
++;

431 
	`gëtime
(&
hi1
, &
lo1
);

432  
	`subåa˘64
(
hi0
,
lo0
,
hi1
,
lo1
);

433 
	}
}

435 
	$˝y_vs8
(* 
a
,
l
,
mx
,
ô
)

437 
¬
;

438 
uöt32
 
hi0
, 
lo0
, 
hi1
, 
lo1
;

440 
¬
=
mx
/
l
;

441 i‡(
¬
>16) {

442 
	`gëtime
(&
hi0
, &
lo0
);

444 *
ay
,*
ax
,*
bx
,*
cx
,*
dx
,*
ex
,*
fx
,*
gx
,*
hx
;

445 
u0
,
u1
,
u2
,
u3
,
u4
,
u5
,
u6
,
u7
;

446 
m
,
m2
,
m4
,
i
,
j
,
k
;

448 
k
=0; k<
ô
; k++) {

449 
ay
=
a
;

450 
u0
=0; 
u1
=0; 
u2
=0; 
u3
=0; 
u4
=0; 
u5
=0; 
u6
=0; 
u7
=0;

451 
j
=0; j<
l
; j++) {

452 
i
=0;

453 
ax
=
ay
;

454 
m
=
l
;

455 
bx
=
ay
+
m
;

456 
m
=m+
l
;

457 
m2
=
m
;

458 
cx
=
ay
+
m
;

459 
m
=m+
l
;

460 
dx
=
ay
+
m
;

461 
m
=m+
l
;

462 
m4
=
m
;

463 
ex
=
ay
+
m
;

464 
m
=m+
l
;

465 
fx
=
ay
+
m
;

466 
m
=m+
l
;

467 
gx
=
ay
+
m
;

468 
m
=m+
l
;

469 
hx
=
ay
+
m
;

470 
m
=m+
l
;

471 
i
<=
¬
-8) {

472 
i
=i+8;

473 *
ax
=
u0
;

474 
ax
˜x+
m
;

475 *
bx
=
u0
;

476 
bx
=bx+
m
;

477 *
cx
=
u0
;

478 
cx
=cx+
m
;

479 *
dx
=
u0
;

480 
dx
=dx+
m
;

481 *
ex
=
u0
;

482 
ex
Ûx+
m
;

483 *
fx
=
u0
;

484 
fx
=fx+
m
;

485 *
gx
=
u0
;

486 
gx
=gx+
m
;

487 *
hx
=
u0
;

488 
hx
=hx+
m
;

490 
i
<=
¬
-4) {

491 
i
=i+4;

492 *
ax
=
u0
;

493 
ax
˜x+
m4
;

494 *
bx
=
u0
;

495 
bx
=bx+
m4
;

496 *
cx
=
u0
;

497 
cx
=cx+
m4
;

498 *
dx
=
u0
;

499 
dx
=dx+
m4
;

502 
i
<=
¬
-2) {

503 
i
=i+2;

504 *
ax
=
u0
;

505 
ax
˜x+
m2
;

506 *
bx
=
u0
;

507 
bx
=bx+
m2
;

509 
i
<=
¬
-1) {

510 
i
=i+1;

511 *
ax
=
u0
;

512 
ax
˜x+
l
;

514 
ay
++;

518 
	`gëtime
(&
hi1
, &
lo1
);

520 
	`gëtime
(&
hi0
, &
lo0
);

522 *
ay
,*
ax
,*
bx
,*
cx
,*
dx
;

523 
u0
,
u1
,
u2
,
u3
;

524 
m
,
m2
,
i
,
j
,
k
;

526 
k
=0; k<
ô
; k++) {

527 
ay
=
a
;

528 
u0
=0; 
u1
=0; 
u2
=0; 
u3
=0;

529 
j
=0; j<
l
; j++) {

530 
i
=0;

531 
ax
=
ay
;

532 
m
=
l
;

533 
bx
=
ay
+
m
;

534 
m
=m+
l
;

535 
m2
=
m
;

536 
cx
=
ay
+
m
;

537 
m
=m+
l
;

538 
dx
=
ay
+
m
;

539 
m
=m+
l
;

540 
i
<=
¬
-4) {

541 
i
=i+4;

542 *
ax
=
u0
;

543 
ax
˜x+
m
;

544 *
bx
=
u0
;

545 
bx
=bx+
m
;

546 *
cx
=
u0
;

547 
cx
=cx+
m
;

548 *
dx
=
u0
;

549 
dx
=dx+
m
;

551 
i
<=
¬
-2) {

552 
i
=i+2;

553 *
ax
=
u0
;

554 
ax
˜x+
m2
;

555 *
bx
=
u0
;

556 
bx
=bx+
m2
;

558 
i
<=
¬
-1) {

559 
i
=i+1;

560 *
ax
=
u0
;

561 
ax
˜x+
l
;

563 
ay
++;

567 
	`gëtime
(&
hi1
, &
lo1
);

569  
	`subåa˘64
(
hi0
,
lo0
,
hi1
,
lo1
);

570 
	}
}

574 
	$˝y_lc1
(* 
a
,* 
c
,
l
,
mx
,
ô
)

576 
¬
;

577 
uöt32
 
hi0
, 
lo0
, 
hi1
, 
lo1
;

579 
¬
=
mx
/
l
;

580 
	`gëtime
(&
hi0
, &
lo0
);

582 *
ay
,*
cy
;

583 *
ax
;

584 
i
,
j
,
k
;

586 
k
=0; k<
ô
; k++) {

587 
ay
=
a
;
cy
=
c
;

588 
j
=0; j<
l
; j++) {

589 
i
=0;

590 
ax
=
ay
;

591 
i
<=
¬
-1) {

592 
i
=i+1;

593 *
cy
++ = *
ax
;

594 
ax
˜x+
l
;

596 
ay
++;

600 
	`gëtime
(&
hi1
, &
lo1
);

601  
	`subåa˘64
(
hi0
,
lo0
,
hi1
,
lo1
);

602 
	}
}

604 
	$˝y_lc2
(* 
a
,* 
c
,
l
,
mx
,
ô
)

606 
¬
;

607 
uöt32
 
hi0
, 
lo0
, 
hi1
, 
lo1
;

609 
¬
=
mx
/
l
;

610 
	`gëtime
(&
hi0
, &
lo0
);

612 *
ay
,*
cy
;

613 *
ax
,*
bx
;

614 
m
,
i
,
j
,
k
;

616 
k
=0; k<
ô
; k++) {

617 
ay
=
a
;
cy
=
c
;

618 
j
=0; j<
l
; j++) {

619 
i
=0;

620 
ax
=
ay
;

621 
m
=
l
;

622 
bx
=
ay
+
m
;

623 
m
=m+
l
;

624 
i
<=
¬
-2) {

625 
i
=i+2;

626 *
cy
 = *
ax
;

627 
ax
˜x+
m
;

628 *(
cy
+1Ë*
bx
;

629 
bx
=bx+
m
;

630 
cy
=cy+2;

632 
i
<=
¬
-1) {

633 
i
=i+1;

634 *
cy
++ = *
ax
;

635 
ax
˜x+
l
;

637 
ay
++;

641 
	`gëtime
(&
hi1
, &
lo1
);

642  
	`subåa˘64
(
hi0
,
lo0
,
hi1
,
lo1
);

643 
	}
}

645 
	$˝y_lc4
(* 
a
,* 
c
,
l
,
mx
,
ô
)

647 
¬
;

648 
uöt32
 
hi0
, 
lo0
, 
hi1
, 
lo1
;

650 
¬
=
mx
/
l
;

651 
	`gëtime
(&
hi0
, &
lo0
);

653 *
ay
,*
cy
;

654 *
ax
,*
bx
,*
cx
,*
dx
;

655 
m
,
m2
,
i
,
j
,
k
;

657 
k
=0; k<
ô
; k++) {

658 
ay
=
a
;
cy
=
c
;

659 
j
=0; j<
l
; j++) {

660 
i
=0;

661 
ax
=
ay
;

662 
m
=
l
;

663 
bx
=
ay
+
m
;

664 
m
=m+
l
;

665 
m2
=
m
;

666 
cx
=
ay
+
m
;

667 
m
=m+
l
;

668 
dx
=
ay
+
m
;

669 
m
=m+
l
;

670 
i
<=
¬
-4) {

671 
i
=i+4;

672 *
cy
 = *
ax
;

673 
ax
˜x+
m
;

674 *(
cy
+1Ë*
bx
;

675 
bx
=bx+
m
;

676 *(
cy
+2Ë*
cx
;

677 
cx
=cx+
m
;

678 *(
cy
+3Ë*
dx
;

679 
dx
=dx+
m
;

680 
cy
=cy+4;

682 
i
<=
¬
-2) {

683 
i
=i+2;

684 *
cy
 = *
ax
;

685 
ax
˜x+
m2
;

686 *(
cy
+1Ë*
bx
;

687 
bx
=bx+
m2
;

688 
cy
=cy+2;

690 
i
<=
¬
-1) {

691 
i
=i+1;

692 *
cy
++ = *
ax
;

693 
ax
˜x+
l
;

695 
ay
++;

699 
	`gëtime
(&
hi1
, &
lo1
);

700  
	`subåa˘64
(
hi0
,
lo0
,
hi1
,
lo1
);

701 
	}
}

703 
	$˝y_lc8
(* 
a
,* 
c
,
l
,
mx
,
ô
)

705 
¬
;

706 
uöt32
 
hi0
, 
lo0
, 
hi1
, 
lo1
;

708 
¬
=
mx
/
l
;

709 i‡(
¬
>16) {

710 
	`gëtime
(&
hi0
, &
lo0
);

712 *
ay
,*
cy
;

713 *
ax
,*
bx
,*
cx
,*
dx
,*
ex
,*
fx
,*
gx
,*
hx
;

714 
m
,
m2
,
m4
,
i
,
j
,
k
;

716 
k
=0; k<
ô
; k++) {

717 
ay
=
a
;
cy
=
c
;

718 
j
=0; j<
l
; j++) {

719 
i
=0;

720 
ax
=
ay
;

721 
m
=
l
;

722 
bx
=
ay
+
m
;

723 
m
=m+
l
;

724 
m2
=
m
;

725 
cx
=
ay
+
m
;

726 
m
=m+
l
;

727 
dx
=
ay
+
m
;

728 
m
=m+
l
;

729 
m4
=
m
;

730 
ex
=
ay
+
m
;

731 
m
=m+
l
;

732 
fx
=
ay
+
m
;

733 
m
=m+
l
;

734 
gx
=
ay
+
m
;

735 
m
=m+
l
;

736 
hx
=
ay
+
m
;

737 
m
=m+
l
;

738 
i
<=
¬
-8) {

739 
i
=i+8;

740 *
cy
 = *
ax
;

741 
ax
˜x+
m
;

742 *(
cy
+1Ë*
bx
;

743 
bx
=bx+
m
;

744 *(
cy
+2Ë*
cx
;

745 
cx
=cx+
m
;

746 *(
cy
+3Ë*
dx
;

747 
dx
=dx+
m
;

748 *(
cy
+4Ë*
ex
;

749 
ex
Ûx+
m
;

750 *(
cy
+5Ë*
fx
;

751 
fx
=fx+
m
;

752 *(
cy
+6Ë*
gx
;

753 
gx
=gx+
m
;

754 *(
cy
+7Ë*
hx
;

755 
hx
=hx+
m
;

756 
cy
=cy+8;

758 
i
<=
¬
-4) {

759 
i
=i+4;

760 *
cy
 = *
ax
;

761 
ax
˜x+
m4
;

762 *(
cy
+1Ë*
bx
;

763 
bx
=bx+
m4
;

764 *(
cy
+2Ë*
cx
;

765 
cx
=cx+
m4
;

766 *(
cy
+3Ë*
dx
;

767 
dx
=dx+
m4
;

768 
cy
=cy+4;

770 
i
<=
¬
-2) {

771 
i
=i+2;

772 *
cy
 = *
ax
;

773 
ax
˜x+
m2
;

774 *(
cy
+1Ë*
bx
;

775 
bx
=bx+
m2
;

776 
cy
=cy+2;

778 
i
<=
¬
-1) {

779 
i
=i+1;

780 *
cy
++ = *
ax
;

781 
ax
˜x+
l
;

783 
ay
++;

787 
	`gëtime
(&
hi1
, &
lo1
);

789 
	`gëtime
(&
hi0
, &
lo0
);

791 *
ay
,*
cy
;

792 *
ax
,*
bx
,*
cx
,*
dx
;

793 
m
,
m2
,
i
,
j
,
k
;

795 
k
=0; k<
ô
; k++) {

796 
ay
=
a
;
cy
=
c
;

797 
j
=0; j<
l
; j++) {

798 
i
=0;

799 
ax
=
ay
;

800 
m
=
l
;

801 
bx
=
ay
+
m
;

802 
m
=m+
l
;

803 
m2
=
m
;

804 
cx
=
ay
+
m
;

805 
m
=m+
l
;

806 
dx
=
ay
+
m
;

807 
m
=m+
l
;

808 
i
<=
¬
-4) {

809 
i
=i+4;

810 *
cy
 = *
ax
;

811 
ax
˜x+
m
;

812 *(
cy
+1Ë*
bx
;

813 
bx
=bx+
m
;

814 *(
cy
+2Ë*
cx
;

815 
cx
=cx+
m
;

816 *(
cy
+3Ë*
dx
;

817 
dx
=dx+
m
;

818 
cy
=cy+4;

820 
i
<=
¬
-2) {

821 
i
=i+2;

822 *
cy
 = *
ax
;

823 
ax
˜x+
m2
;

824 *(
cy
+1Ë*
bx
;

825 
bx
=bx+
m2
;

826 
cy
=cy+2;

828 
i
<=
¬
-1) {

829 
i
=i+1;

830 *
cy
 = *
ax
;

831 
ax
˜x+
l
;

832 
cy
=cy+1;

834 
ay
++;

838 
	`gëtime
(&
hi1
, &
lo1
);

840  
	`subåa˘64
(
hi0
,
lo0
,
hi1
,
lo1
);

841 
	}
}

845 
	$˝y_cs1
(* 
a
,* 
c
,
l
,
mx
,
ô
)

847 
¬
;

848 
uöt32
 
hi0
, 
lo0
, 
hi1
, 
lo1
;

850 
¬
=
mx
/
l
;

851 
	`gëtime
(&
hi0
, &
lo0
);

853 *
ay
,*
cy
;

854 *
ax
;

855 
i
,
j
,
k
;

857 
k
=0; k<
ô
; k++) {

858 
ay
=
a
;
cy
=
c
;

859 
j
=0; j<
l
; j++) {

860 
i
=0;

861 
ax
=
ay
;

863 
i
<=
¬
-1) {

864 
i
=i+1;

865 *
ax
=*
cy
;

866 
ax
˜x+
l
;

867 
cy
=cy+1;

869 
ay
++;

873 
	`gëtime
(&
hi1
, &
lo1
);

874  
	`subåa˘64
(
hi0
,
lo0
,
hi1
,
lo1
);

875 
	}
}

878 
	$˝y_cs2
(* 
a
,* 
c
,
l
,
mx
,
ô
)

880 
¬
;

881 
uöt32
 
hi0
, 
lo0
, 
hi1
, 
lo1
;

883 
¬
=
mx
/
l
;

884 
	`gëtime
(&
hi0
, &
lo0
);

886 *
ay
,*
cy
;

887 *
ax
,*
bx
;

888 
m
,
i
,
j
,
k
;

890 
k
=0; k<
ô
; k++) {

891 
ay
=
a
;
cy
=
c
;

892 
j
=0; j<
l
; j++) {

893 
i
=0;

894 
ax
=
ay
;

895 
m
=
l
;

896 
bx
=
ay
+
m
;

897 
m
=m+
l
;

898 
i
<=
¬
-2) {

899 
i
=i+2;

900 *
ax
=*
cy
;

901 
ax
˜x+
m
;

902 *
bx
=*(
cy
+1);

903 
bx
=bx+
m
;

904 
cy
=cy+2;

906 
i
<=
¬
-1) {

907 
i
=i+1;

908 *
ax
=*
cy
;

909 
ax
˜x+
l
;

910 
cy
=cy+1;

912 
ay
++;

916 
	`gëtime
(&
hi1
, &
lo1
);

917  
	`subåa˘64
(
hi0
,
lo0
,
hi1
,
lo1
);

918 
	}
}

920 
	$˝y_cs4
(* 
a
,* 
c
,
l
,
mx
,
ô
)

922 
¬
;

923 
uöt32
 
hi0
, 
lo0
, 
hi1
, 
lo1
;

925 
¬
=
mx
/
l
;

926 
	`gëtime
(&
hi0
, &
lo0
);

928 *
ay
,*
cy
;

929 *
ax
,*
bx
,*
cx
,*
dx
;

930 
m
,
m2
,
i
,
j
,
k
;

932 
k
=0; k<
ô
; k++) {

933 
ay
=
a
;
cy
=
c
;

934 
j
=0; j<
l
; j++) {

935 
i
=0;

936 
ax
=
ay
;

937 
m
=
l
;

938 
bx
=
ay
+
m
;

939 
m
=m+
l
;

940 
m2
=
m
;

941 
cx
=
ay
+
m
;

942 
m
=m+
l
;

943 
dx
=
ay
+
m
;

944 
m
=m+
l
;

945 
i
<=
¬
-4) {

946 
i
=i+4;

947 *
ax
=*
cy
;

948 
ax
˜x+
m
;

949 *
bx
=*(
cy
+1);

950 
bx
=bx+
m
;

951 *
cx
=*(
cy
+2);

952 
cx
=cx+
m
;

953 *
dx
=*(
cy
+3);

954 
dx
=dx+
m
;

955 
cy
=cy+4;

957 
i
<=
¬
-2) {

958 
i
=i+2;

959 *
ax
=*
cy
;

960 
ax
˜x+
m2
;

961 *
bx
=*(
cy
+1);

962 
bx
=bx+
m2
;

963 
cy
=cy+2;

965 
i
<=
¬
-1) {

966 
i
=i+1;

967 *
ax
=*
cy
;

968 
ax
˜x+
l
;

969 
cy
=cy+1;

971 
ay
++;

975 
	`gëtime
(&
hi1
, &
lo1
);

976  
	`subåa˘64
(
hi0
,
lo0
,
hi1
,
lo1
);

977 
	}
}

979 
	$˝y_cs8
(* 
a
,* 
c
,
l
,
mx
,
ô
)

981 
¬
;

982 
uöt32
 
hi0
, 
lo0
, 
hi1
, 
lo1
;

984 
¬
=
mx
/
l
;

985 i‡(
¬
>16) {

986 
	`gëtime
(&
hi0
, &
lo0
);

988 *
ay
,*
cy
;

989 *
ax
,*
bx
,*
cx
,*
dx
,*
ex
,*
fx
,*
gx
,*
hx
;

990 
m
,
m2
,
m4
,
i
,
j
,
k
;

992 
k
=0; k<
ô
; k++) {

993 
ay
=
a
;
cy
=
c
;

994 
j
=0; j<
l
; j++) {

995 
i
=0;

996 
ax
=
ay
;

997 
m
=
l
;

998 
bx
=
ay
+
m
;

999 
m
=m+
l
;

1000 
m2
=
m
;

1001 
cx
=
ay
+
m
;

1002 
m
=m+
l
;

1003 
dx
=
ay
+
m
;

1004 
m
=m+
l
;

1005 
m4
=
m
;

1006 
ex
=
ay
+
m
;

1007 
m
=m+
l
;

1008 
fx
=
ay
+
m
;

1009 
m
=m+
l
;

1010 
gx
=
ay
+
m
;

1011 
m
=m+
l
;

1012 
hx
=
ay
+
m
;

1013 
m
=m+
l
;

1014 
i
<=
¬
-8) {

1015 
i
=i+8;

1016 *
ax
=*
cy
;

1017 
ax
˜x+
m
;

1018 *
bx
=*(
cy
+1);

1019 
bx
=bx+
m
;

1020 *
cx
=*(
cy
+2);

1021 
cx
=cx+
m
;

1022 *
dx
=*(
cy
+3);

1023 
dx
=dx+
m
;

1024 *
ex
=*(
cy
+4);

1025 
ex
Ûx+
m
;

1026 *
fx
=*(
cy
+5);

1027 
fx
=fx+
m
;

1028 *
gx
=*(
cy
+6);

1029 
gx
=gx+
m
;

1030 *
hx
=*(
cy
+7);

1031 
hx
=hx+
m
;

1032 
cy
=cy+8;

1034 
i
<=
¬
-4) {

1035 
i
=i+4;

1036 *
ax
=*
cy
;

1037 
ax
˜x+
m4
;

1038 *
bx
=*(
cy
+1);

1039 
bx
=bx+
m4
;

1040 *
cx
=*(
cy
+2);

1041 
cx
=cx+
m4
;

1042 *
dx
=*(
cy
+3);

1043 
dx
=dx+
m4
;

1044 
cy
=cy+4;

1046 
i
<=
¬
-2) {

1047 
i
=i+2;

1048 *
ax
=*
cy
;

1049 
ax
˜x+
m2
;

1050 *
bx
=*(
cy
+1);

1051 
bx
=bx+
m2
;

1052 
cy
=cy+2;

1054 
i
<=
¬
-1) {

1055 
i
=i+1;

1056 *
ax
=*
cy
;

1057 
ax
˜x+
l
;

1058 
cy
=cy+1;

1060 
ay
++;

1064 
	`gëtime
(&
hi1
, &
lo1
);

1066 
	`gëtime
(&
hi0
, &
lo0
);

1068 *
ay
,*
cy
;

1069 *
ax
,*
bx
,*
cx
,*
dx
;

1070 
m
,
m2
,
i
,
j
,
k
;

1072 
k
=0; k<
ô
; k++) {

1073 
ay
=
a
;
cy
=
c
;

1074 
j
=0; j<
l
; j++) {

1075 
i
=0;

1076 
ax
=
ay
;

1077 
m
=
l
;

1078 
bx
=
ay
+
m
;

1079 
m
=m+
l
;

1080 
m2
=
m
;

1081 
cx
=
ay
+
m
;

1082 
m
=m+
l
;

1083 
dx
=
ay
+
m
;

1084 
m
=m+
l
;

1085 
i
<=
¬
-4) {

1086 
i
=i+4;

1087 *
ax
=*
cy
;

1088 
ax
˜x+
m
;

1089 *
bx
=*(
cy
+1);

1090 
bx
=bx+
m
;

1091 *
cx
=*(
cy
+2);

1092 
cx
=cx+
m
;

1093 *
dx
=*(
cy
+3);

1094 
dx
=dx+
m
;

1095 
cy
=cy+4;

1097 
i
<=
¬
-2) {

1098 
i
=i+2;

1099 *
ax
=*
cy
;

1100 
ax
˜x+
m2
;

1101 *
bx
=*(
cy
+1);

1102 
bx
=bx+
m2
;

1103 
cy
=cy+2;

1105 
i
<=
¬
-1) {

1106 
i
=i+1;

1107 *
ax
=*
cy
;

1108 
ax
˜x+
l
;

1109 
cy
=cy+1;

1111 
ay
++;

1115 
	`gëtime
(&
hi1
, &
lo1
);

1117  
	`subåa˘64
(
hi0
,
lo0
,
hi1
,
lo1
);

1118 
	}
}

	@mem/memperf/cpy.h

1 #i‚de‡
CPY_H


2 
	#CPY_H


	)

5 
˝y_ls1
(* 
a
,
l
,
mx
,
ô
);

6 
˝y_ls2
(* 
a
,
l
,
mx
,
ô
);

7 
˝y_ls4
(* 
a
,
l
,
mx
,
ô
);

8 
˝y_ls8
(* 
a
,
l
,
mx
,
ô
);

11 
˝y_vs1
(* 
a
,
l
,
mx
,
ô
);

12 
˝y_vs2
(* 
a
,
l
,
mx
,
ô
);

13 
˝y_vs4
(* 
a
,
l
,
mx
,
ô
);

14 
˝y_vs8
(* 
a
,
l
,
mx
,
ô
);

17 
˝y_lc1
(* 
a
,* 
c
,
l
,
mx
,
ô
);

18 
˝y_lc2
(* 
a
,* 
c
,
l
,
mx
,
ô
);

19 
˝y_lc4
(* 
a
,* 
c
,
l
,
mx
,
ô
);

20 
˝y_lc8
(* 
a
,* 
c
,
l
,
mx
,
ô
);

22 
˝y_cs1mmx
(* 
a
,* 
c
,
l
,
mx
,
ô
);

25 
˝y_cs1
(* 
a
,* 
c
,
l
,
mx
,
ô
);

26 
˝y_cs2
(* 
a
,* 
c
,
l
,
mx
,
ô
);

27 
˝y_cs4
(* 
a
,* 
c
,
l
,
mx
,
ô
);

28 
˝y_cs8
(* 
a
,* 
c
,
l
,
mx
,
ô
);

	@mem/memperf/cpy_opt.h

1 #i‚de‡
CPY_OPT_H


2 
	#CPY_OPT_H


	)

5 
˝y_ls›t
(* 
a
,
l
,
mx
,
ô
);

8 
˝y_vs›t
(* 
a
,
l
,
mx
,
ô
);

11 
˝y_lc›t
(* 
a
,* 
c
,
l
,
mx
,
ô
);

14 
˝y_cs›t
(* 
a
,* 
c
,
l
,
mx
,
ô
);

	@mem/memperf/cpy_p3opt.c

1 
	~"˝y_›t.h
"

3 #ifde‡
WIN32


4 
	~<°dlib.h
>

5 
	~<wödows.h
>

6 
	~"gëtimít.h
"

7 
	#gëtime
 
gëcou¡î


	)

10 #ifde‡
PENTIUMCOUNTER


11 
	~"p5tsc.h
"

12 
	#gëtime
 
rdtsc


	)

14 #ifde‡
ALPHACOUNTER


15 
	~"gëtimóÕha.h
"

16 
	#gëtime
 
gë˛ock


	)

18 
	~"gëtime.h
"

19 
	#gëtime
 
gëtimeus


	)

24 
	gu
;

30 
	$˝y_ls›t
(* 
a
,
l
,
mx
,
ô
)

32 
¬
;

33 
uöt32
 
hi0
, 
lo0
, 
hi1
, 
lo1
;

34 
¬
=
mx
/
l
;

35 
	`gëtime
(&
hi0
, &
lo0
);

37 *
ay
,*
ax
,*
bx
,*
cx
;

38 
u0
=0,
u1
=0;

39 
m
,
i
,
j
,
k
;

41 
k
=0; k<
ô
; k++) {

42 
ay
=
a
;

43 
u0
=0; 
u1
=0;

44 
j
=0; j<
l
; j++) {

45 
i
=0;

46 
ax
=
ay
;

47 
m
=
l
;

48 
bx
=
ay
+
m
;

49 
m
=m+
l
;

50 
cx
=
ay
+
m
;

51 
m
=m+
l
;

52 
i
<=
¬
-3) {

54 
__asm__
 
	`__vﬁ©ûe__
("

55 
	`movq
 (%0), %%
mm2


56 
∑ddd
 %%
mm2
, %%
mm0


57 
	`movq
 (%1), %%
mm3


58 
∑ddd
 %%
mm3
, %%
mm1


59 
	`movq
 (%2), %%
mm4


60 
∑ddd
 %%
mm4
, %%
mm0
"

62 : "r" (
ax
), "r" (
bx
), "r" (
cx
), "f" (
u0
), "f" (
u1
)

64 #i‡(
__GNUC__
 >3Ë|| (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 96)

68 
i
=i+3;

69 
ax
˜x+
m
;

70 
bx
=bx+
m
;

71 
cx
=cx+
m
;

73 
i
<=
¬
-1) {

74 
__asm__
 
	`__vﬁ©ûe__
("

75 
	`movq
 (%0), %%
mm2


76 
∑ddd
 %%
mm2
, %%
mm0
"

78 : "r" (
ax
), "f" (
u0
)

80 #i‡(
__GNUC__
 >3Ë|| (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 96)

84 
i
=i+1;

85 
ax
˜x+
l
;

87 
ay
++;

90 
__asm__
 
	`__vﬁ©ûe__
("emms");

91 
u
=
u0
+
u1
;

93 
	`gëtime
(&
hi1
, &
lo1
);

94  
	`subåa˘64
(
hi0
,
lo0
,
hi1
,
lo1
);

95 
	}
}

98 
	$˝y_vs›t
(* 
a
,
l
,
mx
,
ô
)

100 
¬
;

101 
uöt32
 
hi0
, 
lo0
, 
hi1
, 
lo1
;

103 
¬
=
mx
/
l
;

104 
	`gëtime
(&
hi0
, &
lo0
);

106 *
ay
,*
ax
,*
bx
;

107 
u0
;

108 
m
,
i
,
j
,
k
;

110 
k
=0; k<
ô
; k++) {

111 
ay
=
a
;

112 
u0
=0;

113 
j
=0; j<
l
; j++) {

114 
i
=0;

115 
ax
=
ay
;

116 
m
=
l
;

117 
bx
=
ay
+
m
;

118 
m
=m+
l
;

119 
i
<=
¬
-2) {

123 
__asm__
 
	`__vﬁ©ûe__
("

124 
mov¡q
 %%
mm0
, (%0)

125 
mov¡q
 %%
mm0
, (%1) "

127 : "r" (
ax
), "r" (
bx
), "f" (
u0
)

129 #i‡(
__GNUC__
 >3Ë|| (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 96)

133 
i
=i+2;

134 
ax
˜x+
m
;

135 
bx
=bx+
m
;

137 i‡(
i
<=
¬
-1) {

138 
__asm__
 
	`__vﬁ©ûe__
("

139 
mov¡q
 %%
mm0
, (%0) "

141 : "r" (
ax
), "f" (
u0
)

143 #i‡(
__GNUC__
 >3Ë|| (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 96)

147 
i
=i+1;

148 
ax
˜x+
l
;

150 
ay
++;

152 
__asm__
 
	`__vﬁ©ûe__
("sfence");

154 
__asm__
 
	`__vﬁ©ûe__
("emms");

156 
	`gëtime
(&
hi1
, &
lo1
);

157  
	`subåa˘64
(
hi0
,
lo0
,
hi1
,
lo1
);

158 
	}
}

162 
	$˝y_lc›t
(* 
a
,* 
c
,
l
,
mx
,
ô
)

164 
¬
;

165 
uöt32
 
hi0
, 
lo0
, 
hi1
, 
lo1
;

167 
¬
=
mx
/
l
;

168 
	`gëtime
(&
hi0
, &
lo0
);

170 *
ay
,*
cy
;

171 *
ax
,*
bx
;

172 
m
,
i
,
j
,
k
;

174 
k
=0; k<
ô
; k++) {

175 
ay
=
a
;
cy
=
c
;

176 
j
=0; j<
l
; j++) {

177 
i
=0;

178 
ax
=
ay
;

179 
m
=
l
;

180 
bx
=
ay
+
m
;

181 
m
=m+
l
;

182 
i
<=
¬
-2) {

183 
__asm__
 
	`__vﬁ©ûe__
("

184 
	`movq
 (%1), %%
mm0


185 
	`movq
 (%2), %%
mm1


186 
mov¡q
 %%
mm0
, (%0)

187 
mov¡q
 %%
mm1
, 8(%0) "

189 : "r" (
cy
), "r" (
ax
), "r" (
bx
)

191 #i‡(
__GNUC__
 >3Ë|| (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 96)

198 
i
=i+2;

199 
ax
˜x+
m
;

200 
bx
=bx+
m
;

201 
cy
=cy+2;

203 i‡(
i
<=
¬
-1) {

204 
__asm__
 
	`__vﬁ©ûe__
("

205 
	`movq
 (%1), %%
mm0


206 
mov¡q
 %%
mm0
, (%0) "

208 : "r" (
cy
), "r" (
ax
)

210 #i‡(
__GNUC__
 >3Ë|| (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 96)

214 
i
=i+1;

215 
ax
˜x+
l
;

216 
cy
=cy+1;

218 
ay
++;

220 
__asm__
 
	`__vﬁ©ûe__
("sfence");

222 
__asm__
 
	`__vﬁ©ûe__
("emms");

224 
	`gëtime
(&
hi1
, &
lo1
);

225  
	`subåa˘64
(
hi0
,
lo0
,
hi1
,
lo1
);

226 
	}
}

230 
	$˝y_cs›t
(* 
a
,* 
c
,
l
,
mx
,
ô
)

232 
¬
;

233 
uöt32
 
hi0
, 
lo0
, 
hi1
, 
lo1
;

234 
¬
=
mx
/
l
;

235 
	`gëtime
(&
hi0
, &
lo0
);

237 *
ay
,*
cy
;

238 *
ax
,*
bx
;

239 
m
,
i
,
j
,
k
;

240 
k
=0; k<
ô
; k++) {

241 
ay
=
a
;
cy
=
c
;

242 
j
=0; j<
l
; j++) {

243 
i
=0;

244 
ax
=
ay
;

245 
m
=
l
;

246 
bx
=
ay
+
m
;

247 
m
=m+
l
;

248 
i
<=
¬
-2) {

249 
__asm__
 
	`__vﬁ©ûe__
("

250 
	`movq
 (%0), %%
mm0


251 
movq
 8(%0), %%
mm1


252 
mov¡q
 %%
mm0
, (%1)

253 
mov¡q
 %%
mm1
, (%2) "

255 : "r" (
cy
), "r" (
ax
), "r" (
bx
)

257 #i‡(
__GNUC__
 >3Ë|| (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 96)

261 
ax
˜x+
m
;

262 
bx
=bx+
m
;

263 
cy
=cy+2;

264 
i
=i+2;

266 i‡(
i
<=
¬
-1) {

267 
__asm__
 
	`__vﬁ©ûe__
("

268 
	`movq
 (%0), %%
mm0


269 
mov¡q
 %%
mm0
, (%1)"

271 : "r" (
cy
), "r" (
ax
)

273 #i‡(
__GNUC__
 >3Ë|| (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 96)

277 
ax
˜x+
l
;

278 
cy
=cy+1;

279 
i
=i+1;

281 
ay
++;

283 
__asm__
 
	`__vﬁ©ûe__
("sfence");

285 
__asm__
 
	`__vﬁ©ûe__
("emms");

287 
	`gëtime
(&
hi1
, &
lo1
);

288  
	`subåa˘64
(
hi0
,
lo0
,
hi1
,
lo1
);

289 
	}
}

	@mem/memperf/cpyr.c

1 
	~"˝yr.h
"

3 
	gu
;

8 
	$˝y_ls_r
(
a
,
l
,
mx
,
ô
)

9 *
a
;

10 
l
,
mx
,
ô
;

12 
¬
;

13 
uöt32
 
hi0
, 
lo0
, 
hi1
, 
lo1
;

15 
¬
=
mx
/
l
;

16 i‡(
¬
>16) {

17 
	`gëtime
(&
hi0
, &
lo0
);

19 
°›
;

20 *
ay
,*
ax
,*
bx
,*
cx
,*
dx
,*
ex
,*
fx
,*
gx
,*
hx
;

21 
u0
,
u1
,
u2
,
u3
,
u4
,
u5
,
u6
,
u7
;

22 
m
,
m0
,
m1
,
i
,
j
,
k
;

24 
k
=0; k<
ô
; k++) {

25 
ay
=
a
; 
°›
=(Ë®+ 
MAXREMOTE
;

26 
u0
=0; 
u1
=0; 
u2
=0; 
u3
=0; 
u4
=0; 
u5
=0; 
u6
=0; 
u7
=0;

27 
j
=0; j<
l
; j++) {

28 
ax
=
ay
;

29 
m
=
l
;

30 
bx
=
ay
+
m
;

31 
m
=m+
l
;

32 
m1
=
m
;

33 
cx
=
ay
+
m
;

34 
m
=m+
l
;

35 
dx
=
ay
+
m
;

36 
m
=m+
l
;

37 
m0
=
m
;

38 
ex
=
ay
+
m
;

39 
m
=m+
l
;

40 
fx
=
ay
+
m
;

41 
m
=m+
l
;

42 
gx
=
ay
+
m
;

43 
m
=m+
l
;

44 
hx
=
ay
+
m
;

45 
m
=m+
l
;

46 
i
=0;

47 
i
<=
¬
-8) {

48 
i
=i+8;

49 
u0
 +*
ax
;

50 
ax
˜x+
m
;

51 
u1
 +*
bx
;

52 
bx
=bx+
m
;

53 
u2
 +*
cx
;

54 
cx
=cx+
m
;

55 
u3
 +*
dx
;

56 
dx
=dx+
m
;

57 
u4
 +*
ex
;

58 
ex
Ûx+
m
;

59 
u5
 +*
fx
;

60 
fx
=fx+
m
;

61 
u6
 +*
gx
;

62 
gx
=gx+
m
;

63 
u7
 +*
hx
;

64 
hx
=hx+
m
;

65 i‡((Ë
hx
>=
°›
) {

66 
DEBUGPRINT
 {

67 
	`¥ötf
("mx %d: hx %d,á %d, diff %d\n",

68 
mx
,
hx
,
a
,() (() hx - ()á));

69 
	`fÊush
(
°dout
);

71 
ax
=
ay
;

72 
m
=
l
;

73 
bx
=
ay
+
m
;

74 
m
=m+
l
;

75 
m1
=
m
;

76 
cx
=
ay
+
m
;

77 
m
=m+
l
;

78 
dx
=
ay
+
m
;

79 
m
=m+
l
;

80 
m0
=
m
;

81 
ex
=
ay
+
m
;

82 
m
=m+
l
;

83 
fx
=
ay
+
m
;

84 
m
=m+
l
;

85 
gx
=
ay
+
m
;

86 
m
=m+
l
;

87 
hx
=
ay
+
m
;

88 
m
=m+
l
;

91 
i
<=
¬
-4) {

92 
i
=i+4;

93 
u0
 +*
ax
;

94 
ax
˜x+
m0
;

95 
u1
 +*
bx
;

96 
bx
=bx+
m0
;

97 
u2
 +*
cx
;

98 
cx
=cx+
m0
;

99 
u3
 +*
dx
;

100 
dx
=dx+
m0
;

101 i‡((Ë
dx
>=
°›
) {

102 
DEBUGPRINT
 {

103 
	`¥ötf
("mx %d: dx %d,á %d, diff %d\n",

104 
mx
,
dx
,
a
,() (() dx - ()á));

105 
	`fÊush
(
°dout
);

107 
ax
=
ay
;

108 
m
=
l
;

109 
bx
=
ay
+
m
;

110 
m
=m+
l
;

111 
cx
=
ay
+
m
;

112 
m
=m+
l
;

113 
dx
=
ay
+
m
;

114 
m
=m+
l
;

117 
i
<=
¬
-2) {

118 
i
=i+2;

119 
u0
 +*
ax
;

120 
ax
˜x+
m1
;

121 
u1
 +*
bx
;

122 
bx
=bx+
m1
;

123 i‡((Ë
bx
>=
°›
) {

124 
DEBUGPRINT
 {

125 
	`¥ötf
("mx %d: bx %d,á %d, diff %d\n",

126 
mx
,
bx
,
a
,(Ë((Ë
dx
 - ()á));

127 
	`fÊush
(
°dout
);

129 
ax
=
ay
;

130 
m
=
l
;

131 
bx
=
ay
+
m
;

132 
m
=m+
l
;

135 
i
<=
¬
-1) {

136 
i
=i+1;

137 
u0
 +*
ax
;

138 
ax
˜x+
l
;

139 i‡((Ë
ax
>=
°›
) {

140 
DEBUGPRINT
 {

141 
	`¥ötf
("mx %d:áx %d,á %d, diff %d\n",

142 
mx
,
ax
,
a
,(Ë((Ë
dx
 - ()á));

143 
	`fÊush
(
°dout
);

145 
ax
=
ay
;

148 
ay
++;

151 
u
=
u0
+
u1
+
u2
+
u3
+
u4
+
u5
+
u6
+
u7
;

153 
	`gëtime
(&
hi1
, &
lo1
);

155 
	`gëtime
(&
hi0
, &
lo0
);

157 
°›
;

158 *
ay
,*
ax
,*
bx
,*
cx
,*
dx
;

159 
u0
,
u1
,
u2
,
u3
;

160 
m
,
m0
,
m1
,
i
,
j
,
k
;

162 
k
=0; k<
ô
; k++) {

163 
ay
=
a
; 
°›
=(Ë®+ 
MAXREMOTE
;

164 
u0
=0; 
u1
=0; 
u2
=0; 
u3
=0;

165 
j
=0; j<
l
; j++) {

166 
ax
=
ay
;

167 
m
=
l
;

168 
bx
=
ay
+
m
;

169 
m
=m+
l
;

170 
m1
=
m
;

171 
cx
=
ay
+
m
;

172 
m
=m+
l
;

173 
dx
=
ay
+
m
;

174 
m
=m+
l
;

175 
i
=0;

176 
i
<=
¬
-4) {

177 
i
=i+4;

178 
u0
 +*
ax
;

179 
ax
˜x+
m
;

180 
u1
 +*
bx
;

181 
bx
=bx+
m
;

182 
u2
 +*
cx
;

183 
cx
=cx+
m
;

184 
u3
 +*
dx
;

185 
dx
=dx+
m
;

186 i‡((Ë
dx
>=
°›
) {

187 
DEBUGPRINT
 {

188 
	`¥ötf
("mx %d: dx %d,á %d, diff %d\n",

189 
mx
,
dx
,
a
,() (() dx - ()á));

190 
	`fÊush
(
°dout
);

192 
ax
=
ay
;

193 
m
=
l
;

194 
bx
=
ay
+
m
;

195 
m
=m+
l
;

196 
cx
=
ay
+
m
;

197 
m
=m+
l
;

198 
dx
=
ay
+
m
;

199 
m
=m+
l
;

202 
i
<=
¬
-2) {

203 
i
=i+2;

204 
u0
 +*
ax
;

205 
ax
˜x+
m1
;

206 
u1
 +*
bx
;

207 
bx
=bx+
m1
;

208 i‡((Ë
bx
>=
°›
) {

209 
DEBUGPRINT
 {

210 
	`¥ötf
("mx %d: bx %d,á %d, diff %d\n",

211 
mx
,
bx
,
a
,(Ë((Ë
dx
 - ()á));

212 
	`fÊush
(
°dout
);

214 
ax
=
ay
;

215 
m
=
l
;

216 
bx
=
ay
+
m
;

217 
m
=m+
l
;

220 
i
<=
¬
-1) {

221 
i
=i+1;

222 
u0
 +*
ax
;

223 
ax
˜x+
l
;

224 i‡((Ë
ax
>=
°›
) {

225 
DEBUGPRINT
 {

226 
	`¥ötf
("mx %d:áx %d,á %d, diff %d\n",

227 
mx
,
ax
,
a
,(Ë((Ë
dx
 - ()á));

228 
	`fÊush
(
°dout
);

230 
ax
=
ay
;

233 
ay
++;

236 
u
=
u0
+
u1
+
u2
+
u3
;

238 
	`gëtime
(&
hi1
, &
lo1
);

241  
	`subåa˘64
(
hi0
,
lo0
,
hi1
,
lo1
);

242 
	}
}

244 
	$˝y_vs_r
(
a
,
l
,
mx
,
ô
)

245 *
a
;

246 
l
,
mx
,
ô
;

248 
¬
;

249 
uöt32
 
hi0
, 
lo0
, 
hi1
, 
lo1
;

251 
¬
=
mx
/
l
;

252 i‡(
¬
>16) {

253 
	`gëtime
(&
hi0
, &
lo0
);

255 
°›
;

256 *
ay
,*
ax
,*
bx
,*
cx
,*
dx
,*
ex
,*
fx
,*
gx
,*
hx
;

257 
u0
,
u1
,
u2
,
u3
,
u4
,
u5
,
u6
,
u7
;

258 
m
,
m0
,
m1
,
i
,
j
,
k
;

260 
k
=0; k<
ô
; k++) {

261 
ay
=
a
;
°›
=(Ë®+ 
MAXREMOTE
;

262 
u0
=0; 
u1
=1; 
u2
=2; 
u3
=3; 
u4
=4; 
u5
=5; 
u6
=6; 
u7
=7;

263 
j
=0; j<
l
; j++) {

264 
ax
=
ay
;

265 
m
=
l
;

266 
bx
=
ay
+
m
;

267 
m
=m+
l
;

268 
m1
=
m
;

269 
cx
=
ay
+
m
;

270 
m
=m+
l
;

271 
dx
=
ay
+
m
;

272 
m
=m+
l
;

273 
m0
=
m
;

274 
ex
=
ay
+
m
;

275 
m
=m+
l
;

276 
fx
=
ay
+
m
;

277 
m
=m+
l
;

278 
gx
=
ay
+
m
;

279 
m
=m+
l
;

280 
hx
=
ay
+
m
;

281 
m
=m+
l
;

282 
i
=0;

283 
i
<=
¬
-8) {

284 
i
=i+8;

285 *
ax
=
u0
;

286 
ax
˜x+
m
;

287 *
bx
=
u1
;

288 
bx
=bx+
m
;

289 *
cx
=
u2
;

290 
cx
=cx+
m
;

291 *
dx
=
u3
;

292 
dx
=dx+
m
;

293 *
ex
=
u4
;

294 
ex
Ûx+
m
;

295 *
fx
=
u5
;

296 
fx
=fx+
m
;

297 *
gx
=
u6
;

298 
gx
=gx+
m
;

299 *
hx
=
u7
;

300 
hx
=hx+
m
;

301 i‡((Ë
hx
>=
°›
) {

302 
DEBUGPRINT
 {

303 
	`¥ötf
("mx %d: hx %d,á %d, diff %d\n",

304 
mx
,
hx
,
a
,() (() hx - ()á));

305 
	`fÊush
(
°dout
);

307 
ax
=
ay
;

308 
m
=
l
;

309 
bx
=
ay
+
m
;

310 
m
=m+
l
;

311 
m1
=
m
;

312 
cx
=
ay
+
m
;

313 
m
=m+
l
;

314 
dx
=
ay
+
m
;

315 
m
=m+
l
;

316 
m0
=
m
;

317 
ex
=
ay
+
m
;

318 
m
=m+
l
;

319 
fx
=
ay
+
m
;

320 
m
=m+
l
;

321 
gx
=
ay
+
m
;

322 
m
=m+
l
;

323 
hx
=
ay
+
m
;

324 
m
=m+
l
;

327 
i
<=
¬
-4) {

328 
i
=i+4;

329 *
ax
=
u0
;

330 
ax
˜x+
m0
;

331 *
bx
=
u1
;

332 
bx
=bx+
m0
;

333 *
cx
=
u2
;

334 
cx
=cx+
m0
;

335 *
dx
=
u3
;

336 
dx
=dx+
m0
;

337 i‡((Ë
dx
>=
°›
) {

338 
DEBUGPRINT
 {

339 
	`¥ötf
("mx %d: dx %d,á %d, diff %d\n",

340 
mx
,
dx
,
a
,() (() dx - ()á));

341 
	`fÊush
(
°dout
);

343 
ax
=
ay
;

344 
m
=
l
;

345 
bx
=
ay
+
m
;

346 
m
=m+
l
;

347 
cx
=
ay
+
m
;

348 
m
=m+
l
;

349 
dx
=
ay
+
m
;

350 
m
=m+
l
;

353 
i
<=
¬
-2) {

354 
i
=i+2;

355 *
ax
=
u0
;

356 
ax
˜x+
m1
;

357 *
bx
=
u1
;

358 
bx
=bx+
m1
;

359 i‡((Ë
bx
>=
°›
) {

360 
DEBUGPRINT
 {

361 
	`¥ötf
("mx %d: bx %d,á %d, diff %d\n",

362 
mx
,
bx
,
a
,(Ë((Ë
dx
 - ()á));

363 
	`fÊush
(
°dout
);

365 
ax
=
ay
;

366 
m
=
l
;

367 
bx
=
ay
+
m
;

368 
m
=m+
l
;

371 
i
<=
¬
-1) {

372 
i
=i+1;

373 *
ax
=
u0
;

374 
ax
˜x+
l
;

375 i‡((Ë
ax
>=
°›
) {

376 
DEBUGPRINT
 {

377 
	`¥ötf
("mx %d:áx %d,á %d, diff %d\n",

378 
mx
,
ax
,
a
,(Ë((Ë
dx
 - ()á));

379 
	`fÊush
(
°dout
);

381 
ax
=
ay
;

384 
ay
++;

387 
	`gëtime
(&
hi1
, &
lo1
);

389 
	`gëtime
(&
hi0
, &
lo0
);

391 
°›
;

392 *
ay
,*
ax
,*
bx
,*
cx
,*
dx
;

393 
u0
,
u1
,
u2
,
u3
;

394 
m
,
m0
,
m1
,
i
,
j
,
k
;

396 
k
=0; k<
ô
; k++) {

397 
ay
=
a
;
°›
=(Ë®+ 
MAXREMOTE
;

398 
u0
=0; 
u1
=1; 
u2
=2; 
u3
=3;

399 
j
=0; j<
l
; j++) {

400 
ax
=
ay
;

401 
m
=
l
;

402 
bx
=
ay
+
m
;

403 
m
=m+
l
;

404 
m1
=
m
;

405 
cx
=
ay
+
m
;

406 
m
=m+
l
;

407 
dx
=
ay
+
m
;

408 
m
=m+
l
;

409 
i
=0;

410 
i
<=
¬
-4) {

411 
i
=i+4;

412 *
ax
=
u0
;

413 
ax
˜x+
m
;

414 *
bx
=
u1
;

415 
bx
=bx+
m
;

416 *
cx
=
u2
;

417 
cx
=cx+
m
;

418 *
dx
=
u3
;

419 
dx
=dx+
m
;

420 i‡((Ë
dx
>=
°›
) {

421 
DEBUGPRINT
 {

422 
	`¥ötf
("mx %d: dx %d,á %d, diff %d\n",

423 
mx
,
dx
,
a
,() (() dx - ()á));

424 
	`fÊush
(
°dout
);

426 
ax
=
ay
;

427 
m
=
l
;

428 
bx
=
ay
+
m
;

429 
m
=m+
l
;

430 
cx
=
ay
+
m
;

431 
m
=m+
l
;

432 
dx
=
ay
+
m
;

433 
m
=m+
l
;

436 
i
<=
¬
-2) {

437 
i
=i+2;

438 *
ax
=
u0
;

439 
ax
˜x+
m1
;

440 *
bx
=
u1
;

441 
bx
=bx+
m1
;

442 i‡((Ë
bx
>=
°›
) {

443 
DEBUGPRINT
 {

444 
	`¥ötf
("mx %d: bx %d,á %d, diff %d\n",

445 
mx
,
bx
,
a
,(Ë((Ë
dx
 - ()á));

446 
	`fÊush
(
°dout
);

448 
ax
=
ay
;

449 
m
=
l
;

450 
bx
=
ay
+
m
;

451 
m
=m+
l
;

454 
i
<=
¬
-1) {

455 
i
=i+1;

456 *
ax
=
u0
;

457 
ax
˜x+
l
;

458 i‡((Ë
ax
>=
°›
) {

459 
DEBUGPRINT
 {

460 
	`¥ötf
("mx %d:áx %d,á %d, diff %d\n",

461 
mx
,
ax
,
a
,(Ë((Ë
dx
 - ()á));

462 
	`fÊush
(
°dout
);

464 
ax
=
ay
;

467 
ay
++;

470 
	`gëtime
(&
hi1
, &
lo1
);

473  
	`subåa˘64
(
hi0
,
lo0
,
hi1
,
lo1
);

474 
	}
}

476 
	$˝y_lc_r
(
a
,
c
,
l
,
mx
,
ô
)

477 *
a
,*
c
;

478 
l
,
mx
,
ô
;

480 
¬
;

481 
uöt32
 
hi0
, 
lo0
, 
hi1
, 
lo1
;

483 
¬
=
mx
/
l
;

484 i‡(
¬
>16) {

485 
	`gëtime
(&
hi0
, &
lo0
);

487 *
ay
,*
cy
;

488 
cy°›
;

489 *
ax
,*
bx
,*
cx
,*
dx
,*
ex
,*
fx
,*
gx
,*
hx
;

490 
u0
,
u1
,
u2
,
u3
,
u4
,
u5
,
u6
,
u7
;

491 
m
,
m0
,
m1
,
i
,
j
,
k
;

493 
k
=0; k<
ô
; k++) {

494 
ay
=
a
;
cy
=
c
; 
cy°›
=(Ëcy + 
MAXREMOTE
;

495 
DEBUGPRINT
 {

496 
	`¥ötf
("CY,C, maxªm, cy°› sèπ %d, %d, %d, %d\n", 
cy
,
c
, 
MAXREMOTE
, 
cy°›
);

497 
	`fÊush
(
°dout
);

499 
u0
=0; 
u1
=0; 
u2
=0; 
u3
=0; 
u4
=0; 
u5
=0; 
u6
=0; 
u7
=0;

500 
j
=0; j<
l
; j++) {

501 
ax
=
ay
;

502 
m
=
l
;

503 
bx
=
ay
+
m
;

504 
m
=m+
l
;

505 
m1
=
m
;

506 
cx
=
ay
+
m
;

507 
m
=m+
l
;

508 
dx
=
ay
+
m
;

509 
m
=m+
l
;

510 
m0
=
m
;

511 
ex
=
ay
+
m
;

512 
m
=m+
l
;

513 
fx
=
ay
+
m
;

514 
m
=m+
l
;

515 
gx
=
ay
+
m
;

516 
m
=m+
l
;

517 
hx
=
ay
+
m
;

518 
m
=m+
l
;

519 
i
=0;

520 
i
<=
¬
-8) {

521 
i
=i+8;

522 *
cy
 = *
ax
;

523 
ax
˜x+
m
;

524 *(
cy
+1Ë*
bx
;

525 
bx
=bx+
m
;

526 *(
cy
+2Ë*
cx
;

527 
cx
=cx+
m
;

528 *(
cy
+3Ë*
dx
;

529 
dx
=dx+
m
;

530 *(
cy
+4Ë*
ex
;

531 
ex
Ûx+
m
;

532 *(
cy
+5Ë*
fx
;

533 
fx
=fx+
m
;

534 *(
cy
+6Ë*
gx
;

535 
gx
=gx+
m
;

536 *(
cy
+7Ë*
hx
;

537 
hx
=hx+
m
;

538 
cy
=cy+8;

539 i‡((Ë
cy
>=
cy°›
) {

540 
DEBUGPRINT
 {

541 
	`¥ötf
("mx %d: cy %d, c %d, diff %d\n",

542 
mx
,
cy
,
c
,() (() cy - () c));

543 
	`fÊush
(
°dout
);

545 
cy
=
c
;

548 
i
<=
¬
-4) {

549 
i
=i+4;

550 *
cy
 = *
ax
;

551 
ax
˜x+
m0
;

552 *(
cy
+1Ë*
bx
;

553 
bx
=bx+
m0
;

554 *(
cy
+2Ë*
cx
;

555 
cx
=cx+
m0
;

556 *(
cy
+3Ë*
dx
;

557 
dx
=dx+
m0
;

558 
cy
=cy+4;

559 
DEBUGPRINT
 {
	`¥ötf
("4 mx %d: cy %d\n",
mx
,
cy
);
	`fÊush
(
°dout
);}

561 
i
<=
¬
-2) {

562 
i
=i+2;

563 *
cy
 = *
ax
;

564 
ax
˜x+
m1
;

565 *(
cy
+1Ë*
bx
;

566 
bx
=bx+
m1
;

567 
cy
=cy+2;

568 
DEBUGPRINT
 {
	`¥ötf
("2 mx %d: cy %d\n",
mx
,
cy
);
	`fÊush
(
°dout
);}

570 
i
<=
¬
-1) {

571 
i
=i+1;

572 *
cy
 = *
ax
;

573 
ax
˜x+
l
;

574 
cy
=cy+1;

575 
DEBUGPRINT
 {
	`¥ötf
("1 mx %d: cy %d\n",
mx
,
cy
);
	`fÊush
(
°dout
);}

577 
ay
++;

581 
	`gëtime
(&
hi1
, &
lo1
);

583 
	`gëtime
(&
hi0
, &
lo0
);

585 *
ay
,*
cy
;

586 *
ax
,*
bx
,*
cx
,*
dx
;

587 
u0
,
u1
,
u2
,
u3
;

588 
m
,
m0
,
m1
,
i
,
j
,
k
;

590 
k
=0; k<
ô
; k++) {

591 
ay
=
a
;
cy
=
c
;

592 
u0
=0; 
u1
=0; 
u2
=0; 
u3
=0;

593 
j
=0; j<
l
; j++) {

594 
ax
=
ay
;

595 
m
=
l
;

596 
bx
=
ay
+
m
;

597 
m
=m+
l
;

598 
m1
=
m
;

599 
cx
=
ay
+
m
;

600 
m
=m+
l
;

601 
dx
=
ay
+
m
;

602 
m
=m+
l
;

603 
i
=0;

604 
i
<=
¬
-4) {

605 
i
=i+4;

606 *
cy
 = *
ax
;

607 
ax
˜x+
m
;

608 *(
cy
+1Ë*
bx
;

609 
bx
=bx+
m
;

610 *(
cy
+2Ë*
cx
;

611 
cx
=cx+
m
;

612 *(
cy
+3Ë*
dx
;

613 
dx
=dx+
m
;

614 
cy
=cy+4;

615 
DEBUGPRINT
 {
	`¥ötf
("42 mx %d: cy %d\n",
mx
,
cy
);
	`fÊush
(
°dout
);}

617 
i
<=
¬
-2) {

618 
i
=i+2;

619 *
cy
 = *
ax
;

620 
ax
˜x+
m1
;

621 *(
cy
+1Ë*
bx
;

622 
bx
=bx+
m1
;

623 
cy
=cy+2;

624 
DEBUGPRINT
 {
	`¥ötf
("22 mx %d: cy %d\n",
mx
,
cy
);
	`fÊush
(
°dout
);}

626 
i
<=
¬
-1) {

627 
i
=i+1;

628 *
cy
 = *
ax
;

629 
ax
˜x+
l
;

630 
cy
=cy+1;

631 
DEBUGPRINT
 {
	`¥ötf
("41 mx %d: cy %d\n",
mx
,
cy
);
	`fÊush
(
°dout
);}

633 
ay
++;

637 
	`gëtime
(&
hi1
, &
lo1
);

641  
	`subåa˘64
(
hi0
,
lo0
,
hi1
,
lo1
);

642 
	}
}

644 
	$˝y_cs_r
(
a
,
c
,
l
,
mx
,
ô
)

645 *
a
,*
c
;

646 
l
,
mx
,
ô
;

648 
¬
;

649 
uöt32
 
hi0
, 
lo0
, 
hi1
, 
lo1
;

651 
¬
=
mx
/
l
;

652 i‡(
¬
>16) {

653 
	`gëtime
(&
hi0
, &
lo0
);

655 *
ay
,*
cy
;

656 
°›
;

657 *
ax
,*
bx
,*
cx
,*
dx
,*
ex
,*
fx
,*
gx
,*
hx
;

658 
u0
,
u1
,
u2
,
u3
,
u4
,
u5
,
u6
,
u7
;

659 
m
,
m0
,
m1
,
i
,
j
,
k
;

661 
k
=0; k<
ô
; k++) {

662 
ay
=
a
;
cy
=
c
;
°›
=(Ë®+ 
MAXREMOTE
;

663 
u0
=0; 
u1
=0; 
u2
=0; 
u3
=0; 
u4
=0; 
u5
=0; 
u6
=0; 
u7
=0;

664 
j
=0; j<
l
; j++) {

665 
ax
=
ay
;

666 
m
=
l
;

667 
bx
=
ay
+
m
;

668 
m
=m+
l
;

669 
m1
=
m
;

670 
cx
=
ay
+
m
;

671 
m
=m+
l
;

672 
dx
=
ay
+
m
;

673 
m
=m+
l
;

674 
m0
=
m
;

675 
ex
=
ay
+
m
;

676 
m
=m+
l
;

677 
fx
=
ay
+
m
;

678 
m
=m+
l
;

679 
gx
=
ay
+
m
;

680 
m
=m+
l
;

681 
hx
=
ay
+
m
;

682 
m
=m+
l
;

683 
i
=0;

684 
i
<=
¬
-8) {

685 
i
=i+8;

686 *
ax
=*
cy
;

687 
ax
˜x+
m
;

688 *
bx
=*(
cy
+1);

689 
bx
=bx+
m
;

690 *
cx
=*(
cy
+2);

691 
cx
=cx+
m
;

692 *
dx
=*(
cy
+3);

693 
dx
=dx+
m
;

694 *
ex
=*(
cy
+4);

695 
ex
Ûx+
m
;

696 *
fx
=*(
cy
+5);

697 
fx
=fx+
m
;

698 *
gx
=*(
cy
+6);

699 
gx
=gx+
m
;

700 *
hx
=*(
cy
+7);

701 
hx
=hx+
m
;

702 
cy
=cy+8;

703 i‡((Ë
hx
>=
°›
) {

704 
DEBUGPRINT
 {

705 
	`¥ötf
("mx %d: hx %d,á %d, diff %d\n",

706 
mx
,
hx
,
a
,() (() hx - ()á));

707 
	`fÊush
(
°dout
);

709 
ax
=
ay
;

710 
m
=
l
;

711 
bx
=
ay
+
m
;

712 
m
=m+
l
;

713 
m1
=
m
;

714 
cx
=
ay
+
m
;

715 
m
=m+
l
;

716 
dx
=
ay
+
m
;

717 
m
=m+
l
;

718 
m0
=
m
;

719 
ex
=
ay
+
m
;

720 
m
=m+
l
;

721 
fx
=
ay
+
m
;

722 
m
=m+
l
;

723 
gx
=
ay
+
m
;

724 
m
=m+
l
;

725 
hx
=
ay
+
m
;

726 
m
=m+
l
;

729 
i
<=
¬
-4) {

730 
i
=i+4;

731 *
ax
=*
cy
;

732 
ax
˜x+
m0
;

733 *
bx
=*(
cy
+1);

734 
bx
=bx+
m0
;

735 *
cx
=*(
cy
+2);

736 
cx
=cx+
m0
;

737 *
dx
=*(
cy
+3);

738 
dx
=dx+
m0
;

739 
cy
=cy+4;

741 
i
<=
¬
-2) {

742 
i
=i+2;

743 *
ax
=*
cy
;

744 
ax
˜x+
m1
;

745 *
bx
=*(
cy
+1);

746 
bx
=bx+
m1
;

747 
cy
=cy+2;

749 
i
<=
¬
-1) {

750 
i
=i+1;

751 *
ax
=*
cy
;

752 
ax
˜x+
l
;

753 
cy
=cy+1;

755 
ay
++;

758 
	`gëtime
(&
hi1
, &
lo1
);

760 
	`gëtime
(&
hi0
, &
lo0
);

762 *
ay
,*
cy
;

763 *
ax
,*
bx
,*
cx
,*
dx
;

764 
u0
,
u1
,
u2
,
u3
;

765 
m
,
m0
,
m1
,
i
,
j
,
k
;

767 
k
=0; k<
ô
; k++) {

768 
ay
=
a
;
cy
=
c
;

769 
u0
=0; 
u1
=0; 
u2
=0; 
u3
=0;

770 
j
=0; j<
l
; j++) {

771 
ax
=
ay
;

772 
m
=
l
;

773 
bx
=
ay
+
m
;

774 
m
=m+
l
;

775 
m1
=
m
;

776 
cx
=
ay
+
m
;

777 
m
=m+
l
;

778 
dx
=
ay
+
m
;

779 
m
=m+
l
;

780 
i
=0;

781 
i
<=
¬
-4) {

782 
i
=i+4;

783 *
ax
=*
cy
;

784 
ax
˜x+
m
;

785 *
bx
=*(
cy
+1);

786 
bx
=bx+
m
;

787 *
cx
=*(
cy
+2);

788 
cx
=cx+
m
;

789 *
dx
=*(
cy
+3);

790 
dx
=dx+
m
;

791 
cy
=cy+4;

793 
i
<=
¬
-2) {

794 
i
=i+2;

795 *
ax
=*
cy
;

796 
ax
˜x+
m1
;

797 *
bx
=*(
cy
+1);

798 
bx
=bx+
m1
;

799 
cy
=cy+2;

801 
i
<=
¬
-1) {

802 
i
=i+1;

803 *
ax
=*
cy
;

804 
ax
˜x+
l
;

805 
cy
=cy+1;

807 
ay
++;

810 
	`gëtime
(&
hi1
, &
lo1
);

812  
	`subåa˘64
(
hi0
,
lo0
,
hi1
,
lo1
);

813 
	}
}

	@mem/memperf/cpyr.h

1 
	#MAXREMOTE
 8192

	)

4 
˝y_ls_r
(* 
a
,
l
,
mx
,
ô
);

7 
˝y_vs_r
(* 
a
,
l
,
mx
,
ô
);

10 
˝y_lc_r
(* 
a
,* 
c
,
l
,
mx
,
ô
);

14 
˝y_cs_r
(* 
a
,* 
c
,
l
,
mx
,
ô
);

	@mem/memperf/gettime.h

6 
	~<sys/time.h
>

7 
	~<uni°d.h
>

9 
	tuöt32
;

11 
__ölöe__
 

12 
	$gëtimeus
 (
uöt32
 *
hi
, uöt32 *
lo
)

14 
timevÆ
 
t
;

15 
	`gëtimeofday
(&
t
,
NULL
);

16 *
hi
=
t
.
tv_£c
;

17 *
lo
=
t
.
tv_u£c
;

18 
	}
}

21 
	$subåa˘64
(
uöt32
 
hi0
, uöt32 
lo0
, uöt32 
hi1
, uöt32 
lo1
 )

23 
uöt32
 
hú
, 
l‹
;

25 i‡(
lo1
 < 
lo0
) {

26 
l‹
 = 1000000-(
lo0
-
lo1
);

27 
hú
 = 
hi1
 - 
hi0
 -1;

29 
l‹
 = 
lo1
-
lo0
;

30 
hú
 = 
hi1
 - 
hi0
;

32  
hú
*1000000+
l‹
;

33 
	}
}

	@mem/memperf/gettimealpha.h

6 
	tuöt32
;

7 
π˛ock
();

9 
ölöe
 
	$gë˛ock
 (
uöt32
 *
hi
, uöt32 *
lo
)

11 *
hi
=0;

12 *
lo
=
	`π˛ock
();

13 
	}
}

16 
ölöe
 
	$subåa˘64
(
uöt32
 
hi0
, uöt32 
lo0
, uöt32 
hi1
, uöt32 
lo1
 )

18 
uöt32
 
hú
, 
l‹
;

20 
hú
 = (
hi1
 - 
hi0
);

21 i‡(
lo0
 < 
lo1
Ë
l‹
 = (lo1 -Üo0);

22 
l‹
 = 0xFFFFFFFF-(
lo0
-
lo1
) ;

23  
l‹
;

24 
	}
}

	@mem/memperf/gettiment.h

6 
	tuöt32
;

8 
__ölöe
 

9 
	$gëcou¡î
 (
uöt32
 *
hi
, uöt32 *
lo
)

11 
LARGE_INTEGER
 
ÕCou¡î
;

12 
	`QuîyPîf‹m™˚Cou¡î
(&
ÕCou¡î
);

14 *
hi
 = 
ÕCou¡î
.
HighP¨t
;

15 *
lo
 = 
ÕCou¡î
.
LowP¨t
;

16 
	}
}

19 
	$subåa˘64
(
uöt32
 
hi0
, uöt32 
lo0
, uöt32 
hi1
, uöt32 
lo1
 )

21 
uöt32
 
hú
, 
l‹
;

23 i‡(
lo1
 < 
lo0
) {

24 
l‹
 = 1000000-(
lo0
-
lo1
);

25 
hú
 = 
hi1
 - 
hi0
 -1;

27 
l‹
 = 
lo1
-
lo0
;

28 
hú
 = 
hi1
 - 
hi0
;

30  
hú
*1000000+
l‹
;

31 
	}
}

	@mem/memperf/lcpy.c

12 
	~<°dio.h
>

13 
	~<°rög.h
>

14 
	~<°dlib.h
>

15 
	~<m©h.h
>

17 #ifde‡
WIN32


18 
	~<mÆloc.h
>

19 
	~<wödows.h
>

20 
	~<¥o˚ss.h
>

23 
	~<sys/shm.h
>

24 
	~<uni°d.h
>

25 
	~<sys/ªsour˚.h
>

26 
	~<sys/time.h
>

27 
	~"∑r.h
"

28 
	#DWORD
 

	)

29 
	#WINAPI


	)

30 
	#__cde˛


	)

32 #ifde‡
PENTIUMCOUNTER


33 
	~"p5tsc.h
"

34 
	#gëtime
 
rdtsc


	)

37 #ifde‡
ALPHACOUNTER


38 
	~"gëtimóÕha.h
"

39 
	#gëtime
 
gë˛ock


	)

44 
	#VERSION
 "v0.9h"

	)

46 
	#mytime
 

	)

50 
	g°rdr
[]={1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,32,64,-1};

52 
	#MXBLSZ
 24

	)

53 
	#MXSTRDS
 20

	)

54 
	#MXRUNSZ
 20

	)

55 
	#MINRUNSZ
 6

	)

56 
	#MXIT
 16

	)

57 
	#NPES
 1

	)

58 
	#MXPROC
 16

	)

59 
	#OPTASM
 0

	)

60 
	#MXREP
 7

	)

61 
	#NROFREP
 3

	)

63 
	#OUTLIERLIMIT
 0.75

	)

64 
	#KORR
 4

	)

65 
	#TIC
 1.0

	)

70 
	#DEBUG
 0

	)

71 
	#CHART
 0

	)

72 
	#CHARTREV
 0

	)

73 
	#DEBUGP
 0

	)

75 
	#DEBUGOUT
 i‡(
DEBUG
)

	)

76 
	#CHARTOUT
 i‡(
CHART
)

	)

77 
	#DEBUGPRINT
 i‡(
DEBUGP
)

	)

79 
	gch¨åev
;

80 
	gtic
;

81 *
	gsh¨ed
;

82 
	gƒo‰ï
 = 
NROFREP
;

86 
	mmx°rds
;

87 
	mmxsize
;

88 
	mmösize
;

89 
	mmxôîs
;

90 
	m≈es
;

91 
	mmode
;

92 
	m∑r_cid
;

93 
	mu£›èsm
;

94 
	mcuºíåï
;

95 } 
	t∑ømT
;

100 #ifde‡
WIN32


101 
	#íd_∑øŒñ
()

	)

102 
	#£m_öô
()

	)

103 
	#£m_deöô
()

	)

104 
	#begö_∑øŒñ


	)

105 
	#b¨rõr
()

	)

108 
	~"˝y.h
"

110 #ifde‡
HAVEOPT


111 
	~"˝y_›t.h
"

114 
	$˝y_ls›t
(* 
a
,
l
,
mx
,
ô
Ë{  (Ë(*a+l+mx+ô); 
	}
}

115 
	$˝y_vs›t
(* 
a
,
l
,
mx
,
ô
Ë{  (Ë(*a+l+mx+ô); 
	}
}

116 
	$˝y_lc›t
(* 
a
,* 
c
,
l
,
mx
,
ô
Ë{  (Ë(*a+l+mx+ô+*c); 
	}
}

117 
	$˝y_cs›t
(* 
a
,* 
c
,
l
,
mx
,
ô
Ë{  (Ë(*a+l+mx+ô+*c); 
	}
}

120 #i‚de‡
WIN32


122 
	$gë˝u‰equícy
()

124 #ifde‡
HWCOUNTER


125 
FILE
 *
˝uöfo
;

126 
buf
[1024];

127 *
°r
;

128 #ifde‡
PENTIUMCOUNTER


129 
£¨ch°r
[] = "cpu MHz\t\t:";

130 #ñi‡
deföed
 
ALPHACOUNTER


131 
£¨ch°r
[] = "cycle frequency [Hz]\t:";

133 
e
, 
i
;

134 
uöt32
 
tsc1_lo
, 
tsc1_hi
, 
tsc2_lo
, 
tsc2_hi
, 
tscdiff
, 
timediff
;

135 
timevÆ
 
t1
, 
t2
;

136 
‰eqn
, 
‰eq
 = 0.0;

138 
˝uöfo
 = 
	`f›í
("/proc/cpuinfo", "r");

139 i‡(
˝uöfo
) {

140 
e
 = 
	`‰ód
(
buf
, 1, 512, 
˝uöfo
);

141 
	`f˛o£
(
˝uöfo
);

142 
°r
 = 
	`°r°r
(
buf
, 
£¨ch°r
);

143 i‡(
°r
) {

144 
°r
 +
	`°æí
(
£¨ch°r
);

145 #ifde‡
PENTIUMCOUNTER


146  
	`©of
(
°r
);

147 #ñi‡
deföed
 
ALPHACOUNTER


148  (Ë
	`©oi
(
°r
) / 1000000;

155 
i
=0;i<3;i++) {

156 
	`gëtimeofday
(&
t1
, 
NULL
);

157 
	`gëtime
(&
tsc1_hi
, &
tsc1_lo
);

158 
	`u¶ìp
(100000);

159 
	`gëtime
(&
tsc2_hi
, &
tsc2_lo
);

160 
	`gëtimeofday
(&
t2
, 
NULL
);

161 
tscdiff
 = 
	`subåa˘64
(
tsc1_hi
, 
tsc1_lo
, 
tsc2_hi
, 
tsc2_lo
);

162 
timediff
 = (
t2
.
tv_£c
 - 
t1
.tv_sec) * 1000000;

163 
timediff
 +
t2
.
tv_u£c
 - 
t1
.tv_usec;

164 
‰eqn
 = (Ë
tscdiff
 / (Ë
timediff
;

165 
‰eq
 = (
‰eqn
 > freq) ? freqn : freq;

167  
‰eq
;

169  
TIC
;

170 
	}
}

174 
DWORD
 
WINAPI
 
	$mem›
 (
∑ømT
 *
p
)

176 *
a
,*
c
;

177 
i
,
j
,
l
,
t
,
t1
,
t2
,
t4
,
t8
,
t›t
,
li
,
√l
,
mx
,
effôîs
;

179 
b™dwôh
[
MXBLSZ
][
MXSTRDS
];

180 
«me
[80], 
«mebwf
[80], 
numbî
[10];

181 
FILE
 *
°ªam
, *
bwfout
;

183 
x
=0,
y
=0;

188 #ifde‡
WIN32


190 
DWORD
 
dwThªadAfföôyMask
;

191 
HANDLE
 
hThªad
;

194 
hThªad
 = 
	`GëCuºítThªad
();

195 
dwThªadAfföôyMask
 = 
	`SëThªadAfföôyMask
 (
hThªad
,
p
->
∑r_cid
+1);

199 #ifde‡
SHAREDMEM


200 
a
=
sh¨ed
;

202 
a
=(*Ë
	`mÆloc
(()*
p
->
mxsize
);

204 
c
=(*Ë
	`mÆloc
(()*
p
->
mxsize
+8192);

205 
t1
=
t2
=
t4
=
t8
=
t›t
=0;

208 
DEBUGOUT
 {

209 
	`°r˝y
(
«me
,"debug");

210 
	`°r˝y
(
numbî
,".x");

211 
numbî
[1]= '0';

212 
	`°rˇt
(
«me
,
numbî
);

213 
	`°rˇt
(
«me
,".out");

215 
°ªam
 = 
	`f›í
–
«me
, "w" );

217 i‡(
°ªam
==
NULL
) {

218 
	`¥ötf
("C™'à›í %s\n",
«me
);

219 
	`exô
(0);

224 
i
=0; i<
p
->
mxsize
; i++) {

225 
a
[
i
]=1.0; 
c
[i]=1.0;

229 
li
=0, 
y
=1; (
°rdr
[li]!=-1Ë&& (li<
p
->
mx°rds
);Üi++, y++) {

230 
l
=
°rdr
[
li
];

231 
b™dwôh
[0][
y
] = 
l
;

233 
	`b¨rõr
();

235 
DEBUGOUT
 {

236 i‡(
p
->
∑r_cid
==0) {

237 
	`Ârötf
–
°ªam
, "\nMemory Op: ");

238 
p
->
mode
) {

240 
	`Ârötf
–
°ªam
, "Load sum\n");

243 
	`Ârötf
–
°ªam
, "Const store\n");

246 
	`Ârötf
–
°ªam
, "Load copy\n");

249 
	`Ârötf
–
°ªam
, "Copy store\n");

253 
	`Ârötf
–
°ªam
, "%4s %6s %6s %16s %16s %16s %10s\n",

257 
	`Ârötf
–
°ªam
, "%4s %6s %6s %16s %16s %16s %10s\n",

263 
	`b¨rõr
();

266 
x
=1, 
mx
=
p
->
mösize
; mx<ı->
mxsize
; mx*=2, x++) {

267 
b™dwôh
[
x
][0] = 
mx
*8;

268 
	`b¨rõr
();

271 
effôîs
 = 
p
->
mxôîs
;

272 i‡(
effôîs
>1) {

273 i‡(
mx
<128Ë
effôîs
=
p
->
mxôîs
*16;

274 i‡((
mx
>=128Ë&& (mx<=1024)Ë
effôîs
=
p
->
mxôîs
*4;

275 i‡((
mx
>=256*256Ë&& (mx<=512*512)Ë
effôîs
=4;

276 i‡(
mx
>512*512Ë
effôîs
=1;

280 
i
=0; i<
mx
; i++) {

281 
a
[
i
] +1.0; 
c
[i] += 1.0;

284 
	`b¨rõr
();

286 
t
=-
KORR
;

289 
p
->
mode
) {

291 i‡(
p
->
u£›èsm
 != 1) {

292 
t1
=
	`˝y_ls1
(&
a
[0],
l
,
mx
,
effôîs
);

293 
t2
=
	`˝y_ls2
(&
a
[0],
l
,
mx
,
effôîs
);

294 
t4
=
	`˝y_ls4
(&
a
[0],
l
,
mx
,
effôîs
);

295 
t8
=
	`˝y_ls8
(&
a
[0],
l
,
mx
,
effôîs
);

297 i‡(
p
->
u£›èsm
 != 0) {

298 
t›t
=
	`˝y_ls›t
(&
a
[0],
l
,
mx
,
effôîs
);

302 i‡(
p
->
u£›èsm
 != 1) {

303 
t1
=
	`˝y_vs1
(&
a
[0],
l
,
mx
,
effôîs
);

304 
t2
=
	`˝y_vs2
(&
a
[0],
l
,
mx
,
effôîs
);

305 
t4
=
	`˝y_vs4
(&
a
[0],
l
,
mx
,
effôîs
);

306 
t8
=
	`˝y_vs8
(&
a
[0],
l
,
mx
,
effôîs
);

308 i‡(
p
->
u£›èsm
 != 0) {

309 
t›t
=
	`˝y_vs›t
(&
a
[0],
l
,
mx
,
effôîs
);

313 i‡(
p
->
u£›èsm
 != 1) {

314 
t1
=
	`˝y_lc1
(&
a
[0],&
c
[0],
l
,
mx
,
effôîs
);

315 
t2
=
	`˝y_lc2
(&
a
[0],&
c
[0],
l
,
mx
,
effôîs
);

316 
t4
=
	`˝y_lc4
(&
a
[0],&
c
[0],
l
,
mx
,
effôîs
);

317 
t8
=
	`˝y_lc8
(&
a
[0],&
c
[0],
l
,
mx
,
effôîs
);

319 i‡(
p
->
u£›èsm
 != 0) {

320 
t›t
=
	`˝y_lc›t
(&
a
[0],&
c
[0],
l
,
mx
,
effôîs
);

324 i‡(
p
->
u£›èsm
 != 1) {

325 
t1
=
	`˝y_cs1
(&
a
[0],&
c
[0],
l
,
mx
,
effôîs
);

326 
t2
=
	`˝y_cs2
(&
a
[0],&
c
[0],
l
,
mx
,
effôîs
);

327 
t4
=
	`˝y_cs4
(&
a
[0],&
c
[0],
l
,
mx
,
effôîs
);

328 
t8
=
	`˝y_cs8
(&
a
[0],&
c
[0],
l
,
mx
,
effôîs
);

330 i‡(
p
->
u£›èsm
 != 0) {

331 
t›t
=
	`˝y_cs›t
(&
a
[0],&
c
[0],
l
,
mx
,
effôîs
);

335 
p
->
u£›èsm
) {

337 
DEBUGOUT
 
	`¥ötf
("mx %d:Å1 %d,Å2 %d,Å4 %d,Å8 %d \¿",
mx
,
t1
,
t2
,
t4
,
t8
);

338 
t1
Ò1<
t2
?t1:t2;t1Ò1<
t4
?t1:t4;t1Ò1<
t8
?t1:t8;

341 
DEBUGOUT
 
	`¥ötf
("mx %d:Å›à%d \¿",
mx
, 
t›t
);

342 
t1
=
t›t
;

345 
DEBUGOUT
 
	`¥ötf
("mx %d:Å1 %d,Å2 %d,Å4 %d,Å8 %d,Å›à%d \¿",
mx
,
t1
,
t2
,
t4
,
t8
,
t›t
);

346 
t1
Ò1<
t2
?t1:t2;t1Ò1<
t4
?t1:t4;t1Ò1<
t8
?t1:t8;t1Ò1<
t›t
?t1:topt;

350 
t
+=
t1
;

351 
√l
8 * 
l
 * (
mx
/lË* 
effôîs
;

353 
DEBUGOUT
 {

354 i‡(
p
->
∑r_cid
==0)

355 
	`Ârötf
–
°ªam
, "p%3d %6d %6d %16d %16d %16d %8.2f\n",

356 
p
->
≈es
,
l
,
effôîs
,
mx
*8,
√l
,
t
,(Ë√l/—/
tic
));

359 
b™dwôh
[
x
][
y
] = (Ë
√l
/(
t
/
tic
);

363 
DEBUGOUT
 
	`f˛o£
–
°ªam
 );

366 
	`°r˝y
(
«me
,"chart");

367 
	`°r˝y
(
numbî
,".m0");

368 
numbî
[2]'0'+ (Ë
p
->
mode
;

369 
	`°rˇt
(
«me
,
numbî
);

370 
	`°r˝y
(
numbî
,".p0");

371 
numbî
[2]'0'+
p
->
≈es
;

372 
	`°rˇt
(
«me
,
numbî
);

374 #ifde‡
SHAREDMEM


375 
	`°rˇt
(
«me
,".shared");

377 
	`°rˇt
(
«me
,".out");

378 
	`°r˝y
(
numbî
,".r0");

379 
numbî
[2]'0'+
p
->
cuºíåï
;

380 
	`°rˇt
(
«me
,
numbî
);

381 
	`°r˝y
(
numbî
,".0");

382 
numbî
[1]'0'+
p
->
∑r_cid
+1;

383 
	`°rˇt
(
«me
,
numbî
);

385 
	`°r˝y
(
«mebwf
,
«me
);

386 
	`°rˇt
(
«mebwf
,"f");

388 i‡(
p
->
∑r_cid
!=0) {

389 #ifde‡
WIN32


390 
	`SÀï
(
p
->
∑r_cid
*10);

392 
	`u¶ìp
(
p
->
∑r_cid
*10000);

396 
bwfout
 = 
	`f›í
(
«mebwf
, "wb");

397 i‡(
bwfout
==
NULL
) {

398 
	`¥ötf
("C™'à›í %s\n",
«mebwf
);

399 
	`exô
(0);

401 i‡(
	`fwrôe
(
b™dwôh
, (),
MXBLSZ
*
MXSTRDS
,
bwfout
)!=MXBLSZ*MXSTRDS)

402 
	`¥ötf
("Couldn't outputÅemp data\n");

403 
	`f˛o£
(
bwfout
);

406 
CHARTOUT
 {

407 i‡(
ch¨åev
)

408 
	`¥ötf
(" Revî£dÑesu…†ö: %s\n",
«me
);

410 
	`¥ötf
(" Resu…†ö: %s\n",
«me
);

412 
°ªam
 = 
	`f›í
–
«me
, "w" );

414 i‡(
°ªam
==
NULL
) {

415 
	`¥ötf
("C™'à›í %s\n",
«me
);

416 
	`exô
(0);

419 
p
->
mode
) {

421 
	`Ârötf
–
°ªam
, "Load sum ");

424 
	`Ârötf
–
°ªam
, "Const store");

427 
	`Ârötf
–
°ªam
, "Load copy ");

430 
	`Ârötf
–
°ªam
, "Copy store ");

434 i‡(
ch¨åev
) {

435 
i
=
x
-1;i>0;i--) {

436 i‡(
b™dwôh
[
i
][0]<1024)

437 
	`Ârötf
(
°ªam
,"%6.1‡K",
b™dwôh
[
i
][0]/1024);

438 i‡(
b™dwôh
[
i
][0]<1024*1024)

439 
	`Ârötf
(
°ªam
,"%6d K",(Ë
b™dwôh
[
i
][0]/1024);

441 
	`Ârötf
(
°ªam
,"%6d M",(Ë
b™dwôh
[
i
][0]/(1024*1024));

443 
	`Ârötf
(
°ªam
,"\n");

444 
j
=1;j<
y
;j++) {

445 
	`Ârötf
(
°ªam
,"%8d ",()
b™dwôh
[0][
j
]);

446 
i
=
x
-1;i>0;i--) {

447 
	`Ârötf
(
°ªam
,"%8.2f",
b™dwôh
[
i
][
j
]);

449 
	`Ârötf
(
°ªam
,"\n");

452 
i
=1;i<
x
;i++) {

453 i‡(
b™dwôh
[
i
][0]<1024)

454 
	`Ârötf
(
°ªam
,"%6.1‡K",
b™dwôh
[
i
][0]/1024);

455 i‡(
b™dwôh
[
i
][0]<1024*1024)

456 
	`Ârötf
(
°ªam
,"%6d K",(Ë
b™dwôh
[
i
][0]/1024);

458 
	`Ârötf
(
°ªam
,"%6d M",(Ë
b™dwôh
[
i
][0]/(1024*1024));

460 
	`Ârötf
(
°ªam
,"\n");

461 
j
=1;j<
y
;j++) {

462 
	`Ârötf
(
°ªam
,"%8d ",()
b™dwôh
[0][
j
]);

463 
i
=1;i<
x
;i++) {

464 
	`Ârötf
(
°ªam
,"%8.2f",
b™dwôh
[
i
][
j
]);

466 
	`Ârötf
(
°ªam
,"\n");

469 
	`f˛o£
–
°ªam
 );

473 #i‚de‡
SHAREDMEM


474 
	`‰ì
–
a
 );

476 
	`‰ì
–
c
 );

478 
	}
}

481 
	$™Æyze_ªp
(
∑ømT
 *
p
) {

483 
∂o›
,
ôlo›
,
i
,
j
,
mx
,
maxrow
,
maxcﬁ
,
ouéõrs
,
bwcou¡
,
z
;

484 
bwmax
,
bwmón
,
c‹rbwmón
,
°ddev
,
c‹r°ddev
,
devmón
,
c‹rdevmón
;

485 
«me
[80], 
«mebw
[80], 
numbî
[10];

486 
b™dwôh
[
MXREP
][
MXPROC
][
MXBLSZ
][
MXSTRDS
];

487 
FILE
 *
°ªam
, *
ªsö
;

490 
maxrow
=0; (
°rdr
[maxrow]!=-1Ë&& (maxrow<
p
->
mx°rds
); maxrow++);

491 
maxcﬁ
=0, 
mx
=
p
->
mösize
; mx<ı->
mxsize
; mx*=2, maxcol++);

493 
ôlo›
=0; iéo›<
ƒo‰ï
; itloop++) {

494 
∂o›
=0;Ölo›<
p
->
≈es
;ploop++) {

495 
	`°r˝y
(
«mebw
,"chart");

496 
	`°r˝y
(
numbî
,".m0");

497 
numbî
[2]'0'+ (Ë
p
->
mode
;

498 
	`°rˇt
(
«mebw
,
numbî
);

499 
	`°r˝y
(
numbî
,".p0");

500 
numbî
[2]'0'+
p
->
≈es
;

501 
	`°rˇt
(
«mebw
,
numbî
);

503 #ifde‡
SHAREDMEM


504 
	`°rˇt
(
«mebw
,".shared");

506 
	`°rˇt
(
«mebw
,".out");

507 
	`°r˝y
(
numbî
,".r0");

508 
numbî
[2]'0'+
ôlo›
+1;

509 
	`°rˇt
(
«mebw
,
numbî
);

510 
	`°r˝y
(
numbî
,".0");

511 
numbî
[1]'0'+
∂o›
+1;

512 
	`°rˇt
(
«mebw
,
numbî
);

513 
	`°rˇt
(
«mebw
,"f");

515 
ªsö
 = 
	`f›í
(
«mebw
, "rb");

516 i‡(
ªsö
==
NULL
) {

517 
	`¥ötf
("C™'à›í i≈uàfûêf‹Ñódög %s\n",
«mebw
);

518 
	`exô
(0);

520 i‡(
	`‰ód
(
b™dwôh
[
ôlo›
][
∂o›
], (),
MXBLSZ
*
MXSTRDS
,
ªsö
)!=MXBLSZ*MXSTRDS)

521 
	`¥ötf
("Couldn'tÑeadÅemp data\n");

522 
	`f˛o£
(
ªsö
);

523 
	`ªmove
(
«mebw
);

527 
	`°r˝y
(
«me
,"chart");

528 
	`°r˝y
(
numbî
,".m0");

529 
numbî
[2]'0'+ (Ë
p
->
mode
;

530 
	`°rˇt
(
«me
,
numbî
);

531 
	`°r˝y
(
numbî
,".p0");

532 
numbî
[2]'0'+
p
->
≈es
;

533 
	`°rˇt
(
«me
,
numbî
);

535 #ifde‡
SHAREDMEM


536 
	`°rˇt
(
«me
,".shared");

538 
	`°rˇt
(
«me
,".max");

540 i‡(
ch¨åev
)

541 
	`¥ötf
(" MaximumÑevî£dÑesu…†ö: %s\n",
«me
);

543 
	`¥ötf
(" MaximumÑesu…†ö: %s\n",
«me
);

545 
°ªam
 = 
	`f›í
–
«me
, "w" );

547 i‡(
°ªam
==
NULL
) {

548 
	`¥ötf
("C™'à›í %s\n",
«me
);

549 
	`exô
(0);

552 
p
->
mode
) {

554 
	`Ârötf
–
°ªam
, "Load sum ");

557 
	`Ârötf
–
°ªam
, "Const store");

560 
	`Ârötf
–
°ªam
, "Load copy ");

563 
	`Ârötf
–
°ªam
, "Copy store ");

566 
ouéõrs
=0;

567 
devmón
=0;

568 
c‹rdevmón
=0;

569 i‡(
ch¨åev
Ë
i
=
maxcﬁ
;

570 
i
=1;

571 
z
=1;z<=
maxcﬁ
;z++) {

572 i‡(
b™dwôh
[0][0][
i
][0]<1024)

573 
	`Ârötf
(
°ªam
,"%6.1‡K",
b™dwôh
[0][0][
i
][0]/1024);

574 i‡(
b™dwôh
[0][0][
i
][0]<1024*1024)

575 
	`Ârötf
(
°ªam
,"%6d K",(Ë
b™dwôh
[0][0][
i
][0]/1024);

577 
	`Ârötf
(
°ªam
,"%6d M",(Ë
b™dwôh
[0][0][
i
][0]/(1024*1024));

578 i‡(
ch¨åev
Ë
i
--;

579 
i
++;

581 
	`Ârötf
(
°ªam
,"\n");

583 
j
=1;j<=
maxrow
;j++) {

584 
	`Ârötf
(
°ªam
,"%8d ",()
b™dwôh
[0][0][0][
j
]);

585 
z
=
maxcﬁ
;

586 i‡(
ch¨åev
Ë
i
=
maxcﬁ
;

587 
i
=1;

588 
z
=1;z<=
maxcﬁ
;z++) {

589 
bwmax
 = 0;

590 
bwmón
 = 0;

591 
c‹rbwmón
 = 0;

592 
bwcou¡
 = 0;

593 
°ddev
 = 0.0;

594 
c‹r°ddev
 = 0.0;

595 
ôlo›
=0;ôlo›<
ƒo‰ï
;itloop++) {

596 
∂o›
=0;∂o›<
p
->
≈es
;ploop++) {

597 
bwmax
=bwmax>
b™dwôh
[
ôlo›
][
∂o›
][
i
][
j
]?bwmax:bandwith[itloop][ploop][i][j];

598 
bwmón
 +
b™dwôh
[
ôlo›
][
∂o›
][
i
][
j
];

601 
bwmón
 = bwmón/(
ƒo‰ï
*
p
->
≈es
);

602 
ôlo›
=0;ôlo›<
ƒo‰ï
;itloop++) {

603 
∂o›
=0;∂o›<
p
->
≈es
;ploop++) {

604 i‡(
b™dwôh
[
ôlo›
][
∂o›
][
i
][
j
]<(
OUTLIERLIMIT
*
bwmax
))

605 
ouéõrs
 += 1;

607 
bwcou¡
 += 1;

608 
c‹rbwmón
 +
b™dwôh
[
ôlo›
][
∂o›
][
i
][
j
];

612 
c‹rbwmón
 = c‹rbwmón/
bwcou¡
;

613 
ôlo›
=0;ôlo›<
ƒo‰ï
;itloop++) {

614 
∂o›
=0;∂o›<
p
->
≈es
;ploop++) {

615 
°ddev
 +(
bwmón
 - 
b™dwôh
[
ôlo›
][
∂o›
][
i
][
j
])*(bwmean - bandwith[itloop][ploop][i][j]);

616 i‡(
b™dwôh
[
ôlo›
][
∂o›
][
i
][
j
]>=(
OUTLIERLIMIT
*
bwmax
))

617 
c‹r°ddev
 +(
c‹rbwmón
 - 
b™dwôh
[
ôlo›
][
∂o›
][
i
][
j
])*(corrbwmean - bandwith[itloop][ploop][i][j]);

620 i‡(
bwmón
 != 0) {

621 
°ddev
 = (
	`sqπ
(°ddev/(
ƒo‰ï
*
p
->
≈es
)))/
bwmón
;

622 
c‹r°ddev
 = (
	`sqπ
(c‹r°ddev/
bwcou¡
))/
c‹rbwmón
;

625 
°ddev
 = 0;

626 
c‹r°ddev
 = 0;

628 
devmón
 +
°ddev
;

629 
c‹rdevmón
 +
c‹r°ddev
;

630 
	`Ârötf
(
°ªam
,"%8.2f",
bwmax
);

631 i‡(
ch¨åev
Ë
i
--;

632 
i
++;

634 
	`Ârötf
(
°ªam
,"\n");

636 
	`f˛o£
–
°ªam
 );

638 i‡(
ƒo‰ï
*
p
->
≈es
 > 1) {

639 
	`¥ötf
(" %d outliers (valuesÜowerÅhan %1.2f*max), out of %d values\n",

640 
ouéõrs
, 
OUTLIERLIMIT
, 
maxrow
*
maxcﬁ
*
ƒo‰ï
*
p
->
≈es
);

641 
	`¥ötf
("árôhmëi¯mó¿o‡Æ»’î˚¡ageË°™d¨d devüti⁄s: %4.2‡%%\n",100*
devmón
/(
maxcﬁ
*
maxrow
));

642 
	`¥ötf
("á·î ouéõ∏ex˛usi⁄: %4.2‡%%\n",100*
c‹rdevmón
/(
maxcﬁ
*
maxrow
));

645 
	`¥ötf
(" warning:ÇoÑepetitions,ÑesultsÜikely contain badly wrong values\n");

646 
	}
}

649 
__cde˛
 
	$maö
(
¨gc
,*
¨gv
[])

651 
i
,
¨g
, 
cuºô
, 
modes
, 
modír
;

652 
∑ømT
 *
p
;

654 #ifde‡
SHAREDMEM


655 
shmid
;

658 #ifde‡
WIN32


659 
DWORD
 
¥ocID
;

660 
HANDLE
 
hPro˚ss
;

661 
HANDLE
 
hThªad
[10];

662 
DWORD
 
IDThªad
;

663 
LARGE_INTEGER
 
ÕFªquícy
;

666 
p
 = (
∑ømT
*Ë
	`mÆloc
(
MXPROC
*(paramT));

669 
modes
=0;

670 
p
[0].
mode
=0;

671 
p
[0].
≈es
=
NPES
;

672 
p
[0].
mxsize
=
MXRUNSZ
;

673 
p
[0].
mösize
=
MINRUNSZ
;

674 
p
[0].
mx°rds
=
MXSTRDS
;

675 
p
[0].
mxôîs
=
MXIT
;

676 
p
[0].
cuºíåï
=1;

677 #ifde‡
HAVEOPT


678 
p
[0].
u£›èsm
=
OPTASM
;

680 
p
[0].
u£›èsm
=0;

682 
¨g
=1;

683 
ch¨åev
=
CHARTREV
;

684 
	`¥ötf
("\nECT memperf - Extended Copy Transfer Characterization\n");

685 
	`¥ötf
("Mem‹y Pîf‹m™˚ Ch¨a˘îiz©i⁄ Toﬁkô %s\n\n",
VERSION
);

687 #ifde‡
WIN32


689 
	`QuîyPîf‹m™˚Fªquícy
(&
ÕFªquícy
);

690 
tic
 = (
ÕFªquícy
.
LowP¨t
 / 1000000.0);

691 
tic
 +(
ÕFªquícy
.
HighP¨t
 * (2^32) / 1000000.0);

693 
tic
=
	`gë˝u‰equícy
();

696 i‡(
¨gc
<2) {

697 #ifde‡
WIN32


698 
	`¥ötf
("Ußge: %†-m <mode> [-p] [-s] [-n] [-r] [-i] [-c] [-o]\n",
¨gv
[0]);

699 #ñi‡
deföed
 
HAVEOPT


700 
	`¥ötf
("Ußge: %†-m <mode> [-p] [-s] [-n] [-r] [-i] [-t] [-c] [-a] [-o]\n",
¨gv
[0]);

702 
	`¥ötf
("Ußge: %†-m <mode> [-p] [-s] [-n] [-r] [-i] [-t] [-c] [-o]\n",
¨gv
[0]);

704 
	`¥ötf
(" -m <mode> : 0 =Üoad sumÅest\n");

705 
	`¥ötf
(" 1 = const storeÅest\n");

706 
	`¥ötf
(" 2 =Üoad copyÅest\n");

707 
	`¥ötf
(" 3 = copy storeÅest\n");

708 
	`¥ötf
(" 9 =állÅests\n");

709 
	`¥ötf
(" [-¯<no‰ï> ] DeÁu…: %d\n", 
NROFREP
);

710 #ifde‡
HAVEOPT


711 
	`¥ötf
(" [-a <optasm> ] 0/1 = use/don't use special instructions\n");

712 
	`¥ötf
(" 2 = bŸh mëhods, DeÁu…: %d\n", 
OPTASM
);

714 
	`¥ötf
(" [-∞<nProc> ] DeÁu…: %d\n",
NPES
);

715 
	`¥ötf
(" [-†<mx°rds>] DeÁu…: %d\n",
MXSTRDS
);

716 
	`¥ötf
(" [-¿<mxsize> ] DeÁu…: %d (%d Byãs)\n",
MXRUNSZ
,8<<MXRUNSZ);

717 
	`¥ötf
(" [-∏<mösize>] DeÁu…: %d (%d Byãs)\n",
MINRUNSZ
,8<<MINRUNSZ);

718 
	`¥ötf
(" [-ò<mxôîs>] DeÁu…: %d\n",
MXIT
);

719 
	`¥ötf
(" [-o ] Reversed Output\n");

720 #ifde‡
WIN32


721 
	`¥ötf
(" EvÆu©ed clockÑesﬁuti⁄ [MHz]: %.2f\n",
tic
);

723 
	`¥ötf
(" [-à<tics/us>] DeÁu…: %.2f\n",
tic
);

725 
	`exô
(2);

728 
¨g
<
¨gc
) {

729 i‡(
¨gv
[
¨g
][0]=='-') {

730 i‡(
¨gv
[
¨g
][1]=='p' && (¨g+1)<
¨gc
) {

731 
¨g
++; 
p
[0].
≈es
=
	`©oi
(
¨gv
[arg]);

733 i‡(
¨gv
[
¨g
][1]=='s' && (¨g+1)<
¨gc
) {

734 
¨g
++; 
p
[0].
mx°rds
=
	`©oi
(
¨gv
[arg]);

736 i‡(
¨gv
[
¨g
][1]=='m' && (¨g+1)<
¨gc
) {

737 
¨g
++; 
modes
=
	`©oi
(
¨gv
[arg]);

739 i‡(
¨gv
[
¨g
][1]=='n' && (¨g+1)<
¨gc
) {

740 
¨g
++; 
p
[0].
mxsize
=
	`©oi
(
¨gv
[arg]);

742 i‡(
¨gv
[
¨g
][1]=='r' && (¨g+1)<
¨gc
) {

743 
¨g
++; 
p
[0].
mösize
=
	`©oi
(
¨gv
[arg]);

745 i‡(
¨gv
[
¨g
][1]=='i' && (¨g+1)<
¨gc
) {

746 
¨g
++; 
p
[0].
mxôîs
=
	`©oi
(
¨gv
[arg]);

748 i‡(
¨gv
[
¨g
][1]=='o') {

749 
ch¨åev
=1;

751 i‡(
¨gv
[
¨g
][1]=='a' && (¨g+1)<
¨gc
) {

752 
¨g
++;

753 #ifde‡
HAVEOPT


754 
p
[0].
u£›èsm
=
	`©oi
(
¨gv
[
¨g
]);

757 i‡(
¨gv
[
¨g
][1]=='c' && (¨g+1)<
¨gc
) {

758 
¨g
++; 
ƒo‰ï
=
	`©oi
(
¨gv
[arg]);

760 i‡(
¨gv
[
¨g
][1]=='t' && (¨g+1)<
¨gc
) {

761 
¨g
++;

762 #i‚de‡
WIN32


763 
tic
=
	`©of
(
¨gv
[
¨g
]);

767 
¨g
++;

770 
p
[0].
mxsize
=1<<p[0].mxsize;

771 
p
[0].
mösize
=1<<p[0].minsize;

774 #ifde‡
WIN32


775 
¥ocID
 = 
	`GëCuºítPro˚ssId
 ();

776 
hPro˚ss
 = 
	`O≥nPro˚ss
(
PROCESS_ALL_ACCESS
,
TRUE
,
¥ocID
);

777 
	`SëPri‹ôyCœss
(
hPro˚ss
, 
HIGH_PRIORITY_CLASS
);

779 
	`£çri‹ôy
(
PRIO_PROCESS
, 0,-20);

783 #ifde‡
WIN32


784 
	`¥ötf
–"EvÆu©ed Clock Resﬁuti⁄: %.2‡MHz\n\n",
tic
);

786 
	`¥ötf
–"S≥cifõd/EvÆu©ed Clock Resﬁuti⁄ (O±i⁄ -t): %.2‡MHz\n\n",
tic
);

790 #ifde‡
SHAREDMEM


791 
	`¥ötf
("Allocation of Shared Memory!\n");

792 i‡((
shmid
=
	`shmgë
(
IPC_PRIVATE
,()*
p
[0].
mxsize
,
IPC_CREAT
 | 0666))

793 ==-1Ë{
	`≥º‹
("shmgë");
	`exô
(99);}

794 i‡((
sh¨ed
 = (*Ë
	`shm©
(
shmid
,0,
SHM_RND
))==(*) -1) {

795 
	`≥º‹
("shm©\n"); 
	`exô
(99);

799 
modír
=0;modenr<=3;modenr++) {

800 i‡((
modír
==
modes
) || (modes==9)) {

801 
p
[0].
mode
=
modír
;

803 
cuºô
=1;cuºô<=
ƒo‰ï
;currit++) {

804 
p
[0].
cuºíåï
=
cuºô
;

805 
i
=1;i<
MXPROC
;i++) {

806 
	`mem˝y
 (&
p
[
i
],&p[0], (
∑ømT
));

809 
p
[0].
mode
) {

811 
	`¥ötf
("Lﬂd Sum (%dË - W‹kög Së: %.0‡KByã; Såides: %d\n",
cuºô
, (Ë
p
[0].
mxsize
*8/1024,p[0].
mx°rds
);

814 
	`¥ötf
("C⁄° St‹ê(%dË- W‹kög Së: %.0‡KByã; Såides: %d\n",
cuºô
, (Ë
p
[0].
mxsize
*8/1024,p[0].
mx°rds
);

817 
	`¥ötf
("Lﬂd C›y (%dË - W‹kög Së: 2*%.0‡KByã; Såides: %d\n",
cuºô
, (Ë
p
[0].
mxsize
*8/1024,p[0].
mx°rds
);

820 
	`¥ötf
("C›y St‹ê(%dË - W‹kög Së: 2*%.0‡KByã; Såides: %d\n",
cuºô
, (Ë
p
[0].
mxsize
*8/1024,p[0].
mx°rds
);

823 i‡(
p
[0].
≈es
==1)

824 
	`¥ötf
(" Starting 1Örocess...\n TestÑunning...\n");

826 
	`¥ötf
(" Sèπög %dÖro˚s£s...\¿ Te°†ru¬ög...\n", 
p
[0].
≈es
 );

829 #ifde‡
WIN32


830 
i
=0;i<
p
[0].
≈es
;i++) {

832 
p
[
i
].
∑r_cid
=i;

837 
hThªad
[
i
]=
	`Cª©eThªad
(
NULL
,0,(
LPTHREAD_START_ROUTINE
)
mem›
,&
p
[i],0,&
IDThªad
);

839 i‡(
hThªad
[
i
]==
NULL
) {

840 
	`Ârötf
(
°dîr
, "Create ThreadÉrror\n");

841 
	`exô
(0);

846 
	`WaôF‹Mu…ùÀObje˘s
 (
p
[0].
≈es
, 
hThªad
, 
TRUE
, 
INFINITE
);

851 
	`£m_öô
();

853 
	`begö_∑øŒñ
(
p
[0].
≈es
);

854 
p
[
∑r_cid
].par_cid=par_cid;

861 
	`mem›
(&
p
[
∑r_cid
]);

862 
	`b¨rõr
();

863 
	`íd_∑øŒñ
();

865 
	`£m_deöô
();

869 
	`™Æyze_ªp
(&
p
[0]);

874 #ifde‡
SHAREDMEM


875 i‡((
	`shmdt
(
sh¨ed
))==-1) {

876 
	`≥º‹
("shmdt\n"); 
	`exô
(99);

878 i‡((
	`shm˘l
(
shmid
,
IPC_RMID
,0))==-1) {

879 
	`≥º‹
("ShmRñó£"); 
	`exô
(99);

883 
	`‰ì
(
p
);

885 
	}
}

	@mem/memperf/p5tsc.h

5 
	tuöt32
;

13 
__ölöe__
 

14 
	$wrm§
 (c⁄° 
uöt32
 
m§
, uöt32 
hi
, uöt32 
lo
)

16 
__asm
 
	`__vﬁ©ûe
 (

18 : : "g" (
m§
), "g" (
hi
), "g" (
lo
) : "eax", "ecx", "edx");

19 
	}
}

22 
	#˛tsc
 
	`wrm§
((
uöt32
Ë0x10, (uöt32Ë(0), (uöt32Ë(0))

	)

28 
__ölöe__
 

29 
	$rdtsc
 (
uöt32
 *
hi
, uöt32 *
lo
)

31 
__asm
 
	`__vﬁ©ûe
 (

33 : "=g" (*
hi
), "=g" (*
lo
) :: "eax", "edx");

34 
	}
}

39 
__ölöe__
 

40 
	$•mc
 (
uöt32
 
ecx
)

42 
__asm
 
	`__vﬁ©ûe
 (

44 : : "g" (
ecx
) : "ecx");

45 
	}
}

51 
__ölöe__
 

52 
	$rdpmc
 (
uöt32
 *
hi
, uöt32 *
lo
)

54 
__asm
 
	`__vﬁ©ûe
 (

56 : "=g" (*
hi
), "=g" (*
lo
) :: "eax", "edx");

57 
	}
}

60 
__ölöe__
 
	$subåa˘64
(
uöt32
 
hi0
, uöt32 
lo0
, uöt32 
hi1
, uöt32 
lo1
 )

62 
uöt32
 
hú
, 
l‹
;

64 
hú
 = (
hi1
 - 
hi0
);

65 
l‹
 = (
lo1
 - 
lo0
);

66 i‡(
lo1
 < 
lo0
Ë
hú
 -= 1;

67  (
hú
 > 0 ? 0:
l‹
);

68 
	}
}

	@mem/memperf/par.c

1 
	~<sys/ty≥s.h
>

2 
	~<sys/time.h
>

3 
	~<sys/waô.h
>

4 
	~<sys/ªsour˚.h
>

5 
	~<sys/ùc.h
>

6 
	~<sys/£m.h
>

7 
	~<sys/shm.h
>

8 
	~<°dio.h
>

9 
	~<uni°d.h
>

10 
	~<°dlib.h
>

12 #ifde‡
BINDTOCPU


13 
	~<asm/uni°d.h
>

14 
	~<î∫o.h
>

16 
_sysˇŒ1
(, 
böd_to_˝u
, , 
msk
);

19 
	g∑r_cid
;

20 
	g∑r_≈es
;

21 
	g∑r_£mid
;

23 
	$£m_p
(
s
)

24 
s
;

26 
£mbuf
 
£m_ds
;

27 
rc
;

29 
£m_ds
.
£m_num
=0;

30 
£m_ds
.
£m_›
=-1;

31 
£m_ds
.
£m_Êg
=0;

32 i‡((
rc
=
	`£m›
(
s
,&
£m_ds
,1))==-1)

33 
	`≥º‹
("sem_p");

35 
	}
}

38 
	$£m_v
(
s
)

39 
s
;

41 
£mbuf
 
£m_ds
;

42 
rc
;

44 
£m_ds
.
£m_num
=0;

45 
£m_ds
.
£m_›
=1;

46 
£m_ds
.
£m_Êg
=0;

47 i‡((
rc
=
	`£m›
(
s
,&
£m_ds
,1))==-1)

48 
	`≥º‹
("sem_v");

50 
	}
}

53 
	$b¨rõr
()

55 
s
;

56 
£mbuf
 
£m_ds
;

57 
rc
;

63 
s
=0; s<
∑r_≈es
; s++) {

64 
£m_ds
.
£m_num
=
s
;

65 
£m_ds
.
£m_›
=1;

66 
£m_ds
.
£m_Êg
=0;

67 i‡((
rc
=
	`£m›
(
∑r_£mid
,&
£m_ds
,1))==-1)

68 
	`≥º‹
("sem_vb");

70 
£m_ds
.
£m_num
=
∑r_cid
;

71 
£m_ds
.
£m_›
=-
∑r_≈es
;

72 
£m_ds
.
£m_Êg
=0;

73 i‡((
rc
=
	`£m›
(
∑r_£mid
,&
£m_ds
,1))==-1)

74 
	`≥º‹
("sem_pb");

80 
	}
}

83 
	$£m_öô
() {

86 i‡((
∑r_£mid
=
	`£mgë
(
IPC_PRIVATE
,16,
IPC_CREAT
 | 0666)) ==-1) {

87 
	`≥º‹
("semget");(99);

90 
	}
}

93 
	$£m_deöô
() {

94 i‡((
	`£m˘l
(
∑r_£mid
,0,
IPC_RMID
,0))==-1) {

95 
	`≥º‹
("SemRelease");(99);

98 
	}
}

101 
	$begö_∑øŒñ
(
n
)

102 
n
;

104 
cidl
,
f‹kid
=1;

106 
cidl
=0;

107 (
cidl
+1)<
n
 && 
f‹kid
!=0) {

108 
cidl
++;

109 i‡((
f‹kid
=
	`f‹k
())==-1) {

110 
	`¥ötf
("fork failed\n");

111 
	`fÊush
(
°dout
);

112 
	`exô
(99);

115 i‡(
f‹kid
==0) {

116 } 
cidl
=0;

118 #ifde‡
BINDTOCPU


120 i‡(
	`böd_to_˝u
(
cidl
+1) == -1) {

121 
	`≥º‹
("bind_to_cpu()");

122 
	`¥ötf
("cid»%d\n)",
cidl
+1);

123 
	`exô
(1);

127 
∑r_cid
=
cidl
;

128 
∑r_≈es
=
n
;

129 
	`b¨rõr
();

131 
	}
}

134 
	$íd_∑øŒñ
() {

136 
°©
,
i
;

138 i‡(
∑r_cid
!=0Ë
	`exô
(0);

139 
i
=1; i<
∑r_≈es
; i++) {

140 
	`waôpid
(0,&
°©
,0);

141 i‡((
°©
 & 0xffffffff) !=0)

142 
	`¥ötf
("Job %d cøshed,Éxô: %d\n",
i
,
°©
);

145 
	}
}

	@mem/memperf/par.h

1 
∑r_cid
;

2 
∑r_≈es
;

3 
∑r_£mid
;

5 
b¨rõr
();

6 
£m_öô
();

7 
£m_deöô
();

8 
begö_∑øŒñ
(
n
);

9 
íd_∑øŒñ
();

	@mem/missrate.c

2 #ifde‡
PWR2


3 
	#N
 64

	)

5 
	#N
 60

	)

9 
	t¨øy_t
[
N
][N];

11 
	$sumA
(
¨øy_t
 
a
)

13 
i
, 
j
;

14 
sum
 = 0;

15 
i
 = 0; i < 
N
; i++)

16 
j
 = 0; j < 
N
; j++) {

17 
sum
 +
a
[
i
][
j
];

19  
sum
;

20 
	}
}

22 
	$sumB
(
¨øy_t
 
a
)

24 
i
, 
j
;

25 
sum
 = 0;

26 
j
 = 0; j < 
N
; j++)

27 
i
 = 0; i < 
N
; i++) {

28 
sum
 +
a
[
i
][
j
];

30  
sum
;

31 
	}
}

33 
	$sumC
(
¨øy_t
 
a
)

35 
i
, 
j
;

36 
sum
 = 0;

37 
j
 = 0; j < 
N
; j+=2)

38 
i
 = 0; i < 
N
; i+=2) {

39 
sum
 +(
a
[
i
][
j
] +á[i+1][j]

40 + 
a
[
i
][
j
+1] +á[i+1][j+1]);

42  
sum
;

43 
	}
}

	@mem/missrate2.c

1 
	~<°dio.h
>

3 
	$mis§©e
()

6 
x
[2][128];

7 
i
;

8 
sum
 = 0;

10 
i
 = 0; i < 128; i++) {

11 
sum
 +
x
[0][
i
] * x[1][i];

14 
	}
}

	@mem/missrate2b.c

1 
	~<°dio.h
>

3 
	$mis§©e
()

6 
x
[2][256];

7 
i
;

8 
sum
 = 0;

10 
i
 = 0; i < 256; i++) {

11 
sum
 +
x
[0][
i
] * x[1][i];

14 
	}
}

	@mem/mountain/clock.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<uni°d.h
>

4 
	~<sys/times.h
>

5 
	~<°rög.h
>

6 
	~"˛ock.h
"

10 
	gcyc_hi
 = 0;

11 
	gcyc_lo
 = 0;

13 
	$ac˚ss_cou¡î
(*
hi
, *
lo
)

16 
	`asm
("rdtsc; movl %%edx,%0; movl %%eax,%1"

17 : "Ù" (*
hi
), "Ù" (*
lo
)

20 
	}
}

22 
	$°¨t_cou¡î
()

24 
	`ac˚ss_cou¡î
(&
cyc_hi
, &
cyc_lo
);

25 
	}
}

27 
	$gë_cou¡î
()

29 
ncyc_hi
, 
ncyc_lo
;

30 
hi
, 
lo
, 
b‹row
;

31 
ªsu…
;

33 
	`ac˚ss_cou¡î
(&
ncyc_hi
, &
ncyc_lo
);

35 
lo
 = 
ncyc_lo
 - 
cyc_lo
;

36 
b‹row
 = 
lo
 > 
ncyc_lo
;

37 
hi
 = 
ncyc_hi
 - 
cyc_hi
 - 
b‹row
;

38 
ªsu…
 = (Ë
hi
 * (1 << 30Ë* 4 + 
lo
;

39 i‡(
ªsu…
 < 0) {

40 
	`Ârötf
(
°dîr
, "Eº‹: Cy˛êcou¡îÑëu∫ögÇeg©ivêvÆue: %.0f\n", 
ªsu…
);

42  
ªsu…
;

43 
	}
}

45 
	$ovhd
()

48 
i
;

49 
ªsu…
;

50 
i
 = 0; i < 2; i++) {

51 
	`°¨t_cou¡î
();

52 
ªsu…
 = 
	`gë_cou¡î
();

54  
ªsu…
;

55 
	}
}

59 
	g˝u_ghz
 = 0.0;

62 
	#MAXBUF
 512

	)

64 
	$c‹e_mhz
(
vîbo£
) {

65 
buf
[
MAXBUF
];

66 
FILE
 *
Â
 = 
	`f›í
("/proc/cpuinfo", "r");

67 
˝u_ghz
 = 0.0;

69 i‡(!
Â
) {

70 
	`Ârötf
(
°dîr
, "Can't open /proc/cpuinfoÅo get clock information\n");

71 
˝u_ghz
 = 1.0;

72  
˝u_ghz
 * 1000.0;

74 
	`fgës
(
buf
, 
MAXBUF
, 
Â
)) {

75 i‡(
	`°r°r
(
buf
, "cpu MHz")) {

76 
˝u_mhz
 = 0.0;

77 
	`ssˇnf
(
buf
, "˝u MHz\t: %lf", &
˝u_mhz
);

78 
˝u_ghz
 = 
˝u_mhz
 / 1000.0;

82 
	`f˛o£
(
Â
);

83 i‡(
˝u_ghz
 == 0.0) {

84 
	`Ârötf
(
°dîr
, "Can't open /proc/cpuinfoÅo get clock information\n");

85 
˝u_ghz
 = 1.0;

86  
˝u_ghz
 * 1000.0;

88 i‡(
vîbo£
) {

89 
	`¥ötf
("Pro˚ss‹ Clock R©ê~%.4‡GHz (exåa˘ed from fûe)\n", 
˝u_ghz
);

91  
˝u_ghz
 * 1000;

92 
	}
}

94 
	$mhz
(
vîbo£
) {

95 
vÆ
 = 
	`c‹e_mhz
(
vîbo£
);

96  
vÆ
;

97 
	}
}

103 
	$mhz_fuŒ
(
vîbo£
, 
¶ì±ime
)

105 
øã
;

106 
	`°¨t_cou¡î
();

107 
	`¶ìp
(
¶ì±ime
);

108 
øã
 = 
	`gë_cou¡î
()/(1e6*
¶ì±ime
);

109 i‡(
vîbo£
)

110 
	`¥ötf
("Pro˚ss‹ Clock R©ê~%.1‡MHz\n", 
øã
);

111  
øã
;

112 
	}
}

122 
	gcyc_≥r_tick
 = 0.0;

124 
	#NEVENT
 100

	)

125 
	#THRESHOLD
 1000

	)

126 
	#RECORDTHRESH
 3000

	)

129 
	$ˇŒibøã
(
vîbo£
)

131 
ﬁdt
;

132 
tms
 
t
;

133 
˛ock_t
 
ﬁdc
;

134 
e
 = 0;

135 
	`times
(&
t
);

136 
ﬁdc
 = 
t
.
tms_utime
;

137 
	`°¨t_cou¡î
();

138 
ﬁdt
 = 
	`gë_cou¡î
();

139 
e
 <
NEVENT
) {

140 
√wt
 = 
	`gë_cou¡î
();

141 i‡(
√wt
-
ﬁdt
 >
THRESHOLD
) {

142 
˛ock_t
 
√wc
;

143 
	`times
(&
t
);

144 
√wc
 = 
t
.
tms_utime
;

145 i‡(
√wc
 > 
ﬁdc
) {

146 
˝t
 = (
√wt
-
ﬁdt
)/(
√wc
-
ﬁdc
);

147 i‡((
cyc_≥r_tick
 =0.0 || cyc_≥r_tick > 
˝t
Ë&& c± > 
RECORDTHRESH
)

148 
cyc_≥r_tick
 = 
˝t
;

154 
e
++;

155 
ﬁdc
 = 
√wc
;

157 
ﬁdt
 = 
√wt
;

160 i‡(
vîbo£
)

161 
	`¥ötf
("Sëtög cyc_≥r_tickÅÿ%f\n", 
cyc_≥r_tick
);

162 
	}
}

164 
˛ock_t
 
	g°¨t_tick
 = 0;

166 
	$°¨t_comp_cou¡î
() {

167 
tms
 
t
;

168 i‡(
cyc_≥r_tick
 == 0.0)

169 
	`ˇŒibøã
(1);

170 
	`times
(&
t
);

171 
°¨t_tick
 = 
t
.
tms_utime
;

172 
	`°¨t_cou¡î
();

173 
	}
}

175 
	$gë_comp_cou¡î
() {

176 
time
 = 
	`gë_cou¡î
();

177 
˘ime
;

178 
tms
 
t
;

179 
˛ock_t
 
ticks
;

180 
	`times
(&
t
);

181 
ticks
 = 
t
.
tms_utime
 - 
°¨t_tick
;

182 
˘ime
 = 
time
 - 
ticks
*
cyc_≥r_tick
;

187  
˘ime
;

188 
	}
}

	@mem/mountain/clock.h

4 
°¨t_cou¡î
();

7 
gë_cou¡î
();

11 
ovhd
();

14 
mhz
(
vîbo£
);

17 
mhz_fuŒ
(
vîbo£
, 
¶ì±ime
);

21 
°¨t_comp_cou¡î
();

23 
gë_comp_cou¡î
();

	@mem/mountain/fcyc2.c

2 
	~<°dlib.h
>

3 
	~<sys/times.h
>

4 
	~<°dio.h
>

6 
	~"˛ock.h
"

7 
	~"fcyc2.h
"

9 *
	gvÆues
 = 
NULL
;

10 
	gßm∂ecou¡
 = 0;

12 
	#KEEP_VALS
 1

	)

13 
	#KEEP_SAMPLES
 1

	)

15 #i‡
KEEP_SAMPLES


16 *
	gßm∂es
 = 
NULL
;

20 
	$öô_ßm∂î
(
k
, 
maxßm∂es
)

22 i‡(
vÆues
)

23 
	`‰ì
(
vÆues
);

24 
vÆues
 = 
	`ˇŒoc
(
k
, ());

25 #i‡
KEEP_SAMPLES


26 i‡(
ßm∂es
)

27 
	`‰ì
(
ßm∂es
);

29 
ßm∂es
 = 
	`ˇŒoc
(
maxßm∂es
+
k
, ());

31 
ßm∂ecou¡
 = 0;

32 
	}
}

35 
	$add_ßm∂e
(
vÆ
, 
k
)

37 
pos
 = 0;

38 i‡(
ßm∂ecou¡
 < 
k
) {

39 
pos
 = 
ßm∂ecou¡
;

40 
vÆues
[
pos
] = 
vÆ
;

41 } i‡(
vÆ
 < 
vÆues
[
k
-1]) {

42 
pos
 = 
k
-1;

43 
vÆues
[
pos
] = 
vÆ
;

45 #i‡
KEEP_SAMPLES


46 
ßm∂es
[
ßm∂ecou¡
] = 
vÆ
;

48 
ßm∂ecou¡
++;

50 
pos
 > 0 && 
vÆues
[pos-1] > values[pos]) {

51 
ãmp
 = 
vÆues
[
pos
-1];

52 
vÆues
[
pos
-1] = values[pos];

53 
vÆues
[
pos
] = 
ãmp
;

54 
pos
--;

56 
	}
}

59 
	$gë_mö
()

61  
vÆues
[0];

62 
	}
}

65 
	$îr
(
k
)

67 i‡(
ßm∂ecou¡
 < 
k
)

69  (
vÆues
[
k
-1] - values[0])/values[0];

70 
	}
}

73 
	$has_c⁄vîged
(
k_¨g
, 
ïsû⁄_¨g
, 
maxßm∂es
)

75 i‡((
ßm∂ecou¡
 >
k_¨g
) &&

76 ((1 + 
ïsû⁄_¨g
)*
vÆues
[0] >vÆues[
k_¨g
-1]))

77  
ßm∂ecou¡
;

78 i‡((
ßm∂ecou¡
 >
maxßm∂es
))

81 
	}
}

85 
	#ASIZE
 (1 << 17)

	)

87 
	#STRIDE
 8

	)

88 
	g°uff
[
ASIZE
];

89 
	gsök
;

91 
	$˛ór
()

93 
x
 = 
sök
;

94 
i
;

95 
i
 = 0; i < 
ASIZE
; i +
STRIDE
)

96 
x
 +
°uff
[
i
];

97 
sök
 = 
x
;

98 
	}
}

100 
	$fcyc2_fuŒ
(
ã°_fun˘
 
f
, 
∑øm1
, 
∑øm2
, 
˛ór_ˇche
,

101 
k
, 
ïsû⁄
, 
maxßm∂es
, 
com≥nßã
)

103 
ªsu…
;

104 
	`öô_ßm∂î
(
k
, 
maxßm∂es
);

105 i‡(
com≥nßã
) {

107 
cyc
;

108 i‡(
˛ór_ˇche
)

109 
	`˛ór
();

110 
	`f
(
∑øm1
, 
∑øm2
);

111 
	`°¨t_comp_cou¡î
();

112 
	`f
(
∑øm1
, 
∑øm2
);

113 
cyc
 = 
	`gë_comp_cou¡î
();

114 
	`add_ßm∂e
(
cyc
, 
k
);

115 } !
	`has_c⁄vîged
(
k
, 
ïsû⁄
, 
maxßm∂es
Ë&& 
ßm∂ecou¡
 < maxsamples);

118 
cyc
;

119 i‡(
˛ór_ˇche
)

120 
	`˛ór
();

121 
	`f
(
∑øm1
, 
∑øm2
);

122 
	`°¨t_cou¡î
();

123 
	`f
(
∑øm1
, 
∑øm2
);

124 
cyc
 = 
	`gë_cou¡î
();

125 
	`add_ßm∂e
(
cyc
, 
k
);

126 } !
	`has_c⁄vîged
(
k
, 
ïsû⁄
, 
maxßm∂es
Ë&& 
ßm∂ecou¡
 < maxsamples);

128 #ifde‡
DEBUG


130 
i
;

131 
	`¥ötf
(" %d smÆÀ° vÆues: [", 
k
);

132 
i
 = 0; i < 
k
; i++)

133 
	`¥ötf
("%.0f%s", 
vÆues
[
i
], i==
k
-1 ? "]\n" : ", ");

136 
ªsu…
 = 
vÆues
[0];

137 #i‡!
KEEP_VALS


138 
	`‰ì
(
vÆues
);

139 
vÆues
 = 
NULL
;

141  
ªsu…
;

142 
	}
}

144 
	$fcyc2
(
ã°_fun˘
 
f
, 
∑øm1
, 
∑øm2
, 
˛ór_ˇche
)

146  
	`fcyc2_fuŒ
(
f
, 
∑øm1
, 
∑øm2
, 
˛ór_ˇche
, 3, 0.01, 500, 0);

147 
	}
}

152 
	gMhz
 = 0.0;

154 
	~<sys/time.h
>

156 
timevÆ
 
	gt°¨t
;

159 
	$°¨t_cou¡î_tod
()

161 i‡(
Mhz
 == 0)

162 
Mhz
 = 
	`mhz_fuŒ
(0, 10);

163 
	`gëtimeofday
(&
t°¨t
, 
NULL
);

164 
	}
}

167 
	$gë_cou¡î_tod
()

169 
timevÆ
 
tföish
;

170 
£c
, 
u£c
;

171 
	`gëtimeofday
(&
tföish
, 
NULL
);

172 
£c
 = 
tföish
.
tv_£c
 - 
t°¨t
.tv_sec;

173 
u£c
 = 
tföish
.
tv_u£c
 - 
t°¨t
.tv_usec;

174  (1e6 * 
£c
 + 
u£c
)*
Mhz
;

175 
	}
}

179 
	gcyc_≥r_tick
 = 0.0;

181 
	#NEVENT
 100

	)

182 
	#THRESHOLD
 1000

	)

183 
	#RECORDTHRESH
 3000

	)

186 
	$ˇŒibøã
(
vîbo£
)

188 
ﬁdt
;

189 
tms
 
t
;

190 
˛ock_t
 
ﬁdc
;

191 
e
 = 0;

192 
	`times
(&
t
);

193 
ﬁdc
 = 
t
.
tms_utime
;

194 
	`°¨t_cou¡î_tod
();

195 
ﬁdt
 = 
	`gë_cou¡î_tod
();

196 
e
 <
NEVENT
) {

197 
√wt
 = 
	`gë_cou¡î_tod
();

198 i‡(
√wt
-
ﬁdt
 >
THRESHOLD
) {

199 
˛ock_t
 
√wc
;

200 
	`times
(&
t
);

201 
√wc
 = 
t
.
tms_utime
;

202 i‡(
√wc
 > 
ﬁdc
) {

203 
˝t
 = (
√wt
-
ﬁdt
)/(
√wc
-
ﬁdc
);

204 i‡((
cyc_≥r_tick
 =0.0 || cyc_≥r_tick > 
˝t
Ë&& c± > 
RECORDTHRESH
)

205 
cyc_≥r_tick
 = 
˝t
;

211 
e
++;

212 
ﬁdc
 = 
√wc
;

214 
ﬁdt
 = 
√wt
;

217 i‡(
vîbo£
)

218 
	`¥ötf
("Sëtög cyc_≥r_tickÅÿ%f\n", 
cyc_≥r_tick
);

219 
	}
}

221 
˛ock_t
 
	g°¨t_tick
 = 0;

223 
	$°¨t_comp_cou¡î_tod
() {

224 
tms
 
t
;

225 i‡(
cyc_≥r_tick
 == 0.0)

226 
	`ˇŒibøã
(0);

227 
	`times
(&
t
);

228 
°¨t_tick
 = 
t
.
tms_utime
;

229 
	`°¨t_cou¡î_tod
();

230 
	}
}

232 
	$gë_comp_cou¡î_tod
() {

233 
time
 = 
	`gë_cou¡î_tod
();

234 
˘ime
;

235 
tms
 
t
;

236 
˛ock_t
 
ticks
;

237 
	`times
(&
t
);

238 
ticks
 = 
t
.
tms_utime
 - 
°¨t_tick
;

239 
˘ime
 = 
time
 - 
ticks
*
cyc_≥r_tick
;

244  
˘ime
;

245 
	}
}

248 
	$fcyc2_fuŒ_tod
(
ã°_fun˘
 
f
, 
∑øm1
, 
∑øm2
, 
˛ór_ˇche
,

249 
k
, 
ïsû⁄
, 
maxßm∂es
, 
com≥nßã
)

251 
ªsu…
;

252 
	`öô_ßm∂î
(
k
, 
maxßm∂es
);

253 i‡(
com≥nßã
) {

255 
cyc
;

256 i‡(
˛ór_ˇche
)

257 
	`˛ór
();

258 
	`°¨t_comp_cou¡î_tod
();

259 
	`f
(
∑øm1
, 
∑øm2
);

260 
cyc
 = 
	`gë_comp_cou¡î_tod
();

261 
	`add_ßm∂e
(
cyc
, 
k
);

262 } !
	`has_c⁄vîged
(
k
, 
ïsû⁄
, 
maxßm∂es
Ë&& 
ßm∂ecou¡
 < maxsamples);

265 
cyc
;

266 i‡(
˛ór_ˇche
)

267 
	`˛ór
();

268 
	`°¨t_cou¡î_tod
();

269 
	`f
(
∑øm1
, 
∑øm2
);

270 
cyc
 = 
	`gë_cou¡î_tod
();

271 
	`add_ßm∂e
(
cyc
, 
k
);

272 } !
	`has_c⁄vîged
(
k
, 
ïsû⁄
, 
maxßm∂es
Ë&& 
ßm∂ecou¡
 < maxsamples);

274 #ifde‡
DEBUG


276 
i
;

277 
	`¥ötf
(" %d smÆÀ° vÆues: [", 
k
);

278 
i
 = 0; i < 
k
; i++)

279 
	`¥ötf
("%.0f%s", 
vÆues
[
i
], i==
k
-1 ? "]\n" : ", ");

282 
ªsu…
 = 
vÆues
[0];

283 #i‡!
KEEP_VALS


284 
	`‰ì
(
vÆues
);

285 
vÆues
 = 
NULL
;

287  
ªsu…
;

288 
	}
}

290 
	$fcyc2_tod
(
ã°_fun˘
 
f
, 
∑øm1
, 
∑øm2
, 
˛ór_ˇche
)

292  
	`fcyc2_fuŒ_tod
(
f
, 
∑øm1
, 
∑øm2
, 
˛ór_ˇche
, 3, 0.01, 20, 0);

293 
	}
}

	@mem/mountain/fcyc2.h

4 (*
	tã°_fun˘
)(, );

7 
	`fcyc2
(
ã°_fun˘
 
f
, 
∑øm1
, 
∑øm2
, 
˛ór_ˇche
);

19 
	`fcyc2_fuŒ
(
ã°_fun˘
 
f
, 
∑øm1
, 
∑øm2
, 
˛ór_ˇche
,

20 
k
, 
ïsû⁄
, 
maxßm∂es
, 
com≥nßã
);

23 
	`gë_mö
();

30 
	`has_c⁄vîged
(
k
, 
ïsû⁄
, 
maxßm∂es
);

33 
	`îr
(
k
);

38 
	`fcyc2_fuŒ_tod
(
ã°_fun˘
 
f
, 
∑øm1
, 
∑øm2
, 
˛ór_ˇche
,

39 
k
, 
ïsû⁄
, 
maxßm∂es
, 
com≥nßã
);

41 
	`fcyc2_tod
(
ã°_fun˘
 
f
, 
∑øm1
, 
∑øm2
, 
˛ór_ˇche
);

	@mem/mountain/mountain.c

3 
	~<°dlib.h
>

4 
	~<°dio.h
>

5 
	~"fcyc2.h
"

6 
	~"˛ock.h
"

8 
	#MINBYTES
 (1 << 14Ë

	)

9 
	#MAXBYTES
 (1 << 27Ë

	)

10 
	#MAXSTRIDE
 15

	)

11 
	#MAXELEMS
 
MAXBYTES
/()

	)

14 
	gd©a
[
MAXELEMS
];

18 
öô_d©a
(*
d©a
, 
n
);

19 
ã°
(
ñems
, 
°ride
);

20 
run
(
size
, 
°ride
, 
Mhz
);

23 
	$maö
()

25 
size
;

26 
°ride
;

27 
Mhz
;

29 
	`öô_d©a
(
d©a
, 
MAXELEMS
);

30 
Mhz
 = 
	`mhz
(0);

33 
	`¥ötf
("Clock fªquícy i†≠¥ox. %.1‡MHz\n", 
Mhz
);

34 
	`¥ötf
("Memory mountain (MB/sec)\n");

36 
	`¥ötf
("\t");

37 
°ride
 = 1; såidê<
MAXSTRIDE
; stride++)

38 
	`¥ötf
("s%d\t", 
°ride
);

39 
	`¥ötf
("\n");

42 
size
 = 
MAXBYTES
; sizê>
MINBYTES
; size >>= 1) {

45 i‡(
size
 > (1 << 20))

46 
	`¥ötf
("%dm\t", 
size
 / (1 << 20));

48 
	`¥ötf
("%dk\t", 
size
 / 1024);

51 
°ride
 = 1; såidê<
MAXSTRIDE
; stride++) {

52 
	`¥ötf
("%.0f\t", 
	`run
(
size
, 
°ride
, 
Mhz
));

55 
	`¥ötf
("\n");

57 
	`exô
(0);

58 
	}
}

62 
	$öô_d©a
(*
d©a
, 
n
)

64 
i
;

66 
i
 = 0; i < 
n
; i++)

67 
d©a
[
i
] = i;

68 
	}
}

74 
	$ã°
(
ñems
, 
°ride
)

76 
i
, 
sx2
 = 
°ride
*2, 
sx3
 = såide*3, 
sx4
 = stride*4;

77 
acc0
 = 0, 
acc1
 = 0, 
acc2
 = 0, 
acc3
 = 0;

78 
Àngth
 = 
ñems
;

79 
limô
 = 
Àngth
 - 
sx4
;

82 
i
 = 0; i < 
limô
; i +
sx4
) {

83 
acc0
 =ácc0 + 
d©a
[
i
];

84 
acc1
 =ácc1 + 
d©a
[
i
+
°ride
];

85 
acc2
 =ácc2 + 
d©a
[
i
+
sx2
];

86 
acc3
 =ácc3 + 
d©a
[
i
+
sx3
];

90 ; 
i
 < 
Àngth
; i +
°ride
) {

91 
acc0
 =ácc0 + 
d©a
[
i
];

93  ((
acc0
 + 
acc1
Ë+ (
acc2
 + 
acc3
));

94 
	}
}

100 
	$run
(
size
, 
°ride
, 
Mhz
)

102 
cy˛es
;

103 
ñems
 = 
size
 / ();

105 
	`ã°
(
ñems
, 
°ride
);

106 
cy˛es
 = 
	`fcyc2
(
ã°
, 
ñems
, 
°ride
, 0);

107  (
size
 / 
°ride
Ë/ (
cy˛es
 / 
Mhz
);

108 
	}
}

	@mem/mountain1x1/clock.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<uni°d.h
>

4 
	~<sys/times.h
>

5 
	~<°rög.h
>

6 
	~"˛ock.h
"

10 
	gcyc_hi
 = 0;

11 
	gcyc_lo
 = 0;

13 
	$ac˚ss_cou¡î
(*
hi
, *
lo
)

16 
	`asm
("rdtsc; movl %%edx,%0; movl %%eax,%1"

17 : "Ù" (*
hi
), "Ù" (*
lo
)

20 
	}
}

22 
	$°¨t_cou¡î
()

24 
	`ac˚ss_cou¡î
(&
cyc_hi
, &
cyc_lo
);

25 
	}
}

27 
	$gë_cou¡î
()

29 
ncyc_hi
, 
ncyc_lo
;

30 
hi
, 
lo
, 
b‹row
;

31 
ªsu…
;

33 
	`ac˚ss_cou¡î
(&
ncyc_hi
, &
ncyc_lo
);

35 
lo
 = 
ncyc_lo
 - 
cyc_lo
;

36 
b‹row
 = 
lo
 > 
ncyc_lo
;

37 
hi
 = 
ncyc_hi
 - 
cyc_hi
 - 
b‹row
;

38 
ªsu…
 = (Ë
hi
 * (1 << 30Ë* 4 + 
lo
;

39 i‡(
ªsu…
 < 0) {

40 
	`Ârötf
(
°dîr
, "Eº‹: Cy˛êcou¡îÑëu∫ögÇeg©ivêvÆue: %.0f\n", 
ªsu…
);

42  
ªsu…
;

43 
	}
}

45 
	$ovhd
()

48 
i
;

49 
ªsu…
;

50 
i
 = 0; i < 2; i++) {

51 
	`°¨t_cou¡î
();

52 
ªsu…
 = 
	`gë_cou¡î
();

54  
ªsu…
;

55 
	}
}

59 
	g˝u_ghz
 = 0.0;

62 
	#MAXBUF
 512

	)

64 
	$c‹e_mhz
(
vîbo£
) {

65 
buf
[
MAXBUF
];

66 
FILE
 *
Â
 = 
	`f›í
("/proc/cpuinfo", "r");

67 
˝u_ghz
 = 0.0;

69 i‡(!
Â
) {

70 
	`Ârötf
(
°dîr
, "Can't open /proc/cpuinfoÅo get clock information\n");

71 
˝u_ghz
 = 1.0;

72  
˝u_ghz
 * 1000.0;

74 
	`fgës
(
buf
, 
MAXBUF
, 
Â
)) {

75 i‡(
	`°r°r
(
buf
, "cpu MHz")) {

76 
˝u_mhz
 = 0.0;

77 
	`ssˇnf
(
buf
, "˝u MHz\t: %lf", &
˝u_mhz
);

78 
˝u_ghz
 = 
˝u_mhz
 / 1000.0;

82 
	`f˛o£
(
Â
);

83 i‡(
˝u_ghz
 == 0.0) {

84 
	`Ârötf
(
°dîr
, "Can't open /proc/cpuinfoÅo get clock information\n");

85 
˝u_ghz
 = 1.0;

86  
˝u_ghz
 * 1000.0;

88 i‡(
vîbo£
) {

89 
	`¥ötf
("Pro˚ss‹ Clock R©ê~%.4‡GHz (exåa˘ed from fûe)\n", 
˝u_ghz
);

91  
˝u_ghz
 * 1000;

92 
	}
}

94 
	$mhz
(
vîbo£
) {

95 
vÆ
 = 
	`c‹e_mhz
(
vîbo£
);

96  
vÆ
;

97 
	}
}

103 
	$mhz_fuŒ
(
vîbo£
, 
¶ì±ime
)

105 
øã
;

106 
	`°¨t_cou¡î
();

107 
	`¶ìp
(
¶ì±ime
);

108 
øã
 = 
	`gë_cou¡î
()/(1e6*
¶ì±ime
);

109 i‡(
vîbo£
)

110 
	`¥ötf
("Pro˚ss‹ Clock R©ê~%.1‡MHz\n", 
øã
);

111  
øã
;

112 
	}
}

122 
	gcyc_≥r_tick
 = 0.0;

124 
	#NEVENT
 100

	)

125 
	#THRESHOLD
 1000

	)

126 
	#RECORDTHRESH
 3000

	)

129 
	$ˇŒibøã
(
vîbo£
)

131 
ﬁdt
;

132 
tms
 
t
;

133 
˛ock_t
 
ﬁdc
;

134 
e
 = 0;

135 
	`times
(&
t
);

136 
ﬁdc
 = 
t
.
tms_utime
;

137 
	`°¨t_cou¡î
();

138 
ﬁdt
 = 
	`gë_cou¡î
();

139 
e
 <
NEVENT
) {

140 
√wt
 = 
	`gë_cou¡î
();

141 i‡(
√wt
-
ﬁdt
 >
THRESHOLD
) {

142 
˛ock_t
 
√wc
;

143 
	`times
(&
t
);

144 
√wc
 = 
t
.
tms_utime
;

145 i‡(
√wc
 > 
ﬁdc
) {

146 
˝t
 = (
√wt
-
ﬁdt
)/(
√wc
-
ﬁdc
);

147 i‡((
cyc_≥r_tick
 =0.0 || cyc_≥r_tick > 
˝t
Ë&& c± > 
RECORDTHRESH
)

148 
cyc_≥r_tick
 = 
˝t
;

154 
e
++;

155 
ﬁdc
 = 
√wc
;

157 
ﬁdt
 = 
√wt
;

160 i‡(
vîbo£
)

161 
	`¥ötf
("Sëtög cyc_≥r_tickÅÿ%f\n", 
cyc_≥r_tick
);

162 
	}
}

164 
˛ock_t
 
	g°¨t_tick
 = 0;

166 
	$°¨t_comp_cou¡î
() {

167 
tms
 
t
;

168 i‡(
cyc_≥r_tick
 == 0.0)

169 
	`ˇŒibøã
(1);

170 
	`times
(&
t
);

171 
°¨t_tick
 = 
t
.
tms_utime
;

172 
	`°¨t_cou¡î
();

173 
	}
}

175 
	$gë_comp_cou¡î
() {

176 
time
 = 
	`gë_cou¡î
();

177 
˘ime
;

178 
tms
 
t
;

179 
˛ock_t
 
ticks
;

180 
	`times
(&
t
);

181 
ticks
 = 
t
.
tms_utime
 - 
°¨t_tick
;

182 
˘ime
 = 
time
 - 
ticks
*
cyc_≥r_tick
;

187  
˘ime
;

188 
	}
}

	@mem/mountain1x1/clock.h

4 
°¨t_cou¡î
();

7 
gë_cou¡î
();

11 
ovhd
();

14 
mhz
(
vîbo£
);

17 
mhz_fuŒ
(
vîbo£
, 
¶ì±ime
);

21 
°¨t_comp_cou¡î
();

23 
gë_comp_cou¡î
();

	@mem/mountain1x1/fcyc2.c

2 
	~<°dlib.h
>

3 
	~<sys/times.h
>

4 
	~<°dio.h
>

6 
	~"˛ock.h
"

7 
	~"fcyc2.h
"

9 *
	gvÆues
 = 
NULL
;

10 
	gßm∂ecou¡
 = 0;

12 
	#KEEP_VALS
 1

	)

13 
	#KEEP_SAMPLES
 1

	)

15 #i‡
KEEP_SAMPLES


16 *
	gßm∂es
 = 
NULL
;

20 
	$öô_ßm∂î
(
k
, 
maxßm∂es
)

22 i‡(
vÆues
)

23 
	`‰ì
(
vÆues
);

24 
vÆues
 = 
	`ˇŒoc
(
k
, ());

25 #i‡
KEEP_SAMPLES


26 i‡(
ßm∂es
)

27 
	`‰ì
(
ßm∂es
);

29 
ßm∂es
 = 
	`ˇŒoc
(
maxßm∂es
+
k
, ());

31 
ßm∂ecou¡
 = 0;

32 
	}
}

35 
	$add_ßm∂e
(
vÆ
, 
k
)

37 
pos
 = 0;

38 i‡(
ßm∂ecou¡
 < 
k
) {

39 
pos
 = 
ßm∂ecou¡
;

40 
vÆues
[
pos
] = 
vÆ
;

41 } i‡(
vÆ
 < 
vÆues
[
k
-1]) {

42 
pos
 = 
k
-1;

43 
vÆues
[
pos
] = 
vÆ
;

45 #i‡
KEEP_SAMPLES


46 
ßm∂es
[
ßm∂ecou¡
] = 
vÆ
;

48 
ßm∂ecou¡
++;

50 
pos
 > 0 && 
vÆues
[pos-1] > values[pos]) {

51 
ãmp
 = 
vÆues
[
pos
-1];

52 
vÆues
[
pos
-1] = values[pos];

53 
vÆues
[
pos
] = 
ãmp
;

54 
pos
--;

56 
	}
}

59 
	$gë_mö
()

61  
vÆues
[0];

62 
	}
}

65 
	$îr
(
k
)

67 i‡(
ßm∂ecou¡
 < 
k
)

69  (
vÆues
[
k
-1] - values[0])/values[0];

70 
	}
}

73 
	$has_c⁄vîged
(
k_¨g
, 
ïsû⁄_¨g
, 
maxßm∂es
)

75 i‡((
ßm∂ecou¡
 >
k_¨g
) &&

76 ((1 + 
ïsû⁄_¨g
)*
vÆues
[0] >vÆues[
k_¨g
-1]))

77  
ßm∂ecou¡
;

78 i‡((
ßm∂ecou¡
 >
maxßm∂es
))

81 
	}
}

85 
	#ASIZE
 (1 << 17)

	)

87 
	#STRIDE
 8

	)

88 
	g°uff
[
ASIZE
];

89 
	gsök
;

91 
	$˛ór
()

93 
x
 = 
sök
;

94 
i
;

95 
i
 = 0; i < 
ASIZE
; i +
STRIDE
)

96 
x
 +
°uff
[
i
];

97 
sök
 = 
x
;

98 
	}
}

100 
	$fcyc2_fuŒ
(
ã°_fun˘
 
f
, 
∑øm1
, 
∑øm2
, 
˛ór_ˇche
,

101 
k
, 
ïsû⁄
, 
maxßm∂es
, 
com≥nßã
)

103 
ªsu…
;

104 
	`öô_ßm∂î
(
k
, 
maxßm∂es
);

105 i‡(
com≥nßã
) {

107 
cyc
;

108 i‡(
˛ór_ˇche
)

109 
	`˛ór
();

110 
	`f
(
∑øm1
, 
∑øm2
);

111 
	`°¨t_comp_cou¡î
();

112 
	`f
(
∑øm1
, 
∑øm2
);

113 
cyc
 = 
	`gë_comp_cou¡î
();

114 
	`add_ßm∂e
(
cyc
, 
k
);

115 } !
	`has_c⁄vîged
(
k
, 
ïsû⁄
, 
maxßm∂es
Ë&& 
ßm∂ecou¡
 < maxsamples);

118 
cyc
;

119 i‡(
˛ór_ˇche
)

120 
	`˛ór
();

121 
	`f
(
∑øm1
, 
∑øm2
);

122 
	`°¨t_cou¡î
();

123 
	`f
(
∑øm1
, 
∑øm2
);

124 
cyc
 = 
	`gë_cou¡î
();

125 
	`add_ßm∂e
(
cyc
, 
k
);

126 } !
	`has_c⁄vîged
(
k
, 
ïsû⁄
, 
maxßm∂es
Ë&& 
ßm∂ecou¡
 < maxsamples);

128 #ifde‡
DEBUG


130 
i
;

131 
	`¥ötf
(" %d smÆÀ° vÆues: [", 
k
);

132 
i
 = 0; i < 
k
; i++)

133 
	`¥ötf
("%.0f%s", 
vÆues
[
i
], i==
k
-1 ? "]\n" : ", ");

136 
ªsu…
 = 
vÆues
[0];

137 #i‡!
KEEP_VALS


138 
	`‰ì
(
vÆues
);

139 
vÆues
 = 
NULL
;

141  
ªsu…
;

142 
	}
}

144 
	$fcyc2
(
ã°_fun˘
 
f
, 
∑øm1
, 
∑øm2
, 
˛ór_ˇche
)

146  
	`fcyc2_fuŒ
(
f
, 
∑øm1
, 
∑øm2
, 
˛ór_ˇche
, 3, 0.01, 300, 0);

147 
	}
}

152 
	gMhz
 = 0.0;

154 
	~<sys/time.h
>

156 
timevÆ
 
	gt°¨t
;

159 
	$°¨t_cou¡î_tod
()

161 i‡(
Mhz
 == 0)

162 
Mhz
 = 
	`mhz_fuŒ
(0, 10);

163 
	`gëtimeofday
(&
t°¨t
, 
NULL
);

164 
	}
}

167 
	$gë_cou¡î_tod
()

169 
timevÆ
 
tföish
;

170 
£c
, 
u£c
;

171 
	`gëtimeofday
(&
tföish
, 
NULL
);

172 
£c
 = 
tföish
.
tv_£c
 - 
t°¨t
.tv_sec;

173 
u£c
 = 
tföish
.
tv_u£c
 - 
t°¨t
.tv_usec;

174  (1e6 * 
£c
 + 
u£c
)*
Mhz
;

175 
	}
}

179 
	gcyc_≥r_tick
 = 0.0;

181 
	#NEVENT
 100

	)

182 
	#THRESHOLD
 1000

	)

183 
	#RECORDTHRESH
 3000

	)

186 
	$ˇŒibøã
(
vîbo£
)

188 
ﬁdt
;

189 
tms
 
t
;

190 
˛ock_t
 
ﬁdc
;

191 
e
 = 0;

192 
	`times
(&
t
);

193 
ﬁdc
 = 
t
.
tms_utime
;

194 
	`°¨t_cou¡î_tod
();

195 
ﬁdt
 = 
	`gë_cou¡î_tod
();

196 
e
 <
NEVENT
) {

197 
√wt
 = 
	`gë_cou¡î_tod
();

198 i‡(
√wt
-
ﬁdt
 >
THRESHOLD
) {

199 
˛ock_t
 
√wc
;

200 
	`times
(&
t
);

201 
√wc
 = 
t
.
tms_utime
;

202 i‡(
√wc
 > 
ﬁdc
) {

203 
˝t
 = (
√wt
-
ﬁdt
)/(
√wc
-
ﬁdc
);

204 i‡((
cyc_≥r_tick
 =0.0 || cyc_≥r_tick > 
˝t
Ë&& c± > 
RECORDTHRESH
)

205 
cyc_≥r_tick
 = 
˝t
;

211 
e
++;

212 
ﬁdc
 = 
√wc
;

214 
ﬁdt
 = 
√wt
;

217 i‡(
vîbo£
)

218 
	`¥ötf
("Sëtög cyc_≥r_tickÅÿ%f\n", 
cyc_≥r_tick
);

219 
	}
}

221 
˛ock_t
 
	g°¨t_tick
 = 0;

223 
	$°¨t_comp_cou¡î_tod
() {

224 
tms
 
t
;

225 i‡(
cyc_≥r_tick
 == 0.0)

226 
	`ˇŒibøã
(0);

227 
	`times
(&
t
);

228 
°¨t_tick
 = 
t
.
tms_utime
;

229 
	`°¨t_cou¡î_tod
();

230 
	}
}

232 
	$gë_comp_cou¡î_tod
() {

233 
time
 = 
	`gë_cou¡î_tod
();

234 
˘ime
;

235 
tms
 
t
;

236 
˛ock_t
 
ticks
;

237 
	`times
(&
t
);

238 
ticks
 = 
t
.
tms_utime
 - 
°¨t_tick
;

239 
˘ime
 = 
time
 - 
ticks
*
cyc_≥r_tick
;

244  
˘ime
;

245 
	}
}

248 
	$fcyc2_fuŒ_tod
(
ã°_fun˘
 
f
, 
∑øm1
, 
∑øm2
, 
˛ór_ˇche
,

249 
k
, 
ïsû⁄
, 
maxßm∂es
, 
com≥nßã
)

251 
ªsu…
;

252 
	`öô_ßm∂î
(
k
, 
maxßm∂es
);

253 i‡(
com≥nßã
) {

255 
cyc
;

256 i‡(
˛ór_ˇche
)

257 
	`˛ór
();

258 
	`°¨t_comp_cou¡î_tod
();

259 
	`f
(
∑øm1
, 
∑øm2
);

260 
cyc
 = 
	`gë_comp_cou¡î_tod
();

261 
	`add_ßm∂e
(
cyc
, 
k
);

262 } !
	`has_c⁄vîged
(
k
, 
ïsû⁄
, 
maxßm∂es
Ë&& 
ßm∂ecou¡
 < maxsamples);

265 
cyc
;

266 i‡(
˛ór_ˇche
)

267 
	`˛ór
();

268 
	`°¨t_cou¡î_tod
();

269 
	`f
(
∑øm1
, 
∑øm2
);

270 
cyc
 = 
	`gë_cou¡î_tod
();

271 
	`add_ßm∂e
(
cyc
, 
k
);

272 } !
	`has_c⁄vîged
(
k
, 
ïsû⁄
, 
maxßm∂es
Ë&& 
ßm∂ecou¡
 < maxsamples);

274 #ifde‡
DEBUG


276 
i
;

277 
	`¥ötf
(" %d smÆÀ° vÆues: [", 
k
);

278 
i
 = 0; i < 
k
; i++)

279 
	`¥ötf
("%.0f%s", 
vÆues
[
i
], i==
k
-1 ? "]\n" : ", ");

282 
ªsu…
 = 
vÆues
[0];

283 #i‡!
KEEP_VALS


284 
	`‰ì
(
vÆues
);

285 
vÆues
 = 
NULL
;

287  
ªsu…
;

288 
	}
}

290 
	$fcyc2_tod
(
ã°_fun˘
 
f
, 
∑øm1
, 
∑øm2
, 
˛ór_ˇche
)

292  
	`fcyc2_fuŒ_tod
(
f
, 
∑øm1
, 
∑øm2
, 
˛ór_ˇche
, 3, 0.01, 20, 0);

293 
	}
}

	@mem/mountain1x1/fcyc2.h

4 (*
	tã°_fun˘
)(, );

7 
	`fcyc2
(
ã°_fun˘
 
f
, 
∑øm1
, 
∑øm2
, 
˛ór_ˇche
);

19 
	`fcyc2_fuŒ
(
ã°_fun˘
 
f
, 
∑øm1
, 
∑øm2
, 
˛ór_ˇche
,

20 
k
, 
ïsû⁄
, 
maxßm∂es
, 
com≥nßã
);

23 
	`gë_mö
();

30 
	`has_c⁄vîged
(
k
, 
ïsû⁄
, 
maxßm∂es
);

33 
	`îr
(
k
);

38 
	`fcyc2_fuŒ_tod
(
ã°_fun˘
 
f
, 
∑øm1
, 
∑øm2
, 
˛ór_ˇche
,

39 
k
, 
ïsû⁄
, 
maxßm∂es
, 
com≥nßã
);

41 
	`fcyc2_tod
(
ã°_fun˘
 
f
, 
∑øm1
, 
∑øm2
, 
˛ór_ˇche
);

	@mem/mountain1x1/mountain.c

3 
	~<°dlib.h
>

4 
	~<°dio.h
>

5 
	~"fcyc2.h
"

6 
	~"˛ock.h
"

8 
	#MINBYTES
 (1 << 14Ë

	)

9 
	#MAXBYTES
 (1 << 27Ë

	)

10 
	#MAXSTRIDE
 15

	)

11 
	#MAXELEMS
 
MAXBYTES
/()

	)

14 
	gd©a
[
MAXELEMS
];

18 
öô_d©a
(*
d©a
, 
n
);

19 
ã°
(
ñems
, 
°ride
);

20 
run
(
size
, 
°ride
, 
Mhz
);

23 
	$maö
()

25 
size
;

26 
°ride
;

27 
Mhz
;

29 
	`öô_d©a
(
d©a
, 
MAXELEMS
);

30 
Mhz
 = 
	`mhz
(0);

33 
	`¥ötf
("Clock fªquícy i†≠¥ox. %.1‡MHz\n", 
Mhz
);

34 
	`¥ötf
("Memory mountain (MB/sec)\n");

36 
	`¥ötf
("\t");

37 
°ride
 = 1; såidê<
MAXSTRIDE
; stride++)

38 
	`¥ötf
("s%d\t", 
°ride
);

39 
	`¥ötf
("\n");

42 
size
 = 
MAXBYTES
; sizê>
MINBYTES
; size >>= 1) {

45 i‡(
size
 > (1 << 20))

46 
	`¥ötf
("%dm\t", 
size
 / (1 << 20));

48 
	`¥ötf
("%dk\t", 
size
 / 1024);

51 
°ride
 = 1; såidê<
MAXSTRIDE
; stride++) {

52 
	`¥ötf
("%.1f\t", 
	`run
(
size
, 
°ride
, 
Mhz
));

55 
	`¥ötf
("\n");

57 
	`exô
(0);

58 
	}
}

62 
	$öô_d©a
(*
d©a
, 
n
)

64 
i
;

66 
i
 = 0; i < 
n
; i++)

67 
d©a
[
i
] = i;

68 
	}
}

75 
	$ã°
(
ñems
, 
°ride
)

77 
i
;

78 
ªsu…
 = 0;

79 vﬁ©ûê
sök
;

81 
i
 = 0; i < 
ñems
; i +
°ride
) {

82 
ªsu…
 +
d©a
[
i
];

84 
sök
 = 
ªsu…
;

85  
sök
;

86 
	}
}

93 
	$run
(
size
, 
°ride
, 
Mhz
)

95 
cy˛es
;

96 
ñems
 = 
size
 / ();

98 
	`ã°
(
ñems
, 
°ride
);

99 
cy˛es
 = 
	`fcyc2
(
ã°
, 
ñems
, 
°ride
, 0);

100  (
size
 / 
°ride
Ë/ (
cy˛es
 / 
Mhz
);

101 
	}
}

	@mem/optlab.c

2 
	$å™•o£
(*
d°
, *
§c
, 
dim
)

4 
i
, 
j
;

6 
i
 = 0; i < 
dim
; i++)

7 
j
 = 0; j < 
dim
; j++)

8 
d°
[
j
*
dim
 + 
i
] = 
§c
[i*dim + j];

9 
	}
}

13 
	$cﬁ_c⁄vît
(*
G
, 
dim
) {

14 
i
, 
j
;

16 
i
 = 0; i < 
dim
; i++)

17 
j
 = 0; j < 
dim
; j++)

18 
G
[
j
*
dim
 + 
i
] = G[j*dim + i] || G[i*dim + j];

19 
	}
}

	@mem/postit.c

2 
	spoöt_cﬁ‹
 {

3 
	mc
;

4 
	mm
;

5 
	my
;

6 
	mk
;

9 
poöt_cﬁ‹
 
	gsqu¨e
[16][16];

10 
	gi
, 
	gj
;

13 
	$lo›s
()

17 
i
 = 0; i < 16; i++){

18 
j
 = 0; j < 16; j++) {

19 
squ¨e
[
i
][
j
].
c
 = 0;

20 
squ¨e
[
i
][
j
].
m
 = 0;

21 
squ¨e
[
i
][
j
].
y
 = 1;

22 
squ¨e
[
i
][
j
].
k
 = 0;

28 
i
 = 0; i < 16; i++){

29 
j
 = 0; j < 16; j++) {

30 
squ¨e
[
j
][
i
].
c
 = 0;

31 
squ¨e
[
j
][
i
].
m
 = 0;

32 
squ¨e
[
j
][
i
].
y
 = 1;

33 
squ¨e
[
j
][
i
].
k
 = 0;

39 
i
 = 0; i < 16; i++) {

40 
j
 = 0; j < 16; j++) {

41 
squ¨e
[
i
][
j
].
y
 = 1;

44 
i
 = 0; i < 16; i++) {

45 
j
 = 0; j < 16; j++) {

46 
squ¨e
[
i
][
j
].
c
 = 0;

47 
squ¨e
[
i
][
j
].
m
 = 0;

48 
squ¨e
[
i
][
j
].
k
 = 0;

53 
	}
}

	@mem/simaquarium.c

2 
	sÆg´_posôi⁄
 {

3 
	mx
;

4 
	my
;

7 
Æg´_posôi⁄
 
	ggrid
[16][16];

8 
	gtŸÆ_x
 = 0, 
	gtŸÆ_y
 = 0;

9 
	gi
, 
	gj
;

12 
	$lo›s
()

16 
i
 = 0; i < 16; i++) {

17 
j
 = 0; j < 16; j++) {

18 
tŸÆ_x
 +
grid
[
i
][
j
].
x
;

22 
i
 = 0; i < 16; i++) {

23 
j
 = 0; j < 16; j++) {

24 
tŸÆ_y
 +
grid
[
i
][
j
].
y
;

31 
i
 = 0; i < 16; i++){

32 
j
 = 0; j < 16; j++) {

33 
tŸÆ_x
 +
grid
[
j
][
i
].
x
;

34 
tŸÆ_y
 +
grid
[
j
][
i
].
y
;

41 
i
 = 0; i < 16; i++){

42 
j
 = 0; j < 16; j++) {

43 
tŸÆ_x
 +
grid
[
i
][
j
].
x
;

44 
tŸÆ_y
 +
grid
[
i
][
j
].
y
;

50 
	}
}

	@mem/sumarray3d-ans.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

4 
	#N
 1<<8

	)

6 
	ga
[
N
][N][N];

9 
	$sum¨øy3d
(
a
[
N
][N][N])

11 
i
, 
j
, 
k
, 
sum
 = 0;

13 
k
 = 0; k < 
N
; k++) {

14 
i
 = 0; i < 
N
; i++) {

15 
j
 = 0; j < 
N
; j++) {

16 
sum
 +
a
[
k
][
i
][
j
];

20  
sum
;

21 
	}
}

25 
	$maö
()

27 
i
, 
j
, 
k
;

29 
k
 = 0; k < 
N
; k++)

30 
i
 = 0; i < 
N
; i++)

31 
j
 = 0; j < 
N
; j++)

32 
a
[
k
][
i
][
j
] = ((j%2 == 0) ? 1 : -1);

35 
	`¥ötf
("sum=%d\n", 
	`sum¨øy3d
(
a
));

36 
	`exô
(0);

37 
	}
}

	@mem/sumarray3d.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

4 
	#N
 1<<8

	)

6 
	ga
[
N
][N][N];

9 
	$sum¨øy3d
(
a
[
N
][N][N])

11 
i
, 
j
, 
k
, 
sum
 = 0;

13 
i
 = 0; i < 
N
; i++) {

14 
j
 = 0; j < 
N
; j++) {

15 
k
 = 0; k < 
N
; k++) {

16 
sum
 +
a
[
k
][
i
][
j
];

20  
sum
;

21 
	}
}

25 
	$maö
()

27 
i
, 
j
, 
k
;

29 
i
 = 0; i < 
N
; i++)

30 
j
 = 0; j < 
N
; j++)

31 
k
 = 0; k < 
N
; k++)

32 
a
[
i
][
j
][
k
] = ((k%2 == 0) ? 1 : -1);

35 
	`¥ötf
("sum=%d\n", 
	`sum¨øy3d
(
a
));

36 
	`exô
(0);

37 
	}
}

	@mem/sumarraycols.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

4 
	#M
 (1<<15)

	)

5 
	#N
 
M


	)

7 
	ga
[
M
][
N
];

10 
	$sum¨øycﬁs
(
a
[
M
][
N
])

12 
i
, 
j
, 
sum
 = 0;

14 
j
 = 0; j < 
N
; j++)

15 
i
 = 0; i < 
M
; i++)

16 
sum
 +
a
[
i
][
j
];

17  
sum
;

18 
	}
}

22 
	$maö
()

24 
i
, 
j
;

26 
j
 = 0; j < 
N
; j++)

27 
i
 = 0; i < 
M
; i++)

28 
a
[
i
][
j
] = ((j%2 == 0) ? 1 : -1);

31 
	`¥ötf
("sum=%d\n", 
	`sum¨øycﬁs
(
a
));

32 
	`exô
(0);

33 
	}
}

	@mem/sumarrayrows.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

4 
	#M
 (1<<15)

	)

5 
	#N
 
M


	)

7 
	ga
[
M
][
N
];

10 
	$sum¨øyrows
(
a
[
M
][
N
])

12 
i
, 
j
, 
sum
 = 0;

14 
i
 = 0; i < 
M
; i++)

15 
j
 = 0; j < 
N
; j++)

16 
sum
 +
a
[
i
][
j
];

17  
sum
;

18 
	}
}

22 
	$maö
()

24 
i
, 
j
;

26 
i
 = 0; i < 
M
; i++)

27 
j
 = 0; j < 
N
; j++)

28 
a
[
i
][
j
] = ((j%2 == 0) ? 1 : -1);

31 
	`¥ötf
("sum=%d\n", 
	`sum¨øyrows
(
a
));

32 
	`exô
(0);

33 
	}
}

	@mem/sumvec.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

4 
	#N
 1<<20

	)

6 
	gv
[
N
];

9 
	$sumvec
(
v
[
N
])

11 
i
, 
sum
 = 0;

13 
i
 = 0; i < 
N
; i++)

14 
sum
 +
v
[
i
];

15  
sum
;

16 
	}
}

19 
	$maö
()

21 
i
;

23 
i
 = 0; i < 
N
; i++)

24 
v
[
i
] = ((i%2 == 0) ? 1 : -1);

27 
	`¥ötf
("sum=%d\n", 
	`sumvec
(
v
));

28 
	`exô
(0);

29 
	}
}

	@mem/trans.c

2 
	t¨øy
[2][2];

4 
	$å™•o£
(
¨øy
 
d°
,áºay 
§c
) {

5 
i
, 
j
;

7 
i
 = 0; i < 2; i++) {

8 
j
 = 0; j < 2; j++) {

9 
d°
[
j
][
i
] = 
§c
[i][j];

12 
	}
}

	@mem/transpose1.c

2 
	t¨øy
[2][2];

4 
	$å™•o£1
(
¨øy
 
d°
,áºay 
§c
)

6 
i
, 
j
;

8 
i
 = 0; i < 2; i++) {

9 
j
 = 0; j < 2; j++) {

10 
d°
[
j
][
i
] = 
§c
[i][j];

13 
	}
}

	@mem/transpose2.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

5 
	t¨øy
[4][4];

7 
	$å™•o£2
(
¨øy
 
d°
,áºay 
§c
)

9 
i
, 
j
;

11 
i
 = 0; i < 4; i++) {

12 
j
 = 0; j < 4; j++) {

13 
d°
[
j
][
i
] = 
§c
[i][j];

16 
	}
}

	@mem/transpose2b.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

5 
	t¨øy
[4][4];

7 
	$å™•o£2
(
¨øy
 
d°
,áºay 
§c
)

9 
i
, 
j
;

11 
i
 = 0; i < 4; i++) {

12 
j
 = 0; j < 4; j++) {

13 
d°
[
i
][
j
] = 
§c
[j][i];

16 
	}
}

	@netp/dd2hex.c

2 
	~"cßµ.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
ö_addr
 
öaddr
;

7 
rc
;

9 i‡(
¨gc
 != 2) {

10 
	`Ârötf
(
°dîr
, "ußge: %†<dŸãd-decimÆ>\n", 
¨gv
[0]);

11 
	`exô
(0);

14 
rc
 = 
	`öë_±⁄
(
AF_INET
, 
¨gv
[1], &
öaddr
);

15 i‡(
rc
 == 0)

16 
	`≠p_îr‹
("inet_ptonÉrror: invalid dotted-decimaláddress");

17 i‡(
rc
 < 0)

18 
	`unix_îr‹
("inet_ptonÉrror");

20 
	`¥ötf
("0x%x\n", 
	`¡ohl
(
öaddr
.
s_addr
));

21 
	`exô
(0);

22 
	}
}

	@netp/echo.c

5 
	~"cßµ.h
"

7 
	$echo
(
c⁄nfd
)

9 
size_t
 
n
;

10 
buf
[
MAXLINE
];

11 
rio_t
 
rio
;

13 
	`Rio_ªadöôb
(&
rio
, 
c⁄nfd
);

14 (
n
 = 
	`Rio_ªadlöeb
(&
rio
, 
buf
, 
MAXLINE
)) != 0) {

15 
	`¥ötf
("£rvîÑe˚ived %d byãs\n", ()
n
);

16 
	`Rio_wrôí
(
c⁄nfd
, 
buf
, 
n
);

18 
	}
}

	@netp/echoclient.c

5 
	~"cßµ.h
"

7 
	$maö
(
¨gc
, **
¨gv
)

9 
˛õ¡fd
;

10 *
ho°
, *
p‹t
, 
buf
[
MAXLINE
];

11 
rio_t
 
rio
;

13 i‡(
¨gc
 != 3) {

14 
	`Ârötf
(
°dîr
, "ußge: %†<ho°> <p‹t>\n", 
¨gv
[0]);

15 
	`exô
(0);

17 
ho°
 = 
¨gv
[1];

18 
p‹t
 = 
¨gv
[2];

20 
˛õ¡fd
 = 
	`O≥n_˛õ¡fd
(
ho°
, 
p‹t
);

21 
	`Rio_ªadöôb
(&
rio
, 
˛õ¡fd
);

23 
	`Fgës
(
buf
, 
MAXLINE
, 
°dö
Ë!
NULL
) {

24 
	`Rio_wrôí
(
˛õ¡fd
, 
buf
, 
	`°æí
(buf));

25 
	`Rio_ªadlöeb
(&
rio
, 
buf
, 
MAXLINE
);

26 
	`Fputs
(
buf
, 
°dout
);

28 
	`Clo£
(
˛õ¡fd
);

29 
	`exô
(0);

30 
	}
}

	@netp/echoserveri.c

5 
	~"cßµ.h
"

7 
echo
(
c⁄nfd
);

9 
	$maö
(
¨gc
, **
¨gv
)

11 
li°ífd
, 
c⁄nfd
;

12 
sockÀn_t
 
˛õ¡Àn
;

13 
sockaddr_°‹age
 
˛õ¡addr
;

14 
˛õ¡_ho°«me
[
MAXLINE
], 
˛õ¡_p‹t
[MAXLINE];

16 i‡(
¨gc
 != 2) {

17 
	`Ârötf
(
°dîr
, "ußge: %†<p‹t>\n", 
¨gv
[0]);

18 
	`exô
(0);

21 
li°ífd
 = 
	`O≥n_li°ífd
(
¨gv
[1]);

23 
˛õ¡Àn
 = (
sockaddr_°‹age
);

24 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, (
SA
 *)&
˛õ¡addr
, &
˛õ¡Àn
);

25 
	`Gë«meöfo
((
SA
 *Ë&
˛õ¡addr
, 
˛õ¡Àn
, 
˛õ¡_ho°«me
, 
MAXLINE
,

26 
˛õ¡_p‹t
, 
MAXLINE
, 0);

27 
	`¥ötf
("C⁄√˘edÅÿ(%s, %s)\n", 
˛õ¡_ho°«me
, 
˛õ¡_p‹t
);

28 
	`echo
(
c⁄nfd
);

29 
	`Clo£
(
c⁄nfd
);

31 
	`exô
(0);

32 
	}
}

	@netp/hex2dd.c

2 
	~"cßµ.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
ö_addr
 
öaddr
;

7 
uöt32_t
 
addr
;

8 
buf
[
MAXBUF
];

10 i‡(
¨gc
 != 2) {

11 
	`Ârötf
(
°dîr
, "ußge: %†<hexÇumbî>\n", 
¨gv
[0]);

12 
	`exô
(0);

14 
	`ssˇnf
(
¨gv
[1], "%x", &
addr
);

15 
öaddr
.
s_addr
 = 
	`ht⁄l
(
addr
);

17 i‡(!
	`öë_¡›
(
AF_INET
, &
öaddr
, 
buf
, 
MAXBUF
))

18 
	`unix_îr‹
("inet_ntop");

19 
	`¥ötf
("%s\n", 
buf
);

21 
	`exô
(0);

22 
	}
}

	@netp/hostinfo-ntop.c

2 
	~"cßµ.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
addröfo
 *
p
, *
li°p
, 
höts
;

7 
sockaddr_ö
 *
sockp
;

8 
buf
[
MAXLINE
];

9 
rc
;

11 i‡(
¨gc
 != 2) {

12 
	`Ârötf
(
°dîr
, "ußge: %†<domaöÇame>\n", 
¨gv
[0]);

13 
	`exô
(0);

17 
	`mem£t
(&
höts
, 0, (
addröfo
));

18 
höts
.
ai_Ámûy
 = 
AF_INET
;

19 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

20 i‡((
rc
 = 
	`gëaddröfo
(
¨gv
[1], 
NULL
, &
höts
, &
li°p
)) != 0) {

21 
	`Ârötf
(
°dîr
, "gëaddröfÿîr‹: %s\n", 
	`gai_°ªº‹
(
rc
));

22 
	`exô
(1);

26 
p
 = 
li°p
;Ö;Ö =Ö->
ai_√xt
) {

27 
sockp
 = (
sockaddr_ö
 *)
p
->
ai_addr
;

28 
	`I√t_¡›
(
AF_INET
, &(
sockp
->
sö_addr
), 
buf
, 
MAXLINE
);

29 
	`¥ötf
("%s\n", 
buf
);

33 
	`Fªóddröfo
(
li°p
);

35 
	`exô
(0);

36 
	}
}

	@netp/hostinfo.c

2 
	~"cßµ.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
addröfo
 *
p
, *
li°p
, 
höts
;

7 
buf
[
MAXLINE
];

8 
rc
, 
Êags
;

10 i‡(
¨gc
 != 2) {

11 
	`Ârötf
(
°dîr
, "ußge: %†<domaöÇame>\n", 
¨gv
[0]);

12 
	`exô
(0);

16 
	`mem£t
(&
höts
, 0, (
addröfo
));

17 
höts
.
ai_Ámûy
 = 
AF_INET
;

18 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

19 i‡((
rc
 = 
	`gëaddröfo
(
¨gv
[1], 
NULL
, &
höts
, &
li°p
)) != 0) {

20 
	`Ârötf
(
°dîr
, "gëaddröfÿîr‹: %s\n", 
	`gai_°ªº‹
(
rc
));

21 
	`exô
(1);

25 
Êags
 = 
NI_NUMERICHOST
;

26 
p
 = 
li°p
;Ö;Ö =Ö->
ai_√xt
) {

27 
	`Gë«meöfo
(
p
->
ai_addr
,Ö->
ai_addæí
, 
buf
, 
MAXLINE
, 
NULL
, 0, 
Êags
);

28 
	`¥ötf
("%s\n", 
buf
);

32 
	`Fªóddröfo
(
li°p
);

34 
	`exô
(0);

35 
	}
}

	@netp/netpfragments.c

1 
	~"cßµ.h
"

3 
	$‰agmíts
()

5 
˛õ¡fd
;

8 
˛õ¡fd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

11 
˛õ¡fd
 = clientfd;

15 
	sö_addr
 {

16 
uöt32_t
 
s_addr
;

21 
	saddröfo
 {

22 
ai_Êags
;

23 
ai_Ámûy
;

24 
ai_sockty≥
;

25 
ai_¥Ÿocﬁ
;

26 *
ai_ˇn⁄«me
;

27 
size_t
 
ai_addæí
;

28 
sockaddr
 *
ai_addr
;

29 
addröfo
 *
ai_√xt
;

36 
	ssockaddr_ö
 {

37 
uöt16_t
 
sö_Ámûy
;

38 
uöt16_t
 
sö_p‹t
;

39 
ö_addr
 
sö_addr
;

40 
sö_zîo
[8];

44 
	ssockaddr
 {

45 
uöt16_t
 
ß_Ámûy
;

46 
ß_d©a
[14];

50 
	}
}

	@netp/tiny/cgi-bin/adder.c

5 
	~"cßµ.h
"

7 
	$maö
() {

8 *
buf
, *
p
;

9 
¨g1
[
MAXLINE
], 
¨g2
[MAXLINE], 
c⁄ã¡
[MAXLINE];

10 
n1
=0, 
n2
=0;

13 i‡((
buf
 = 
	`gëív
("QUERY_STRING")Ë!
NULL
) {

14 
p
 = 
	`°rchr
(
buf
, '&');

15 *
p
 = '\0';

16 
	`°r˝y
(
¨g1
, 
buf
);

17 
	`°r˝y
(
¨g2
, 
p
+1);

18 
n1
 = 
	`©oi
(
¨g1
);

19 
n2
 = 
	`©oi
(
¨g2
);

23 
	`•rötf
(
c⁄ã¡
, "WelcomeÅoádd.com: ");

24 
	`•rötf
(
c⁄ã¡
, "%sTHE InternetádditionÖortal.\r\n<p>", content);

25 
	`•rötf
(
c⁄ã¡
, "%sTheánswer is: %d + %d = %d\r\n<p>",

26 
c⁄ã¡
, 
n1
, 
n2
,Ç1 +Ç2);

27 
	`•rötf
(
c⁄ã¡
, "%sThanks for visiting!\r\n", content);

30 
	`¥ötf
("Connection: close\r\n");

31 
	`¥ötf
("C⁄ã¡-Àngth: %d\r\n", ()
	`°æí
(
c⁄ã¡
));

32 
	`¥ötf
("Content-type:Åext/html\r\n\r\n");

33 
	`¥ötf
("%s", 
c⁄ã¡
);

34 
	`fÊush
(
°dout
);

36 
	`exô
(0);

37 
	}
}

	@netp/tiny/csapp.c

17 
	~"cßµ.h
"

24 
	$unix_îr‹
(*
msg
)

26 
	`Ârötf
(
°dîr
, "%s: %s\n", 
msg
, 
	`°ªº‹
(
î∫o
));

27 
	`exô
(0);

28 
	}
}

31 
	$posix_îr‹
(
code
, *
msg
)

33 
	`Ârötf
(
°dîr
, "%s: %s\n", 
msg
, 
	`°ªº‹
(
code
));

34 
	`exô
(0);

35 
	}
}

37 
	$dns_îr‹
(*
msg
)

39 
	`Ârötf
(
°dîr
, "%s\n", 
msg
);

40 
	`exô
(0);

41 
	}
}

43 
	$gai_îr‹
(
code
, *
msg
)

45 
	`Ârötf
(
°dîr
, "%s: %s\n", 
msg
, 
	`gai_°ªº‹
(
code
));

46 
	`exô
(0);

47 
	}
}

49 
	$≠p_îr‹
(*
msg
)

51 
	`Ârötf
(
°dîr
, "%s\n", 
msg
);

52 
	`exô
(0);

53 
	}
}

61 
pid_t
 
	$F‹k
()

63 
pid_t
 
pid
;

65 i‡((
pid
 = 
	`f‹k
()) < 0)

66 
	`unix_îr‹
("ForkÉrror");

67  
pid
;

68 
	}
}

71 
	$Execve
(c⁄° *
fûíame
, *c⁄° 
¨gv
[], *c⁄° 
ívp
[])

73 i‡(
	`execve
(
fûíame
, 
¨gv
, 
ívp
) < 0)

74 
	`unix_îr‹
("ExecveÉrror");

75 
	}
}

78 
pid_t
 
	$Waô
(*
°©us
)

80 
pid_t
 
pid
;

82 i‡((
pid
 = 
	`waô
(
°©us
)) < 0)

83 
	`unix_îr‹
("WaitÉrror");

84  
pid
;

85 
	}
}

88 
pid_t
 
	$Waôpid
(
pid_t
 
pid
, *
ùå
, 
›ti⁄s
)

90 
pid_t
 
ªçid
;

92 i‡((
ªçid
 = 
	`waôpid
(
pid
, 
ùå
, 
›ti⁄s
)) < 0)

93 
	`unix_îr‹
("WaitpidÉrror");

94 (
ªçid
);

95 
	}
}

98 
	$Kûl
(
pid_t
 
pid
, 
signum
)

100 
rc
;

102 i‡((
rc
 = 
	`kûl
(
pid
, 
signum
)) < 0)

103 
	`unix_îr‹
("KillÉrror");

104 
	}
}

107 
	$Pau£
()

109 ()
	`∑u£
();

111 
	}
}

113 
	$SÀï
(
£cs
)

115 
rc
;

117 i‡((
rc
 = 
	`¶ìp
(
£cs
)) < 0)

118 
	`unix_îr‹
("SleepÉrror");

119  
rc
;

120 
	}
}

122 
	$Aœrm
(
£c⁄ds
) {

123  
	`Æ¨m
(
£c⁄ds
);

124 
	}
}

126 
	$Sëpgid
(
pid_t
 
pid
,Öid_à
pgid
) {

127 
rc
;

129 i‡((
rc
 = 
	`£çgid
(
pid
, 
pgid
)) < 0)

130 
	`unix_îr‹
("SetpgidÉrror");

132 
	}
}

134 
pid_t
 
	$GëpgΩ
() {

135  
	`gëpgΩ
();

136 
	}
}

143 
h™dÀr_t
 *
	$Sig«l
(
signum
, 
h™dÀr_t
 *
h™dÀr
)

145 
siga˘i⁄
 
a˘i⁄
, 
ﬁd_a˘i⁄
;

147 
a˘i⁄
.
ß_h™dÀr
 = 
h™dÀr
;

148 
	`sigem±y£t
(&
a˘i⁄
.
ß_mask
);

149 
a˘i⁄
.
ß_Êags
 = 
SA_RESTART
;

151 i‡(
	`siga˘i⁄
(
signum
, &
a˘i⁄
, &
ﬁd_a˘i⁄
) < 0)

152 
	`unix_îr‹
("SignalÉrror");

153  (
ﬁd_a˘i⁄
.
ß_h™dÀr
);

154 
	}
}

157 
	$Sig¥ocmask
(
how
, c⁄° 
sig£t_t
 *
£t
, sig£t_à*
ﬁd£t
)

159 i‡(
	`sig¥ocmask
(
how
, 
£t
, 
ﬁd£t
) < 0)

160 
	`unix_îr‹
("SigprocmaskÉrror");

162 
	}
}

164 
	$Sigem±y£t
(
sig£t_t
 *
£t
)

166 i‡(
	`sigem±y£t
(
£t
) < 0)

167 
	`unix_îr‹
("SigemptysetÉrror");

169 
	}
}

171 
	$Sigfûl£t
(
sig£t_t
 *
£t
)

173 i‡(
	`sigfûl£t
(
£t
) < 0)

174 
	`unix_îr‹
("SigfillsetÉrror");

176 
	}
}

178 
	$Sigadd£t
(
sig£t_t
 *
£t
, 
signum
)

180 i‡(
	`sigadd£t
(
£t
, 
signum
) < 0)

181 
	`unix_îr‹
("SigaddsetÉrror");

183 
	}
}

185 
	$Sigdñ£t
(
sig£t_t
 *
£t
, 
signum
)

187 i‡(
	`sigdñ£t
(
£t
, 
signum
) < 0)

188 
	`unix_îr‹
("SigdelsetÉrror");

190 
	}
}

192 
	$Sigismembî
(c⁄° 
sig£t_t
 *
£t
, 
signum
)

194 
rc
;

195 i‡((
rc
 = 
	`sigismembî
(
£t
, 
signum
)) < 0)

196 
	`unix_îr‹
("SigismemberÉrror");

197  
rc
;

198 
	}
}

200 
	$Sigsu•íd
(c⁄° 
sig£t_t
 *
£t
)

202 
rc
 = 
	`sigsu•íd
(
£t
);

203 i‡(
î∫o
 !
EINTR
)

204 
	`unix_îr‹
("SigsuspendÉrror");

205  
rc
;

206 
	}
}

217 
	$sio_ªvî£
(
s
[])

219 
c
, 
i
, 
j
;

221 
i
 = 0, 
j
 = 
	`°æí
(
s
)-1; i < j; i++, j--) {

222 
c
 = 
s
[
i
];

223 
s
[
i
] = s[
j
];

224 
s
[
j
] = 
c
;

226 
	}
}

229 
	$sio_…ﬂ
(
v
, 
s
[], 
b
)

231 
c
, 
i
 = 0;

234 
s
[
i
++] = ((
c
 = (
v
 % 
b
)) < 10) ? c + '0' : c - 10 + 'a';

235 } (
v
 /
b
) > 0);

236 
s
[
i
] = '\0';

237 
	`sio_ªvî£
(
s
);

238 
	}
}

241 
size_t
 
	$sio_°æí
(
s
[])

243 
i
 = 0;

245 
s
[
i
] != '\0')

246 ++
i
;

247  
i
;

248 
	}
}

254 
ssize_t
 
	$sio_puts
(
s
[])

256  
	`wrôe
(
STDOUT_FILENO
, 
s
, 
	`sio_°æí
(s));

257 
	}
}

259 
ssize_t
 
	$sio_pué
(
v
)

261 
s
[128];

263 
	`sio_…ﬂ
(
v
, 
s
, 10);

264  
	`sio_puts
(
s
);

265 
	}
}

267 
	$sio_îr‹
(
s
[])

269 
	`sio_puts
(
s
);

270 
	`_exô
(1);

271 
	}
}

277 
ssize_t
 
	$Sio_pué
(
v
)

279 
ssize_t
 
n
;

281 i‡((
n
 = 
	`sio_pué
(
v
)) < 0)

282 
	`sio_îr‹
("Sio_putlÉrror");

283  
n
;

284 
	}
}

286 
ssize_t
 
	$Sio_puts
(
s
[])

288 
ssize_t
 
n
;

290 i‡((
n
 = 
	`sio_puts
(
s
)) < 0)

291 
	`sio_îr‹
("Sio_putsÉrror");

292  
n
;

293 
	}
}

295 
	$Sio_îr‹
(
s
[])

297 
	`sio_îr‹
(
s
);

298 
	}
}

304 
	$O≥n
(c⁄° *
∑th«me
, 
Êags
, 
mode_t
 
mode
)

306 
rc
;

308 i‡((
rc
 = 
	`›í
(
∑th«me
, 
Êags
, 
mode
)) < 0)

309 
	`unix_îr‹
("OpenÉrror");

310  
rc
;

311 
	}
}

313 
ssize_t
 
	$Ród
(
fd
, *
buf
, 
size_t
 
cou¡
)

315 
ssize_t
 
rc
;

317 i‡((
rc
 = 
	`ªad
(
fd
, 
buf
, 
cou¡
)) < 0)

318 
	`unix_îr‹
("ReadÉrror");

319  
rc
;

320 
	}
}

322 
ssize_t
 
	$Wrôe
(
fd
, c⁄° *
buf
, 
size_t
 
cou¡
)

324 
ssize_t
 
rc
;

326 i‡((
rc
 = 
	`wrôe
(
fd
, 
buf
, 
cou¡
)) < 0)

327 
	`unix_îr‹
("WriteÉrror");

328  
rc
;

329 
	}
}

331 
off_t
 
	$L£ek
(
fûdes
, 
off_t
 
off£t
, 
whí˚
)

333 
off_t
 
rc
;

335 i‡((
rc
 = 
	`l£ek
(
fûdes
, 
off£t
, 
whí˚
)) < 0)

336 
	`unix_îr‹
("LseekÉrror");

337  
rc
;

338 
	}
}

340 
	$Clo£
(
fd
)

342 
rc
;

344 i‡((
rc
 = 
	`˛o£
(
fd
)) < 0)

345 
	`unix_îr‹
("CloseÉrror");

346 
	}
}

348 
	$Sñe˘
(
n
, 
fd_£t
 *
ªadfds
, fd_£à*
wrôefds
,

349 
fd_£t
 *
ex˚±fds
, 
timevÆ
 *
timeout
)

351 
rc
;

353 i‡((
rc
 = 
	`£À˘
(
n
, 
ªadfds
, 
wrôefds
, 
ex˚±fds
, 
timeout
)) < 0)

354 
	`unix_îr‹
("SelectÉrror");

355  
rc
;

356 
	}
}

358 
	$Dup2
(
fd1
, 
fd2
)

360 
rc
;

362 i‡((
rc
 = 
	`dup2
(
fd1
, 
fd2
)) < 0)

363 
	`unix_îr‹
("Dup2Érror");

364  
rc
;

365 
	}
}

367 
	$Sèt
(c⁄° *
fûíame
, 
°©
 *
buf
)

369 i‡(
	`°©
(
fûíame
, 
buf
) < 0)

370 
	`unix_îr‹
("StatÉrror");

371 
	}
}

373 
	$F°©
(
fd
, 
°©
 *
buf
)

375 i‡(
	`f°©
(
fd
, 
buf
) < 0)

376 
	`unix_îr‹
("FstatÉrror");

377 
	}
}

383 
DIR
 *
	$O≥ndú
(c⁄° *
«me
)

385 
DIR
 *
dúp
 = 
	`›ídú
(
«me
);

387 i‡(!
dúp
)

388 
	`unix_îr‹
("opendirÉrror");

389  
dúp
;

390 
	}
}

392 
dúít
 *
	$Róddú
(
DIR
 *
dúp
)

394 
dúít
 *
dï
;

396 
î∫o
 = 0;

397 
dï
 = 
	`ªaddú
(
dúp
);

398 i‡((
dï
 =
NULL
Ë&& (
î∫o
 != 0))

399 
	`unix_îr‹
("readdirÉrror");

400  
dï
;

401 
	}
}

403 
	$Clo£dú
(
DIR
 *
dúp
)

405 
rc
;

407 i‡((
rc
 = 
	`˛o£dú
(
dúp
)) < 0)

408 
	`unix_îr‹
("closedirÉrror");

409  
rc
;

410 
	}
}

415 *
	$Mm≠
(*
addr
, 
size_t
 
Àn
, 
¥Ÿ
, 
Êags
, 
fd
, 
off_t
 
off£t
)

417 *
±r
;

419 i‡((
±r
 = 
	`mm≠
(
addr
, 
Àn
, 
¥Ÿ
, 
Êags
, 
fd
, 
off£t
)) == ((*) -1))

420 
	`unix_îr‹
("mmapÉrror");

421 (
±r
);

422 
	}
}

424 
	$Munm≠
(*
°¨t
, 
size_t
 
Àngth
)

426 i‡(
	`munm≠
(
°¨t
, 
Àngth
) < 0)

427 
	`unix_îr‹
("munmapÉrror");

428 
	}
}

434 *
	$MÆloc
(
size_t
 
size
)

436 *
p
;

438 i‡((
p
 = 
	`mÆloc
(
size
)Ë=
NULL
)

439 
	`unix_îr‹
("MallocÉrror");

440  
p
;

441 
	}
}

443 *
	$RóŒoc
(*
±r
, 
size_t
 
size
)

445 *
p
;

447 i‡((
p
 = 
	`ªÆloc
(
±r
, 
size
)Ë=
NULL
)

448 
	`unix_îr‹
("ReallocÉrror");

449  
p
;

450 
	}
}

452 *
	$CÆloc
(
size_t
 
nmemb
, size_à
size
)

454 *
p
;

456 i‡((
p
 = 
	`ˇŒoc
(
nmemb
, 
size
)Ë=
NULL
)

457 
	`unix_îr‹
("CallocÉrror");

458  
p
;

459 
	}
}

461 
	$Fªe
(*
±r
)

463 
	`‰ì
(
±r
);

464 
	}
}

469 
	$F˛o£
(
FILE
 *
Â
)

471 i‡(
	`f˛o£
(
Â
) != 0)

472 
	`unix_îr‹
("FcloseÉrror");

473 
	}
}

475 
FILE
 *
	$Fd›í
(
fd
, c⁄° *
ty≥
)

477 
FILE
 *
Â
;

479 i‡((
Â
 = 
	`fd›í
(
fd
, 
ty≥
)Ë=
NULL
)

480 
	`unix_îr‹
("FdopenÉrror");

482  
Â
;

483 
	}
}

485 *
	$Fgës
(*
±r
, 
n
, 
FILE
 *
°ªam
)

487 *
Ωå
;

489 i‡(((
Ωå
 = 
	`fgës
(
±r
, 
n
, 
°ªam
)Ë=
NULL
Ë&& 
	`„º‹
(stream))

490 
	`≠p_îr‹
("FgetsÉrror");

492  
Ωå
;

493 
	}
}

495 
FILE
 *
	$F›í
(c⁄° *
fûíame
, c⁄° *
mode
)

497 
FILE
 *
Â
;

499 i‡((
Â
 = 
	`f›í
(
fûíame
, 
mode
)Ë=
NULL
)

500 
	`unix_îr‹
("FopenÉrror");

502  
Â
;

503 
	}
}

505 
	$Fputs
(c⁄° *
±r
, 
FILE
 *
°ªam
)

507 i‡(
	`Âuts
(
±r
, 
°ªam
Ë=
EOF
)

508 
	`unix_îr‹
("FputsÉrror");

509 
	}
}

511 
size_t
 
	$Fªad
(*
±r
, 
size_t
 
size
, size_à
nmemb
, 
FILE
 *
°ªam
)

513 
size_t
 
n
;

515 i‡(((
n
 = 
	`‰ód
(
±r
, 
size
, 
nmemb
, 
°ªam
)Ë<ÇmembË&& 
	`„º‹
(stream))

516 
	`unix_îr‹
("FreadÉrror");

517  
n
;

518 
	}
}

520 
	$Fwrôe
(c⁄° *
±r
, 
size_t
 
size
, size_à
nmemb
, 
FILE
 *
°ªam
)

522 i‡(
	`fwrôe
(
±r
, 
size
, 
nmemb
, 
°ªam
) <Çmemb)

523 
	`unix_îr‹
("FwriteÉrror");

524 
	}
}

531 
	$Sockë
(
domaö
, 
ty≥
, 
¥Ÿocﬁ
)

533 
rc
;

535 i‡((
rc
 = 
	`sockë
(
domaö
, 
ty≥
, 
¥Ÿocﬁ
)) < 0)

536 
	`unix_îr‹
("SocketÉrror");

537  
rc
;

538 
	}
}

540 
	$Sësock›t
(
s
, 
Àvñ
, 
›äame
, c⁄° *
›tvÆ
, 
›éí
)

542 
rc
;

544 i‡((
rc
 = 
	`£tsock›t
(
s
, 
Àvñ
, 
›äame
, 
›tvÆ
, 
›éí
)) < 0)

545 
	`unix_îr‹
("SetsockoptÉrror");

546 
	}
}

548 
	$Böd
(
sockfd
, 
sockaddr
 *
my_addr
, 
addæí
)

550 
rc
;

552 i‡((
rc
 = 
	`böd
(
sockfd
, 
my_addr
, 
addæí
)) < 0)

553 
	`unix_îr‹
("BindÉrror");

554 
	}
}

556 
	$Li°í
(
s
, 
backlog
)

558 
rc
;

560 i‡((
rc
 = 
	`li°í
(
s
, 
backlog
)) < 0)

561 
	`unix_îr‹
("ListenÉrror");

562 
	}
}

564 
	$Ac˚±
(
s
, 
sockaddr
 *
addr
, 
sockÀn_t
 *
addæí
)

566 
rc
;

568 i‡((
rc
 = 
	`ac˚±
(
s
, 
addr
, 
addæí
)) < 0)

569 
	`unix_îr‹
("AcceptÉrror");

570  
rc
;

571 
	}
}

573 
	$C⁄√˘
(
sockfd
, 
sockaddr
 *
£rv_addr
, 
addæí
)

575 
rc
;

577 i‡((
rc
 = 
	`c⁄√˘
(
sockfd
, 
£rv_addr
, 
addæí
)) < 0)

578 
	`unix_îr‹
("ConnectÉrror");

579 
	}
}

584 
	$Gëaddröfo
(c⁄° *
node
, c⁄° *
£rvi˚
,

585 c⁄° 
addröfo
 *
höts
, addröfÿ**
ªs
)

587 
rc
;

589 i‡((
rc
 = 
	`gëaddröfo
(
node
, 
£rvi˚
, 
höts
, 
ªs
)) != 0)

590 
	`gai_îr‹
(
rc
, "GetaddrinfoÉrror");

591 
	}
}

593 
	$Gë«meöfo
(c⁄° 
sockaddr
 *
ß
, 
sockÀn_t
 
ßÀn
, *
ho°
,

594 
size_t
 
ho°Àn
, *
£rv
, size_à
£rvÀn
, 
Êags
)

596 
rc
;

598 i‡((
rc
 = 
	`gë«meöfo
(
ß
, 
ßÀn
, 
ho°
, 
ho°Àn
, 
£rv
,

599 
£rvÀn
, 
Êags
)) != 0)

600 
	`gai_îr‹
(
rc
, "GetnameinfoÉrror");

601 
	}
}

603 
	$Fªóddröfo
(
addröfo
 *
ªs
)

605 
	`‰ìaddröfo
(
ªs
);

606 
	}
}

608 
	$I√t_¡›
(
af
, c⁄° *
§c
, *
d°
, 
sockÀn_t
 
size
)

610 i‡(!
	`öë_¡›
(
af
, 
§c
, 
d°
, 
size
))

611 
	`unix_îr‹
("Inet_ntopÉrror");

612 
	}
}

614 
	$I√t_±⁄
(
af
, c⁄° *
§c
, *
d°
)

616 
rc
;

618 
rc
 = 
	`öë_±⁄
(
af
, 
§c
, 
d°
);

619 i‡(
rc
 == 0)

620 
	`≠p_îr‹
("inet_ptonÉrror: invalid dotted-decimaláddress");

621 i‡(
rc
 < 0)

622 
	`unix_îr‹
("Inet_ptonÉrror");

623 
	}
}

633 
ho°ít
 *
	$Gëho°by«me
(c⁄° *
«me
)

635 
ho°ít
 *
p
;

637 i‡((
p
 = 
	`gëho°by«me
(
«me
)Ë=
NULL
)

638 
	`dns_îr‹
("GethostbynameÉrror");

639  
p
;

640 
	}
}

643 
ho°ít
 *
	$Gëho°byaddr
(c⁄° *
addr
, 
Àn
, 
ty≥
)

645 
ho°ít
 *
p
;

647 i‡((
p
 = 
	`gëho°byaddr
(
addr
, 
Àn
, 
ty≥
)Ë=
NULL
)

648 
	`dns_îr‹
("GethostbyaddrÉrror");

649  
p
;

650 
	}
}

656 
	$Pthªad_¸óã
(
±hªad_t
 *
tidp
, 
±hªad_©å_t
 *
©åp
,

657 * (*
routöe
)(*), *
¨gp
)

659 
rc
;

661 i‡((
rc
 = 
	`±hªad_¸óã
(
tidp
, 
©åp
, 
routöe
, 
¨gp
)) != 0)

662 
	`posix_îr‹
(
rc
, "Pthread_createÉrror");

663 
	}
}

665 
	$Pthªad_ˇn˚l
(
±hªad_t
 
tid
) {

666 
rc
;

668 i‡((
rc
 = 
	`±hªad_ˇn˚l
(
tid
)) != 0)

669 
	`posix_îr‹
(
rc
, "Pthread_cancelÉrror");

670 
	}
}

672 
	$Pthªad_joö
(
±hªad_t
 
tid
, **
thªad_ªtu∫
) {

673 
rc
;

675 i‡((
rc
 = 
	`±hªad_joö
(
tid
, 
thªad_ªtu∫
)) != 0)

676 
	`posix_îr‹
(
rc
, "Pthread_joinÉrror");

677 
	}
}

680 
	$Pthªad_dëach
(
±hªad_t
 
tid
) {

681 
rc
;

683 i‡((
rc
 = 
	`±hªad_dëach
(
tid
)) != 0)

684 
	`posix_îr‹
(
rc
, "Pthread_detachÉrror");

685 
	}
}

688 
	$Pthªad_exô
(*
ªtvÆ
) {

689 
	`±hªad_exô
(
ªtvÆ
);

690 
	}
}

692 
±hªad_t
 
	$Pthªad_£lf
() {

693  
	`±hªad_£lf
();

694 
	}
}

696 
	$Pthªad_⁄˚
(
±hªad_⁄˚_t
 *
⁄˚_c⁄åﬁ
, (*
öô_fun˘i⁄
)()) {

697 
	`±hªad_⁄˚
(
⁄˚_c⁄åﬁ
, 
öô_fun˘i⁄
);

698 
	}
}

704 
	$Sem_öô
(
£m_t
 *
£m
, 
psh¨ed
, 
vÆue
)

706 i‡(
	`£m_öô
(
£m
, 
psh¨ed
, 
vÆue
) < 0)

707 
	`unix_îr‹
("Sem_initÉrror");

708 
	}
}

710 
	$P
(
£m_t
 *
£m
)

712 i‡(
	`£m_waô
(
£m
) < 0)

713 
	`unix_îr‹
("PÉrror");

714 
	}
}

716 
	$V
(
£m_t
 *
£m
)

718 i‡(
	`£m_po°
(
£m
) < 0)

719 
	`unix_îr‹
("VÉrror");

720 
	}
}

730 
ssize_t
 
	$rio_ªadn
(
fd
, *
u§buf
, 
size_t
 
n
)

732 
size_t
 
∆e·
 = 
n
;

733 
ssize_t
 
ƒód
;

734 *
buÂ
 = 
u§buf
;

736 
∆e·
 > 0) {

737 i‡((
ƒód
 = 
	`ªad
(
fd
, 
buÂ
, 
∆e·
)) < 0) {

738 i‡(
î∫o
 =
EINTR
)

739 
ƒód
 = 0;

743 i‡(
ƒód
 == 0)

745 
∆e·
 -
ƒód
;

746 
buÂ
 +
ƒód
;

748  (
n
 - 
∆e·
);

749 
	}
}

756 
ssize_t
 
	$rio_wrôí
(
fd
, *
u§buf
, 
size_t
 
n
)

758 
size_t
 
∆e·
 = 
n
;

759 
ssize_t
 
nwrôãn
;

760 *
buÂ
 = 
u§buf
;

762 
∆e·
 > 0) {

763 i‡((
nwrôãn
 = 
	`wrôe
(
fd
, 
buÂ
, 
∆e·
)) <= 0) {

764 i‡(
î∫o
 =
EINTR
)

765 
nwrôãn
 = 0;

769 
∆e·
 -
nwrôãn
;

770 
buÂ
 +
nwrôãn
;

772  
n
;

773 
	}
}

786 
ssize_t
 
	$rio_ªad
(
rio_t
 *
Ω
, *
u§buf
, 
size_t
 
n
)

788 
˙t
;

790 
Ω
->
rio_˙t
 <= 0) {

791 
Ω
->
rio_˙t
 = 
	`ªad
‘p->
rio_fd
,Ñp->
rio_buf
,

792 (
Ω
->
rio_buf
));

793 i‡(
Ω
->
rio_˙t
 < 0) {

794 i‡(
î∫o
 !
EINTR
)

797 i‡(
Ω
->
rio_˙t
 == 0)

800 
Ω
->
rio_buÂå
 =Ñp->
rio_buf
;

804 
˙t
 = 
n
;

805 i‡(
Ω
->
rio_˙t
 < 
n
)

806 
˙t
 = 
Ω
->
rio_˙t
;

807 
	`mem˝y
(
u§buf
, 
Ω
->
rio_buÂå
, 
˙t
);

808 
Ω
->
rio_buÂå
 +
˙t
;

809 
Ω
->
rio_˙t
 -
˙t
;

810  
˙t
;

811 
	}
}

818 
	$rio_ªadöôb
(
rio_t
 *
Ω
, 
fd
)

820 
Ω
->
rio_fd
 = 
fd
;

821 
Ω
->
rio_˙t
 = 0;

822 
Ω
->
rio_buÂå
 =Ñp->
rio_buf
;

823 
	}
}

830 
ssize_t
 
	$rio_ªadnb
(
rio_t
 *
Ω
, *
u§buf
, 
size_t
 
n
)

832 
size_t
 
∆e·
 = 
n
;

833 
ssize_t
 
ƒód
;

834 *
buÂ
 = 
u§buf
;

836 
∆e·
 > 0) {

837 i‡((
ƒód
 = 
	`rio_ªad
(
Ω
, 
buÂ
, 
∆e·
)) < 0)

839 i‡(
ƒód
 == 0)

841 
∆e·
 -
ƒód
;

842 
buÂ
 +
ƒód
;

844  (
n
 - 
∆e·
);

845 
	}
}

852 
ssize_t
 
	$rio_ªadlöeb
(
rio_t
 *
Ω
, *
u§buf
, 
size_t
 
maxÀn
)

854 
n
, 
rc
;

855 
c
, *
buÂ
 = 
u§buf
;

857 
n
 = 1;Ç < 
maxÀn
;Ç++) {

858 i‡((
rc
 = 
	`rio_ªad
(
Ω
, &
c
, 1)) == 1) {

859 *
buÂ
++ = 
c
;

860 i‡(
c
 == '\n') {

861 
n
++;

864 } i‡(
rc
 == 0) {

865 i‡(
n
 == 1) {

874 *
buÂ
 = '\0';

875  
n
-1;

876 
	}
}

882 
ssize_t
 
	$Rio_ªadn
(
fd
, *
±r
, 
size_t
 
nbyãs
)

884 
ssize_t
 
n
;

886 i‡((
n
 = 
	`rio_ªadn
(
fd
, 
±r
, 
nbyãs
)) < 0)

887 
	`unix_îr‹
("Rio_readnÉrror");

888  
n
;

889 
	}
}

891 
	$Rio_wrôí
(
fd
, *
u§buf
, 
size_t
 
n
)

893 i‡(
	`rio_wrôí
(
fd
, 
u§buf
, 
n
) !=Ç)

894 
	`unix_îr‹
("Rio_writenÉrror");

895 
	}
}

897 
	$Rio_ªadöôb
(
rio_t
 *
Ω
, 
fd
)

899 
	`rio_ªadöôb
(
Ω
, 
fd
);

900 
	}
}

902 
ssize_t
 
	$Rio_ªadnb
(
rio_t
 *
Ω
, *
u§buf
, 
size_t
 
n
)

904 
ssize_t
 
rc
;

906 i‡((
rc
 = 
	`rio_ªadnb
(
Ω
, 
u§buf
, 
n
)) < 0)

907 
	`unix_îr‹
("Rio_readnbÉrror");

908  
rc
;

909 
	}
}

911 
ssize_t
 
	$Rio_ªadlöeb
(
rio_t
 *
Ω
, *
u§buf
, 
size_t
 
maxÀn
)

913 
ssize_t
 
rc
;

915 i‡((
rc
 = 
	`rio_ªadlöeb
(
Ω
, 
u§buf
, 
maxÀn
)) < 0)

916 
	`unix_îr‹
("Rio_readlinebÉrror");

917  
rc
;

918 
	}
}

931 
	$›í_˛õ¡fd
(*
ho°«me
, *
p‹t
) {

932 
˛õ¡fd
;

933 
addröfo
 
höts
, *
li°p
, *
p
;

936 
	`mem£t
(&
höts
, 0, (
addröfo
));

937 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

938 
höts
.
ai_Êags
 = 
AI_NUMERICSERV
;

939 
höts
.
ai_Êags
 |
AI_ADDRCONFIG
;

940 
	`Gëaddröfo
(
ho°«me
, 
p‹t
, &
höts
, &
li°p
);

943 
p
 = 
li°p
;Ö;Ö =Ö->
ai_√xt
) {

946 i‡((
˛õ¡fd
 = 
	`sockë
(
p
->
ai_Ámûy
,Ö->
ai_sockty≥
,Ö->
ai_¥Ÿocﬁ
)) < 0)

948 i‡(
	`c⁄√˘
(
˛õ¡fd
, 
p
->
ai_addr
,Ö->
ai_addæí
) != -1)

950 
	`Clo£
(
˛õ¡fd
);

954 
	`Fªóddröfo
(
li°p
);

955 i‡(!
p
)

958  
˛õ¡fd
;

959 
	}
}

969 
	$›í_li°ífd
(*
p‹t
)

971 
addröfo
 
höts
, *
li°p
, *
p
;

972 
li°ífd
, 
›tvÆ
=1;

975 
	`mem£t
(&
höts
, 0, (
addröfo
));

976 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

977 
höts
.
ai_Êags
 = 
AI_PASSIVE
;

978 
höts
.
ai_Êags
 |
AI_NUMERICSERV
;

979 
höts
.
ai_Êags
 |
AI_ADDRCONFIG
;

980 
	`Gëaddröfo
(
NULL
, 
p‹t
, &
höts
, &
li°p
);

983 
p
 = 
li°p
;Ö;Ö =Ö->
ai_√xt
) {

986 i‡((
li°ífd
 = 
	`sockë
(
p
->
ai_Ámûy
,Ö->
ai_sockty≥
,Ö->
ai_¥Ÿocﬁ
)) < 0)

990 
	`Sësock›t
(
li°ífd
, 
SOL_SOCKET
, 
SO_REUSEADDR
,

991 (c⁄° *)&
›tvÆ
 , ());

994 i‡(
	`böd
(
li°ífd
, 
p
->
ai_addr
,Ö->
ai_addæí
) == 0)

996 
	`Clo£
(
li°ífd
);

1000 
	`Fªóddröfo
(
li°p
);

1001 i‡(!
p
)

1005 i‡(
	`li°í
(
li°ífd
, 
LISTENQ
) < 0)

1007  
li°ífd
;

1008 
	}
}

1014 
	$O≥n_˛õ¡fd
(*
ho°«me
, *
p‹t
)

1016 
rc
;

1018 i‡((
rc
 = 
	`›í_˛õ¡fd
(
ho°«me
, 
p‹t
)) < 0)

1019 
	`unix_îr‹
("Open_clientfdÉrror");

1020  
rc
;

1021 
	}
}

1023 
	$O≥n_li°ífd
(*
p‹t
)

1025 
rc
;

1027 i‡((
rc
 = 
	`›í_li°ífd
(
p‹t
)) < 0)

1028 
	`unix_îr‹
("Open_listenfdÉrror");

1029  
rc
;

1030 
	}
}

	@netp/tiny/csapp.h

2 #i‚de‡
__CSAPP_H__


3 
	#__CSAPP_H__


	)

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~<uni°d.h
>

8 
	~<°rög.h
>

9 
	~<˘y≥.h
>

10 
	~<£tjmp.h
>

11 
	~<sig«l.h
>

12 
	~<dúít.h
>

13 
	~<sys/time.h
>

14 
	~<sys/ty≥s.h
>

15 
	~<sys/waô.h
>

16 
	~<sys/°©.h
>

17 
	~<f˙é.h
>

18 
	~<sys/mm™.h
>

19 
	~<î∫o.h
>

20 
	~<m©h.h
>

21 
	~<±hªad.h
>

22 
	~<£m≠h‹e.h
>

23 
	~<sys/sockë.h
>

24 
	~<√tdb.h
>

25 
	~<√töë/ö.h
>

26 
	~<¨∑/öë.h
>

30 
	#DEF_MODE
 
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH


	)

31 
	#DEF_UMASK
 
S_IWGRP
|
S_IWOTH


	)

36 
sockaddr
 
	tSA
;

41 
	#RIO_BUFSIZE
 8192

	)

43 
	mrio_fd
;

44 
	mrio_˙t
;

45 *
	mrio_buÂå
;

46 
	mrio_buf
[
RIO_BUFSIZE
];

47 } 
	trio_t
;

51 
h_î∫o
;

52 **
ívú⁄
;

55 
	#MAXLINE
 8192

	)

56 
	#MAXBUF
 8192

	)

57 
	#LISTENQ
 1024

	)

60 
unix_îr‹
(*
msg
);

61 
posix_îr‹
(
code
, *
msg
);

62 
dns_îr‹
(*
msg
);

63 
gai_îr‹
(
code
, *
msg
);

64 
≠p_îr‹
(*
msg
);

67 
pid_t
 
F‹k
();

68 
Execve
(c⁄° *
fûíame
, *c⁄° 
¨gv
[], *c⁄° 
ívp
[]);

69 
pid_t
 
Waô
(*
°©us
);

70 
pid_t
 
Waôpid
’id_à
pid
, *
ùå
, 
›ti⁄s
);

71 
Kûl
(
pid_t
 
pid
, 
signum
);

72 
SÀï
(
£cs
);

73 
Pau£
();

74 
Aœrm
(
£c⁄ds
);

75 
Sëpgid
(
pid_t
 
pid
,Öid_à
pgid
);

76 
pid_t
 
GëpgΩ
();

79 
	th™dÀr_t
();

80 
h™dÀr_t
 *
Sig«l
(
signum
, h™dÀr_à*
h™dÀr
);

81 
Sig¥ocmask
(
how
, c⁄° 
sig£t_t
 *
£t
, sig£t_à*
ﬁd£t
);

82 
Sigem±y£t
(
sig£t_t
 *
£t
);

83 
Sigfûl£t
(
sig£t_t
 *
£t
);

84 
Sigadd£t
(
sig£t_t
 *
£t
, 
signum
);

85 
Sigdñ£t
(
sig£t_t
 *
£t
, 
signum
);

86 
Sigismembî
(c⁄° 
sig£t_t
 *
£t
, 
signum
);

87 
Sigsu•íd
(c⁄° 
sig£t_t
 *
£t
);

90 
ssize_t
 
sio_puts
(
s
[]);

91 
ssize_t
 
sio_pué
(
v
);

92 
sio_îr‹
(
s
[]);

95 
ssize_t
 
Sio_puts
(
s
[]);

96 
ssize_t
 
Sio_pué
(
v
);

97 
Sio_îr‹
(
s
[]);

100 
O≥n
(c⁄° *
∑th«me
, 
Êags
, 
mode_t
 
mode
);

101 
ssize_t
 
Ród
(
fd
, *
buf
, 
size_t
 
cou¡
);

102 
ssize_t
 
Wrôe
(
fd
, c⁄° *
buf
, 
size_t
 
cou¡
);

103 
off_t
 
L£ek
(
fûdes
, off_à
off£t
, 
whí˚
);

104 
Clo£
(
fd
);

105 
Sñe˘
(
n
, 
fd_£t
 *
ªadfds
, fd_£à*
wrôefds
, fd_£à*
ex˚±fds
,

106 
timevÆ
 *
timeout
);

107 
Dup2
(
fd1
, 
fd2
);

108 
Sèt
(c⁄° *
fûíame
, 
°©
 *
buf
);

109 
F°©
(
fd
, 
°©
 *
buf
) ;

112 
DIR
 *
O≥ndú
(c⁄° *
«me
);

113 
dúít
 *
Róddú
(
DIR
 *
dúp
);

114 
Clo£dú
(
DIR
 *
dúp
);

117 *
Mm≠
(*
addr
, 
size_t
 
Àn
, 
¥Ÿ
, 
Êags
, 
fd
, 
off_t
 
off£t
);

118 
Munm≠
(*
°¨t
, 
size_t
 
Àngth
);

121 
F˛o£
(
FILE
 *
Â
);

122 
FILE
 *
Fd›í
(
fd
, c⁄° *
ty≥
);

123 *
Fgës
(*
±r
, 
n
, 
FILE
 *
°ªam
);

124 
FILE
 *
F›í
(c⁄° *
fûíame
, c⁄° *
mode
);

125 
Fputs
(c⁄° *
±r
, 
FILE
 *
°ªam
);

126 
size_t
 
Fªad
(*
±r
, size_à
size
, size_à
nmemb
, 
FILE
 *
°ªam
);

127 
Fwrôe
(c⁄° *
±r
, 
size_t
 
size
, size_à
nmemb
, 
FILE
 *
°ªam
);

130 *
MÆloc
(
size_t
 
size
);

131 *
RóŒoc
(*
±r
, 
size_t
 
size
);

132 *
CÆloc
(
size_t
 
nmemb
, size_à
size
);

133 
Fªe
(*
±r
);

136 
Sockë
(
domaö
, 
ty≥
, 
¥Ÿocﬁ
);

137 
Sësock›t
(
s
, 
Àvñ
, 
›äame
, c⁄° *
›tvÆ
, 
›éí
);

138 
Böd
(
sockfd
, 
sockaddr
 *
my_addr
, 
addæí
);

139 
Li°í
(
s
, 
backlog
);

140 
Ac˚±
(
s
, 
sockaddr
 *
addr
, 
sockÀn_t
 *
addæí
);

141 
C⁄√˘
(
sockfd
, 
sockaddr
 *
£rv_addr
, 
addæí
);

144 
Gëaddröfo
(c⁄° *
node
, c⁄° *
£rvi˚
,

145 c⁄° 
addröfo
 *
höts
, addröfÿ**
ªs
);

146 
Gë«meöfo
(c⁄° 
sockaddr
 *
ß
, 
sockÀn_t
 
ßÀn
, *
ho°
,

147 
size_t
 
ho°Àn
, *
£rv
, size_à
£rvÀn
, 
Êags
);

148 
Fªóddröfo
(
addröfo
 *
ªs
);

149 
I√t_¡›
(
af
, c⁄° *
§c
, *
d°
, 
sockÀn_t
 
size
);

150 
I√t_±⁄
(
af
, c⁄° *
§c
, *
d°
);

153 
ho°ít
 *
Gëho°by«me
(c⁄° *
«me
);

154 
ho°ít
 *
Gëho°byaddr
(c⁄° *
addr
, 
Àn
, 
ty≥
);

157 
Pthªad_¸óã
(
±hªad_t
 *
tidp
, 
±hªad_©å_t
 *
©åp
,

158 * (*
routöe
)(*), *
¨gp
);

159 
Pthªad_joö
(
±hªad_t
 
tid
, **
thªad_ªtu∫
);

160 
Pthªad_ˇn˚l
(
±hªad_t
 
tid
);

161 
Pthªad_dëach
(
±hªad_t
 
tid
);

162 
Pthªad_exô
(*
ªtvÆ
);

163 
±hªad_t
 
Pthªad_£lf
();

164 
Pthªad_⁄˚
(
±hªad_⁄˚_t
 *
⁄˚_c⁄åﬁ
, (*
öô_fun˘i⁄
)());

167 
Sem_öô
(
£m_t
 *
£m
, 
psh¨ed
, 
vÆue
);

168 
P
(
£m_t
 *
£m
);

169 
V
(
£m_t
 *
£m
);

172 
ssize_t
 
rio_ªadn
(
fd
, *
u§buf
, 
size_t
 
n
);

173 
ssize_t
 
rio_wrôí
(
fd
, *
u§buf
, 
size_t
 
n
);

174 
rio_ªadöôb
(
rio_t
 *
Ω
, 
fd
);

175 
ssize_t
 
rio_ªadnb
(
rio_t
 *
Ω
, *
u§buf
, 
size_t
 
n
);

176 
ssize_t
 
rio_ªadlöeb
(
rio_t
 *
Ω
, *
u§buf
, 
size_t
 
maxÀn
);

179 
ssize_t
 
Rio_ªadn
(
fd
, *
u§buf
, 
size_t
 
n
);

180 
Rio_wrôí
(
fd
, *
u§buf
, 
size_t
 
n
);

181 
Rio_ªadöôb
(
rio_t
 *
Ω
, 
fd
);

182 
ssize_t
 
Rio_ªadnb
(
rio_t
 *
Ω
, *
u§buf
, 
size_t
 
n
);

183 
ssize_t
 
Rio_ªadlöeb
(
rio_t
 *
Ω
, *
u§buf
, 
size_t
 
maxÀn
);

186 
›í_˛õ¡fd
(*
ho°«me
, *
p‹t
);

187 
›í_li°ífd
(*
p‹t
);

190 
O≥n_˛õ¡fd
(*
ho°«me
, *
p‹t
);

191 
O≥n_li°ífd
(*
p‹t
);

	@netp/tiny/tiny.c

6 
	~"cßµ.h
"

8 
doô
(
fd
);

9 
ªad_ªque°hdrs
(
rio_t
 *
Ω
);

10 
∑r£_uri
(*
uri
, *
fûíame
, *
cgürgs
);

11 
£rve_°©ic
(
fd
, *
fûíame
, 
fûesize
);

12 
gë_fûëy≥
(*
fûíame
, *
fûëy≥
);

13 
£rve_dy«mic
(
fd
, *
fûíame
, *
cgürgs
);

14 
˛õ¡îr‹
(
fd
, *
ˇu£
, *
î∫um
,

15 *
sh‹tmsg
, *
l⁄gmsg
);

17 
	$maö
(
¨gc
, **
¨gv
)

19 
li°ífd
, 
c⁄nfd
;

20 
ho°«me
[
MAXLINE
], 
p‹t
[MAXLINE];

21 
sockÀn_t
 
˛õ¡Àn
;

22 
sockaddr_°‹age
 
˛õ¡addr
;

25 i‡(
¨gc
 != 2) {

26 
	`Ârötf
(
°dîr
, "ußge: %†<p‹t>\n", 
¨gv
[0]);

27 
	`exô
(1);

30 
li°ífd
 = 
	`O≥n_li°ífd
(
¨gv
[1]);

32 
˛õ¡Àn
 = (
˛õ¡addr
);

33 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, (
SA
 *)&
˛õ¡addr
, &
˛õ¡Àn
);

34 
	`Gë«meöfo
((
SA
 *Ë&
˛õ¡addr
, 
˛õ¡Àn
, 
ho°«me
, 
MAXLINE
,

35 
p‹t
, 
MAXLINE
, 0);

36 
	`¥ötf
("Ac˚±ed c⁄√˘i⁄ from (%s, %s)\n", 
ho°«me
, 
p‹t
);

37 
	`doô
(
c⁄nfd
);

38 
	`Clo£
(
c⁄nfd
);

40 
	}
}

47 
	$doô
(
fd
)

49 
is_°©ic
;

50 
°©
 
sbuf
;

51 
buf
[
MAXLINE
], 
mëhod
[MAXLINE], 
uri
[MAXLINE], 
vîsi⁄
[MAXLINE];

52 
fûíame
[
MAXLINE
], 
cgürgs
[MAXLINE];

53 
rio_t
 
rio
;

56 
	`Rio_ªadöôb
(&
rio
, 
fd
);

57 i‡(!
	`Rio_ªadlöeb
(&
rio
, 
buf
, 
MAXLINE
))

59 
	`¥ötf
("%s", 
buf
);

60 
	`ssˇnf
(
buf
, "%†%†%s", 
mëhod
, 
uri
, 
vîsi⁄
);

61 i‡(
	`°rˇ£cmp
(
mëhod
, "GET")) {

62 
	`˛õ¡îr‹
(
fd
, 
mëhod
, "501", "Not Implemented",

66 
	`ªad_ªque°hdrs
(&
rio
);

69 
is_°©ic
 = 
	`∑r£_uri
(
uri
, 
fûíame
, 
cgürgs
);

70 i‡(
	`°©
(
fûíame
, &
sbuf
) < 0) {

71 
	`˛õ¡îr‹
(
fd
, 
fûíame
, "404", "Not found",

76 i‡(
is_°©ic
) {

77 i‡(!(
	`S_ISREG
(
sbuf
.
°_mode
)Ë|| !(
S_IRUSR
 & sbuf.st_mode)) {

78 
	`˛õ¡îr‹
(
fd
, 
fûíame
, "403", "Forbidden",

82 
	`£rve_°©ic
(
fd
, 
fûíame
, 
sbuf
.
°_size
);

85 i‡(!(
	`S_ISREG
(
sbuf
.
°_mode
)Ë|| !(
S_IXUSR
 & sbuf.st_mode)) {

86 
	`˛õ¡îr‹
(
fd
, 
fûíame
, "403", "Forbidden",

90 
	`£rve_dy«mic
(
fd
, 
fûíame
, 
cgürgs
);

92 
	}
}

99 
	$ªad_ªque°hdrs
(
rio_t
 *
Ω
)

101 
buf
[
MAXLINE
];

103 
	`Rio_ªadlöeb
(
Ω
, 
buf
, 
MAXLINE
);

104 
	`¥ötf
("%s", 
buf
);

105 
	`°rcmp
(
buf
, "\r\n")) {

106 
	`Rio_ªadlöeb
(
Ω
, 
buf
, 
MAXLINE
);

107 
	`¥ötf
("%s", 
buf
);

110 
	}
}

118 
	$∑r£_uri
(*
uri
, *
fûíame
, *
cgürgs
)

120 *
±r
;

122 i‡(!
	`°r°r
(
uri
, "cgi-bin")) {

123 
	`°r˝y
(
cgürgs
, "");

124 
	`°r˝y
(
fûíame
, ".");

125 
	`°rˇt
(
fûíame
, 
uri
);

126 i‡(
uri
[
	`°æí
(uri)-1] == '/')

127 
	`°rˇt
(
fûíame
, "home.html");

131 
±r
 = 
	`ödex
(
uri
, '?');

132 i‡(
±r
) {

133 
	`°r˝y
(
cgürgs
, 
±r
+1);

134 *
±r
 = '\0';

137 
	`°r˝y
(
cgürgs
, "");

138 
	`°r˝y
(
fûíame
, ".");

139 
	`°rˇt
(
fûíame
, 
uri
);

142 
	}
}

149 
	$£rve_°©ic
(
fd
, *
fûíame
, 
fûesize
)

151 
§cfd
;

152 *
§˝
, 
fûëy≥
[
MAXLINE
], 
buf
[
MAXBUF
];

155 
	`gë_fûëy≥
(
fûíame
, 
fûëy≥
);

156 
	`•rötf
(
buf
, "HTTP/1.0 200 OK\r\n");

157 
	`•rötf
(
buf
, "%sServer: Tiny Web Server\r\n", buf);

158 
	`•rötf
(
buf
, "%sConnection: close\r\n", buf);

159 
	`•rötf
(
buf
, "%sC⁄ã¡-Àngth: %d\r\n", buf, 
fûesize
);

160 
	`•rötf
(
buf
, "%sC⁄ã¡-ty≥: %s\r\n\r\n", buf, 
fûëy≥
);

161 
	`Rio_wrôí
(
fd
, 
buf
, 
	`°æí
(buf));

162 
	`¥ötf
("Response headers:\n");

163 
	`¥ötf
("%s", 
buf
);

166 
§cfd
 = 
	`O≥n
(
fûíame
, 
O_RDONLY
, 0);

167 
§˝
 = 
	`Mm≠
(0, 
fûesize
, 
PROT_READ
, 
MAP_PRIVATE
, 
§cfd
, 0);

168 
	`Clo£
(
§cfd
);

169 
	`Rio_wrôí
(
fd
, 
§˝
, 
fûesize
);

170 
	`Munm≠
(
§˝
, 
fûesize
);

171 
	}
}

176 
	$gë_fûëy≥
(*
fûíame
, *
fûëy≥
)

178 i‡(
	`°r°r
(
fûíame
, ".html"))

179 
	`°r˝y
(
fûëy≥
, "text/html");

180 i‡(
	`°r°r
(
fûíame
, ".gif"))

181 
	`°r˝y
(
fûëy≥
, "image/gif");

182 i‡(
	`°r°r
(
fûíame
, ".png"))

183 
	`°r˝y
(
fûëy≥
, "image/png");

184 i‡(
	`°r°r
(
fûíame
, ".jpg"))

185 
	`°r˝y
(
fûëy≥
, "image/jpeg");

187 
	`°r˝y
(
fûëy≥
, "text/plain");

188 
	}
}

195 
	$£rve_dy«mic
(
fd
, *
fûíame
, *
cgürgs
)

197 
buf
[
MAXLINE
], *
em±yli°
[] = { 
NULL
 };

200 
	`•rötf
(
buf
, "HTTP/1.0 200 OK\r\n");

201 
	`Rio_wrôí
(
fd
, 
buf
, 
	`°æí
(buf));

202 
	`•rötf
(
buf
, "Server: Tiny Web Server\r\n");

203 
	`Rio_wrôí
(
fd
, 
buf
, 
	`°æí
(buf));

205 i‡(
	`F‹k
() == 0) {

207 
	`£ãnv
("QUERY_STRING", 
cgürgs
, 1);

208 
	`Dup2
(
fd
, 
STDOUT_FILENO
);

209 
	`Execve
(
fûíame
, 
em±yli°
, 
ívú⁄
);

211 
	`Waô
(
NULL
);

212 
	}
}

219 
	$˛õ¡îr‹
(
fd
, *
ˇu£
, *
î∫um
,

220 *
sh‹tmsg
, *
l⁄gmsg
)

222 
buf
[
MAXLINE
], 
body
[
MAXBUF
];

225 
	`•rötf
(
body
, "<html><title>Tiny Error</title>");

226 
	`•rötf
(
body
, "%s<body bgcolor=""ffffff"">\r\n", body);

227 
	`•rötf
(
body
, "%s%s: %s\r\n", body, 
î∫um
, 
sh‹tmsg
);

228 
	`•rötf
(
body
, "%s<p>%s: %s\r\n", body, 
l⁄gmsg
, 
ˇu£
);

229 
	`•rötf
(
body
, "%s<hr><em>The Tiny Web server</em>\r\n", body);

232 
	`•rötf
(
buf
, "HTTP/1.0 %†%s\r\n", 
î∫um
, 
sh‹tmsg
);

233 
	`Rio_wrôí
(
fd
, 
buf
, 
	`°æí
(buf));

234 
	`•rötf
(
buf
, "Content-type:Åext/html\r\n");

235 
	`Rio_wrôí
(
fd
, 
buf
, 
	`°æí
(buf));

236 
	`•rötf
(
buf
, "C⁄ã¡-Àngth: %d\r\n\r\n", ()
	`°æí
(
body
));

237 
	`Rio_wrôí
(
fd
, 
buf
, 
	`°æí
(buf));

238 
	`Rio_wrôí
(
fd
, 
body
, 
	`°æí
(body));

239 
	}
}

	@opt/benchmark-ncpe.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<m©h.h
>

4 
	~"fcyc.h
"

5 
	~"comböe.h
"

9 #i‚de‡
CNT


10 
	#CNT
 1024

	)

14 
	#MAX_BENCHMARKS
 100

	)

17 
comböî
 
	mcfun˘
;

18 
comböî
 
	mcheckfun˘
;

19 *
	mdes¸ùti⁄
;

20 } 
	gbíchm¨ks
[
MAX_BENCHMARKS
];

22 
	gbíchm¨k_cou¡
 = 0;

24 
	gcuºít_bíchm¨k
 = 0;

26 
vec_±r
 
	gd©a
;

27 
d©a_t
 
	gcomböe_ªsu…
;

30 vﬁ©ûê
d©a_t
 
	gsök
;

32 
	$£tup
(
˙t
)

34 
i
;

35 
d©a
 = 
	`√w_vec
(
˙t
);

37 
i
 = 0; i < 
˙t
; i++)

40 
	`£t_vec_ñemít
(
d©a
, 
i
, (
d©a_t
) (i+1));

42 
	`£t_vec_ñemít
(
d©a
, 
i
, (
d©a_t
Ë(
	`øndom
() & 0x1) ? -1 : 1);

44 
sök
 = (
d©a_t
) 0;

45 
	}
}

47 
	$run
(*
junk
) {

48 
bíchm¨ks
[
cuºít_bíchm¨k
].
	`cfun˘
(
d©a
, &
comböe_ªsu…
);

49 
	}
}

52 
	$run_ã°
(
bích_ödex
, 
˙t
) {

53 
cyc
;

54 *
des¸ùti⁄
 = 
bíchm¨ks
[
bích_ödex
].description;

55 
d©a_t
 
good_ªsu…
;

56 
cuºít_bíchm¨k
 = 
bích_ödex
;

57 
	`£tup
(
˙t
);

58 
cyc
 = 
	`fcyc
(
run
, 
NULL
);

59 
bíchm¨ks
[
bích_ödex
].
	`cfun˘
(
d©a
, &
comböe_ªsu…
);

60 
bíchm¨ks
[
bích_ödex
].
	`checkfun˘
(
d©a
, &
good_ªsu…
);

61 i‡(
comböe_ªsu…
 !
good_ªsu…
) {

62 
	`¥ötf
("Function %s, Should be %d, Got %d\n",

63 
des¸ùti⁄
, (Ë
good_ªsu…
, (Ë
comböe_ªsu…
);

67 
	`¥ötf
("%†%†%s:\n", 
DATA_NAME
, 
OP_NAME
, 
des¸ùti⁄
);

68 
	`¥ötf
("%.1‡cy˛es, Në: %.2‡cy˛es/ñemít\n", 
cyc
, cyc/
˙t
);

69 
	}
}

71 
	$add_comböî
(
comböî
 
f
, comböî 
fc
, *
des¸ùti⁄
) {

72 
bíchm¨ks
[
bíchm¨k_cou¡
].
cfun˘
 = 
f
;

73 
bíchm¨ks
[
bíchm¨k_cou¡
].
checkfun˘
 = 
fc
;

74 
bíchm¨ks
[
bíchm¨k_cou¡
].
des¸ùti⁄
 = description;

75 
bíchm¨k_cou¡
++;

76 
	}
}

78 
	$maö
(
¨gc
, *
¨gv
[])

80 
i
;

81 
˙t
 = 
CNT
;

82 i‡(
¨gc
 > 1)

83 
˙t
 = 
	`©oi
(
¨gv
[1]);

84 
	`ªgi°î_comböîs
();

85 
i
 = 0; i < 
bíchm¨k_cou¡
; i++) {

86 
	`run_ã°
(
i
, 
˙t
);

89 
	}
}

	@opt/benchmark.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<m©h.h
>

4 
	~"˝e.h
"

5 
	~"comböe.h
"

7 
	#SHORT
 0

	)

8 #i‡
SHORT


9 
	#ASIZE
 31

	)

11 
	#ASIZE
 973

	)

15 
	#MAX_BENCHMARKS
 100

	)

18 
comböî
 
	mcfun˘
;

19 
comböî
 
	mcheckfun˘
;

20 *
	mdes¸ùti⁄
;

21 
	m˝e
;

22 } 
	gbíchm¨ks
[
MAX_BENCHMARKS
];

24 
	gbíchm¨k_cou¡
 = 0;

26 
	gcuºít_bíchm¨k
 = 0;

28 
vec_±r
 
	gd©a
;

29 
d©a_t
 
	gcomböe_ªsu…
;

32 vﬁ©ûê
d©a_t
 
	gsök
;

35 
comböî
 
	glog_comböî_fun
 = 
NULL
;

36 
	glog_¶ow_˝e
 = 0.0;

37 
	glog_Á°_˝e
 = 1000.0;

38 *
	glog_«me
 = "benchmark-log.txt";

39 *
	glog_Á°_«me
 = "benchmark-log-fast.txt";

40 *
	glog_¶ow_«me
 = "benchmark-log-slow.txt";

42 
	$£tup
()

44 
i
;

45 
d©a
 = 
	`√w_vec
(
ASIZE
);

47 
i
 = 0; i < 
ASIZE
; i++)

50 
	`£t_vec_ñemít
(
d©a
, 
i
, (
d©a_t
) (i+1));

52 
	`£t_vec_ñemít
(
d©a
, 
i
, (
d©a_t
Ë(
	`øndom
() & 0x1) ? -1 : 1);

54 
sök
 = (
d©a_t
) 0;

55 
	}
}

57 
	$run
(
˙t
) {

58 
	`£t_vec_Àngth
(
d©a
, 
˙t
);

59 
bíchm¨ks
[
cuºít_bíchm¨k
].
	`cfun˘
(
d©a
, &
comböe_ªsu…
);

60 
	}
}

63 
	$run_ã°
(
bích_ödex
) {

64 
˝e
;

65 *
des¸ùti⁄
 = 
bíchm¨ks
[
bích_ödex
].description;

66 
d©a_t
 
good_ªsu…
;

67 
FILE
 *
logfûe
 = 
NULL
;

68 
cuºít_bíchm¨k
 = 
bích_ödex
;

69 
	`£tup
();

71 i‡(
bíchm¨ks
[
bích_ödex
].
cfun˘
 =
log_comböî_fun
) {

72 
logfûe
 = 
	`f›í
(
log_«me
, "w");

73 i‡(!
logfûe
) {

74 
	`Ârötf
(
°dîr
, "FailedÅo openÜog file\n");

75 
	`exô
(1);

78 
˝e
 = 
	`föd_˝e_fuŒ
(
run
, 
ASIZE
, 200, 
logfûe
, 
RAN_SAMPLE
, 0.3, 2);

79 i‡(
logfûe
) {

80 
	`f˛o£
(
logfûe
);

81 i‡(
˝e
 <
log_Á°_˝e
) {

82 i‡(
	`ª«me
(
log_«me
, 
log_Á°_«me
)) {

83 
	`Ârötf
(
°dîr
, "Couldn'tÑename fast cpe file\n");

84 
	`exô
(1);

88 i‡(
˝e
 >
log_¶ow_˝e
) {

89 i‡(
	`ª«me
(
log_«me
, 
log_¶ow_«me
)) {

90 
	`Ârötf
(
°dîr
, "Couldn'tÑename slow cpe file\n");

91 
	`exô
(1);

95 
bíchm¨ks
[
bích_ödex
].
	`cfun˘
(
d©a
, &
comböe_ªsu…
);

96 
bíchm¨ks
[
bích_ödex
].
	`checkfun˘
(
d©a
, &
good_ªsu…
);

97 i‡(
comböe_ªsu…
 !
good_ªsu…
) {

98 
	`¥ötf
("Function %s, Should be %ld, Got %ld\n",

99 
des¸ùti⁄
, (Ë
good_ªsu…
, (Ë
comböe_ªsu…
);

101 
bíchm¨ks
[
cuºít_bíchm¨k
].
˝e
 = cpe;

104 
	`¥ötf
("%†%†%s:\n", 
DATA_NAME
, 
OP_NAME
, 
des¸ùti⁄
);

105 
	`¥ötf
("%.2‡cy˛es/ñemít\n", 
˝e
);

106 
	}
}

108 
	$add_comböî
(
comböî
 
f
, comböî 
fc
, *
des¸ùti⁄
) {

109 
bíchm¨ks
[
bíchm¨k_cou¡
].
cfun˘
 = 
f
;

110 
bíchm¨ks
[
bíchm¨k_cou¡
].
checkfun˘
 = 
fc
;

111 
bíchm¨ks
[
bíchm¨k_cou¡
].
des¸ùti⁄
 = description;

112 
bíchm¨k_cou¡
++;

113 
	}
}

115 
	$log_comböî
(
comböî
 
f
, 
Á°_˝e
, 
¶ow_˝e
) {

116 
log_comböî_fun
 = 
f
;

117 
log_Á°_˝e
 = 
Á°_˝e
;

118 
log_¶ow_˝e
 = 
¶ow_˝e
;

119 
	}
}

121 
	$maö
()

123 
i
;

124 
	`ªgi°î_comböîs
();

125 
i
 = 0; i < 
bíchm¨k_cou¡
; i++) {

126 
	`run_ã°
(
i
);

129 
	}
}

	@opt/best.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

8 
	$be°1
(*
d©a
, 
n
, 
föd_max
, *
ªsu…p
)

10 
i
;

11 *
ªsu…p
 = 
d©a
[0];

12 
i
 = 1; i < 
n
; i++) {

13 i‡(
d©a
[
i
] > *
ªsu…p
 && 
föd_max
 ||

14 
d©a
[
i
] < *
ªsu…p
 && 
föd_max
)

15 *
ªsu…p
 = 
d©a
[
i
];

17 
	}
}

21 
	$be°2
(*
d©a
, 
n
, 
föd_max
, *
ªsu…p
)

23 
i
;

24 
ªsu…
 = 
d©a
[0];

25 
i
 = 1; i < 
n
; i++) {

26 i‡(
d©a
[
i
] > 
ªsu…
 && 
föd_max
 ||

27 
d©a
[
i
] < 
ªsu…
 && 
föd_max
)

28 
ªsu…
 = 
d©a
[
i
];

30 *
ªsu…p
 = 
ªsu…
;

31 
	}
}

35 
	$be°3
(*
d©a
, 
n
, 
föd_max
, *
ªsu…p
)

37 
i
;

38 
ªsu…
 = 
d©a
[0];

39 
i
 = 1; i < 
n
; i++) {

40 i‡(
föd_max
 && 
d©a
[
i
] > 
ªsu…
 ||

41 !
föd_max
 && 
d©a
[
i
] < 
ªsu…
)

42 
ªsu…
 = 
d©a
[
i
];

44 *
ªsu…p
 = 
ªsu…
;

45 
	}
}

49 
	$be°4
(*
d©a
, 
n
, 
föd_max
, *
ªsu…p
)

51 
i
;

52 
ªsu…
 = 
d©a
[0];

53 
i
 = 1; i < 
n
; i++) {

54 i‡(
föd_max
) {

55 i‡(
d©a
[
i
] > 
ªsu…
)Ñesult = data[i];

57 i‡(
d©a
[
i
] < 
ªsu…
)Ñesult = data[i];

60 *
ªsu…p
 = 
ªsu…
;

61 
	}
}

65 
	$be°5
(*
d©a
, 
n
, 
föd_max
, *
ªsu…p
)

67 
i
;

68 
ªsu…
 = 
d©a
[0];

69 i‡(
föd_max
) {

70 
i
 = 1; i < 
n
; i++)

71 i‡(
d©a
[
i
] > 
ªsu…
)Ñesult = data[i];

73 
i
 = 1; i < 
n
; i++)

74 i‡(
d©a
[
i
] > 
ªsu…
)Ñesult = data[i];

76 *
ªsu…p
 = 
ªsu…
;

77 
	}
}

81 
	$be°6
(*
d©a
, 
n
, 
föd_max
, *
ªsu…p
)

83 
i
;

84 
ªsu…0
 = 
d©a
[0];

85 
ªsu…1
 = 
d©a
[1];

86 
i
 = 1; i < 
n
-1; i+=2) {

87 i‡(
föd_max
) {

88 i‡(
d©a
[
i
] > 
ªsu…0
)Ñesult0 = data[i];

89 i‡(
d©a
[
i
+1] > 
ªsu…1
)Ñesult1 = data[i+1];

91 i‡(
d©a
[
i
] < 
ªsu…0
)Ñesult0 = data[i];

92 i‡(
d©a
[
i
+1] < 
ªsu…1
)Ñesult1 = data[i+1];

95 ; 
i
 < 
n
; i++) {

96 i‡(
föd_max
) {

97 i‡(
d©a
[
i
] > 
ªsu…0
)Ñesult0 = data[i];

99 i‡(
d©a
[
i
] < 
ªsu…0
)Ñesult0 = data[i];

102 i‡(
föd_max
) {

103 i‡(
ªsu…1
 > 
ªsu…0
)Ñesult0 =Ñesult1;

105 i‡(
ªsu…1
 < 
ªsu…0
)Ñesult0 =Ñesult1;

107 *
ªsu…p
 = 
ªsu…0
;

108 
	}
}

112 
	$be°7
(*
d©a
, 
n
, 
föd_max
, *
ªsu…p
)

114 
i
;

115 
ªsu…0
 = 
d©a
[0];

116 
ªsu…1
 = 
d©a
[1];

117 i‡(
föd_max
) {

118 
i
 = 1; i < 
n
-1; i+=2) {

119 i‡(
d©a
[
i
] > 
ªsu…0
)Ñesult0 = data[i];

120 i‡(
d©a
[
i
+1] > 
ªsu…1
)Ñesult1 = data[i+1];

122 ; 
i
 < 
n
; i++) {

123 i‡(
d©a
[
i
] > 
ªsu…0
)Ñesult0 = data[i];

125 i‡(
ªsu…1
 > 
ªsu…0
)Ñesult0 =Ñesult1;

127 
i
 = 1; i < 
n
-1; i+=2) {

128 i‡(
d©a
[
i
] < 
ªsu…0
)Ñesult0 = data[i];

129 i‡(
d©a
[
i
+1] < 
ªsu…1
)Ñesult1 = data[i+1];

131 ; 
i
 < 
n
; i++) {

132 i‡(
d©a
[
i
] < 
ªsu…0
)Ñesult0 = data[i];

134 i‡(
ªsu…1
 < 
ªsu…0
)Ñesult0 =Ñesult1;

136 *
ªsu…p
 = 
ªsu…0
;

137 
	}
}

139 
	#LEN
 1024

	)

141 
	gøndom_d©a
[
LEN
];

143 
	gønmömax_d©a
[
LEN
];

145 
	$øndom_öô
() {

147 
i
;

148 
i
 = 0; i < 
LEN
; i++)

149 
øndom_d©a
[
i
] = 
	`øndom
();

150 
	}
}

152 
	$ønmömax_öô
() {

153 
mö_soÁr
 = 0;

154 
max_soÁr
 = 0;

155 
ønmömax_d©a
[0] = 0;

156 
i
 = 1; i < 
LEN
; i++) {

157 i‡(
	`øndom
() & 0x1)

158 
ønmömax_d©a
[
i
] = ++
max_soÁr
;

160 
ønmömax_d©a
[
i
] = --
max_soÁr
;

162 
	}
}

164 
	$öô
() {

165 
	`øndom_öô
();

166 
	`ønmömax_öô
();

167 
	}
}

	@opt/bubble.c

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<gë›t.h
>

6 
	~"˛ock.h
"

8 
	$bubbÀ1
(
a
[], 
n
) {

9 
i
, 
j
;

10 
i
 = 
n
-1; i > 0; i--)

11 
j
 = 0; j < 
i
; j++) {

12 i‡(
a
[
j
] >á[j+1]) {

13 
t
 = 
a
[
j
];

14 
a
[
j
] =á[j+1];

15 
a
[
j
+1] = 
t
;

18 
	}
}

20 
	$bubbÀ2
(
a
[], 
n
) {

21 
i
, 
j
;

22 
i
 = 
n
-1; i > 0; i--)

23 
j
 = 0; j < 
i
; j++) {

24 
«j
 = 
a
[
j
] >á[j+1] ?á[j+1] :á[j];

25 
«j1
 = 
a
[
j
] >á[j+1] ?á[j] :á[j+1];

26 
a
[
j
] = 
«j
;

27 
a
[
j
+1] = 
«j1
;

29 
	}
}

31 
	$bub˙t
(
a
[], 
n
) {

32 
i
, 
j
;

33 
com∑ris⁄s
 = 0;

34 
sw≠s
 = 0;

35 
i
 = 
n
-1; i > 0; i--)

36 
j
 = 0; j < 
i
; j++) {

37 
com∑ris⁄s
++;

38 i‡(
a
[
j
] >á[j+1]) {

39 
t
 = 
a
[
j
];

40 
a
[
j
] =á[j+1];

41 
a
[
j
+1] = 
t
;

42 
sw≠s
++;

45 
	`¥ötf
("%d comparisions, %d swaps,Ñatio = %.2f\n",

46 
com∑ris⁄s
, 
sw≠s
, () swaps/comparisons);

47  
com∑ris⁄s
;

48 
	}
}

50 
	#LEN
 100

	)

51 
	ga0
[
LEN
], 
	ga1
[LEN], 
	ga2
[LEN];

54 
	$öô
(
£ed
) {

55 
i
;

56 i‡(
£ed
 <= 1) {

57 
vÆ
 = 0;

58 
ö¸
 = 
£ed
 ? 1 : -1;

59 
i
 = 0; i < 
LEN
; i++) {

60 
a0
[
i
] = 
a1
[i] = 
a2
[i] = 
vÆ
+=
ö¸
;

63 
	`§™dom
(
£ed
);

64 
i
 = 0; i < 
LEN
; i++) {

65 
a0
[
i
] = 
a1
[i] = 
a2
[i] = 
	`øndom
();

68 
	}
}

70 
	$show
(*
œbñ
, 
a
[], 
n
) {

71 
i
;

72 
	`¥ötf
("%s: ", 
œbñ
);

73 
i
 = 0; i < 
n
; i++)

74 
	`¥ötf
("%d ", 
a
[
i
]);

75 
	`¥ötf
("\n");

76 
	}
}

78 
	$run
(
Àn
, 
åüls
, 
£ed
) {

79 
t1
, 
t2
;

80 
t
, 
comp
 = 0;

81 
t
 = 0;Å < 
åüls
;Å++) {

82 
	`öô
(
£ed
);

83 i‡(
t
 == 0) {

84 i‡(
Àn
 <= 10) {

85 
	`show
("Bef‹ê", 
a1
, 
Àn
);

87 
comp
 = 
	`bub˙t
(
a0
, 
Àn
);

89 
	`°¨t_cou¡î
();

90 
	`bubbÀ1
(
a1
, 
Àn
);

91 
t1
 = 
	`gë_cou¡î
();

92 
	`°¨t_cou¡î
();

93 
	`bubbÀ2
(
a2
, 
Àn
);

94 
t2
 = 
	`gë_cou¡î
();

95 i‡(
t
 =0 && 
Àn
 <= 10) {

96 
	`show
("BubbÀ1", 
a1
, 
Àn
);

97 
	`show
("BubbÀ2", 
a2
, 
Àn
);

99 
	`¥ötf
("%d\t%.2f\t%.2f\n", 
Àn
, 
t1
/
comp
, 
t2
/comp);

101 
	}
}

103 
	$maö
(
¨gc
, *
¨gv
[]) {

104 
Àn
 = 
LEN
;

105 
åüls
 = 3;

106 
£ed
 = 1;

107 i‡(
¨gc
 > 1)

108 
Àn
 = 
	`©oi
(
¨gv
[1]);

109 i‡(
¨gc
 > 2)

110 
åüls
 = 
	`©oi
(
¨gv
[2]);

111 i‡(
¨gc
 > 3)

112 
£ed
 = 
	`©oi
(
¨gv
[3]);

113 
	`run
(
Àn
, 
åüls
, 
£ed
);

115 
	}
}

	@opt/combine-ans.c

1 
	~"comböe.h
"

7 
	gcomböe5px8_des¸
[] = "GNUÖointer code, unrolled by 8";

9 
	$comböe5px8
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

11 
Àngth
 = 
	`vec_Àngth
(
v
);

12 
limô
 = 
Àngth
 - 8;

13 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

14 
d©a_t
 
x
 = 
IDENT
;

15 
i
;

18 
i
 = 0; i <
limô
; i+=8) {

19 
x
 = x 
OPER
 
d©a
[0]

20 
OPER
 
d©a
[1]

21 
OPER
 
d©a
[2]

22 
OPER
 
d©a
[3]

23 
OPER
 
d©a
[4]

24 
OPER
 
d©a
[5]

25 
OPER
 
d©a
[6]

26 
OPER
 
d©a
[7];

27 
d©a
 += 8;

31 ; 
i
 < 
Àngth
; i++) {

32 
x
 = x 
OPER
 
d©a
[0];

33 
d©a
++;

35 *
de°
 = 
x
;

36 
	}
}

40 
	$ªgi°î_comböîs
()

42 
	`add_comböî
(
comböe5px8
, comböe5px8, 
comböe5px8_des¸
);

43 
	}
}

	@opt/combine.c

1 
	~<°dlib.h
>

2 
	~"comböe.h
"

6 
	gcomböe1_des¸
[] = "combine1: Maximum use of dataábstraction";

9 
	$comböe1
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

11 
i
;

13 *
de°
 = 
IDENT
;

14 
i
 = 0; i < 
	`vec_Àngth
(
v
); i++) {

15 
d©a_t
 
vÆ
;

16 
	`gë_vec_ñemít
(
v
, 
i
, &
vÆ
);

18 *
de°
 = *de° 
OP
 
vÆ
;

21 
	}
}

24 
	gcomböe2_des¸
[] = "combine2: Take vec_length() out ofÜoop";

27 
	$comböe2
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

29 
i
;

30 
Àngth
 = 
	`vec_Àngth
(
v
);

32 *
de°
 = 
IDENT
;

33 
i
 = 0; i < 
Àngth
; i++) {

34 
d©a_t
 
vÆ
;

35 
	`gë_vec_ñemít
(
v
, 
i
, &
vÆ
);

36 *
de°
 = *de° 
OP
 
vÆ
;

38 
	}
}

41 
	gcomböe3_des¸
[] = "combine3: ArrayÑeferenceÅo vector data";

44 
	$comböe3
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

46 
i
;

47 
Àngth
 = 
	`vec_Àngth
(
v
);

48 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

50 *
de°
 = 
IDENT
;

51 
i
 = 0; i < 
Àngth
; i++) {

52 *
de°
 = *de° 
OP
 
d©a
[
i
];

54 
	}
}

57 
	gcomböe3w_des¸
[] = "combine3w: Update *dest withinÜoop only with write";

60 
	$comböe3w
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

62 
i
;

63 
Àngth
 = 
	`vec_Àngth
(
v
);

64 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

65 
d©a_t
 
acc
 = 
IDENT
;

68 *
de°
 = 
acc
;

70 
i
 = 0; i < 
Àngth
; i++) {

71 
acc
 =ác¯
OP
 
d©a
[
i
];

72 *
de°
 = 
acc
;

74 
	}
}

77 
	gcomböe4_des¸
[] = "combine4: ArrayÑeference,áccumulate inÅemporary";

80 
	$comböe4
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

82 
i
;

83 
Àngth
 = 
	`vec_Àngth
(
v
);

84 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

85 
d©a_t
 
acc
 = 
IDENT
;

87 
i
 = 0; i < 
Àngth
; i++) {

88 
acc
 =ác¯
OP
 
d©a
[
i
];

90 *
de°
 = 
acc
;

91 
	}
}

94 
	gcomböe4b_des¸
[] = "combine4b: Include bonds check inÜoop";

97 
	$comböe4b
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

99 
i
;

100 
Àngth
 = 
	`vec_Àngth
(
v
);

101 
d©a_t
 
acc
 = 
IDENT
;

103 
i
 = 0; i < 
Àngth
; i++) {

104 i‡(
i
 >0 && i < 
v
->
Àn
) {

105 
acc
 =ác¯
OP
 
v
->
d©a
[
i
];

108 *
de°
 = 
acc
;

109 
	}
}

113 
	gcomböe4p_des¸
[] = "combine4p: PointerÑeference,áccumulate inÅemporary";

116 
	$comböe4p
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

118 
Àngth
 = 
	`vec_Àngth
(
v
);

119 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

120 
d©a_t
 *
díd
 = 
d©a
+
Àngth
;

121 
d©a_t
 
acc
 = 
IDENT
;

123 ; 
d©a
 < 
díd
; data++)

124 
acc
 =ác¯
OP
 *
d©a
;

125 *
de°
 = 
acc
;

126 
	}
}

130 
	gcomböe5_des¸
[] = "combine5: Array code, unrolled by 2";

133 
	$comböe5
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

135 
i
;

136 
Àngth
 = 
	`vec_Àngth
(
v
);

137 
limô
 = 
Àngth
-1;

138 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

139 
d©a_t
 
acc
 = 
IDENT
;

142 
i
 = 0; i < 
limô
; i+=2) {

144 
acc
 = (ac¯
OP
 
d©a
[
i
]) OP data[i+1];

149 ; 
i
 < 
Àngth
; i++) {

150 
acc
 =ác¯
OP
 
d©a
[
i
];

152 *
de°
 = 
acc
;

153 
	}
}

156 
	guƒﬁl3a_des¸
[] = "unroll3a: Array code, unrolled by 3";

157 
	$uƒﬁl3a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

159 
i
;

160 
Àngth
 = 
	`vec_Àngth
(
v
);

161 
limô
 = 
Àngth
-2;

162 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

163 
d©a_t
 
acc
 = 
IDENT
;

166 
i
 = 0; i < 
limô
; i+=3) {

167 
acc
 =ác¯
OP
 
d©a
[
i
];

168 
acc
 =ác¯
OP
 
d©a
[
i
+1];

169 
acc
 =ác¯
OP
 
d©a
[
i
+2];

173 ; 
i
 < 
Àngth
; i++) {

174 
acc
 =ác¯
OP
 
d©a
[
i
];

176 *
de°
 = 
acc
;

177 
	}
}

180 
	gcomböe5p_des¸
[] = "combine5p: Pointer code, unrolled by 2, forÜoop";

183 
	$comböe5p
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

185 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

186 
d©a_t
 *
díd
 = 
d©a
+
	`vec_Àngth
(
v
);

187 
d©a_t
 *
dlimô
 = 
díd
-1;

188 
d©a_t
 
acc
 = 
IDENT
;

191 ; 
d©a
 < 
dlimô
; data += 2) {

192 
acc
 =ác¯
OP
 
d©a
[0] OP data[1];

196 ; 
d©a
 < 
díd
; data++) {

197 
acc
 =ác¯
OP
 
d©a
[0];

199 *
de°
 = 
acc
;

200 
	}
}

203 
	guƒﬁl2aw_des¸
[] = "unroll2aw: Array code, unrolled by 2, whileÜoop";

204 
	$uƒﬁl2aw_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

206 
i
 = 0;

207 
Àngth
 = 
	`vec_Àngth
(
v
);

208 
limô
 = 
Àngth
-1;

209 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

210 
d©a_t
 
acc
 = 
IDENT
;

213 
i
 < 
limô
) {

214 
acc
 =ác¯
OP
 
d©a
[
i
];

215 
i
+= 2;

216 
acc
 =ác¯
OP
 
d©a
[
i
-1];

220 ; 
i
 < 
Àngth
; i++) {

221 
acc
 =ác¯
OP
 
d©a
[
i
];

223 *
de°
 = 
acc
;

224 
	}
}

227 
	guƒﬁl4a_des¸
[] = "unroll4a: Array code, unrolled by 4";

228 
	$uƒﬁl4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

230 
i
;

231 
Àngth
 = 
	`vec_Àngth
(
v
);

232 
limô
 = 
Àngth
-3;

233 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

234 
d©a_t
 
acc
 = 
IDENT
;

237 
i
 = 0; i < 
limô
; i+=4) {

238 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

239 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

243 ; 
i
 < 
Àngth
; i++) {

244 
acc
 =ác¯
OP
 
d©a
[
i
];

246 *
de°
 = 
acc
;

247 
	}
}

249 
	guƒﬁl5a_des¸
[] = "unroll5a: Array code, unrolled by 5";

252 
	$uƒﬁl5
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

255 
	$uƒﬁl5a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

259 
i
;

260 
Àngth
 = 
	`vec_Àngth
(
v
);

261 
limô
 = 
Àngth
-4;

262 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

263 
d©a_t
 
acc
 = 
IDENT
;

266 
i
 = 0; i < 
limô
; i+=5) {

267 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

268 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

269 
acc
 =ác¯
OP
 
d©a
[
i
+4];

273 ; 
i
 < 
Àngth
; i++) {

274 
acc
 =ác¯
OP
 
d©a
[
i
];

276 *
de°
 = 
acc
;

277 
	}
}

280 
	guƒﬁl6a_des¸
[] = "unroll6a: Array code, unrolled by 6";

281 
	$uƒﬁl6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

283 
i
;

284 
Àngth
 = 
	`vec_Àngth
(
v
);

285 
limô
 = 
Àngth
-5;

286 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

287 
d©a_t
 
acc
 = 
IDENT
;

290 
i
 = 0; i < 
limô
; i+=6) {

291 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

292 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

293 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

297 ; 
i
 < 
Àngth
; i++) {

298 
acc
 =ác¯
OP
 
d©a
[
i
];

300 *
de°
 = 
acc
;

301 
	}
}

303 
	guƒﬁl7a_des¸
[] = "unroll7a: Array code, unrolled by 7";

304 
	$uƒﬁl7a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

306 
i
;

307 
Àngth
 = 
	`vec_Àngth
(
v
);

308 
limô
 = 
Àngth
-6;

309 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

310 
d©a_t
 
acc
 = 
IDENT
;

313 
i
 = 0; i < 
limô
; i+=7) {

314 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

315 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

316 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

317 
acc
 =ác¯
OP
 
d©a
[
i
+6];

321 ; 
i
 < 
Àngth
; i++) {

322 
acc
 =ác¯
OP
 
d©a
[
i
];

324 *
de°
 = 
acc
;

325 
	}
}

328 
	guƒﬁl8a_des¸
[] = "unroll8a: Array code, unrolled by 8";

329 
	$uƒﬁl8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

331 
i
;

332 
Àngth
 = 
	`vec_Àngth
(
v
);

333 
limô
 = 
Àngth
-7;

334 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

335 
d©a_t
 
acc
 = 
IDENT
;

338 
i
 = 0; i < 
limô
; i+=8) {

339 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

340 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

341 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

342 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

346 ; 
i
 < 
Àngth
; i++) {

347 
acc
 =ác¯
OP
 
d©a
[
i
];

349 *
de°
 = 
acc
;

350 
	}
}

352 
	guƒﬁl9a_des¸
[] = "unroll9a: Array code, unrolled by 9";

353 
	$uƒﬁl9a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

355 
i
;

356 
Àngth
 = 
	`vec_Àngth
(
v
);

357 
limô
 = 
Àngth
-8;

358 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

359 
d©a_t
 
acc
 = 
IDENT
;

362 
i
 = 0; i < 
limô
; i+=9) {

363 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

364 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

365 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

366 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

367 
acc
 =ác¯
OP
 
d©a
[
i
+8];

371 ; 
i
 < 
Àngth
; i++) {

372 
acc
 =ác¯
OP
 
d©a
[
i
];

374 *
de°
 = 
acc
;

375 
	}
}

377 
	guƒﬁl10a_des¸
[] = "unroll10a: Array code, unrolled by 10";

378 
	$uƒﬁl10a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

380 
i
;

381 
Àngth
 = 
	`vec_Àngth
(
v
);

382 
limô
 = 
Àngth
-9;

383 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

384 
d©a_t
 
acc
 = 
IDENT
;

387 
i
 = 0; i < 
limô
; i+=10) {

388 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

389 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

390 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

391 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

392 
acc
 =ác¯
OP
 
d©a
[
i
+8] OP data[i+9];

396 ; 
i
 < 
Àngth
; i++) {

397 
acc
 =ác¯
OP
 
d©a
[
i
];

399 *
de°
 = 
acc
;

400 
	}
}

403 
	guƒﬁl16a_des¸
[] = "unroll16a: Array code, unrolled by 16";

404 
	$uƒﬁl16a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

406 
i
;

407 
Àngth
 = 
	`vec_Àngth
(
v
);

408 
limô
 = 
Àngth
-15;

409 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

410 
d©a_t
 
acc
 = 
IDENT
;

413 
i
 = 0; i < 
limô
; i+=16) {

414 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

415 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

416 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

417 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

418 
acc
 =ác¯
OP
 
d©a
[
i
+8] OP data[i+9];

419 
acc
 =ác¯
OP
 
d©a
[
i
+10] OP data[i+11];

420 
acc
 =ác¯
OP
 
d©a
[
i
+12] OP data[i+13];

421 
acc
 =ác¯
OP
 
d©a
[
i
+14] OP data[i+15];

425 ; 
i
 < 
Àngth
; i++) {

426 
acc
 =ác¯
OP
 
d©a
[
i
];

428 *
de°
 = 
acc
;

429 
	}
}

431 
	guƒﬁl2_des¸
[] = "unroll2: Pointer code, unrolled by 2";

432 
	$uƒﬁl2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

434 
Àngth
 = 
	`vec_Àngth
(
v
);

435 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

436 
ovî
 = 
Àngth
%2;

437 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

438 
d©a_t
 
acc
 = 
IDENT
;

440 
d©a
 < 
díd
) {

441 
acc
 =ác¯
OP
 
d©a
[0];

442 
acc
 =ác¯
OP
 
d©a
[1];

443 
d©a
 += 2;

445 
díd
 +
ovî
;

446 
d©a
 < 
díd
) {

447 
acc
 =ác¯
OP
 *
d©a
;

448 
d©a
 ++;

450 *
de°
 = 
acc
;

451 
	}
}

454 
	guƒﬁl3_des¸
[] = "unroll3: Pointer code, unrolled by 3";

455 
	$uƒﬁl3_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

457 
Àngth
 = 
	`vec_Àngth
(
v
);

458 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

459 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-2;

460 
d©a_t
 
acc
 = 
IDENT
;

462 
d©a
 < 
díd
) {

463 
acc
 =ác¯
OP
 
d©a
[0];

464 
acc
 =ác¯
OP
 
d©a
[1];

465 
acc
 =ác¯
OP
 
d©a
[2];

466 
d©a
 += 3;

468 
díd
 += 2;

469 
d©a
 < 
díd
) {

470 
acc
 =ác¯
OP
 *
d©a
;

471 
d©a
 ++;

473 *
de°
 = 
acc
;

474 
	}
}

477 
	guƒﬁl4_des¸
[] = "unroll4: Pointer code, unrolled by 4";

478 
	$uƒﬁl4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

480 
Àngth
 = 
	`vec_Àngth
(
v
);

481 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

482 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-3;

483 
d©a_t
 
acc
 = 
IDENT
;

485 
d©a
 < 
díd
) {

486 
acc
 =ác¯
OP
 
d©a
[0];

487 
acc
 =ác¯
OP
 
d©a
[1];

488 
acc
 =ác¯
OP
 
d©a
[2];

489 
acc
 =ác¯
OP
 
d©a
[3];

490 
d©a
 += 4;

492 
díd
 += 3;

493 
d©a
 < 
díd
) {

494 
acc
 =ác¯
OP
 *
d©a
;

495 
d©a
 ++;

497 *
de°
 = 
acc
;

498 
	}
}

500 
	guƒﬁl8_des¸
[] = "unroll8: Pointer code, unrolled by 8";

501 
	$uƒﬁl8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

503 
Àngth
 = 
	`vec_Àngth
(
v
);

504 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

505 
ovî
 = 
Àngth
%8;

506 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

507 
d©a_t
 
acc
 = 
IDENT
;

509 
d©a
 < 
díd
) {

510 
acc
 =ác¯
OP
 
d©a
[0];

511 
acc
 =ác¯
OP
 
d©a
[1];

512 
acc
 =ác¯
OP
 
d©a
[2];

513 
acc
 =ác¯
OP
 
d©a
[3];

514 
acc
 =ác¯
OP
 
d©a
[4];

515 
acc
 =ác¯
OP
 
d©a
[5];

516 
acc
 =ác¯
OP
 
d©a
[6];

517 
acc
 =ác¯
OP
 
d©a
[7];

518 
d©a
 += 8;

520 
díd
 +
ovî
;

521 
d©a
 < 
díd
) {

522 
acc
 =ác¯
OP
 *
d©a
;

523 
d©a
 ++;

525 *
de°
 = 
acc
;

526 
	}
}

528 
	guƒﬁl16_des¸
[] = "unroll16: Pointer code, unrolled by 16";

529 
	$uƒﬁl16_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

531 
Àngth
 = 
	`vec_Àngth
(
v
);

532 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

533 
ovî
 = 
Àngth
%16;

534 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

535 
d©a_t
 
acc
 = 
IDENT
;

537 
d©a
 < 
díd
) {

538 
acc
 =ác¯
OP
 
d©a
[0];

539 
acc
 =ác¯
OP
 
d©a
[1];

540 
acc
 =ác¯
OP
 
d©a
[2];

541 
acc
 =ác¯
OP
 
d©a
[3];

542 
acc
 =ác¯
OP
 
d©a
[4];

543 
acc
 =ác¯
OP
 
d©a
[5];

544 
acc
 =ác¯
OP
 
d©a
[6];

545 
acc
 =ác¯
OP
 
d©a
[7];

546 
acc
 =ác¯
OP
 
d©a
[8];

547 
acc
 =ác¯
OP
 
d©a
[9];

548 
acc
 =ác¯
OP
 
d©a
[10];

549 
acc
 =ác¯
OP
 
d©a
[11];

550 
acc
 =ác¯
OP
 
d©a
[12];

551 
acc
 =ác¯
OP
 
d©a
[13];

552 
acc
 =ác¯
OP
 
d©a
[14];

553 
acc
 =ác¯
OP
 
d©a
[15];

554 
d©a
 += 16;

556 
díd
 +
ovî
;

557 
d©a
 < 
díd
) {

558 
acc
 =ác¯
OP
 *
d©a
;

559 
d©a
 ++;

561 *
de°
 = 
acc
;

562 
	}
}

565 
	gcomböe6_des¸
[] = "combine6: Array code, unrolled by 2, Superscalar x2";

568 
	$comböe6
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

570 
i
;

571 
Àngth
 = 
	`vec_Àngth
(
v
);

572 
limô
 = 
Àngth
-1;

573 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

574 
d©a_t
 
acc0
 = 
IDENT
;

575 
d©a_t
 
acc1
 = 
IDENT
;

578 
i
 = 0; i < 
limô
; i+=2) {

579 
acc0
 =ácc0 
OP
 
d©a
[
i
];

580 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

584 ; 
i
 < 
Àngth
; i++) {

585 
acc0
 =ácc0 
OP
 
d©a
[
i
];

587 *
de°
 = 
acc0
 
OP
 
acc1
;

588 
	}
}

591 
	guƒﬁl4x2a_des¸
[] = "unroll4x2a: Array code, unrolled by 4, Superscalar x2";

592 
	$uƒﬁl4x2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

594 
i
;

595 
Àngth
 = 
	`vec_Àngth
(
v
);

596 
limô
 = 
Àngth
-3;

597 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

598 
d©a_t
 
acc0
 = 
IDENT
;

599 
d©a_t
 
acc1
 = 
IDENT
;

602 
i
 = 0; i < 
limô
; i+=4) {

603 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

604 
acc0
 =ácc0 
OP
 
d©a
[
i
+2]; 
acc1
 =ácc1 OP data[i+3];

608 ; 
i
 < 
Àngth
; i++) {

609 
acc0
 =ácc0 
OP
 
d©a
[
i
];

611 *
de°
 = 
acc0
 
OP
 
acc1
;

612 
	}
}

615 
	guƒﬁl8x2a_des¸
[] = "unroll8x2a: Array code, unrolled by 8, Superscalar x2";

616 
	$uƒﬁl8x2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

618 
i
;

619 
Àngth
 = 
	`vec_Àngth
(
v
);

620 
limô
 = 
Àngth
-7;

621 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

622 
d©a_t
 
acc0
 = 
IDENT
;

623 
d©a_t
 
acc1
 = 
IDENT
;

626 
i
 = 0; i < 
limô
; i+=8) {

627 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

628 
acc0
 =ácc0 
OP
 
d©a
[
i
+2]; 
acc1
 =ácc1 OP data[i+3];

629 
acc0
 =ácc0 
OP
 
d©a
[
i
+4]; 
acc1
 =ácc1 OP data[i+5];

630 
acc0
 =ácc0 
OP
 
d©a
[
i
+6]; 
acc1
 =ácc1 OP data[i+7];

634 ; 
i
 < 
Àngth
; i++) {

635 
acc0
 =ácc0 
OP
 
d©a
[
i
];

637 *
de°
 = 
acc0
 
OP
 
acc1
;

638 
	}
}

640 
	guƒﬁl3x3a_des¸
[] = "unroll3x3a: Array code, unrolled by 3, Superscalar x3";

641 
	$uƒﬁl3x3a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

643 
i
;

644 
Àngth
 = 
	`vec_Àngth
(
v
);

645 
limô
 = 
Àngth
-2;

646 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

647 
d©a_t
 
acc0
 = 
IDENT
;

648 
d©a_t
 
acc1
 = 
IDENT
;

649 
d©a_t
 
acc2
 = 
IDENT
;

652 
i
 = 0; i < 
limô
; i+=3) {

653 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

654 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

658 ; 
i
 < 
Àngth
; i++) {

659 
acc0
 =ácc0 
OP
 
d©a
[
i
];

661 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
;

662 
	}
}

665 
	guƒﬁl4x4a_des¸
[] = "unroll4x4a: Array code, unrolled by 4, Superscalar x4";

666 
	$uƒﬁl4x4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

668 
i
;

669 
Àngth
 = 
	`vec_Àngth
(
v
);

670 
limô
 = 
Àngth
-3;

671 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

672 
d©a_t
 
acc0
 = 
IDENT
;

673 
d©a_t
 
acc1
 = 
IDENT
;

674 
d©a_t
 
acc2
 = 
IDENT
;

675 
d©a_t
 
acc3
 = 
IDENT
;

678 
i
 = 0; i < 
limô
; i+=4) {

679 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

680 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

684 ; 
i
 < 
Àngth
; i++) {

685 
acc0
 =ácc0 
OP
 
d©a
[
i
];

687 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
);

689 
	}
}

691 
	guƒﬁl8x4a_des¸
[] = "unroll8x4a: Array code, unrolled by 8, Superscalar x4";

692 
	$uƒﬁl8x4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

694 
i
;

695 
Àngth
 = 
	`vec_Àngth
(
v
);

696 
limô
 = 
Àngth
-7;

697 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

698 
d©a_t
 
acc0
 = 
IDENT
;

699 
d©a_t
 
acc1
 = 
IDENT
;

700 
d©a_t
 
acc2
 = 
IDENT
;

701 
d©a_t
 
acc3
 = 
IDENT
;

704 
i
 = 0; i < 
limô
; i+=8) {

705 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

706 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

707 
acc0
 =ácc0 
OP
 
d©a
[
i
+4]; 
acc1
 =ácc1 OP data[i+5];

708 
acc2
 =ácc2 
OP
 
d©a
[
i
+6]; 
acc3
 =ácc3 OP data[i+7];

712 ; 
i
 < 
Àngth
; i++) {

713 
acc0
 =ácc0 
OP
 
d©a
[
i
];

715 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
 OP 
acc3
;

716 
	}
}

718 
	guƒﬁl12x6a_des¸
[] = "unroll2x6a: Array code, unrolled by 12, Superscalar x6";

719 
	$uƒﬁl12x6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

721 
i
;

722 
Àngth
 = 
	`vec_Àngth
(
v
);

723 
limô
 = 
Àngth
-11;

724 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

725 
d©a_t
 
acc0
 = 
IDENT
;

726 
d©a_t
 
acc1
 = 
IDENT
;

727 
d©a_t
 
acc2
 = 
IDENT
;

728 
d©a_t
 
acc3
 = 
IDENT
;

729 
d©a_t
 
acc4
 = 
IDENT
;

730 
d©a_t
 
acc5
 = 
IDENT
;

733 
i
 = 0; i < 
limô
; i+=12) {

734 
acc0
 =ácc0 
OP
 
d©a
[
i
];

735 
acc0
 =ácc0 
OP
 
d©a
[
i
+6];

736 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

737 
acc1
 =ácc1 
OP
 
d©a
[
i
+7];

738 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

739 
acc2
 =ácc2 
OP
 
d©a
[
i
+8];

740 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

741 
acc3
 =ácc3 
OP
 
d©a
[
i
+9];

742 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

743 
acc4
 =ácc4 
OP
 
d©a
[
i
+10];

744 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

745 
acc5
 =ácc5 
OP
 
d©a
[
i
+11];

749 ; 
i
 < 
Àngth
; i++) {

750 
acc0
 =ácc0 
OP
 
d©a
[
i
];

752 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
);

753 
	}
}

755 
	guƒﬁl12x12a_des¸
[] = "unroll12x12a: Array code, unrolled by 12, Superscalar x12";

756 
	$uƒﬁl12x12a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

758 
i
;

759 
Àngth
 = 
	`vec_Àngth
(
v
);

760 
limô
 = 
Àngth
-11;

761 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

762 
d©a_t
 
acc0
 = 
IDENT
;

763 
d©a_t
 
acc1
 = 
IDENT
;

764 
d©a_t
 
acc2
 = 
IDENT
;

765 
d©a_t
 
acc3
 = 
IDENT
;

766 
d©a_t
 
acc4
 = 
IDENT
;

767 
d©a_t
 
acc5
 = 
IDENT
;

768 
d©a_t
 
acc6
 = 
IDENT
;

769 
d©a_t
 
acc7
 = 
IDENT
;

770 
d©a_t
 
acc8
 = 
IDENT
;

771 
d©a_t
 
acc9
 = 
IDENT
;

772 
d©a_t
 
acc10
 = 
IDENT
;

773 
d©a_t
 
acc11

IDENT
;

776 
i
 = 0; i < 
limô
; i+=12) {

777 
acc0
 =ácc0 
OP
 
d©a
[
i
];

778 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

779 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

780 
acc7
 =ácc7 
OP
 
d©a
[
i
+7];

781 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

782 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

783 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

784 
acc9
 =ácc9 
OP
 
d©a
[
i
+9];

785 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

786 
acc10
 =ácc10 
OP
 
d©a
[
i
+10];

787 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

788 
acc11
 =ácc11 
OP
 
d©a
[
i
+11];

792 ; 
i
 < 
Àngth
; i++) {

793 
acc0
 =ácc0 
OP
 
d©a
[
i
];

795 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
)

796 
	`OP
 (
acc6
 
OP
 
acc7
ËOP (
acc8
 OP 
acc9
ËOP (
acc10
 OP 
acc11
);

797 
	}
}

799 
	guƒﬁl16x16a_des¸
[] = "unroll16x16a: Array code, unrolled by 16, Superscalar x16";

800 
	$uƒﬁl16x16a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

802 
i
;

803 
Àngth
 = 
	`vec_Àngth
(
v
);

804 
limô
 = 
Àngth
-15;

805 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

806 
d©a_t
 
acc0
 = 
IDENT
;

807 
d©a_t
 
acc1
 = 
IDENT
;

808 
d©a_t
 
acc2
 = 
IDENT
;

809 
d©a_t
 
acc3
 = 
IDENT
;

810 
d©a_t
 
acc4
 = 
IDENT
;

811 
d©a_t
 
acc5
 = 
IDENT
;

812 
d©a_t
 
acc6
 = 
IDENT
;

813 
d©a_t
 
acc7
 = 
IDENT
;

814 
d©a_t
 
acc8
 = 
IDENT
;

815 
d©a_t
 
acc9
 = 
IDENT
;

816 
d©a_t
 
acc10
 = 
IDENT
;

817 
d©a_t
 
acc11

IDENT
;

818 
d©a_t
 
acc12

IDENT
;

819 
d©a_t
 
acc13

IDENT
;

820 
d©a_t
 
acc14

IDENT
;

821 
d©a_t
 
acc15

IDENT
;

824 
i
 = 0; i < 
limô
; i+=16) {

825 
acc0
 =ácc0 
OP
 
d©a
[
i
];

826 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

827 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

828 
acc7
 =ácc7 
OP
 
d©a
[
i
+7];

829 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

830 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

831 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

832 
acc9
 =ácc9 
OP
 
d©a
[
i
+9];

833 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

834 
acc10
 =ácc10 
OP
 
d©a
[
i
+10];

835 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

836 
acc11
 =ácc11 
OP
 
d©a
[
i
+11];

837 
acc12
 =ácc12 
OP
 
d©a
[
i
+12];

838 
acc13
 =ácc13 
OP
 
d©a
[
i
+13];

839 
acc14
 =ácc14 
OP
 
d©a
[
i
+14];

840 
acc15
 =ácc15 
OP
 
d©a
[
i
+15];

844 ; 
i
 < 
Àngth
; i++) {

845 
acc0
 =ácc0 
OP
 
d©a
[
i
];

847 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
))

848 
	`OP
 ((
acc6
 
OP
 
acc7
ËOP (
acc8
 OP 
acc9
ËOP (
acc10
 OP 
acc11
))

849 
	`OP
 ((
acc12
 
OP
 
acc13
ËOP (
acc14
 OP 
acc15
));

850 
	}
}

852 
	guƒﬁl20x20a_des¸
[] = "unroll20x20a: Array code, unrolled by 20, Superscalar x20";

853 
	$uƒﬁl20x20a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

855 
i
;

856 
Àngth
 = 
	`vec_Àngth
(
v
);

857 
limô
 = 
Àngth
-19;

858 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

859 
d©a_t
 
acc0
 = 
IDENT
;

860 
d©a_t
 
acc1
 = 
IDENT
;

861 
d©a_t
 
acc2
 = 
IDENT
;

862 
d©a_t
 
acc3
 = 
IDENT
;

863 
d©a_t
 
acc4
 = 
IDENT
;

864 
d©a_t
 
acc5
 = 
IDENT
;

865 
d©a_t
 
acc6
 = 
IDENT
;

866 
d©a_t
 
acc7
 = 
IDENT
;

867 
d©a_t
 
acc8
 = 
IDENT
;

868 
d©a_t
 
acc9
 = 
IDENT
;

869 
d©a_t
 
acc10
 = 
IDENT
;

870 
d©a_t
 
acc11

IDENT
;

871 
d©a_t
 
acc12

IDENT
;

872 
d©a_t
 
acc13

IDENT
;

873 
d©a_t
 
acc14

IDENT
;

874 
d©a_t
 
acc15

IDENT
;

875 
d©a_t
 
acc16

IDENT
;

876 
d©a_t
 
acc17

IDENT
;

877 
d©a_t
 
acc18

IDENT
;

878 
d©a_t
 
acc19

IDENT
;

881 
i
 = 0; i < 
limô
; i+=20) {

882 
acc0
 =ácc0 
OP
 
d©a
[
i
];

883 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

884 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

885 
acc7
 =ácc7 
OP
 
d©a
[
i
+7];

886 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

887 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

888 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

889 
acc9
 =ácc9 
OP
 
d©a
[
i
+9];

890 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

891 
acc10
 =ácc10 
OP
 
d©a
[
i
+10];

892 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

893 
acc11
 =ácc11 
OP
 
d©a
[
i
+11];

894 
acc12
 =ácc12 
OP
 
d©a
[
i
+12];

895 
acc13
 =ácc13 
OP
 
d©a
[
i
+13];

896 
acc14
 =ácc14 
OP
 
d©a
[
i
+14];

897 
acc15
 =ácc15 
OP
 
d©a
[
i
+15];

898 
acc16
 =ácc16 
OP
 
d©a
[
i
+16];

899 
acc17
 =ácc17 
OP
 
d©a
[
i
+17];

900 
acc18
 =ácc18 
OP
 
d©a
[
i
+18];

901 
acc19
 =ácc19 
OP
 
d©a
[
i
+19];

905 ; 
i
 < 
Àngth
; i++) {

906 
acc0
 =ácc0 
OP
 
d©a
[
i
];

908 *
de°
 =

909 (((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
))

910 
	`OP
 ((
acc6
 
OP
 
acc7
ËOP (
acc8
 OP 
acc9
ËOP (
acc10
 OP 
acc11
)))

911 
OP


912 (((
acc12
 
OP
 
acc13
Ë
	`OP
 (
acc14
 OP 
acc15
)ËOP ((
acc16
 OP 
acc17
ËOP (
acc18
 OP 
acc19
)));

913 
	}
}

916 
	guƒﬁl5x5a_des¸
[] = "unroll5x5a: Array code, unrolled by 5, Superscalar x5";

917 
	$uƒﬁl5x5a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

919 
i
;

920 
Àngth
 = 
	`vec_Àngth
(
v
);

921 
limô
 = 
Àngth
-4;

922 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

923 
d©a_t
 
acc0
 = 
IDENT
;

924 
d©a_t
 
acc1
 = 
IDENT
;

925 
d©a_t
 
acc2
 = 
IDENT
;

926 
d©a_t
 
acc3
 = 
IDENT
;

927 
d©a_t
 
acc4
 = 
IDENT
;

930 
i
 = 0; i < 
limô
; i+=5) {

931 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

932 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

933 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

937 ; 
i
 < 
Àngth
; i++) {

938 
acc0
 =ácc0 
OP
 
d©a
[
i
];

940 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
 OP 
acc4
);

941 
	}
}

943 
	guƒﬁl6x6a_des¸
[] = "unroll6x6a: Array code, unrolled by 6, Superscalar x6";

944 
	$uƒﬁl6x6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

946 
i
;

947 
Àngth
 = 
	`vec_Àngth
(
v
);

948 
limô
 = 
Àngth
-5;

949 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

950 
d©a_t
 
acc0
 = 
IDENT
;

951 
d©a_t
 
acc1
 = 
IDENT
;

952 
d©a_t
 
acc2
 = 
IDENT
;

953 
d©a_t
 
acc3
 = 
IDENT
;

954 
d©a_t
 
acc4
 = 
IDENT
;

955 
d©a_t
 
acc5
 = 
IDENT
;

958 
i
 = 0; i < 
limô
; i+=6) {

959 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

960 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

961 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

965 ; 
i
 < 
Àngth
; i++) {

966 
acc0
 =ácc0 
OP
 
d©a
[
i
];

968 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
);

969 
	}
}

971 
	guƒﬁl7x7a_des¸
[] = "unroll7x7a: Array code, unrolled by 7, Superscalar x7";

972 
	$uƒﬁl7x7a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

974 
i
;

975 
Àngth
 = 
	`vec_Àngth
(
v
);

976 
limô
 = 
Àngth
-6;

977 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

978 
d©a_t
 
acc0
 = 
IDENT
;

979 
d©a_t
 
acc1
 = 
IDENT
;

980 
d©a_t
 
acc2
 = 
IDENT
;

981 
d©a_t
 
acc3
 = 
IDENT
;

982 
d©a_t
 
acc4
 = 
IDENT
;

983 
d©a_t
 
acc5
 = 
IDENT
;

984 
d©a_t
 
acc6
 = 
IDENT
;

987 
i
 = 0; i < 
limô
; i+=7) {

988 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

989 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

990 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

991 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

995 ; 
i
 < 
Àngth
; i++) {

996 
acc0
 =ácc0 
OP
 
d©a
[
i
];

998 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP (
acc4
 OP 
acc5
 OP 
acc6
);

999 
	}
}

1001 
	guƒﬁl8x8a_des¸
[] = "unroll8x8a: Array code, unrolled by 8, Superscalar x8";

1002 
	$uƒﬁl8x8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1004 
i
;

1005 
Àngth
 = 
	`vec_Àngth
(
v
);

1006 
limô
 = 
Àngth
-7;

1007 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1008 
d©a_t
 
acc0
 = 
IDENT
;

1009 
d©a_t
 
acc1
 = 
IDENT
;

1010 
d©a_t
 
acc2
 = 
IDENT
;

1011 
d©a_t
 
acc3
 = 
IDENT
;

1012 
d©a_t
 
acc4
 = 
IDENT
;

1013 
d©a_t
 
acc5
 = 
IDENT
;

1014 
d©a_t
 
acc6
 = 
IDENT
;

1015 
d©a_t
 
acc7
 = 
IDENT
;

1018 
i
 = 0; i < 
limô
; i+=8) {

1019 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

1020 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

1021 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

1022 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

1026 ; 
i
 < 
Àngth
; i++) {

1027 
acc0
 =ácc0 
OP
 
d©a
[
i
];

1029 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP ((
acc4
 OP 
acc5
ËOP (
acc6
 OP 
acc7
));

1030 
	}
}

1032 
	guƒﬁl9x9a_des¸
[] = "unroll9x9a: Array code, unrolled by 9, Superscalar x9";

1033 
	$uƒﬁl9x9a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1035 
i
;

1036 
Àngth
 = 
	`vec_Àngth
(
v
);

1037 
limô
 = 
Àngth
-8;

1038 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1039 
d©a_t
 
acc0
 = 
IDENT
;

1040 
d©a_t
 
acc1
 = 
IDENT
;

1041 
d©a_t
 
acc2
 = 
IDENT
;

1042 
d©a_t
 
acc3
 = 
IDENT
;

1043 
d©a_t
 
acc4
 = 
IDENT
;

1044 
d©a_t
 
acc5
 = 
IDENT
;

1045 
d©a_t
 
acc6
 = 
IDENT
;

1046 
d©a_t
 
acc7
 = 
IDENT
;

1047 
d©a_t
 
acc8
 = 
IDENT
;

1050 
i
 = 0; i < 
limô
; i+=9) {

1051 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

1052 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

1053 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

1054 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

1055 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

1059 ; 
i
 < 
Àngth
; i++) {

1060 
acc0
 =ácc0 
OP
 
d©a
[
i
];

1062 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP ((
acc4
 OP 
acc5
ËOP (
acc6
 OP 
acc7
ËOP 
acc8
);

1063 
	}
}

1065 
	guƒﬁl10x10a_des¸
[] = "unroll10x10a: Array code, unrolled by 10, Superscalar x10";

1066 
	$uƒﬁl10x10a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1068 
i
;

1069 
Àngth
 = 
	`vec_Àngth
(
v
);

1070 
limô
 = 
Àngth
-9;

1071 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1072 
d©a_t
 
acc0
 = 
IDENT
;

1073 
d©a_t
 
acc1
 = 
IDENT
;

1074 
d©a_t
 
acc2
 = 
IDENT
;

1075 
d©a_t
 
acc3
 = 
IDENT
;

1076 
d©a_t
 
acc4
 = 
IDENT
;

1077 
d©a_t
 
acc5
 = 
IDENT
;

1078 
d©a_t
 
acc6
 = 
IDENT
;

1079 
d©a_t
 
acc7
 = 
IDENT
;

1080 
d©a_t
 
acc8
 = 
IDENT
;

1081 
d©a_t
 
acc9
 = 
IDENT
;

1084 
i
 = 0; i < 
limô
; i+=10) {

1085 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

1086 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

1087 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

1088 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

1089 
acc8
 =ácc8 
OP
 
d©a
[
i
+8]; 
acc9
 =ácc9 OP data[i+9];

1093 ; 
i
 < 
Àngth
; i++) {

1094 
acc0
 =ácc0 
OP
 
d©a
[
i
];

1096 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)) OP

1097 ((
acc4
 
OP
 
acc5
Ë
	`OP
 (
acc6
 OP 
acc7
)) OP

1098 (
acc8
 
OP
 
acc9
);

1099 
	}
}

1101 
	guƒﬁlx2as_des¸
[] = "unrollx2as: Array code, Unroll x2, Superscalar x2,Çoninterleaved";

1102 
	$uƒﬁlx2as_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1104 
i
;

1105 
Àngth
 = 
	`vec_Àngth
(
v
);

1106 
limô
 = 
Àngth
/2;

1107 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1108 
d©a_t
 *
d©a2
 = 
d©a
+
limô
;

1109 
d©a_t
 
acc0
 = 
IDENT
;

1110 
d©a_t
 
acc1
 = 
IDENT
;

1113 
i
 = 0; i < 
limô
; i++) {

1114 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP 
d©a2
[i];

1118 
i
 = 
limô
*2; i < 
Àngth
; i++) {

1119 
acc1
 =ácc1 
OP
 
d©a
[
i
];

1121 *
de°
 = 
acc0
 
OP
 
acc1
;

1122 
	}
}

1124 
	guƒﬁl4x2as_des¸
[] = "unroll4x2as: Array code, Unroll x4, Superscalar x2,Çoninterleaved";

1125 
	$uƒﬁl4x2as_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1127 
i
;

1128 
Àngth
 = 
	`vec_Àngth
(
v
);

1129 
limô
 = 
Àngth
/2;

1130 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1131 
d©a_t
 *
d©a2
 = 
d©a
+
limô
;

1132 
d©a_t
 
acc0
 = 
IDENT
;

1133 
d©a_t
 
acc1
 = 
IDENT
;

1136 
i
 = 0; i < 
limô
; i++) {

1137 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP 
d©a2
[i];

1141 
i
 = 
limô
*2; i < 
Àngth
; i++) {

1142 
acc1
 =ácc1 
OP
 
d©a
[
i
];

1144 *
de°
 = 
acc0
 
OP
 
acc1
;

1145 
	}
}

1149 
	guƒﬁl8x2_des¸
[] = "unroll8x2: Pointer code, unrolled by 8, Superscalar x2";

1150 
	$uƒﬁl8x2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1152 
Àngth
 = 
	`vec_Àngth
(
v
);

1153 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1154 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1155 
d©a_t
 
acc0
 = 
IDENT
;

1156 
d©a_t
 
acc1
 = 
IDENT
;

1158 
d©a
 < 
díd
) {

1159 
acc0
 =ácc0 
OP
 
d©a
[0];

1160 
acc1
 =ácc1 
OP
 
d©a
[1];

1161 
acc0
 =ácc0 
OP
 
d©a
[2];

1162 
acc1
 =ácc1 
OP
 
d©a
[3];

1163 
acc0
 =ácc0 
OP
 
d©a
[4];

1164 
acc1
 =ácc1 
OP
 
d©a
[5];

1165 
acc0
 =ácc0 
OP
 
d©a
[6];

1166 
acc1
 =ácc1 
OP
 
d©a
[7];

1167 
d©a
 += 8;

1169 
díd
 += 7;

1170 
d©a
 < 
díd
) {

1171 
acc0
 =ácc0 
OP
 *
d©a
;

1172 
d©a
 ++;

1174 *
de°
 = 
acc0
 
OP
 
acc1
;

1175 
	}
}

1177 
	guƒﬁl9x3_des¸
[] = "unroll9x3: Pointer code, unrolled by 9, Superscalar x3";

1178 
	$uƒﬁl9x3_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1180 
Àngth
 = 
	`vec_Àngth
(
v
);

1181 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1182 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-8;

1183 
d©a_t
 
acc0
 = 
IDENT
;

1184 
d©a_t
 
acc1
 = 
IDENT
;

1185 
d©a_t
 
acc2
 = 
IDENT
;

1187 
d©a
 < 
díd
) {

1188 
acc0
 =ácc0 
OP
 
d©a
[0];

1189 
acc1
 =ácc1 
OP
 
d©a
[1];

1190 
acc2
 =ácc2 
OP
 
d©a
[2];

1191 
acc0
 =ácc0 
OP
 
d©a
[3];

1192 
acc1
 =ácc1 
OP
 
d©a
[4];

1193 
acc2
 =ácc2 
OP
 
d©a
[5];

1194 
acc0
 =ácc0 
OP
 
d©a
[6];

1195 
acc1
 =ácc1 
OP
 
d©a
[7];

1196 
acc2
 =ácc2 
OP
 
d©a
[8];

1197 
d©a
 += 9;

1199 
díd
 += 8;

1200 
d©a
 < 
díd
) {

1201 
acc0
 =ácc0 
OP
 *
d©a
;

1202 
d©a
 ++;

1204 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
;

1205 
	}
}

1208 
	guƒﬁl8x4_des¸
[] = "unroll8x4: Pointer code, unrolled by 8, Superscalar x4";

1209 
	$uƒﬁl8x4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1211 
Àngth
 = 
	`vec_Àngth
(
v
);

1212 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1213 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1214 
d©a_t
 
acc0
 = 
IDENT
;

1215 
d©a_t
 
acc1
 = 
IDENT
;

1216 
d©a_t
 
acc2
 = 
IDENT
;

1217 
d©a_t
 
acc3
 = 
IDENT
;

1219 
d©a
 < 
díd
) {

1220 
acc0
 =ácc0 
OP
 
d©a
[0];

1221 
acc1
 =ácc1 
OP
 
d©a
[1];

1222 
acc2
 =ácc2 
OP
 
d©a
[2];

1223 
acc3
 =ácc3 
OP
 
d©a
[3];

1224 
acc0
 =ácc0 
OP
 
d©a
[4];

1225 
acc1
 =ácc1 
OP
 
d©a
[5];

1226 
acc2
 =ácc2 
OP
 
d©a
[6];

1227 
acc3
 =ácc3 
OP
 
d©a
[7];

1228 
d©a
 += 8;

1230 
díd
 += 7;

1231 
d©a
 < 
díd
) {

1232 
acc3
 =ácc3 
OP
 *
d©a
;

1233 
d©a
 ++;

1235 *
de°
 = 
acc3
 
OP
 
acc0
 OP 
acc1
 OP 
acc2
;

1236 
	}
}

1238 
	guƒﬁl8x8_des¸
[] = "unroll8x8: Pointer code, unrolled by 8, Superscalar x8";

1239 
	$uƒﬁl8x8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1241 
Àngth
 = 
	`vec_Àngth
(
v
);

1242 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1243 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1244 
d©a_t
 
acc0
 = 
IDENT
;

1245 
d©a_t
 
acc1
 = 
IDENT
;

1246 
d©a_t
 
acc2
 = 
IDENT
;

1247 
d©a_t
 
acc3
 = 
IDENT
;

1248 
d©a_t
 
acc4
 = 
IDENT
;

1249 
d©a_t
 
acc5
 = 
IDENT
;

1250 
d©a_t
 
acc6
 = 
IDENT
;

1251 
d©a_t
 
acc7
 = 
IDENT
;

1253 
d©a
 < 
díd
) {

1254 
acc0
 =ácc0 
OP
 
d©a
[0];

1255 
acc1
 =ácc1 
OP
 
d©a
[1];

1256 
acc2
 =ácc2 
OP
 
d©a
[2];

1257 
acc3
 =ácc3 
OP
 
d©a
[3];

1258 
acc4
 =ácc4 
OP
 
d©a
[4];

1259 
acc5
 =ácc5 
OP
 
d©a
[5];

1260 
acc6
 =ácc6 
OP
 
d©a
[6];

1261 
acc7
 =ácc7 
OP
 
d©a
[7];

1262 
d©a
 += 8;

1264 
díd
 += 7;

1265 
d©a
 < 
díd
) {

1266 
acc0
 =ácc0 
OP
 *
d©a
;

1267 
d©a
 ++;

1269 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
 OP 
acc3
 OP 
acc4
 OP 
acc5
 OP 
acc6
 OP 
acc7
;

1270 
	}
}

1272 
	gcomböe7_des¸
[] = "combine7: Array code, unrolled by 2, differentássociativity";

1275 
	$comböe7
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1277 
i
;

1278 
Àngth
 = 
	`vec_Àngth
(
v
);

1279 
limô
 = 
Àngth
-1;

1280 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1281 
d©a_t
 
acc
 = 
IDENT
;

1284 
i
 = 0; i < 
limô
; i+=2) {

1286 
acc
 =ác¯
	`OP
 (
d©a
[
i
] 
OP
 data[i+1]);

1291 ; 
i
 < 
Àngth
; i++) {

1292 
acc
 =ác¯
OP
 
d©a
[
i
];

1294 *
de°
 = 
acc
;

1295 
	}
}

1298 
	guƒﬁl3Ø_des¸
[] = "unroll3aa: Array code, unrolled by 3, Different Associativity";

1299 
	$uƒﬁl3Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1301 
i
;

1302 
Àngth
 = 
	`vec_Àngth
(
v
);

1303 
limô
 = 
Àngth
-2;

1304 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1305 
d©a_t
 
acc
 = 
IDENT
;

1308 
i
 = 0; i < 
limô
; i+=3) {

1309 
acc
 =ác¯
	`OP
 (
d©a
[
i
] 
OP
 data[i+1] OP data[i+2]);

1313 ; 
i
 < 
Àngth
; i++) {

1314 
acc
 =ác¯
OP
 
d©a
[
i
];

1316 *
de°
 = 
acc
;

1317 
	}
}

1319 
	guƒﬁl4Ø_des¸
[] = "unroll4aa: Array code, unrolled by 4, Different Associativity";

1320 
	$uƒﬁl4Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1322 
i
;

1323 
Àngth
 = 
	`vec_Àngth
(
v
);

1324 
limô
 = 
Àngth
-3;

1325 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1326 
d©a_t
 
acc
 = 
IDENT
;

1329 
i
 = 0; i < 
limô
; i+=4) {

1330 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1331 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1332 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
);

1336 ; 
i
 < 
Àngth
; i++) {

1337 
acc
 =ác¯
OP
 
d©a
[
i
];

1339 *
de°
 = 
acc
;

1340 
	}
}

1342 
	guƒﬁl5Ø_des¸
[] = "unroll5aa: Array code, unrolled by 5, Different Associativity";

1343 
	$uƒﬁl5Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1345 
i
;

1346 
Àngth
 = 
	`vec_Àngth
(
v
);

1347 
limô
 = 
Àngth
-4;

1348 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1349 
d©a_t
 
acc
 = 
IDENT
;

1352 
i
 = 0; i < 
limô
; i+=5) {

1353 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1354 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1355 
d©a_t
 
t3
 = 
d©a
[
i
+4];

1356 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
 OP 
t3
);

1360 ; 
i
 < 
Àngth
; i++) {

1361 
acc
 =ác¯
OP
 
d©a
[
i
];

1363 *
de°
 = 
acc
;

1364 
	}
}

1366 
	guƒﬁl6Ø_des¸
[] = "unroll6aa: Array code, unrolled by 6, Different Associativity";

1367 
	$uƒﬁl6Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1369 
i
;

1370 
Àngth
 = 
	`vec_Àngth
(
v
);

1371 
limô
 = 
Àngth
-5;

1372 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1373 
d©a_t
 
acc
 = 
IDENT
;

1376 
i
 = 0; i < 
limô
; i+=6) {

1377 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1378 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1379 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1380 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
 OP 
t3
);

1384 ; 
i
 < 
Àngth
; i++) {

1385 
acc
 =ác¯
OP
 
d©a
[
i
];

1387 *
de°
 = 
acc
;

1388 
	}
}

1390 
	guƒﬁl7Ø_des¸
[] = "unroll7aa: Array code, unrolled by 7, Different Associativity";

1391 
	$uƒﬁl7Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1393 
i
;

1394 
Àngth
 = 
	`vec_Àngth
(
v
);

1395 
limô
 = 
Àngth
-6;

1396 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1397 
d©a_t
 
acc
 = 
IDENT
;

1400 
i
 = 0; i < 
limô
; i+=7) {

1401 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1402 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1403 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1404 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1405 
d©a_t
 
t4
 = 
d©a
[
i
+6];

1406 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1407 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1411 ; 
i
 < 
Àngth
; i++) {

1412 
acc
 =ác¯
OP
 
d©a
[
i
];

1415 *
de°
 = 
acc
;

1416 
	}
}

1418 
	guƒﬁl8Ø_des¸
[] = "unroll8aa: Array code, unrolled by 8, Different Associativity";

1419 
	$uƒﬁl8Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1421 
i
;

1422 
Àngth
 = 
	`vec_Àngth
(
v
);

1423 
limô
 = 
Àngth
-7;

1424 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1425 
d©a_t
 
acc
 = 
IDENT
;

1428 
i
 = 0; i < 
limô
; i+=8) {

1429 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1430 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1431 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1432 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1433 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1434 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1435 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1439 ; 
i
 < 
Àngth
; i++) {

1440 
acc
 =ác¯
OP
 
d©a
[
i
];

1443 *
de°
 = 
acc
;

1444 
	}
}

1446 
	guƒﬁl9Ø_des¸
[] = "unroll9aa: Array code, unrolled by 9, Different Associativity";

1447 
	$uƒﬁl9Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1449 
i
;

1450 
Àngth
 = 
	`vec_Àngth
(
v
);

1451 
limô
 = 
Àngth
-8;

1452 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1453 
d©a_t
 
acc
 = 
IDENT
;

1456 
i
 = 0; i < 
limô
; i+=9) {

1457 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1458 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1459 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1460 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1461 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1462 
d©a_t
 
t5
 = 
d©a
[
i
+8];

1463 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
 OP 
t5
;

1464 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1468 ; 
i
 < 
Àngth
; i++) {

1469 
acc
 =ác¯
OP
 
d©a
[
i
];

1472 *
de°
 = 
acc
;

1473 
	}
}

1475 
	guƒﬁl10Ø_des¸
[] = "unroll10aa: Array code, unrolled by 10, Different Associativity";

1476 
	$uƒﬁl10Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1478 
i
;

1479 
Àngth
 = 
	`vec_Àngth
(
v
);

1480 
limô
 = 
Àngth
-9;

1481 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1482 
d©a_t
 
acc
 = 
IDENT
;

1485 
i
 = 0; i < 
limô
; i+=10) {

1486 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1487 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1488 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1489 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1490 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1491 
d©a_t
 
t5
 = 
d©a
[
i
+8] 
OP
 data[i+9];

1492 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
 OP 
t5
;

1493 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1497 ; 
i
 < 
Àngth
; i++) {

1498 
acc
 =ác¯
OP
 
d©a
[
i
];

1501 *
de°
 = 
acc
;

1502 
	}
}

1505 
	guƒﬁl12Ø_des¸
[] = "unroll12aa: Array code, unrolled by 12, Different Associativity";

1506 
	$uƒﬁl12Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1508 
i
;

1509 
Àngth
 = 
	`vec_Àngth
(
v
);

1510 
limô
 = 
Àngth
-11;

1511 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1512 
d©a_t
 
acc
 = 
IDENT
;

1515 
i
 = 0; i < 
limô
; i+=12) {

1516 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1517 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1518 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1519 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1520 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1521 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1522 
d©a_t
 
t5
 = 
d©a
[
i
+8] 
OP
 data[i+9];

1523 
d©a_t
 
t6
 = 
d©a
[
i
+10] 
OP
 data[i+11];

1524 
d©a_t
 
u3
 = 
t5
 
OP
 
t6
;

1525 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
 OP 
u3
);

1529 ; 
i
 < 
Àngth
; i++) {

1530 
acc
 =ác¯
OP
 
d©a
[
i
];

1533 *
de°
 = 
acc
;

1534 
	}
}

1540 
	#VBYTES
 32

	)

1543 
	#VSIZE
 
VBYTES
/(
d©a_t
)

	)

1548 
d©a_t
 
	tvec_t
 
	t__©åibuã__
 ((
	tve˘‹_size
(
	tVBYTES
)));

1551 
	gsimd_v1_des¸
[] = "simd_v1: SSE code, 1*VSIZE-wayÖarallelism";

1553 
	$simd_v1_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1555 
i
;

1556 
vec_t
 
accum
;

1557 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1558 
˙t
 = 
	`vec_Àngth
(
v
);

1559 
d©a_t
 
ªsu…
 = 
IDENT
;

1562 
i
 = 0; i < 
VSIZE
; i++)

1563 
accum
[
i
] = 
IDENT
;

1566 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1567 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1568 
˙t
--;

1572 
˙t
 >
VSIZE
) {

1573 
vec_t
 
chunk
 = *((vec_à*Ë
d©a
);

1574 
accum
 =áccum 
OP
 
chunk
;

1575 
d©a
 +
VSIZE
;

1576 
˙t
 -
VSIZE
;

1580 
˙t
) {

1581 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1582 
˙t
--;

1586 
i
 = 0; i < 
VSIZE
; i++)

1587 
ªsu…
 =Ñesu… 
OP
 
accum
[
i
];

1590 *
de°
 = 
ªsu…
;

1591 
	}
}

1595 
	gsimd_v2_des¸
[] = "simd_v2: SSE code, 2*VSIZE-wayÖarallelism";

1596 
	$simd_v2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1598 
i
;

1599 
vec_t
 
accum0
, 
accum1
;

1600 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1601 
˙t
 = 
	`vec_Àngth
(
v
);

1602 
d©a_t
 
ªsu…
 = 
IDENT
;

1605 
i
 = 0; i < 
VSIZE
; i++)

1606 
accum0
[
i
] = 
IDENT
;

1607 
accum1
 = 
accum0
;

1610 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1611 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1612 
˙t
--;

1615 
˙t
 >2*
VSIZE
) {

1616 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1617 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1618 
accum0
 =áccum0 
OP
 
chunk0
;

1619 
accum1
 =áccum1 
OP
 
chunk1
;

1620 
d©a
 +2*
VSIZE
;

1621 
˙t
 -2*
VSIZE
;

1623 
˙t
) {

1624 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1625 
˙t
--;

1627 
accum0
 =áccum0 
OP
 
accum1
;

1628 
i
 = 0; i < 
VSIZE
; i++)

1629 
ªsu…
 =Ñesu… 
OP
 
accum0
[
i
];

1630 *
de°
 = 
ªsu…
;

1631 
	}
}

1633 
	gsimd_v4_des¸
[] = "simd_v4: SSE code, 4*VSIZE-wayÖarallelism";

1634 
	$simd_v4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1636 
i
;

1637 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1638 
˙t
 = 
	`vec_Àngth
(
v
);

1639 
d©a_t
 
ªsu…
 = 
IDENT
;

1642 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
;

1643 
i
 = 0; i < 
VSIZE
; i++)

1644 
accum0
[
i
] = 
IDENT
;

1645 
accum1
 = 
accum0
 ;

1646 
accum2
 = 
accum0
;

1647 
accum3
 = 
accum0
;

1650 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1651 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1652 
˙t
--;

1657 
˙t
 >4*
VSIZE
) {

1658 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1659 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1660 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1661 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1662 
accum0
 =áccum0 
OP
 
chunk0
;

1663 
accum1
 =áccum1 
OP
 
chunk1
;

1664 
accum2
 =áccum2 
OP
 
chunk2
;

1665 
accum3
 =áccum3 
OP
 
chunk3
;

1666 
d©a
 +4*
VSIZE
;

1667 
˙t
 -4*
VSIZE
;

1671 
˙t
) {

1672 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1673 
˙t
--;

1678 
accum0
 = (accum0 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1681 
i
 = 0; i < 
VSIZE
; i++)

1682 
ªsu…
 =Ñesu… 
OP
 
accum0
[
i
];

1684 *
de°
 = 
ªsu…
;

1685 
	}
}

1687 
	gsimd_v8_des¸
[] = "simd_v8: SSE code, 8*VSIZE-wayÖarallelism";

1688 
	$simd_v8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1690 
i
;

1691 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
, 
accum5
, 
accum6
, 
accum7
;

1692 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1693 
˙t
 = 
	`vec_Àngth
(
v
);

1694 
d©a_t
 
ªsu…
 = 
IDENT
;

1697 
i
 = 0; i < 
VSIZE
; i++)

1698 
accum0
[
i
] = 
IDENT
;

1699 
accum1
 = 
accum0
;

1700 
accum2
 = 
accum0
;

1701 
accum3
 = 
accum0
;

1702 
accum4
 = 
accum0
;

1703 
accum5
 = 
accum0
;

1704 
accum6
 = 
accum0
;

1705 
accum7
 = 
accum0
;

1708 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1709 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1710 
˙t
--;

1713 
˙t
 >8*
VSIZE
) {

1714 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1715 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1716 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1717 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1718 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1719 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1720 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1721 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1722 
accum0
 =áccum0 
OP
 
chunk0
;

1723 
accum1
 =áccum1 
OP
 
chunk1
;

1724 
accum2
 =áccum2 
OP
 
chunk2
;

1725 
accum3
 =áccum3 
OP
 
chunk3
;

1726 
accum4
 =áccum4 
OP
 
chunk4
;

1727 
accum5
 =áccum5 
OP
 
chunk5
;

1728 
accum6
 =áccum6 
OP
 
chunk6
;

1729 
accum7
 =áccum7 
OP
 
chunk7
;

1730 
d©a
 +8*
VSIZE
;

1731 
˙t
 -8*
VSIZE
;

1733 
˙t
) {

1734 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1735 
˙t
--;

1737 
accum0
 = (accum0 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1738 
accum0
 =áccum0 
	`OP
 (
accum4
 
OP
 
accum5
ËOP (
accum6
 OP 
accum7
);

1739 
i
 = 0; i < 
VSIZE
; i++)

1740 
ªsu…
 =Ñesu… 
OP
 
accum0
[
i
];

1741 *
de°
 = 
ªsu…
;

1742 
	}
}

1744 
	gsimd_v10_des¸
[] = "simd_v10: SSE code, 10*VSIZE-wayÖarallelism";

1745 
	$simd_v10_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1747 
i
;

1748 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
, 
accum5
, 
accum6
, 
accum7
, 
accum8
, 
accum9
;

1749 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1750 
˙t
 = 
	`vec_Àngth
(
v
);

1751 
d©a_t
 
ªsu…
 = 
IDENT
;

1754 
i
 = 0; i < 
VSIZE
; i++)

1755 
accum0
[
i
] = 
IDENT
;

1756 
accum1
 = 
accum0
;

1757 
accum2
 = 
accum0
;

1758 
accum3
 = 
accum0
;

1759 
accum4
 = 
accum0
;

1760 
accum5
 = 
accum0
;

1761 
accum6
 = 
accum0
;

1762 
accum7
 = 
accum0
;

1763 
accum8
 = 
accum0
;

1764 
accum9
 = 
accum0
;

1767 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1768 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1769 
˙t
--;

1772 
˙t
 >10*
VSIZE
) {

1773 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1774 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1775 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1776 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1777 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1778 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1779 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1780 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1781 
vec_t
 
chunk8
 = *((vec_à*Ë(
d©a
+8*
VSIZE
));

1782 
vec_t
 
chunk9
 = *((vec_à*Ë(
d©a
+9*
VSIZE
));

1783 
accum0
 =áccum0 
OP
 
chunk0
;

1784 
accum1
 =áccum1 
OP
 
chunk1
;

1785 
accum2
 =áccum2 
OP
 
chunk2
;

1786 
accum3
 =áccum3 
OP
 
chunk3
;

1787 
accum4
 =áccum4 
OP
 
chunk4
;

1788 
accum5
 =áccum5 
OP
 
chunk5
;

1789 
accum6
 =áccum6 
OP
 
chunk6
;

1790 
accum7
 =áccum7 
OP
 
chunk7
;

1791 
accum8
 =áccum8 
OP
 
chunk8
;

1792 
accum9
 =áccum9 
OP
 
chunk9
;

1793 
d©a
 +10*
VSIZE
;

1794 
˙t
 -10*
VSIZE
;

1796 
˙t
) {

1797 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1798 
˙t
--;

1800 
accum0
 = (accum0 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1801 
accum0
 =áccum0 
	`OP
 (
accum4
 
OP
 
accum5
ËOP (
accum6
 OP 
accum7
);

1802 
accum0
 =áccum0 
	`OP
 (
accum8
 
OP
 
accum9
);

1803 
i
 = 0; i < 
VSIZE
; i++)

1804 
ªsu…
 =Ñesu… 
OP
 
accum0
[
i
];

1805 *
de°
 = 
ªsu…
;

1806 
	}
}

1808 
	gsimd_v12_des¸
[] = "simd_v12: SSE code, 12*VSIZE-wayÖarallelism";

1809 
	$simd_v12_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1811 
i
;

1812 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
, 
accum5
, 
accum6
, 
accum7
;

1813 
vec_t
 
accum8
, 
accum9
, 
accum10
, 
accum11
;

1814 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1815 
˙t
 = 
	`vec_Àngth
(
v
);

1816 
d©a_t
 
ªsu…
 = 
IDENT
;

1819 
i
 = 0; i < 
VSIZE
; i++)

1820 
accum0
[
i
] = 
IDENT
;

1821 
accum1
 = 
accum0
;

1822 
accum2
 = 
accum0
;

1823 
accum3
 = 
accum0
;

1824 
accum4
 = 
accum0
;

1825 
accum5
 = 
accum0
;

1826 
accum6
 = 
accum0
;

1827 
accum7
 = 
accum0
;

1828 
accum8
 = 
accum0
;

1829 
accum9
 = 
accum0
;

1830 
accum10
 = 
accum0
;

1831 
accum11
 = 
accum0
;

1834 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1835 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1836 
˙t
--;

1839 
˙t
 >12*
VSIZE
) {

1840 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1841 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1842 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1843 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1844 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1845 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1846 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1847 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1848 
vec_t
 
chunk8
 = *((vec_à*Ë(
d©a
+8*
VSIZE
));

1849 
vec_t
 
chunk9
 = *((vec_à*Ë(
d©a
+9*
VSIZE
));

1850 
vec_t
 
chunk10
 = *((vec_à*Ë(
d©a
+10*
VSIZE
));

1851 
vec_t
 
chunk11
 = *((vec_à*Ë(
d©a
+11*
VSIZE
));

1852 
accum0
 =áccum0 
OP
 
chunk0
;

1853 
accum1
 =áccum1 
OP
 
chunk1
;

1854 
accum2
 =áccum2 
OP
 
chunk2
;

1855 
accum3
 =áccum3 
OP
 
chunk3
;

1856 
accum4
 =áccum4 
OP
 
chunk4
;

1857 
accum5
 =áccum5 
OP
 
chunk5
;

1858 
accum6
 =áccum6 
OP
 
chunk6
;

1859 
accum7
 =áccum7 
OP
 
chunk7
;

1860 
accum8
 =áccum8 
OP
 
chunk8
;

1861 
accum9
 =áccum9 
OP
 
chunk9
;

1862 
accum10
 =áccum10 
OP
 
chunk10
;

1863 
accum11
 =áccum11 
OP
 
chunk11
;

1864 
d©a
 +12*
VSIZE
;

1865 
˙t
 -12*
VSIZE
;

1867 
˙t
) {

1868 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1869 
˙t
--;

1871 
accum0
 = (accum0 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1872 
accum0
 =áccum0 
	`OP
 (
accum4
 
OP
 
accum5
ËOP (
accum6
 OP 
accum7
);

1873 
accum0
 =áccum0 
	`OP
 (
accum8
 
OP
 
accum9
ËOP (
accum10
 OP 
accum11
);

1874 
i
 = 0; i < 
VSIZE
; i++)

1875 
ªsu…
 =Ñesu… 
OP
 
accum0
[
i
];

1876 *
de°
 = 
ªsu…
;

1877 
	}
}

1880 
	gsimd_v2a_des¸
[] = "simd_v2a: SSE code, 2*VSIZE-wayÖarallelism,Ñeassociate";

1881 
	$simd_v2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1883 
i
;

1884 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1885 
˙t
 = 
	`vec_Àngth
(
v
);

1886 
d©a_t
 
ªsu…
 = 
IDENT
;

1890 
vec_t
 
accum
;

1892 
i
 = 0; i < 
VSIZE
; i++)

1893 
accum
[
i
] = 
IDENT
;

1897 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1898 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1899 
˙t
--;

1902 
˙t
 >2*
VSIZE
) {

1903 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1904 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1905 
accum
 =áccum 
	`OP
 (
chunk0
 
OP
 
chunk1
);

1906 
d©a
 +2*
VSIZE
;

1907 
˙t
 -2*
VSIZE
;

1909 
˙t
) {

1910 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1911 
˙t
--;

1913 
i
 = 0; i < 
VSIZE
; i++)

1914 
ªsu…
 =Ñesu… 
OP
 
accum
[
i
];

1915 *
de°
 = 
ªsu…
;

1916 
	}
}

1918 
	gsimd_v4a_des¸
[] = "simd_v4a: SSE code, 4*VSIZE-wayÖarallelism,Ñeassociate";

1919 
	$simd_v4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1921 
i
;

1922 
vec_t
 
accum
;

1923 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1924 
˙t
 = 
	`vec_Àngth
(
v
);

1925 
d©a_t
 
ªsu…
 = 
IDENT
;

1928 
i
 = 0; i < 
VSIZE
; i++)

1929 
accum
[
i
] = 
IDENT
;

1932 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1933 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1934 
˙t
--;

1938 
˙t
 >4*
VSIZE
) {

1939 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1940 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1941 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1942 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1943 
accum
 =áccum 
OP


1944 ((
chunk0
 
OP
 
chunk1
Ë
	`OP
 (
chunk2
 OP 
chunk3
));

1945 
d©a
 +4*
VSIZE
;

1946 
˙t
 -4*
VSIZE
;

1950 
˙t
) {

1951 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1952 
˙t
--;

1955 
i
 = 0; i < 
VSIZE
; i++)

1956 
ªsu…
 =Ñesu… 
OP
 
accum
[
i
];

1957 *
de°
 = 
ªsu…
;

1958 
	}
}

1960 
	gsimd_v8a_des¸
[] = "simd_v8a: SSE code, 8*VSIZE-wayÖarallelism,Ñeassociate";

1961 
	$simd_v8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1963 
i
;

1964 
vec_t
 
accum
;

1965 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1966 
˙t
 = 
	`vec_Àngth
(
v
);

1967 
d©a_t
 
ªsu…
 = 
IDENT
;

1970 
i
 = 0; i < 
VSIZE
; i++)

1971 
accum
[
i
] = 
IDENT
;

1974 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1975 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1976 
˙t
--;

1979 
˙t
 >8*
VSIZE
) {

1980 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1981 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1982 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1983 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1984 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1985 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1986 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1987 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1988 
accum
 =áccum 
OP


1989 (((
chunk0
 
OP
 
chunk1
Ë
	`OP
 (
chunk2
 OP 
chunk3
))

1990 
OP


1991 ((
chunk4
 
OP
 
chunk5
Ë
	`OP
 (
chunk6
 OP 
chunk7
)));

1992 
d©a
 +8*
VSIZE
;

1993 
˙t
 -8*
VSIZE
;

1995 
˙t
) {

1996 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1997 
˙t
--;

1999 
i
 = 0; i < 
VSIZE
; i++)

2000 
ªsu…
 =Ñesu… 
OP
 
accum
[
i
];

2001 *
de°
 = 
ªsu…
;

2002 
	}
}

2005 
	$ªgi°î_comböîs
()

2007 #i‚de‡
UNROLL_ONLY


2008 
	`add_comböî
(
comböe1
, comböe1, 
comböe1_des¸
);

2009 
	`add_comböî
(
comböe2
, 
comböe1
, 
comböe2_des¸
);

2010 
	`add_comböî
(
comböe3
, 
comböe1
, 
comböe3_des¸
);

2011 
	`add_comböî
(
comböe3w
, 
comböe1
, 
comböe3w_des¸
);

2013 
	`add_comböî
(
comböe4
, 
comböe1
,
comböe4_des¸
);

2014 #i‚de‡
UNROLL_ONLY


2015 
	`add_comböî
(
comböe4b
, 
comböe1
, 
comböe4b_des¸
);

2016 
	`add_comböî
(
comböe4p
, 
comböe1
, 
comböe4p_des¸
);

2018 
	`add_comböî
(
comböe5
, 
comböe1
, 
comböe5_des¸
);

2019 #i‚de‡
UNROLL_ONLY


2020 
	`add_comböî
(
comböe5p
, 
comböe1
, 
comböe5p_des¸
);

2021 
	`add_comböî
(
uƒﬁl2aw_comböe
, 
comböe1
, 
uƒﬁl2aw_des¸
);

2023 
	`add_comböî
(
uƒﬁl3a_comböe
, 
comböe1
, 
uƒﬁl3a_des¸
);

2024 
	`add_comböî
(
uƒﬁl4a_comböe
, 
comböe1
, 
uƒﬁl4a_des¸
);

2025 
	`add_comböî
(
uƒﬁl5a_comböe
, 
comböe1
, 
uƒﬁl5a_des¸
);

2026 
	`add_comböî
(
uƒﬁl6a_comböe
, 
comböe1
, 
uƒﬁl6a_des¸
);

2027 
	`add_comböî
(
uƒﬁl7a_comböe
, 
comböe1
, 
uƒﬁl7a_des¸
);

2028 
	`add_comböî
(
uƒﬁl8a_comböe
, 
comböe1
, 
uƒﬁl8a_des¸
);

2029 
	`add_comböî
(
uƒﬁl9a_comböe
, 
comböe1
, 
uƒﬁl9a_des¸
);

2030 
	`add_comböî
(
uƒﬁl10a_comböe
, 
comböe1
, 
uƒﬁl10a_des¸
);

2031 
	`add_comböî
(
uƒﬁl16a_comböe
, 
comböe1
, 
uƒﬁl16a_des¸
);

2032 #i‚de‡
UNROLL_ONLY


2033 
	`add_comböî
(
uƒﬁl2_comböe
, 
comböe1
, 
uƒﬁl2_des¸
);

2034 
	`add_comböî
(
uƒﬁl3_comböe
, 
comböe1
, 
uƒﬁl3_des¸
);

2035 
	`add_comböî
(
uƒﬁl4_comböe
, 
comböe1
, 
uƒﬁl4_des¸
);

2036 
	`add_comböî
(
uƒﬁl8_comböe
, 
comböe1
, 
uƒﬁl8_des¸
);

2037 
	`add_comböî
(
uƒﬁl16_comböe
, 
comböe1
, 
uƒﬁl16_des¸
);

2038 
	`add_comböî
(
comböe6
, 
comböe1
, 
comböe6_des¸
);

2039 
	`add_comböî
(
uƒﬁl4x2a_comböe
, 
comböe1
, 
uƒﬁl4x2a_des¸
);

2040 
	`add_comböî
(
uƒﬁl8x2a_comböe
, 
comböe1
, 
uƒﬁl8x2a_des¸
);

2041 
	`add_comböî
(
uƒﬁl3x3a_comböe
, 
comböe1
, 
uƒﬁl3x3a_des¸
);

2042 
	`add_comböî
(
uƒﬁl4x4a_comböe
, 
comböe1
, 
uƒﬁl4x4a_des¸
);

2043 
	`add_comböî
(
uƒﬁl5x5a_comböe
, 
comböe1
, 
uƒﬁl5x5a_des¸
);

2044 
	`add_comböî
(
uƒﬁl6x6a_comböe
, 
comböe1
, 
uƒﬁl6x6a_des¸
);

2045 
	`add_comböî
(
uƒﬁl7x7a_comböe
, 
comböe1
, 
uƒﬁl7x7a_des¸
);

2046 
	`add_comböî
(
uƒﬁl8x4a_comböe
, 
comböe1
, 
uƒﬁl8x4a_des¸
);

2047 
	`add_comböî
(
uƒﬁl8x8a_comböe
, 
comböe1
, 
uƒﬁl8x8a_des¸
);

2048 
	`add_comböî
(
uƒﬁl9x9a_comböe
, 
comböe1
, 
uƒﬁl9x9a_des¸
);

2049 
	`add_comböî
(
uƒﬁl10x10a_comböe
, 
comböe1
, 
uƒﬁl10x10a_des¸
);

2050 
	`add_comböî
(
uƒﬁl12x6a_comböe
, 
comböe1
, 
uƒﬁl12x6a_des¸
);

2051 
	`add_comböî
(
uƒﬁl12x12a_comböe
, 
comböe1
, 
uƒﬁl12x12a_des¸
);

2052 
	`add_comböî
(
uƒﬁl16x16a_comböe
, 
comböe1
, 
uƒﬁl16x16a_des¸
);

2053 
	`add_comböî
(
uƒﬁl20x20a_comböe
, 
comböe1
, 
uƒﬁl20x20a_des¸
);

2054 
	`add_comböî
(
uƒﬁl8x2_comböe
, 
comböe1
, 
uƒﬁl8x2_des¸
);

2055 
	`add_comböî
(
uƒﬁl8x4_comböe
, 
comböe1
, 
uƒﬁl8x4_des¸
);

2056 
	`add_comböî
(
uƒﬁl8x8_comböe
, 
comböe1
, 
uƒﬁl8x8_des¸
);

2057 
	`add_comböî
(
uƒﬁl9x3_comböe
, 
comböe1
, 
uƒﬁl9x3_des¸
);

2058 
	`add_comböî
(
uƒﬁlx2as_comböe
, 
comböe1
, 
uƒﬁlx2as_des¸
);

2059 
	`add_comböî
(
comböe7
, 
comböe1
, 
comböe7_des¸
);

2060 
	`add_comböî
(
uƒﬁl3Ø_comböe
, 
comböe1
, 
uƒﬁl3Ø_des¸
);

2061 
	`add_comböî
(
uƒﬁl4Ø_comböe
, 
comböe1
, 
uƒﬁl4Ø_des¸
);

2062 
	`add_comböî
(
uƒﬁl5Ø_comböe
, 
comböe1
, 
uƒﬁl5Ø_des¸
);

2063 
	`add_comböî
(
uƒﬁl6Ø_comböe
, 
comböe1
, 
uƒﬁl6Ø_des¸
);

2064 
	`add_comböî
(
uƒﬁl7Ø_comböe
, 
comböe1
, 
uƒﬁl7Ø_des¸
);

2065 
	`add_comböî
(
uƒﬁl8Ø_comböe
, 
comböe1
, 
uƒﬁl8Ø_des¸
);

2066 
	`add_comböî
(
uƒﬁl9Ø_comböe
, 
comböe1
, 
uƒﬁl9Ø_des¸
);

2067 
	`add_comböî
(
uƒﬁl10Ø_comböe
, 
comböe1
, 
uƒﬁl10Ø_des¸
);

2068 
	`add_comböî
(
uƒﬁl12Ø_comböe
, 
comböe1
, 
uƒﬁl12Ø_des¸
);

2069 
	`add_comböî
(
simd_v1_comböe
, 
comböe1
, 
simd_v1_des¸
);

2070 
	`add_comböî
(
simd_v2_comböe
, 
comböe1
, 
simd_v2_des¸
);

2071 
	`add_comböî
(
simd_v4_comböe
, 
comböe1
, 
simd_v4_des¸
);

2072 
	`add_comböî
(
simd_v8_comböe
, 
comböe1
, 
simd_v8_des¸
);

2073 
	`add_comböî
(
simd_v10_comböe
, 
comböe1
, 
simd_v10_des¸
);

2074 
	`add_comböî
(
simd_v12_comböe
, 
comböe1
, 
simd_v12_des¸
);

2075 
	`add_comböî
(
simd_v2a_comböe
, 
comböe1
, 
simd_v2a_des¸
);

2076 
	`add_comböî
(
simd_v4a_comböe
, 
comböe1
, 
simd_v4a_des¸
);

2077 
	`add_comböî
(
simd_v8a_comböe
, 
comböe1
, 
simd_v8a_des¸
);

2078 
	`log_comböî
(
simd_v8a_comböe
, 0.16, 0.24);

2080 
	}
}

	@opt/combine.h

1 #ifde‡
FLOAT


2 
	td©a_t
;

3 
	#DATA_NAME
 "Flﬂt"

	)

6 #ifde‡
DOUBLE


7 
	td©a_t
;

8 
	#DATA_NAME
 "DoubÀ"

	)

12 #ifde‡
EXTEND


13 
	td©a_t
;

14 
	#DATA_NAME
 "Exãnded"

	)

17 #ifde‡
INT


18 
	td©a_t
;

19 
	#DATA_NAME
 "I¡egî"

	)

22 #ifde‡
LONG


24 
	td©a_t
;

26 
	#DATA_NAME
 "L⁄g"

	)

29 #ifde‡
CHAR


30 
	td©a_t
;

31 
	#DATA_NAME
 "Ch¨"

	)

34 #ifde‡
PROD


36 
	#IDENT
 1

	)

37 
	#OP
 *

	)

39 
	#OP_NAME
 "Produ˘"

	)

41 #ifde‡
DIV


42 
	#OP
 /

	)

43 
	#IDENT
 1

	)

44 
	#OP_NAME
 "Divide"

	)

47 
	#IDENT
 0

	)

48 
	#OP
 +

	)

50 
	#OP_NAME
 "Sum"

	)

54 
	~"vec.h
"

58 (*
	tcomböî
)(
	tvec_±r
, 
	td©a_t
 *);

61 
	`add_comböî
(
comböî
 
f
, comböî 
fc
, *
des¸ùti⁄
);

65 
	`log_comböî
(
comböî
 
f
, 
Á°_˝e
, 
¶ow_˝e
);

68 
	`ªgi°î_comböîs
();

	@opt/cond-eg.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<gë›t.h
>

5 
	~"˛ock.h
"

13 
	$mömax1
(
a
[], 
b
[], 
n
) {

14 
i
;

15 
i
 = 0; i < 
n
; i++) {

16 i‡(
a
[
i
] > 
b
[i]) {

17 
t
 = 
a
[
i
];

18 
a
[
i
] = 
b
[i];

19 
b
[
i
] = 
t
;

22 
	}
}

28 
	$mömax2
(
a
[], 
b
[], 
n
) {

29 
i
;

30 
i
 = 0; i < 
n
; i++) {

31 
mö
 = 
a
[
i
] < 
b
[i] ?á[i] : b[i];

32 
max
 = 
a
[
i
] < 
b
[i] ? b[i] :á[i];

33 
a
[
i
] = 
mö
;

34 
b
[
i
] = 
max
;

36 
	}
}

39 
	#MAXLEN
 (1<<16)

	)

41 
	ga1
[
MAXLEN
], 
	gb1
[MAXLEN];

42 
	ga2
[
MAXLEN
], 
	gb2
[MAXLEN];

44 
	$öô
(
£ed
) {

45 
i
;

46 i‡(
£ed
 <= 1) {

47 
i
 = 0; i < 
MAXLEN
; i++) {

48 
a1
[
i
] = 
a2
[i] = 
£ed
;

49 
b1
[
i
] = 
b2
[i] = 1-
£ed
;

51 } i‡(
£ed
 == 2) {

52 
i
 = 0; i < 
MAXLEN
; i++) {

53 
ªsidue
 = 
i
 & 0x1;

54 
a1
[
i
] = 
a2
[i] = 
ªsidue
;

55 
b1
[
i
] = 
b2
[i] = 1-
ªsidue
;

58 
	`§™dom
(
£ed
);

59 
i
 = 0; i < 
MAXLEN
; i++) {

60 
a
 = 
	`øndom
();

61 
b
 = 
	`øndom
();

62 
a1
[
i
] = 
a2
[i] = 
a
;

63 
b1
[
i
] = 
b2
[i] = 
b
;

66 
	}
}

68 
	$run
(
Àn
, 
åüls
, 
£ed
) {

69 
t1
, 
t2
;

70 
t
;

71 
t
 = 0;Å < 
åüls
;Å++) {

72 
	`öô
(
£ed
);

73 
	`°¨t_cou¡î
();

74 
	`mömax1
(
a1
, 
b1
, 
Àn
);

75 
t1
 = 
	`gë_cou¡î
();

76 
	`°¨t_cou¡î
();

77 
	`mömax2
(
a2
, 
b2
, 
Àn
);

78 
t2
 = 
	`gë_cou¡î
();

79 
	`¥ötf
("%ld\t%.2f\t%.2f\n", 
Àn
, 
t1
/Àn, 
t2
/len);

81 
	}
}

84 
	$maö
(
¨gc
, *
¨gv
[]) {

85 
Àn
 = 
MAXLEN
;

86 
åüls
 = 3;

87 
£ed
 = 1;

88 i‡(
¨gc
 > 1)

89 
Àn
 = 
	`©oi
(
¨gv
[1]);

90 i‡(
¨gc
 > 2)

91 
åüls
 = 
	`©oi
(
¨gv
[2]);

92 i‡(
¨gc
 > 3)

93 
£ed
 = 
	`©oi
(
¨gv
[3]);

94 
	`run
(
Àn
, 
åüls
, 
£ed
);

96 
	}
}

	@opt/copy.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	~"˝e.h
"

7 
	#ASIZE
 1024

	)

9 
	gd©a
[
ASIZE
+1];

10 
	gd©a2
[
ASIZE
+1];

14 
	$wrôe_ªad
(*
§c
, *
d°
, 
n
)

16 
˙t
 = 
n
;

17 
vÆ
 = 0;

19 
˙t
) {

20 *
d°
 = 
vÆ
;

21 
vÆ
 = (*
§c
)+1;

22 
˙t
--;

24 
	}
}

29 
	$c›y_¨øy
(*
§c
, *
de°
, 
n
)

31 
i
;

32 
i
 = 0; i < 
n
; i++)

33 
de°
[
i
] = 
§c
[i];

34 
	}
}

39 
	$˛ór_¨øy
(*
de°
, 
n
) {

40 
i
;

41 
i
 = 0; i < 
n
; i++)

42 
de°
[
i
] = 0;

43 
	}
}

48 
	$˛ór_¨øy_4
(*
de°
, 
n
) {

49 
i
;

50 
limô
 = 
n
-3;

51 
i
 = 0; i < 
limô
; i+= 4) {

52 
de°
[
i
] = 0;

53 
de°
[
i
+1] = 0;

54 
de°
[
i
+2] = 0;

55 
de°
[
i
+3] = 0;

57 ; 
i
 < 
n
; i++)

58 
de°
[
i
] = 0;

59 
	}
}

62 
	$¨øy_c›y
(*
§c
, *
de°
, 
n
)

64 
i
;

65 
i
 = 0; i < 
n
; i++)

66 
de°
[
i
] = 
§c
[i];

67 
	}
}

70 
	$¨øy_˛ór
(*
§c
, *
de°
, 
n
)

72 
i
;

74 
i
 = 0; i < 
n
; i++)

75 
de°
[
i
] = 0;

76 
	}
}

78 
	$mem_˛ór
(*
§c
, *
de°
, 
n
)

80 
	`mem£t
((*Ë
de°
, '\0', 
n
*());

81 
	}
}

84 
	$¨øy_c›y_2
(*
§c
, *
de°
, 
n
)

86 
i
;

87 
limô
 = 
n
-1;

88 
i
 = 0; i < 
limô
; i+=2) {

89 
de°
[
i
] = 
§c
[i];

90 
de°
[
i
+1] = 
§c
[i+1];

92 ; 
i
 < 
n
; i++)

93 
de°
[
i
] = 
§c
[i];

94 
	}
}

96 
	$¨øy_˛ór_2
(*
§c
, *
de°
, 
n
)

98 
i
;

99 
limô
 = 
n
-1;

100 
i
 = 0; i < 
limô
; i+=2) {

101 
de°
[
i
] = 0;

102 
de°
[
i
+1] = 0;

104 ; 
i
 < 
n
; i++)

105 
de°
[
i
] = 0;

106 
	}
}

108 
	$¨øy_c›y_4
(*
§c
, *
de°
, 
n
)

110 
i
;

111 
limô
 = 
n
-3;

112 
i
 = 0; i < 
limô
; i+=4) {

113 
de°
[
i
] = 
§c
[i];

114 
de°
[
i
+1] = 
§c
[i+1];

115 
de°
[
i
+2] = 
§c
[i+2];

116 
de°
[
i
+3] = 
§c
[i+3];

118 ; 
i
 < 
n
; i++)

119 
de°
[
i
] = 
§c
[i];

120 
	}
}

122 
	$¨øy_˛ór_3
(*
§c
, *
de°
, 
n
)

124 
i
;

125 
limô
 = 
n
-2;

126 
i
 = 0; i < 
limô
; i+=3) {

127 
de°
[
i
] = 0;

128 
de°
[
i
+1] = 0;

129 
de°
[
i
+2] = 0;

131 ; 
i
 < 
n
; i++)

132 
de°
[
i
] = 0;

133 
	}
}

135 
	$¨øy_˛ór_4
(*
§c
, *
de°
, 
n
)

137 
i
;

138 
limô
 = 
n
-3;

139 
i
 = 0; i < 
limô
; i+=4) {

140 
de°
[
i
] = 0;

141 
de°
[
i
+1] = 0;

142 
de°
[
i
+2] = 0;

143 
de°
[
i
+3] = 0;

145 ; 
i
 < 
n
; i++)

146 
de°
[
i
] = 0;

147 
	}
}

149 (*
	tc›y_fun
)(*, *, );

152 
	#TEST_COUNT
 9

	)

154 
c›y_fun
 
c›õr
[
TEST_COUNT
] =

156 
wrôe_ªad
,

157 
¨øy_˛ór
, 
¨øy_˛ór_2
, 
¨øy_˛ór_3
, 
¨øy_˛ór_4
,

158 
mem_˛ór
,

159 
¨øy_c›y
, 
¨øy_c›y_2
, 
¨øy_c›y_4
,

160 
	}
};

162 *
	gã°_des¸
[
TEST_COUNT
] =

175 
	gidx
 = 0;

177 
	#CASE_COUNT
 4

	)

179 
	$ã°2a
(
n
)

181 
c›õr
[
idx
](
d©a
,d©a,
n
);

182 
	}
}

184 
	$ã°2b
(
n
)

186 
c›õr
[
idx
](
d©a
,d©a+1,
n
);

187 
	}
}

188 #i‡
CASE_COUNT
 == 4

189 
	$ã°2c
(
n
)

191 
c›õr
[
idx
](
d©a
+1,d©a,
n
);

192 
	}
}

194 
	$ã°2d
(
n
)

196 
c›õr
[
idx
](
d©a
, 
d©a2
, 
n
);

197 
	}
}

202 (*
	tã°_fun
)();

204 
ã°_fun
 
ˇ£_fun
[
CASE_COUNT
] =

205 { 
ã°2a
, 
ã°2b


206 #i‡
CASE_COUNT
 == 4

207 , 
ã°2c
, 
ã°2d


209 
	}
};

211 *
	gˇ£_des¸
[
CASE_COUNT
] =

214 #i‡
CASE_COUNT
 == 4

220 
	$run_ã°
(
i
, 
c
)

222 
˝e
;

223 
	`¥ötf
("Description: %s, %s, ",

224 
ã°_des¸
[
i
], 
ˇ£_des¸
[
c
]);

225 
idx
 = 
i
;

226 
˝e
 = 
	`föd_˝e
(
ˇ£_fun
[
c
], 
ASIZE
);

228 
	`¥ötf
("CPE = %.2f\n", 
˝e
);

229 
	}
}

231 
	$maö
()

233 
i
, 
c
;

236 
idx
 = 0;

237 
	`föd_˝e
(
ˇ£_fun
[0], 
ASIZE
);

239 
i
 = 0; i < 
TEST_COUNT
; i++)

240 
c
 = 0; c < 
CASE_COUNT
; c++)

241 
	`run_ã°
(
i
,
c
);

244 
	}
}

	@opt/copy2d.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"˛ock.h
"

4 
	~"˝e.h
"

8 
	#ASIZE
 2048

	)

10 
	$c›yij
(
§c
[
ASIZE
][ASIZE], 
d°
[ASIZE][ASIZE])

12 
i
,
j
;

13 
i
 = 0; i < 
ASIZE
; i++)

14 
j
 = 0; j < 
ASIZE
; j++)

15 
d°
[
i
][
j
] = 
§c
[i][j];

16 
	}
}

18 
	$c›yji
(
§c
[
ASIZE
][ASIZE], 
d°
[ASIZE][ASIZE])

20 
i
,
j
;

21 
j
 = 0; j < 
ASIZE
; j++)

22 
i
 = 0; i < 
ASIZE
; i++)

23 
d°
[
i
][
j
] = 
§c
[i][j];

24 
	}
}

27 
	ga
[
ASIZE
][ASIZE];

28 
	gb
[
ASIZE
][ASIZE];

30 
	$funij
(
n
)

32 
	`c›yij
(
a
,
b
);

33 
	}
}

35 
	$funji
(
n
)

37 
	`c›yji
(
a
,
b
);

38 
	}
}

40 
	$maö
(
¨gc
, *
¨gv
[])

42 
n
 = 1;

43 i‡(
¨gc
 > 1)

44 
n
 = 
	`©oi
(
¨gv
[1]);

45 
i
;

46 
i
 = 0; i < 
n
; i++) {

47 
c
 = 
	`mhz
(1);

48 
tji
 = 
	`mósuª_fun˘i⁄
(
funji
, 0);

49 
tij
 = 
	`mósuª_fun˘i⁄
(
funij
, 0);

51 
	`¥ötf
("ij: Array size %d, Cycles = %.0f, Net CPE = %.2f, ms = %.1f\n",

52 
ASIZE
, 
tij
,Åij/(ASIZE*ASIZE),Åij/(
c
 * 1e3));

53 
	`¥ötf
("ji: Array size %d, Cycles = %.0f, Net CPE = %.2f, ms = %.1f\n",

54 
ASIZE
, 
tji
,Åji/(ASIZE*ASIZE),Åji/(
c
 * 1e3));

57 
	}
}

	@opt/deref.c

3 
	$dîef
(*
xp
)

5  
xp
 ? *xp : 0;

6 
	}
}

	@opt/dictionary.c

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

6 
	~<time.h
>

7 
	~"›ti⁄s.h
"

8 
	~"°rög.h
"

10 
	#USESTRLEN
 1

	)

11 
size_t
 
SåÀn
(c⁄° *
s
);

14 
	gw˙t
 = 0;

15 
	gu˙t
 = 0;

16 
	gm˙t
 = 0;

17 
	gs˙t
 = 0;

18 *
	gm°rög
 = "";

19 
	gŒí
 = 0;

20 *
	gl°rög
 = "";

21 
	gl˙t
 = 0;

24 (*
	tlowî_fun_t
)(*
	ts
);

29 
	$lowî1
(*
s
)

31 
i
;

33 
i
 = 0; i < 
	`SåÀn
(
s
); i++)

34 i‡(
s
[
i
] >= 'A' && s[i] <= 'Z')

35 
s
[
i
] -= ('A' - 'a');

36 
	}
}

39 
	$lowî2
(*
s
)

41 
i
;

42 
Àn
 = 
	`SåÀn
(
s
);

44 
i
 = 0; i < 
Àn
; i++)

45 i‡(
s
[
i
] >= 'A' && s[i] <= 'Z')

46 
s
[
i
] -= ('A' - 'a');

47 
	}
}

50 
	#LCNT
 2

	)

51 
lowî_fun_t
 
	glowî_fun_£t
[
LCNT
] = {
lowî1
, 
lowî2
};

52 *
	glowî_fun_«mes
[
LCNT
] = {"lower1", "lower2"};

56 
size_t
 
	$SåÀn
(c⁄° *
s
)

58 #ifde‡
USESTRLEN


59  
	`°æí
(
s
);

61 
Àngth
 = 0;

62 *
s
 != '\0') {

63 
s
++;

64 
Àngth
++;

66  
Àngth
;

68 
	}
}

72 
	sHELE
 {

73 *
	mw‹d
;

74 
	m‰eq
;

75 
HELE
 *
	m√xt
;

76 } 
	th_ªc
, *
	th_±r
;

79 
h_±r
 *
	ghèbÀ
;

80 
	gtsize
;

82 
	$√w_èbÀ
(
size
)

84 
tsize
 = 
size
;

85 
hèbÀ
 = (
h_±r
 *Ë
	`ˇŒoc
(
size
, (h_ptr));

86 i‡(!
hèbÀ
) {

87 
	`Ârötf
(
°dîr
, "Couldn'tállocate hashárray,Éxiting\n");

88 
	`exô
(1);

90 
	}
}

92 
h_±r
 
	$√w_ñe
(*
s
)

94 
h_±r
 
ªsu…
 = (h_±rË
	`mÆloc
((
h_ªc
));

95 
wÀn
 = 
	`SåÀn
(
s
);

96 i‡(
wÀn
 > 
Œí
) {

97 
l°rög
 = 
s
;

98 
Œí
 = 
wÀn
;

99 
l˙t
 = 1;

100 } i‡(
wÀn
 =
Œí
)

101 
l˙t
++;

102 i‡(!
ªsu…
) {

103 
	`Ârötf
(
°dîr
, "Couldn'tállocate hashÉlement,Éxiting\n");

104 
	`exô
(1);

107 
ªsu…
->
w‹d
 = 
s
;

108 
ªsu…
->
‰eq
 = 1;

109  
ªsu…
;

110 
	}
}

116 (*
	thash_fun_t
)(*
	ts
);

118 
	$h_mod
(*
s
)

120 
vÆ
 = 0;

121 
c
;

122 (
c
 = *
s
++))

123 
vÆ
 = (vÆ * 128 + 
c
Ë% 
tsize
;

124  
vÆ
;

125 
	}
}

128 
	$h_add
(*
s
)

130 
vÆ
 = 0;

131 
c
;

132 (
c
 = *
s
++))

133 
vÆ
 +
c
;

134  
vÆ
 % 
tsize
;

135 
	}
}

138 
	$h_x‹
(*
s
)

140 
vÆ
 = 0;

141 
c
;

142 (
c
 = *
s
++))

143 
vÆ
 = ((vÆ ^ 
c
)<<4) | ((val >> 28) & 0xF);

144  
vÆ
 % 
tsize
;

145 
	}
}

147 
	#HCNT
 3

	)

148 
hash_fun_t
 
	ghash_fun_£t
[
HCNT
] = {
h_mod
, 
h_add
, 
h_x‹
};

149 *
	ghash_fun_«mes
[
HCNT
] = {"h_mod", "h_add", "h_xor"};

151 *
	$ßve_°rög
(*
s
)

153 *
ªsu…
 = (*Ë
	`mÆloc
(
	`SåÀn
(
s
)+1);

154 i‡(!
ªsu…
) {

155 
	`Ârötf
(
°dîr
, "Couldn'tállocate space for string,Éxiting\n");

156 
	`exô
(1);

158 
	`°r˝y
(
ªsu…
,
s
);

159  
ªsu…
;

160 
	}
}

163 
h_±r
 
	$föd_ñe_ªc
(
h_±r
 
ls
, *
s
)

165 i‡(!
ls
) {

167 
u˙t
++;

168  
	`√w_ñe
(
	`ßve_°rög
(
s
));

170 i‡(
	`°rcmp
(
s
,
ls
->
w‹d
) == 0) {

171 
ls
->
‰eq
++;

172 i‡(
ls
->
‰eq
 > 
m˙t
) {

173 
m˙t
 = 
ls
->
‰eq
;

174 
m°rög
 = 
ls
->
w‹d
;

176  
ls
;

178 
ls
->
√xt
 = 
	`föd_ñe_ªc
÷s->√xt, 
s
);

179  
ls
;

180 
	}
}

183 
h_±r
 
	$föd_ñe_ôî_f
(
h_±r
 
ls
, *
s
)

185 
h_±r
 
ñe
 = 
ls
;

186 
ñe
 = 
ls
;ÉÀ;ÉÀ =ÉÀ->
√xt
) {

187 *
w‹d
 = 
ñe
->word;

188 i‡(
	`°rcmp
(
s
, 
w‹d
) == 0) {

189 
‰eq
 = ++
ñe
->freq;

190 i‡(
‰eq
 > 
m˙t
) {

191 
m˙t
 = 
‰eq
;

192 
m°rög
 = 
w‹d
;

194  
ls
;

197 
ñe
 = 
	`√w_ñe
(
	`ßve_°rög
(
s
));

198 
u˙t
++;

199 
ñe
->
√xt
 = 
ls
;

200  
ñe
;

201 
	}
}

204 
h_±r
 
	$föd_ñe_ôî_r
(
h_±r
 
ls
, *
s
)

206 
h_±r
 
ñe
 = 
ls
;

207 
h_±r
 
œ°
 = 
NULL
;

208 
ñe
 = 
ls
;ÉÀ;ÉÀ =ÉÀ->
√xt
) {

209 *
w‹d
 = 
ñe
->word;

210 i‡(
	`°rcmp
(
s
, 
w‹d
) == 0) {

211 
‰eq
 = ++
ñe
->freq;

212 i‡(
‰eq
 > 
m˙t
) {

213 
m˙t
 = 
‰eq
;

214 
m°rög
 = 
w‹d
;

216  
ls
;

218 
œ°
 = 
ñe
;

220 
ñe
 = 
	`√w_ñe
(
	`ßve_°rög
(
s
));

221 
u˙t
++;

222 
ñe
->
√xt
 = 
NULL
;

223 i‡(
œ°
) {

224 
œ°
->
√xt
 = 
ñe
;

225  
ls
;

227  
ñe
;

228 
	}
}

231 
	$h_±r
 (*
	tföd_ñe_fun_t
)(
	th_±r
, *);

233 
	#FCNT
 3

	)

234 
föd_ñe_fun_t
 
föd_ñe_fun_£t
[
FCNT
] =

235 {
föd_ñe_ªc
, 
föd_ñe_ôî_f
, 
föd_ñe_ôî_r
};

236 *
	gföd_ñe_fun_«mes
[
FCNT
] =

240 
	$com∑ª_ñe
(c⁄° *
vñe1
, c⁄° *
vñe2
) {

241 
h_±r
 
ñe1
 = *(h_±∏*Ë
vñe1
;

242 
h_±r
 
ñe2
 = *(h_±∏*Ë
vñe2
;

243  
ñe2
->
‰eq
 - 
ñe1
->freq;

244 
	}
}

248 
h_±r
 
	$s‹t_w‹ds
(
quick
)

250 
h_±r
 
ls
 = 
NULL
;

251 
h_±r
 
ñe
;

252 
h_±r
 *
¨øy
 = 
	`ˇŒoc
(
u˙t
, (h_ptr));

253 
i
, 
j
;

254 
˙t
 = 0;

255 
s˙t
 = 0;

256 
i
 = 0; i < 
tsize
; i++)

257 
ñe
 = 
hèbÀ
[
i
];ÉÀ;ÉÀ =ÉÀ->
√xt
) {

258 i‡(
ñe
->
‰eq
 == 1)

259 
s˙t
++;

260 i‡(
quick
)

261 
¨øy
[
˙t
] = 
ñe
;

263 
j
 = 
˙t
; j > 0 && 
ñe
->
‰eq
 > 
¨øy
[j-1]->freq; j--)

264 
¨øy
[
j
] =árray[j-1];

265 
¨øy
[
j
] = 
ñe
;

267 
˙t
++;

269 i‡(
quick
) {

270 
	`qs‹t
((*Ë
¨øy
, 
˙t
, (
h_±r
), 
com∑ª_ñe
);

272 
ls
 = 
¨øy
[0];

273 
j
 = 0; j < 
˙t
-1; j++)

274 
¨øy
[
j
]->
√xt
 =árray[j+1];

275 
¨øy
[
˙t
-1]->
√xt
 = 
NULL
;

276 
	`‰ì
 ((*Ë
¨øy
);

277  
ls
;

278 
	}
}

281 
	$ö£π_°rög
(*
s
,

282 
hash_fun_t
 
hash_fun
, 
lowî_fun_t
 
lowî_fun
,

283 
föd_ñe_fun_t
 
föd_ñe_fun
)

285 
ödex
;

286 
	`lowî_fun
(
s
);

287 
ödex
 = 
	`hash_fun
(
s
);

288 
hèbÀ
[
ödex
] = 
	`föd_ñe_fun
(hèbÀ[ödex], 
s
);

289 
	}
}

292 
	#BSIZE
 1024

	)

293 
	gbuf
[
BSIZE
];

294 
	gbufvÆid
 = 0;

295 
FILE
 *
	göfûe
;

297 
	$öô_tokí
(
FILE
 *
ö
) {

298 
bufvÆid
 = 0;

299 
öfûe
 = 
ö
;

300 
	}
}

303 *
	gskùch¨
 = " \t\n\r.,:;/<>()[]{}?!\"-'\0xc2\0xa0";

306 *
	$gë_w‹d
()

308 *
s
 = 
NULL
;

310 i‡(
bufvÆid
) {

311 
s
 = 
	`°πok
(
NULL
, 
skùch¨
);

312 i‡(
s
)

315 i‡(!
	`fgës
(
buf
, 
BSIZE
, 
öfûe
))

316  
NULL
;

317 
bufvÆid
 = 1;

318 
s
 = 
	`°πok
(
buf
, 
skùch¨
);

319 i‡(
s
)

322 
w˙t
++;

323  
s
;

324 
	}
}

327 
	#MAXNG
 10

	)

329 *
	$gë_tokí
(
ngøm
)

332 
tokí_buf
[
MAXNG
][
BSIZE
];

333 
fú°
 = 1;

334 
bödex
 = 0;

335 
sbuf
[
BSIZE
];

336 *
√xços
 = 
sbuf
;

337 
i
; 
ödex
;

339 i‡(
ngøm
 == 1)

340  
	`gë_w‹d
();

341 i‡(
fú°
) {

343 
bödex
 < 
ngøm
-1) {

344 *
w‹d
 = 
	`gë_w‹d
();

345 i‡(!
w‹d
) {

346  
NULL
;

348 
	`°r˝y
(
tokí_buf
[
bödex
++], 
w‹d
);

350 
fú°
 = 0;

353 *
w‹d
 = 
	`gë_w‹d
();

354 i‡(!
w‹d
) {

355  
NULL
;

357 
	`°r˝y
 (
tokí_buf
[
bödex
++], 
w‹d
);

358 i‡(
bödex
 >
MAXNG
)

359 
bödex
 = 0;

361 
ödex
 = 
bödex
 - 
ngøm
;

362 i‡(
ödex
 < 0)

363 
ödex
 +
MAXNG
;

364 
i
 = 0; i < 
ngøm
; i++) {

365 i‡(
i
 != 0)

366 *
√xços
++ = ' ';

367 
w‹d
 = 
tokí_buf
[
ödex
];

368 
	`°r˝y
(
√xços
, 
w‹d
);

369 
√xços
 +
	`SåÀn
(
w‹d
);

370 
ödex
++;

371 i‡(
ödex
 >
MAXNG
)

372 
ödex
 = 0;

375 
	`¥ötf
("Nexàn-gøm = '%s'\n", 
sbuf
);

377  
sbuf
;

378 
	}
}

383 
	$w‹d_‰eq
(
FILE
 *
§c
, 
vîbo£
, 
ngøm
, 
size
, 
quick
,

384 
hash_fun_t
 
hash_fun
, 
lowî_fun_t
 
lowî_fun
,

385 
föd_ñe_fun_t
 
föd_ñe_fun
)

387 *
s
;

388 
h_±r
 
ls
;

390 
	`öô_tokí
(
§c
);

391 
	`√w_èbÀ
(
size
);

393 (
s
 = 
	`gë_tokí
(
ngøm
))) {

394 
	`ö£π_°rög
(
s
, 
hash_fun
, 
lowî_fun
, 
föd_ñe_fun
);

396 i‡(
vîbo£
 > 0) {

397 
ls
 = 
	`s‹t_w‹ds
(
quick
);

398 
ls
 && 
vîbo£
--) {

399 
	`¥ötf
("%d\t'%s'\n", 
ls
->
‰eq
,Üs->
w‹d
);

400 
ls
 =Üs->
√xt
;

403 
	`¥ötf
("%dÇ-grams, %d unique, %d singletons. Most common (%d) = '%s'. Longest (%d haveÜength %d) = '%s'\n",

404 
w˙t
, 
u˙t
, 
s˙t
, 
m˙t
, 
m°rög
, 
l˙t
, 
Œí
, 
l°rög
);

405 
	}
}

407 
	$maö
(
¨gc
, *
¨gv
[])

409 
vîbo£
 = 1;

410 
size
 = 1024;

411 
hash_fun_ödex
 = 0;

412 
lowî_fun_ödex
 = 0;

413 
föd_fun_ödex
 = 0;

414 
ngøm
 = 1;

415 
quick
 = 0;

416 *
‚ame
 = 
NULL
;

417 
FILE
 *
öfûe
 = 
°dö
;

418 
	`add_öt_›ti⁄
("vîbo£", &
vîbo£
);

419 
	`add_öt_›ti⁄
("size", &
size
);

420 
	`add_öt_›ti⁄
("hash", &
hash_fun_ödex
);

421 
	`add_öt_›ti⁄
("lowî", &
lowî_fun_ödex
);

422 
	`add_öt_›ti⁄
("föd", &
föd_fun_ödex
);

423 
	`add_öt_›ti⁄
("ngøm", &
ngøm
);

424 
	`add_öt_›ti⁄
("quicks‹t", &
quick
);

425 
	`add_°rög_›ti⁄
("fûe", &
‚ame
);

426 
	`∑r£_›ti⁄s
(
¨gc
, 
¨gv
, 
NULL
);

427 
	`show_›ti⁄s
(
°dout
);

428 
	`¥ötf
("N-gøm sizê%d\n", 
ngøm
);

429 
	`¥ötf
("Lowî ca£ fun˘i⁄ %s\n", 
lowî_fun_«mes
[
lowî_fun_ödex
]);

430 
	`¥ötf
("Hash fun˘i⁄ %s\n", 
hash_fun_«mes
[
hash_fun_ödex
]);

431 
	`¥ötf
("FödÉÀmíàfun˘i⁄ %s\n", 
föd_ñe_fun_«mes
[
föd_fun_ödex
]);

432 i‡((Ë
hash_fun_ödex
 >
HCNT
) {

433 
	`Ârötf
(
°dîr
, "InvÆid hash fun˘i⁄ index %d\n", 
hash_fun_ödex
);

434 
	`exô
(1);

436 i‡((Ë
lowî_fun_ödex
 >
LCNT
) {

437 
	`Ârötf
(
°dîr
, "InvÆidÜowî fun˘i⁄ index %d\n", 
lowî_fun_ödex
);

438 
	`exô
(1);

440 i‡((Ë
föd_fun_ödex
 >
FCNT
) {

441 
	`Ârötf
(
°dîr
, "InvÆid föd fun˘i⁄ index %d\n", 
föd_fun_ödex
);

442 
	`exô
(1);

444 i‡(
‚ame
) {

445 
öfûe
 = 
	`f›í
(
‚ame
, "r");

446 i‡(!
öfûe
) {

447 
	`Ârötf
(
°dîr
, "Couldn'à›í fûê'%s'\n", 
‚ame
);

448 
	`exô
(1);

451 
	`w‹d_‰eq
(
öfûe
, 
vîbo£
, 
ngøm
, 
size
, 
quick
,

452 
hash_fun_£t
[
hash_fun_ödex
],

453 
lowî_fun_£t
[
lowî_fun_ödex
],

454 
föd_ñe_fun_£t
[
föd_fun_ödex
]);

455 
	`¥ötf
("TŸÆÅimê%‡£c⁄ds\n", (Ë
	`˛ock
(Ë/ 
CLOCKS_PER_SEC
);

456 
	`f˛o£
(
öfûe
);

458 
	}
}

	@opt/div.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"fcyc.h
"

6 
	#NELE
 512

	)

8 íum { 
	mNEG_VAL
, 
	mPOS_VAL
, 
	mAMIX_VAL
, 
	mRMIX_VAL
, 
	mSINK_VAL
 } 
	tvÆ_t
;

11 
	givÆ
[5][
NELE
];

12 
	glvÆ
[5][
NELE
];

13 
	gfvÆ
[5][
NELE
];

14 
	gdvÆ
[5][
NELE
];

16 
	$öô
()

18 
i
, 
j
;

19 
i
 = 0; i < 
NELE
; i++) {

20 
j
 = 0; j < 4; j++) {

21 
vÆ
 = 0;

22 !
vÆ
)

23 
vÆ
 = 
	`øndom
();

24 i‡(
vÆ
 < 0)

25 
vÆ
 = -val;

26 
j
) {

27 
NEG_VAL
:

28 
ivÆ
[
j
][
i
] = -
vÆ
;

30 
POS_VAL
:

31 
ivÆ
[
j
][
i
] = 
vÆ
;

33 
AMIX_VAL
:

34 
ivÆ
[
j
][
i
] = i & 0x1 ? 
vÆ
 : -val;

36 
RMIX_VAL
:

37 
ivÆ
[
j
][
i
] = 
	`øndom
(Ë& 0x1 ? 
vÆ
 : -val;

40 
lvÆ
[
j
][
i
] = (Ë
ivÆ
[j][i];

41 
fvÆ
[
j
][
i
] = (Ë
ivÆ
[j][i];

42 
dvÆ
[
j
][
i
] = (Ë
ivÆ
[j][i];

45 
	}
}

47 
vÆ_t
 
	gnum_ty≥
 = 
NEG_VAL
;

48 
vÆ_t
 
	gdí_ty≥
 = 
NEG_VAL
;

49 
	gu£_c⁄d
 = 0;

51 
	$ôe°
(*
¨g•ec
)

53 
vÆ_t
 
num_ty≥
 = 
¨g•ec
[0];

54 
vÆ_t
 
dí_ty≥
 = 
¨g•ec
[1];

55 
u£_c⁄d
 = 
¨g•ec
[2];

56 *
num
 = 
ivÆ
[
num_ty≥
];

57 *
dí
 = 
ivÆ
[
dí_ty≥
];

58 vﬁ©ûê
sök
;

59 
i
;

60 i‡(
u£_c⁄d
) {

61 
i
 = 0; i < 
NELE
; i++)

62 
sök
 = 
dí
[
i
] < 0 ? 1 : 
num
[i] / den[i];

64 
i
 = 0; i < 
NELE
; i++)

65 
sök
 = 
num
[
i
] / 
dí
[i];

67 
	}
}

69 
	$…e°
(*
¨g•ec
)

71 
vÆ_t
 
num_ty≥
 = 
¨g•ec
[0];

72 
vÆ_t
 
dí_ty≥
 = 
¨g•ec
[1];

73 
u£_c⁄d
 = 
¨g•ec
[2];

74 *
num
 = 
lvÆ
[
num_ty≥
];

75 *
dí
 = 
lvÆ
[
dí_ty≥
];

76 vﬁ©ûê
sök
;

77 
i
;

78 i‡(
u£_c⁄d
) {

79 
i
 = 0; i < 
NELE
; i++)

80 
sök
 = 
dí
[
i
] < 0 ? 1 : 
num
[i] / den[i];

82 
i
 = 0; i < 
NELE
; i++)

83 
sök
 = 
num
[
i
] / 
dí
[i];

85 
	}
}

87 
	$·e°
(*
¨g•ec
)

89 
vÆ_t
 
num_ty≥
 = 
¨g•ec
[0];

90 
vÆ_t
 
dí_ty≥
 = 
¨g•ec
[1];

91 
u£_c⁄d
 = 
¨g•ec
[2];

92 *
num
 = 
fvÆ
[
num_ty≥
];

93 *
dí
 = 
fvÆ
[
dí_ty≥
];

94 vﬁ©ûê
sök
;

95 
i
;

96 i‡(
u£_c⁄d
) {

97 
i
 = 0; i < 
NELE
; i++)

98 
sök
 = 
dí
[
i
] < 0 ? 1 : 
num
[i] / den[i];

100 
i
 = 0; i < 
NELE
; i++)

101 
sök
 = 
num
[
i
] / 
dí
[i];

103 
	}
}

105 
	$dã°
(*
¨g•ec
)

107 
vÆ_t
 
num_ty≥
 = 
¨g•ec
[0];

108 
vÆ_t
 
dí_ty≥
 = 
¨g•ec
[1];

109 
u£_c⁄d
 = 
¨g•ec
[2];

110 *
num
 = 
dvÆ
[
num_ty≥
];

111 *
dí
 = 
dvÆ
[
dí_ty≥
];

112 vﬁ©ûê
sök
;

113 
i
;

114 i‡(
u£_c⁄d
) {

115 
i
 = 0; i < 
NELE
; i++)

116 
sök
 = 
dí
[
i
] < 0 ? 1 : 
num
[i] / den[i];

118 
i
 = 0; i < 
NELE
; i++)

119 
sök
 = 
num
[
i
] / 
dí
[i];

121 
	}
}

123 
	$˝t
(
ã°_fun˘
 
tf
, 
vÆ_t
 
num_ty≥
, vÆ_à
dí_ty≥
, 
u£_c⁄d
)

125 
∑øms
[3] = { 
num_ty≥
, 
dí_ty≥
, 
u£_c⁄d
 };

126 
t
 = 
	`fcyc
(
tf
, 
∑øms
);

127  
t
/
NELE
;

128 
	}
}

130 
	$run_ã°s
(
ã°_fun˘
 
tf
, *
des¸
)

132 
	`¥ötf
("Fun˘i⁄: %s\à div(+, -)\tCPD = %.2f\n", 
des¸
,

133 
	`˝t
(
tf
, 
POS_VAL
, 
NEG_VAL
, 0));

134 
	`¥ötf
("Fun˘i⁄: %s\àcdiv(+, -)\tCPD = %.2f\n", 
des¸
,

135 
	`˝t
(
tf
, 
POS_VAL
, 
NEG_VAL
, 1));

136 
	`¥ötf
("Fun˘i⁄: %s\àcdiv(-, +)\tCPD = %.2f\n", 
des¸
,

137 
	`˝t
(
tf
, 
NEG_VAL
, 
POS_VAL
, 1));

138 
	`¥ötf
("Fun˘i⁄: %s\àcdiv(+,á+-)\tCPD = %.2f\n", 
des¸
,

139 
	`˝t
(
tf
, 
POS_VAL
, 
AMIX_VAL
, 1));

140 
	`¥ötf
("Fun˘i⁄: %s\àcdiv(+,Ñ+-)\tCPD = %.2f\n", 
des¸
,

141 
	`˝t
(
tf
, 
POS_VAL
, 
RMIX_VAL
, 1));

142 
	}
}

144 
	$maö
()

146 
	`öô
();

147 
	`run_ã°s
((
ã°_fun˘
Ë
ôe°
, "int ");

148 
	`run_ã°s
((
ã°_fun˘
Ë
…e°
, "long ");

149 
	`run_ã°s
((
ã°_fun˘
Ë
·e°
, "float ");

150 
	`run_ã°s
((
ã°_fun˘
Ë
dã°
, "double");

152 
	}
}

	@opt/dmult.c

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~"˛ock.h
"

9 
ELE
 *
	tli°_±r
;

11 
	sELE
 {

12 
	mvÆ
;

13 
li°_±r
 
	m√xt
;

14 } 
	tli°_ñe
;

19 
	#TCNT
 5

	)

20 *
	g¨øy_d©a
[
TCNT
];

21 
li°_±r
 
	gli°_d©a
[
TCNT
];

24 
	gglobÆ_˙t
 = 10000;

26 
	g™swî
[
TCNT
];

28 
	$öô
(
˙t
) {

30 
globÆ_˙t
 = 
˙t
;

31 
t
;

32 
t
 = 0;Å < 
TCNT
;Å++) {

33 
™swî
[
t
] = 1.0;

34 
i
;

35 
¨øy_d©a
[
t
] = 
	`ˇŒoc
(
˙t
, ());

36 
li°_ñe
 *
li°_nodes
 = (li°_ñê*Ë
	`ˇŒoc
(
˙t
, (list_ele));

37 
li°_d©a
[
t
] = 
NULL
;

38 
i
 = 0; i < 
˙t
; i++) {

39 
vÆ
 = 
	`øndom
() & 0x1 ? -1.0 : 1.0;

40 
¨øy_d©a
[
t
][
i
] = 
vÆ
;

41 
li°_±r
 
hód
 = &
li°_nodes
[
i
];

42 
hód
->
vÆ
 = val;

43 
hód
->
√xt
 = 
li°_d©a
[
t
];

44 
li°_d©a
[
t
] = 
hód
;

45 
™swî
[
t
] *
vÆ
;

48 
	}
}

50 
	gli°_¥od_des¸
[] = "Traversing Singly-Linked List";

51 
	$li°_¥od
(
li°_±r
 
ls
)

53 
vÆ
 = 1.0;

54 
ls
) {

55 
vÆ
 *
ls
->val;

56 
ls
 =Üs->
√xt
;

58  
vÆ
;

59 
	}
}

61 
	$wøp_li°_¥od
(
t
)

63  
	`li°_¥od
(
li°_d©a
[
t
]);

64 
	}
}

66 
	g¨øy_u1p1S_¥od_des¸
[] = "Array. Unroll 1x. Parallel 1x, Standardássociativity";

67 
	$¨øy_u1p1S_¥od
(*
¨øy
, 
˙t
) {

68 
i
;

69 
vÆ
 = 1.0;

70 
i
 = 0; i < 
˙t
; i++) {

71 
vÆ
 *
¨øy
[
i
];

73  
vÆ
;

74 
	}
}

76 
	$wøp_¨øy_u1p1S_¥od
(
t
)

78  
	`¨øy_u1p1S_¥od
(
¨øy_d©a
[
t
], 
globÆ_˙t
);

79 
	}
}

82 
	g¨øy_u5p5S_¥od_des¸
[] = "Array. Unroll 5x. Parallel 5x, Standardássociativity";

83 
	$¨øy_u5p5S_¥od
(*
¨øy
, 
˙t
) {

84 
i
;

85 
vÆ0
 = 1.0;

86 
vÆ1
 = 1.0;

87 
vÆ2
 = 1.0;

88 
vÆ3
 = 1.0;

89 
vÆ4
 = 1.0;

90 
i
 = 0; i <
˙t
-5; i+=5) {

91 
vÆ0
 *
¨øy
[
i
];

92 
vÆ1
 *
¨øy
[
i
+1];

93 
vÆ2
 *
¨øy
[
i
+2];

94 
vÆ3
 *
¨øy
[
i
+3];

95 
vÆ4
 *
¨øy
[
i
+4];

97 ; 
i
 < 
˙t
; i++)

98 
vÆ0
 *
¨øy
[
i
];

99  
vÆ0
 * 
vÆ1
 * 
vÆ2
 * 
vÆ3
 * 
vÆ4
;

100 
	}
}

102 
	$wøp_¨øy_u5p5S_¥od
(
t
)

104  
	`¨øy_u5p5S_¥od
(
¨øy_d©a
[
t
], 
globÆ_˙t
);

105 
	}
}

107 
	g¨øy_u5p1S_¥od_des¸
[] = "Array. Unroll 5x. Parallel 1x, Standardássociativity";

108 
	$¨øy_u5p1S_¥od
(*
¨øy
, 
˙t
) {

109 
i
;

110 
vÆ
 = 1.0;

111 
i
 = 0; i <
˙t
-5; i+=5) {

112 
vÆ
 = vÆ * 
¨øy
[
i
] *árray[i+1] *árray[i+2] *árray[i+3] *árray[i+4];

114 ; 
i
 < 
˙t
; i++)

115 
vÆ
 *
¨øy
[
i
];

116  
vÆ
;

117 
	}
}

119 
	$wøp_¨øy_u5p1S_¥od
(
t
)

121  
	`¨øy_u5p1S_¥od
(
¨øy_d©a
[
t
], 
globÆ_˙t
);

122 
	}
}

125 
	g¨øy_u5p1A_¥od_des¸
[] = "Array. Unroll 5x. Parallel 1x, Modifiedássociativity";

126 
	$¨øy_u5p1A_¥od
(*
¨øy
, 
˙t
) {

127 
i
;

128 
vÆ
 = 1.0;

129 
i
 = 0; i <
˙t
-5; i+=5) {

130 
vÆ
 = vÆ * ((
¨øy
[
i
] *árray[i+1]) * (array[i+2] *árray[i+3] *árray[i+4]));

132 ; 
i
 < 
˙t
; i++)

133 
vÆ
 *
¨øy
[
i
];

134  
vÆ
;

135 
	}
}

137 
	$wøp_¨øy_u5p1A_¥od
(
t
)

139  
	`¨øy_u5p1A_¥od
(
¨øy_d©a
[
t
], 
globÆ_˙t
);

140 
	}
}

143 
	#VSIZE
 2

	)

144 
	tvec_t
 
	t__©åibuã__
 ((
	tve˘‹_size
(16)));

146 
vec_t
 
	mv
;

147 
	md
[
VSIZE
];

148 } 
	t∑ck_t
;

150 
	#ALIGN
 (
VSIZE
*())

	)

151 
	#ALIGN_INIT
 1

	)

153 
	gs£_u1p1_¥od_des¸
[] = "2x SSE. Unroll 1x. Parallel 1x.";

155 
	$s£_u1p1_¥od
(*
¨øy
, 
˙t
)

157 
∑ck_t
 
x„r
;

158 
vec_t
 
accum
;

159 
ªsu…
 = 1.0;

160 *
d©a
 = 
¨øy
;

162 
i
;

163 
i
 = 0; i < 
VSIZE
; i++)

164 
x„r
.
d
[
i
] = 1.0;

165 
accum
 = 
x„r
.
v
;

168 ((Ë
d©a
Ë% 
ALIGN
 && 
˙t
) {

169 
ªsu…
 =Ñesu… * *
d©a
++;

170 
˙t
--;

173 
˙t
 >
VSIZE
) {

174 
vec_t
 
chunk
 = *((vec_à*Ë
d©a
);

175 
accum
 =áccum * 
chunk
;

176 
d©a
 +
VSIZE
;

177 
˙t
 -
VSIZE
;

180 
˙t
) {

181 
ªsu…
 =Ñesu… * *
d©a
++;

182 
˙t
--;

184 
x„r
.
v
 = 
accum
;

185 
i
 = 0; i < 
VSIZE
; i++)

186 
ªsu…
 =Ñesu… * 
x„r
.
d
[
i
];

187  
ªsu…
;

188 
	}
}

190 
	$wøp_s£_u1p1_¥od
(
t
)

192  
	`s£_u1p1_¥od
(
¨øy_d©a
[
t
], 
globÆ_˙t
);

193 
	}
}

196 
	gs£_u5p5_¥od_des¸
[] = "2x SSE. Unroll 5x. Parallel 5x.";

198 
	$s£_u5p5_¥od
(*
¨øy
, 
˙t
)

200 
∑ck_t
 
x„r
;

201 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
;

202 
ªsu…
 = 1.0;

203 *
d©a
 = 
¨øy
;

205 
i
;

206 
i
 = 0; i < 
VSIZE
; i++)

207 
x„r
.
d
[
i
] = 1.0;

208 
accum0
 = 
accum1
 = 
accum2
 = 
accum3
 = 
accum4
 = 
x„r
.
v
;

211 ((Ë
d©a
Ë% 
ALIGN
 && 
˙t
) {

212 
ªsu…
 =Ñesu… * *
d©a
++;

213 
˙t
--;

216 
˙t
 >
VSIZE
*5) {

217 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

218 
accum0
 *
chunk0
;

219 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

220 
accum1
 *
chunk1
;

221 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

222 
accum2
 *
chunk2
;

223 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

224 
accum3
 *
chunk3
;

225 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

226 
accum4
 *
chunk4
;

227 
d©a
 +5*
VSIZE
;

228 
˙t
 -5*
VSIZE
;

231 
˙t
) {

232 
ªsu…
 =Ñesu… * *
d©a
++;

233 
˙t
--;

235 
x„r
.
v
 = (
accum0
 * 
accum1
Ë* (
accum2
 * 
accum3
 * 
accum4
);

236 
i
 = 0; i < 
VSIZE
; i++)

237 
ªsu…
 =Ñesu… * 
x„r
.
d
[
i
];

238  
ªsu…
;

239 
	}
}

241 
	$wøp_s£_u5p5_¥od
(
t
)

243  
	`s£_u5p5_¥od
(
¨øy_d©a
[
t
], 
globÆ_˙t
);

244 
	}
}

246 
	gs£_u8p8_¥od_des¸
[] = "2x SSE. Unroll 8x. Parallel 8x.";

248 
	$s£_u8p8_¥od
(*
¨øy
, 
˙t
)

250 
∑ck_t
 
x„r
;

251 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
, 
accum5
, 
accum6
, 
accum7
;

252 
ªsu…
 = 1.0;

253 *
d©a
 = 
¨øy
;

255 
i
;

256 
i
 = 0; i < 
VSIZE
; i++)

257 
x„r
.
d
[
i
] = 1.0;

258 
accum0
 = 
accum1
 = 
accum2
 = 
accum3
 = 
accum4
 = 
accum5
 = 
accum6
 = 
accum7
 = 
x„r
.
v
;

261 ((Ë
d©a
Ë% 
ALIGN
 && 
˙t
) {

262 
ªsu…
 =Ñesu… * *
d©a
++;

263 
˙t
--;

266 
˙t
 >
VSIZE
*8) {

267 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

268 
accum0
 *
chunk0
;

269 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

270 
accum1
 *
chunk1
;

271 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

272 
accum2
 *
chunk2
;

273 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

274 
accum3
 *
chunk3
;

275 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

276 
accum4
 *
chunk4
;

277 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

278 
accum5
 *
chunk5
;

279 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

280 
accum6
 *
chunk6
;

281 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

282 
accum7
 *
chunk7
;

283 
d©a
 +8*
VSIZE
;

284 
˙t
 -8*
VSIZE
;

287 
˙t
) {

288 
ªsu…
 =Ñesu… * *
d©a
++;

289 
˙t
--;

291 
x„r
.
v
 = ((
accum0
 * 
accum1
Ë* (
accum2
 * 
accum3
)Ë* ((
accum4
 * 
accum5
Ë* (
accum6
 * 
accum7
));

292 
i
 = 0; i < 
VSIZE
; i++)

293 
ªsu…
 =Ñesu… * 
x„r
.
d
[
i
];

294  
ªsu…
;

295 
	}
}

297 
	$wøp_s£_u8p8_¥od
(
t
)

299  
	`s£_u8p8_¥od
(
¨øy_d©a
[
t
], 
globÆ_˙t
);

300 
	}
}

302 (*
	tdfun
)();

304 
	$ã°î
(
dfun
 
fun
, *
«me
, *
des¸
) {

305 
t
;

306 
cyc
, 
n£cs
, 
ghz
;

307 
t
 = 
TCNT
-1;Å >= 0;Å--) {

308 
vÆ
 = 
	`fun
(
t
);

309 i‡(
vÆ
 !
™swî
[
t
]) {

310 
	`¥ötf
("Fun˘i⁄ '%s' D©®Eº‹. Te° %d", 
«me
, 
t
);

311 
	`¥ötf
(", Ex≥˘ed %.1f. GŸ %.1f\n", 
™swî
[
t
], 
vÆ
);

315 
	`°¨t_cou¡î
();

316 
	`fun
(0);

317 
cyc
 = 
	`gë_cou¡î
();

318 
ghz
 = 
	`mhz
(0)/1000.0;

319 
n£cs
 = 
cyc
/
ghz
;

320 
	`¥ötf
("Function '%s' (%s) %.0f cycles, %.0fÇsecs, %.2f cycles/element\n",

321 
«me
, 
des¸
, 
cyc
, 
n£cs
, cyc/
globÆ_˙t
);

322 
	}
}

325 
dfun
 
	mfun
;

326 *
	m«me
;

327 *
	mdes¸
;

328 } 
	tb_ñe
;

330 
b_ñe
 
	gã°s
[] = {

332 {
wøp_li°_¥od
, "li°", 
li°_¥od_des¸
},

333 {
wøp_¨øy_u1p1S_¥od
, "¨øy_u1p1S", 
¨øy_u1p1S_¥od_des¸
},

334 {
wøp_¨øy_u5p5S_¥od
, "¨øy_u5p5S", 
¨øy_u5p5S_¥od_des¸
},

335 {
wøp_¨øy_u5p1S_¥od
, "¨øy_u5p1S", 
¨øy_u5p1S_¥od_des¸
},

336 {
wøp_¨øy_u5p1A_¥od
, "¨øy_u5p1A", 
¨øy_u5p1A_¥od_des¸
},

337 {
wøp_s£_u1p1_¥od
, "s£_u1p1", 
s£_u1p1_¥od_des¸
},

338 {
wøp_s£_u5p5_¥od
, "s£_u5p5", 
s£_u5p5_¥od_des¸
},

339 {
wøp_s£_u8p8_¥od
, "s£_u8p8", 
s£_u8p8_¥od_des¸
},

340 {
NULL
, NULL, NULL}

343 
	$run
(
˙t
) {

344 
	`öô
(
˙t
);

345 
	`¥ötf
("Cou¡ = %d, Ghz = %.2f\n", 
˙t
, 
	`mhz
(0)/1000.0);

346 
i
;

347 
i
 = 0; 
ã°s
[i].
fun
 !
NULL
; i++) {

348 
	`ã°î
(
ã°s
[
i
].
fun
,Åe°s[i].
«me
,Åe°s[i].
des¸
);

350 
	}
}

352 
	$maö
(
¨gc
, *
¨gv
[]) {

353 
˙t
 = 20000;

354 i‡(
¨gc
 > 1)

355 
˙t
 = 
	`©oi
(
¨gv
[1]);

356 
	`run
(
˙t
);

358 
	}
}

	@opt/dpb-O1.c

1 
	~<°dlib.h
>

2 
	~"comböe.h
"

6 
	gcomböe1_des¸
[] = "combine1: Maximum use of dataábstraction";

9 
	$comböe1
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

11 
i
;

13 *
de°
 = 
IDENT
;

14 
i
 = 0; i < 
	`vec_Àngth
(
v
); i++) {

15 
d©a_t
 
vÆ
;

16 
	`gë_vec_ñemít
(
v
, 
i
, &
vÆ
);

18 *
de°
 = *de° 
OP
 
vÆ
;

21 
	}
}

24 
	gcomböe2_des¸
[] = "combine2: Take vec_length() out ofÜoop";

27 
	$comböe2
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

29 
i
;

30 
Àngth
 = 
	`vec_Àngth
(
v
);

32 *
de°
 = 
IDENT
;

33 
i
 = 0; i < 
Àngth
; i++) {

34 
d©a_t
 
vÆ
;

35 
	`gë_vec_ñemít
(
v
, 
i
, &
vÆ
);

36 *
de°
 = *de° 
OP
 
vÆ
;

38 
	}
}

41 
	gcomböe3_des¸
[] = "combine3: ArrayÑeferenceÅo vector data";

44 
	$comböe3
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

46 
i
;

47 
Àngth
 = 
	`vec_Àngth
(
v
);

48 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

50 *
de°
 = 
IDENT
;

51 
i
 = 0; i < 
Àngth
; i++) {

52 *
de°
 = *de° 
OP
 
d©a
[
i
];

54 
	}
}

57 
	gcomböe3w_des¸
[] = "combine3w: Update *dest withinÜoop only with write";

60 
	$comböe3w
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

62 
i
;

63 
Àngth
 = 
	`vec_Àngth
(
v
);

64 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

65 
d©a_t
 
acc
 = 
IDENT
;

68 *
de°
 = 
acc
;

70 
i
 = 0; i < 
Àngth
; i++) {

71 
acc
 =ác¯
OP
 
d©a
[
i
];

72 *
de°
 = 
acc
;

74 
	}
}

77 
	gcomböe4_des¸
[] = "combine4: ArrayÑeference,áccumulate inÅemporary";

80 
	$comböe4
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

82 
i
;

83 
Àngth
 = 
	`vec_Àngth
(
v
);

84 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

85 
d©a_t
 
acc
 = 
IDENT
;

87 
i
 = 0; i < 
Àngth
; i++) {

88 
acc
 =ác¯
OP
 
d©a
[
i
];

90 *
de°
 = 
acc
;

91 
	}
}

94 
	gcomböe4b_des¸
[] = "combine4b: Include bonds check inÜoop";

97 
	$comböe4b
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

99 
i
;

100 
Àngth
 = 
	`vec_Àngth
(
v
);

101 
d©a_t
 
acc
 = 
IDENT
;

103 
i
 = 0; i < 
Àngth
; i++) {

104 i‡(
i
 >0 && i < 
v
->
Àn
) {

105 
acc
 =ác¯
OP
 
v
->
d©a
[
i
];

108 *
de°
 = 
acc
;

109 
	}
}

113 
	gcomböe4p_des¸
[] = "combine4p: PointerÑeference,áccumulate inÅemporary";

116 
	$comböe4p
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

118 
Àngth
 = 
	`vec_Àngth
(
v
);

119 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

120 
d©a_t
 *
díd
 = 
d©a
+
Àngth
;

121 
d©a_t
 
acc
 = 
IDENT
;

123 ; 
d©a
 < 
díd
; data++)

124 
acc
 =ác¯
OP
 *
d©a
;

125 *
de°
 = 
acc
;

126 
	}
}

130 
	gcomböe5_des¸
[] = "combine5: Array code, unrolled by 2";

133 
	$comböe5
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

135 
i
;

136 
Àngth
 = 
	`vec_Àngth
(
v
);

137 
limô
 = 
Àngth
-1;

138 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

139 
d©a_t
 
acc
 = 
IDENT
;

142 
i
 = 0; i < 
limô
; i+=2) {

144 
acc
 = (ac¯
OP
 
d©a
[
i
]) OP data[i+1];

149 ; 
i
 < 
Àngth
; i++) {

150 
acc
 =ác¯
OP
 
d©a
[
i
];

152 *
de°
 = 
acc
;

153 
	}
}

156 
	guƒﬁl3a_des¸
[] = "unroll3a: Array code, unrolled by 3";

157 
	$uƒﬁl3a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

159 
i
;

160 
Àngth
 = 
	`vec_Àngth
(
v
);

161 
limô
 = 
Àngth
-2;

162 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

163 
d©a_t
 
acc
 = 
IDENT
;

166 
i
 = 0; i < 
limô
; i+=3) {

167 
acc
 =ác¯
OP
 
d©a
[
i
];

168 
acc
 =ác¯
OP
 
d©a
[
i
+1];

169 
acc
 =ác¯
OP
 
d©a
[
i
+2];

173 ; 
i
 < 
Àngth
; i++) {

174 
acc
 =ác¯
OP
 
d©a
[
i
];

176 *
de°
 = 
acc
;

177 
	}
}

180 
	gcomböe5p_des¸
[] = "combine5p: Pointer code, unrolled by 2, forÜoop";

183 
	$comböe5p
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

185 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

186 
d©a_t
 *
díd
 = 
d©a
+
	`vec_Àngth
(
v
);

187 
d©a_t
 *
dlimô
 = 
díd
-1;

188 
d©a_t
 
acc
 = 
IDENT
;

191 ; 
d©a
 < 
dlimô
; data += 2) {

192 
acc
 =ác¯
OP
 
d©a
[0] OP data[1];

196 ; 
d©a
 < 
díd
; data++) {

197 
acc
 =ác¯
OP
 
d©a
[0];

199 *
de°
 = 
acc
;

200 
	}
}

203 
	guƒﬁl2aw_des¸
[] = "unroll2aw: Array code, unrolled by 2, whileÜoop";

204 
	$uƒﬁl2aw_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

206 
i
 = 0;

207 
Àngth
 = 
	`vec_Àngth
(
v
);

208 
limô
 = 
Àngth
-1;

209 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

210 
d©a_t
 
acc
 = 
IDENT
;

213 
i
 < 
limô
) {

214 
acc
 =ác¯
OP
 
d©a
[
i
];

215 
i
+= 2;

216 
acc
 =ác¯
OP
 
d©a
[
i
-1];

220 ; 
i
 < 
Àngth
; i++) {

221 
acc
 =ác¯
OP
 
d©a
[
i
];

223 *
de°
 = 
acc
;

224 
	}
}

227 
	guƒﬁl4a_des¸
[] = "unroll4a: Array code, unrolled by 4";

228 
	$uƒﬁl4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

230 
i
;

231 
Àngth
 = 
	`vec_Àngth
(
v
);

232 
limô
 = 
Àngth
-3;

233 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

234 
d©a_t
 
acc
 = 
IDENT
;

237 
i
 = 0; i < 
limô
; i+=4) {

238 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

239 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

243 ; 
i
 < 
Àngth
; i++) {

244 
acc
 =ác¯
OP
 
d©a
[
i
];

246 *
de°
 = 
acc
;

247 
	}
}

249 
	guƒﬁl5a_des¸
[] = "unroll5a: Array code, unrolled by 5";

252 
	$uƒﬁl5
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

255 
	$uƒﬁl5a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

259 
i
;

260 
Àngth
 = 
	`vec_Àngth
(
v
);

261 
limô
 = 
Àngth
-4;

262 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

263 
d©a_t
 
acc
 = 
IDENT
;

266 
i
 = 0; i < 
limô
; i+=5) {

267 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

268 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

269 
acc
 =ác¯
OP
 
d©a
[
i
+4];

273 ; 
i
 < 
Àngth
; i++) {

274 
acc
 =ác¯
OP
 
d©a
[
i
];

276 *
de°
 = 
acc
;

277 
	}
}

280 
	guƒﬁl6a_des¸
[] = "unroll6a: Array code, unrolled by 6";

281 
	$uƒﬁl6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

283 
i
;

284 
Àngth
 = 
	`vec_Àngth
(
v
);

285 
limô
 = 
Àngth
-5;

286 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

287 
d©a_t
 
acc
 = 
IDENT
;

290 
i
 = 0; i < 
limô
; i+=6) {

291 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

292 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

293 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

297 ; 
i
 < 
Àngth
; i++) {

298 
acc
 =ác¯
OP
 
d©a
[
i
];

300 *
de°
 = 
acc
;

301 
	}
}

303 
	guƒﬁl7a_des¸
[] = "unroll7a: Array code, unrolled by 7";

304 
	$uƒﬁl7a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

306 
i
;

307 
Àngth
 = 
	`vec_Àngth
(
v
);

308 
limô
 = 
Àngth
-6;

309 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

310 
d©a_t
 
acc
 = 
IDENT
;

313 
i
 = 0; i < 
limô
; i+=7) {

314 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

315 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

316 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

317 
acc
 =ác¯
OP
 
d©a
[
i
+6];

321 ; 
i
 < 
Àngth
; i++) {

322 
acc
 =ác¯
OP
 
d©a
[
i
];

324 *
de°
 = 
acc
;

325 
	}
}

328 
	guƒﬁl8a_des¸
[] = "unroll8a: Array code, unrolled by 8";

329 
	$uƒﬁl8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

331 
i
;

332 
Àngth
 = 
	`vec_Àngth
(
v
);

333 
limô
 = 
Àngth
-7;

334 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

335 
d©a_t
 
acc
 = 
IDENT
;

338 
i
 = 0; i < 
limô
; i+=8) {

339 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

340 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

341 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

342 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

346 ; 
i
 < 
Àngth
; i++) {

347 
acc
 =ác¯
OP
 
d©a
[
i
];

349 *
de°
 = 
acc
;

350 
	}
}

352 
	guƒﬁl9a_des¸
[] = "unroll9a: Array code, unrolled by 9";

353 
	$uƒﬁl9a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

355 
i
;

356 
Àngth
 = 
	`vec_Àngth
(
v
);

357 
limô
 = 
Àngth
-8;

358 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

359 
d©a_t
 
acc
 = 
IDENT
;

362 
i
 = 0; i < 
limô
; i+=9) {

363 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

364 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

365 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

366 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

367 
acc
 =ác¯
OP
 
d©a
[
i
+8];

371 ; 
i
 < 
Àngth
; i++) {

372 
acc
 =ác¯
OP
 
d©a
[
i
];

374 *
de°
 = 
acc
;

375 
	}
}

377 
	guƒﬁl10a_des¸
[] = "unroll10a: Array code, unrolled by 10";

378 
	$uƒﬁl10a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

380 
i
;

381 
Àngth
 = 
	`vec_Àngth
(
v
);

382 
limô
 = 
Àngth
-9;

383 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

384 
d©a_t
 
acc
 = 
IDENT
;

387 
i
 = 0; i < 
limô
; i+=10) {

388 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

389 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

390 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

391 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

392 
acc
 =ác¯
OP
 
d©a
[
i
+8] OP data[i+9];

396 ; 
i
 < 
Àngth
; i++) {

397 
acc
 =ác¯
OP
 
d©a
[
i
];

399 *
de°
 = 
acc
;

400 
	}
}

403 
	guƒﬁl16a_des¸
[] = "unroll16a: Array code, unrolled by 16";

404 
	$uƒﬁl16a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

406 
i
;

407 
Àngth
 = 
	`vec_Àngth
(
v
);

408 
limô
 = 
Àngth
-15;

409 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

410 
d©a_t
 
acc
 = 
IDENT
;

413 
i
 = 0; i < 
limô
; i+=16) {

414 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

415 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

416 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

417 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

418 
acc
 =ác¯
OP
 
d©a
[
i
+8] OP data[i+9];

419 
acc
 =ác¯
OP
 
d©a
[
i
+10] OP data[i+11];

420 
acc
 =ác¯
OP
 
d©a
[
i
+12] OP data[i+13];

421 
acc
 =ác¯
OP
 
d©a
[
i
+14] OP data[i+15];

425 ; 
i
 < 
Àngth
; i++) {

426 
acc
 =ác¯
OP
 
d©a
[
i
];

428 *
de°
 = 
acc
;

429 
	}
}

431 
	guƒﬁl2_des¸
[] = "unroll2: Pointer code, unrolled by 2";

432 
	$uƒﬁl2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

434 
Àngth
 = 
	`vec_Àngth
(
v
);

435 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

436 
ovî
 = 
Àngth
%2;

437 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

438 
d©a_t
 
acc
 = 
IDENT
;

440 
d©a
 < 
díd
) {

441 
acc
 =ác¯
OP
 
d©a
[0];

442 
acc
 =ác¯
OP
 
d©a
[1];

443 
d©a
 += 2;

445 
díd
 +
ovî
;

446 
d©a
 < 
díd
) {

447 
acc
 =ác¯
OP
 *
d©a
;

448 
d©a
 ++;

450 *
de°
 = 
acc
;

451 
	}
}

454 
	guƒﬁl3_des¸
[] = "unroll3: Pointer code, unrolled by 3";

455 
	$uƒﬁl3_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

457 
Àngth
 = 
	`vec_Àngth
(
v
);

458 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

459 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-2;

460 
d©a_t
 
acc
 = 
IDENT
;

462 
d©a
 < 
díd
) {

463 
acc
 =ác¯
OP
 
d©a
[0];

464 
acc
 =ác¯
OP
 
d©a
[1];

465 
acc
 =ác¯
OP
 
d©a
[2];

466 
d©a
 += 3;

468 
díd
 += 2;

469 
d©a
 < 
díd
) {

470 
acc
 =ác¯
OP
 *
d©a
;

471 
d©a
 ++;

473 *
de°
 = 
acc
;

474 
	}
}

477 
	guƒﬁl4_des¸
[] = "unroll4: Pointer code, unrolled by 4";

478 
	$uƒﬁl4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

480 
Àngth
 = 
	`vec_Àngth
(
v
);

481 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

482 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-3;

483 
d©a_t
 
acc
 = 
IDENT
;

485 
d©a
 < 
díd
) {

486 
acc
 =ác¯
OP
 
d©a
[0];

487 
acc
 =ác¯
OP
 
d©a
[1];

488 
acc
 =ác¯
OP
 
d©a
[2];

489 
acc
 =ác¯
OP
 
d©a
[3];

490 
d©a
 += 4;

492 
díd
 += 3;

493 
d©a
 < 
díd
) {

494 
acc
 =ác¯
OP
 *
d©a
;

495 
d©a
 ++;

497 *
de°
 = 
acc
;

498 
	}
}

500 
	guƒﬁl8_des¸
[] = "unroll8: Pointer code, unrolled by 8";

501 
	$uƒﬁl8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

503 
Àngth
 = 
	`vec_Àngth
(
v
);

504 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

505 
ovî
 = 
Àngth
%8;

506 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

507 
d©a_t
 
acc
 = 
IDENT
;

509 
d©a
 < 
díd
) {

510 
acc
 =ác¯
OP
 
d©a
[0];

511 
acc
 =ác¯
OP
 
d©a
[1];

512 
acc
 =ác¯
OP
 
d©a
[2];

513 
acc
 =ác¯
OP
 
d©a
[3];

514 
acc
 =ác¯
OP
 
d©a
[4];

515 
acc
 =ác¯
OP
 
d©a
[5];

516 
acc
 =ác¯
OP
 
d©a
[6];

517 
acc
 =ác¯
OP
 
d©a
[7];

518 
d©a
 += 8;

520 
díd
 +
ovî
;

521 
d©a
 < 
díd
) {

522 
acc
 =ác¯
OP
 *
d©a
;

523 
d©a
 ++;

525 *
de°
 = 
acc
;

526 
	}
}

528 
	guƒﬁl16_des¸
[] = "unroll16: Pointer code, unrolled by 16";

529 
	$uƒﬁl16_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

531 
Àngth
 = 
	`vec_Àngth
(
v
);

532 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

533 
ovî
 = 
Àngth
%16;

534 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

535 
d©a_t
 
acc
 = 
IDENT
;

537 
d©a
 < 
díd
) {

538 
acc
 =ác¯
OP
 
d©a
[0];

539 
acc
 =ác¯
OP
 
d©a
[1];

540 
acc
 =ác¯
OP
 
d©a
[2];

541 
acc
 =ác¯
OP
 
d©a
[3];

542 
acc
 =ác¯
OP
 
d©a
[4];

543 
acc
 =ác¯
OP
 
d©a
[5];

544 
acc
 =ác¯
OP
 
d©a
[6];

545 
acc
 =ác¯
OP
 
d©a
[7];

546 
acc
 =ác¯
OP
 
d©a
[8];

547 
acc
 =ác¯
OP
 
d©a
[9];

548 
acc
 =ác¯
OP
 
d©a
[10];

549 
acc
 =ác¯
OP
 
d©a
[11];

550 
acc
 =ác¯
OP
 
d©a
[12];

551 
acc
 =ác¯
OP
 
d©a
[13];

552 
acc
 =ác¯
OP
 
d©a
[14];

553 
acc
 =ác¯
OP
 
d©a
[15];

554 
d©a
 += 16;

556 
díd
 +
ovî
;

557 
d©a
 < 
díd
) {

558 
acc
 =ác¯
OP
 *
d©a
;

559 
d©a
 ++;

561 *
de°
 = 
acc
;

562 
	}
}

565 
	gcomböe6_des¸
[] = "combine6: Array code, unrolled by 2, Superscalar x2";

568 
	$comböe6
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

570 
i
;

571 
Àngth
 = 
	`vec_Àngth
(
v
);

572 
limô
 = 
Àngth
-1;

573 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

574 
d©a_t
 
acc0
 = 
IDENT
;

575 
d©a_t
 
acc1
 = 
IDENT
;

578 
i
 = 0; i < 
limô
; i+=2) {

579 
acc0
 =ácc0 
OP
 
d©a
[
i
];

580 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

584 ; 
i
 < 
Àngth
; i++) {

585 
acc0
 =ácc0 
OP
 
d©a
[
i
];

587 *
de°
 = 
acc0
 
OP
 
acc1
;

588 
	}
}

591 
	guƒﬁl4x2a_des¸
[] = "unroll4x2a: Array code, unrolled by 4, Superscalar x2";

592 
	$uƒﬁl4x2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

594 
i
;

595 
Àngth
 = 
	`vec_Àngth
(
v
);

596 
limô
 = 
Àngth
-3;

597 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

598 
d©a_t
 
acc0
 = 
IDENT
;

599 
d©a_t
 
acc1
 = 
IDENT
;

602 
i
 = 0; i < 
limô
; i+=4) {

603 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

604 
acc0
 =ácc0 
OP
 
d©a
[
i
+2]; 
acc1
 =ácc1 OP data[i+3];

608 ; 
i
 < 
Àngth
; i++) {

609 
acc0
 =ácc0 
OP
 
d©a
[
i
];

611 *
de°
 = 
acc0
 
OP
 
acc1
;

612 
	}
}

615 
	guƒﬁl8x2a_des¸
[] = "unroll8x2a: Array code, unrolled by 8, Superscalar x2";

616 
	$uƒﬁl8x2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

618 
i
;

619 
Àngth
 = 
	`vec_Àngth
(
v
);

620 
limô
 = 
Àngth
-7;

621 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

622 
d©a_t
 
acc0
 = 
IDENT
;

623 
d©a_t
 
acc1
 = 
IDENT
;

626 
i
 = 0; i < 
limô
; i+=8) {

627 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

628 
acc0
 =ácc0 
OP
 
d©a
[
i
+2]; 
acc1
 =ácc1 OP data[i+3];

629 
acc0
 =ácc0 
OP
 
d©a
[
i
+4]; 
acc1
 =ácc1 OP data[i+5];

630 
acc0
 =ácc0 
OP
 
d©a
[
i
+6]; 
acc1
 =ácc1 OP data[i+7];

634 ; 
i
 < 
Àngth
; i++) {

635 
acc0
 =ácc0 
OP
 
d©a
[
i
];

637 *
de°
 = 
acc0
 
OP
 
acc1
;

638 
	}
}

640 
	guƒﬁl3x3a_des¸
[] = "unroll3x3a: Array code, unrolled by 3, Superscalar x3";

641 
	$uƒﬁl3x3a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

643 
i
;

644 
Àngth
 = 
	`vec_Àngth
(
v
);

645 
limô
 = 
Àngth
-2;

646 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

647 
d©a_t
 
acc0
 = 
IDENT
;

648 
d©a_t
 
acc1
 = 
IDENT
;

649 
d©a_t
 
acc2
 = 
IDENT
;

652 
i
 = 0; i < 
limô
; i+=3) {

653 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

654 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

658 ; 
i
 < 
Àngth
; i++) {

659 
acc0
 =ácc0 
OP
 
d©a
[
i
];

661 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
;

662 
	}
}

665 
	guƒﬁl4x4a_des¸
[] = "unroll4x4a: Array code, unrolled by 4, Superscalar x4";

666 
	$uƒﬁl4x4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

668 
i
;

669 
Àngth
 = 
	`vec_Àngth
(
v
);

670 
limô
 = 
Àngth
-3;

671 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

672 
d©a_t
 
acc0
 = 
IDENT
;

673 
d©a_t
 
acc1
 = 
IDENT
;

674 
d©a_t
 
acc2
 = 
IDENT
;

675 
d©a_t
 
acc3
 = 
IDENT
;

678 
i
 = 0; i < 
limô
; i+=4) {

679 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

680 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

684 ; 
i
 < 
Àngth
; i++) {

685 
acc0
 =ácc0 
OP
 
d©a
[
i
];

687 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
);

689 
	}
}

691 
	guƒﬁl8x4a_des¸
[] = "unroll8x4a: Array code, unrolled by 8, Superscalar x4";

692 
	$uƒﬁl8x4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

694 
i
;

695 
Àngth
 = 
	`vec_Àngth
(
v
);

696 
limô
 = 
Àngth
-7;

697 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

698 
d©a_t
 
acc0
 = 
IDENT
;

699 
d©a_t
 
acc1
 = 
IDENT
;

700 
d©a_t
 
acc2
 = 
IDENT
;

701 
d©a_t
 
acc3
 = 
IDENT
;

704 
i
 = 0; i < 
limô
; i+=8) {

705 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

706 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

707 
acc0
 =ácc0 
OP
 
d©a
[
i
+4]; 
acc1
 =ácc1 OP data[i+5];

708 
acc2
 =ácc2 
OP
 
d©a
[
i
+6]; 
acc3
 =ácc3 OP data[i+7];

712 ; 
i
 < 
Àngth
; i++) {

713 
acc0
 =ácc0 
OP
 
d©a
[
i
];

715 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
 OP 
acc3
;

716 
	}
}

718 
	guƒﬁl12x6a_des¸
[] = "unroll2x6a: Array code, unrolled by 12, Superscalar x6";

719 
	$uƒﬁl12x6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

721 
i
;

722 
Àngth
 = 
	`vec_Àngth
(
v
);

723 
limô
 = 
Àngth
-11;

724 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

725 
d©a_t
 
acc0
 = 
IDENT
;

726 
d©a_t
 
acc1
 = 
IDENT
;

727 
d©a_t
 
acc2
 = 
IDENT
;

728 
d©a_t
 
acc3
 = 
IDENT
;

729 
d©a_t
 
acc4
 = 
IDENT
;

730 
d©a_t
 
acc5
 = 
IDENT
;

733 
i
 = 0; i < 
limô
; i+=12) {

734 
acc0
 =ácc0 
OP
 
d©a
[
i
];

735 
acc0
 =ácc0 
OP
 
d©a
[
i
+6];

736 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

737 
acc1
 =ácc1 
OP
 
d©a
[
i
+7];

738 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

739 
acc2
 =ácc2 
OP
 
d©a
[
i
+8];

740 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

741 
acc3
 =ácc3 
OP
 
d©a
[
i
+9];

742 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

743 
acc4
 =ácc4 
OP
 
d©a
[
i
+10];

744 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

745 
acc5
 =ácc5 
OP
 
d©a
[
i
+11];

749 ; 
i
 < 
Àngth
; i++) {

750 
acc0
 =ácc0 
OP
 
d©a
[
i
];

752 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
);

753 
	}
}

755 
	guƒﬁl12x12a_des¸
[] = "unroll12x12a: Array code, unrolled by 12, Superscalar x12";

756 
	$uƒﬁl12x12a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

758 
i
;

759 
Àngth
 = 
	`vec_Àngth
(
v
);

760 
limô
 = 
Àngth
-11;

761 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

762 
d©a_t
 
acc0
 = 
IDENT
;

763 
d©a_t
 
acc1
 = 
IDENT
;

764 
d©a_t
 
acc2
 = 
IDENT
;

765 
d©a_t
 
acc3
 = 
IDENT
;

766 
d©a_t
 
acc4
 = 
IDENT
;

767 
d©a_t
 
acc5
 = 
IDENT
;

768 
d©a_t
 
acc6
 = 
IDENT
;

769 
d©a_t
 
acc7
 = 
IDENT
;

770 
d©a_t
 
acc8
 = 
IDENT
;

771 
d©a_t
 
acc9
 = 
IDENT
;

772 
d©a_t
 
acc10
 = 
IDENT
;

773 
d©a_t
 
acc11

IDENT
;

776 
i
 = 0; i < 
limô
; i+=12) {

777 
acc0
 =ácc0 
OP
 
d©a
[
i
];

778 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

779 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

780 
acc7
 =ácc7 
OP
 
d©a
[
i
+7];

781 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

782 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

783 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

784 
acc9
 =ácc9 
OP
 
d©a
[
i
+9];

785 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

786 
acc10
 =ácc10 
OP
 
d©a
[
i
+10];

787 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

788 
acc11
 =ácc11 
OP
 
d©a
[
i
+11];

792 ; 
i
 < 
Àngth
; i++) {

793 
acc0
 =ácc0 
OP
 
d©a
[
i
];

795 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
)

796 
	`OP
 (
acc6
 
OP
 
acc7
ËOP (
acc8
 OP 
acc9
ËOP (
acc10
 OP 
acc11
);

797 
	}
}

799 
	guƒﬁl16x16a_des¸
[] = "unroll16x16a: Array code, unrolled by 16, Superscalar x16";

800 
	$uƒﬁl16x16a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

802 
i
;

803 
Àngth
 = 
	`vec_Àngth
(
v
);

804 
limô
 = 
Àngth
-15;

805 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

806 
d©a_t
 
acc0
 = 
IDENT
;

807 
d©a_t
 
acc1
 = 
IDENT
;

808 
d©a_t
 
acc2
 = 
IDENT
;

809 
d©a_t
 
acc3
 = 
IDENT
;

810 
d©a_t
 
acc4
 = 
IDENT
;

811 
d©a_t
 
acc5
 = 
IDENT
;

812 
d©a_t
 
acc6
 = 
IDENT
;

813 
d©a_t
 
acc7
 = 
IDENT
;

814 
d©a_t
 
acc8
 = 
IDENT
;

815 
d©a_t
 
acc9
 = 
IDENT
;

816 
d©a_t
 
acc10
 = 
IDENT
;

817 
d©a_t
 
acc11

IDENT
;

818 
d©a_t
 
acc12

IDENT
;

819 
d©a_t
 
acc13

IDENT
;

820 
d©a_t
 
acc14

IDENT
;

821 
d©a_t
 
acc15

IDENT
;

824 
i
 = 0; i < 
limô
; i+=16) {

825 
acc0
 =ácc0 
OP
 
d©a
[
i
];

826 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

827 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

828 
acc7
 =ácc7 
OP
 
d©a
[
i
+7];

829 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

830 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

831 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

832 
acc9
 =ácc9 
OP
 
d©a
[
i
+9];

833 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

834 
acc10
 =ácc10 
OP
 
d©a
[
i
+10];

835 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

836 
acc11
 =ácc11 
OP
 
d©a
[
i
+11];

837 
acc12
 =ácc12 
OP
 
d©a
[
i
+12];

838 
acc13
 =ácc13 
OP
 
d©a
[
i
+13];

839 
acc14
 =ácc14 
OP
 
d©a
[
i
+14];

840 
acc15
 =ácc15 
OP
 
d©a
[
i
+15];

844 ; 
i
 < 
Àngth
; i++) {

845 
acc0
 =ácc0 
OP
 
d©a
[
i
];

847 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
))

848 
	`OP
 ((
acc6
 
OP
 
acc7
ËOP (
acc8
 OP 
acc9
ËOP (
acc10
 OP 
acc11
))

849 
	`OP
 ((
acc12
 
OP
 
acc13
ËOP (
acc14
 OP 
acc15
));

850 
	}
}

852 
	guƒﬁl20x20a_des¸
[] = "unroll20x20a: Array code, unrolled by 20, Superscalar x20";

853 
	$uƒﬁl20x20a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

855 
i
;

856 
Àngth
 = 
	`vec_Àngth
(
v
);

857 
limô
 = 
Àngth
-19;

858 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

859 
d©a_t
 
acc0
 = 
IDENT
;

860 
d©a_t
 
acc1
 = 
IDENT
;

861 
d©a_t
 
acc2
 = 
IDENT
;

862 
d©a_t
 
acc3
 = 
IDENT
;

863 
d©a_t
 
acc4
 = 
IDENT
;

864 
d©a_t
 
acc5
 = 
IDENT
;

865 
d©a_t
 
acc6
 = 
IDENT
;

866 
d©a_t
 
acc7
 = 
IDENT
;

867 
d©a_t
 
acc8
 = 
IDENT
;

868 
d©a_t
 
acc9
 = 
IDENT
;

869 
d©a_t
 
acc10
 = 
IDENT
;

870 
d©a_t
 
acc11

IDENT
;

871 
d©a_t
 
acc12

IDENT
;

872 
d©a_t
 
acc13

IDENT
;

873 
d©a_t
 
acc14

IDENT
;

874 
d©a_t
 
acc15

IDENT
;

875 
d©a_t
 
acc16

IDENT
;

876 
d©a_t
 
acc17

IDENT
;

877 
d©a_t
 
acc18

IDENT
;

878 
d©a_t
 
acc19

IDENT
;

881 
i
 = 0; i < 
limô
; i+=20) {

882 
acc0
 =ácc0 
OP
 
d©a
[
i
];

883 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

884 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

885 
acc7
 =ácc7 
OP
 
d©a
[
i
+7];

886 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

887 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

888 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

889 
acc9
 =ácc9 
OP
 
d©a
[
i
+9];

890 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

891 
acc10
 =ácc10 
OP
 
d©a
[
i
+10];

892 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

893 
acc11
 =ácc11 
OP
 
d©a
[
i
+11];

894 
acc12
 =ácc12 
OP
 
d©a
[
i
+12];

895 
acc13
 =ácc13 
OP
 
d©a
[
i
+13];

896 
acc14
 =ácc14 
OP
 
d©a
[
i
+14];

897 
acc15
 =ácc15 
OP
 
d©a
[
i
+15];

898 
acc16
 =ácc16 
OP
 
d©a
[
i
+16];

899 
acc17
 =ácc17 
OP
 
d©a
[
i
+17];

900 
acc18
 =ácc18 
OP
 
d©a
[
i
+18];

901 
acc19
 =ácc19 
OP
 
d©a
[
i
+19];

905 ; 
i
 < 
Àngth
; i++) {

906 
acc0
 =ácc0 
OP
 
d©a
[
i
];

908 *
de°
 =

909 (((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
))

910 
	`OP
 ((
acc6
 
OP
 
acc7
ËOP (
acc8
 OP 
acc9
ËOP (
acc10
 OP 
acc11
)))

911 
OP


912 (((
acc12
 
OP
 
acc13
Ë
	`OP
 (
acc14
 OP 
acc15
)ËOP ((
acc16
 OP 
acc17
ËOP (
acc18
 OP 
acc19
)));

913 
	}
}

916 
	guƒﬁl5x5a_des¸
[] = "unroll5x5a: Array code, unrolled by 5, Superscalar x5";

917 
	$uƒﬁl5x5a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

919 
i
;

920 
Àngth
 = 
	`vec_Àngth
(
v
);

921 
limô
 = 
Àngth
-4;

922 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

923 
d©a_t
 
acc0
 = 
IDENT
;

924 
d©a_t
 
acc1
 = 
IDENT
;

925 
d©a_t
 
acc2
 = 
IDENT
;

926 
d©a_t
 
acc3
 = 
IDENT
;

927 
d©a_t
 
acc4
 = 
IDENT
;

930 
i
 = 0; i < 
limô
; i+=5) {

931 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

932 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

933 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

937 ; 
i
 < 
Àngth
; i++) {

938 
acc0
 =ácc0 
OP
 
d©a
[
i
];

940 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
 OP 
acc4
);

941 
	}
}

943 
	guƒﬁl6x6a_des¸
[] = "unroll6x6a: Array code, unrolled by 6, Superscalar x6";

944 
	$uƒﬁl6x6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

946 
i
;

947 
Àngth
 = 
	`vec_Àngth
(
v
);

948 
limô
 = 
Àngth
-5;

949 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

950 
d©a_t
 
acc0
 = 
IDENT
;

951 
d©a_t
 
acc1
 = 
IDENT
;

952 
d©a_t
 
acc2
 = 
IDENT
;

953 
d©a_t
 
acc3
 = 
IDENT
;

954 
d©a_t
 
acc4
 = 
IDENT
;

955 
d©a_t
 
acc5
 = 
IDENT
;

958 
i
 = 0; i < 
limô
; i+=6) {

959 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

960 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

961 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

965 ; 
i
 < 
Àngth
; i++) {

966 
acc0
 =ácc0 
OP
 
d©a
[
i
];

968 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
);

969 
	}
}

971 
	guƒﬁl7x7a_des¸
[] = "unroll7x7a: Array code, unrolled by 7, Superscalar x7";

972 
	$uƒﬁl7x7a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

974 
i
;

975 
Àngth
 = 
	`vec_Àngth
(
v
);

976 
limô
 = 
Àngth
-6;

977 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

978 
d©a_t
 
acc0
 = 
IDENT
;

979 
d©a_t
 
acc1
 = 
IDENT
;

980 
d©a_t
 
acc2
 = 
IDENT
;

981 
d©a_t
 
acc3
 = 
IDENT
;

982 
d©a_t
 
acc4
 = 
IDENT
;

983 
d©a_t
 
acc5
 = 
IDENT
;

984 
d©a_t
 
acc6
 = 
IDENT
;

987 
i
 = 0; i < 
limô
; i+=7) {

988 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

989 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

990 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

991 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

995 ; 
i
 < 
Àngth
; i++) {

996 
acc0
 =ácc0 
OP
 
d©a
[
i
];

998 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP (
acc4
 OP 
acc5
 OP 
acc6
);

999 
	}
}

1001 
	guƒﬁl8x8a_des¸
[] = "unroll8x8a: Array code, unrolled by 8, Superscalar x8";

1002 
	$uƒﬁl8x8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1004 
i
;

1005 
Àngth
 = 
	`vec_Àngth
(
v
);

1006 
limô
 = 
Àngth
-7;

1007 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1008 
d©a_t
 
acc0
 = 
IDENT
;

1009 
d©a_t
 
acc1
 = 
IDENT
;

1010 
d©a_t
 
acc2
 = 
IDENT
;

1011 
d©a_t
 
acc3
 = 
IDENT
;

1012 
d©a_t
 
acc4
 = 
IDENT
;

1013 
d©a_t
 
acc5
 = 
IDENT
;

1014 
d©a_t
 
acc6
 = 
IDENT
;

1015 
d©a_t
 
acc7
 = 
IDENT
;

1018 
i
 = 0; i < 
limô
; i+=8) {

1019 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

1020 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

1021 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

1022 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

1026 ; 
i
 < 
Àngth
; i++) {

1027 
acc0
 =ácc0 
OP
 
d©a
[
i
];

1029 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP ((
acc4
 OP 
acc5
ËOP (
acc6
 OP 
acc7
));

1030 
	}
}

1032 
	guƒﬁl9x9a_des¸
[] = "unroll9x9a: Array code, unrolled by 9, Superscalar x9";

1033 
	$uƒﬁl9x9a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1035 
i
;

1036 
Àngth
 = 
	`vec_Àngth
(
v
);

1037 
limô
 = 
Àngth
-8;

1038 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1039 
d©a_t
 
acc0
 = 
IDENT
;

1040 
d©a_t
 
acc1
 = 
IDENT
;

1041 
d©a_t
 
acc2
 = 
IDENT
;

1042 
d©a_t
 
acc3
 = 
IDENT
;

1043 
d©a_t
 
acc4
 = 
IDENT
;

1044 
d©a_t
 
acc5
 = 
IDENT
;

1045 
d©a_t
 
acc6
 = 
IDENT
;

1046 
d©a_t
 
acc7
 = 
IDENT
;

1047 
d©a_t
 
acc8
 = 
IDENT
;

1050 
i
 = 0; i < 
limô
; i+=9) {

1051 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

1052 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

1053 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

1054 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

1055 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

1059 ; 
i
 < 
Àngth
; i++) {

1060 
acc0
 =ácc0 
OP
 
d©a
[
i
];

1062 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP ((
acc4
 OP 
acc5
ËOP (
acc6
 OP 
acc7
ËOP 
acc8
);

1063 
	}
}

1065 
	guƒﬁl10x10a_des¸
[] = "unroll10x10a: Array code, unrolled by 10, Superscalar x10";

1066 
	$uƒﬁl10x10a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1068 
i
;

1069 
Àngth
 = 
	`vec_Àngth
(
v
);

1070 
limô
 = 
Àngth
-9;

1071 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1072 
d©a_t
 
acc0
 = 
IDENT
;

1073 
d©a_t
 
acc1
 = 
IDENT
;

1074 
d©a_t
 
acc2
 = 
IDENT
;

1075 
d©a_t
 
acc3
 = 
IDENT
;

1076 
d©a_t
 
acc4
 = 
IDENT
;

1077 
d©a_t
 
acc5
 = 
IDENT
;

1078 
d©a_t
 
acc6
 = 
IDENT
;

1079 
d©a_t
 
acc7
 = 
IDENT
;

1080 
d©a_t
 
acc8
 = 
IDENT
;

1081 
d©a_t
 
acc9
 = 
IDENT
;

1084 
i
 = 0; i < 
limô
; i+=10) {

1085 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

1086 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

1087 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

1088 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

1089 
acc8
 =ácc8 
OP
 
d©a
[
i
+8]; 
acc9
 =ácc9 OP data[i+9];

1093 ; 
i
 < 
Àngth
; i++) {

1094 
acc0
 =ácc0 
OP
 
d©a
[
i
];

1096 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)) OP

1097 ((
acc4
 
OP
 
acc5
Ë
	`OP
 (
acc6
 OP 
acc7
)) OP

1098 (
acc8
 
OP
 
acc9
);

1099 
	}
}

1101 
	guƒﬁlx2as_des¸
[] = "unrollx2as: Array code, Unroll x2, Superscalar x2,Çoninterleaved";

1102 
	$uƒﬁlx2as_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1104 
i
;

1105 
Àngth
 = 
	`vec_Àngth
(
v
);

1106 
limô
 = 
Àngth
/2;

1107 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1108 
d©a_t
 *
d©a2
 = 
d©a
+
limô
;

1109 
d©a_t
 
acc0
 = 
IDENT
;

1110 
d©a_t
 
acc1
 = 
IDENT
;

1113 
i
 = 0; i < 
limô
; i++) {

1114 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP 
d©a2
[i];

1118 
i
 = 
limô
*2; i < 
Àngth
; i++) {

1119 
acc1
 =ácc1 
OP
 
d©a
[
i
];

1121 *
de°
 = 
acc0
 
OP
 
acc1
;

1122 
	}
}

1124 
	guƒﬁl4x2as_des¸
[] = "unroll4x2as: Array code, Unroll x4, Superscalar x2,Çoninterleaved";

1125 
	$uƒﬁl4x2as_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1127 
i
;

1128 
Àngth
 = 
	`vec_Àngth
(
v
);

1129 
limô
 = 
Àngth
/2;

1130 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1131 
d©a_t
 *
d©a2
 = 
d©a
+
limô
;

1132 
d©a_t
 
acc0
 = 
IDENT
;

1133 
d©a_t
 
acc1
 = 
IDENT
;

1136 
i
 = 0; i < 
limô
; i++) {

1137 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP 
d©a2
[i];

1141 
i
 = 
limô
*2; i < 
Àngth
; i++) {

1142 
acc1
 =ácc1 
OP
 
d©a
[
i
];

1144 *
de°
 = 
acc0
 
OP
 
acc1
;

1145 
	}
}

1149 
	guƒﬁl8x2_des¸
[] = "unroll8x2: Pointer code, unrolled by 8, Superscalar x2";

1150 
	$uƒﬁl8x2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1152 
Àngth
 = 
	`vec_Àngth
(
v
);

1153 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1154 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1155 
d©a_t
 
acc0
 = 
IDENT
;

1156 
d©a_t
 
acc1
 = 
IDENT
;

1158 
d©a
 < 
díd
) {

1159 
acc0
 =ácc0 
OP
 
d©a
[0];

1160 
acc1
 =ácc1 
OP
 
d©a
[1];

1161 
acc0
 =ácc0 
OP
 
d©a
[2];

1162 
acc1
 =ácc1 
OP
 
d©a
[3];

1163 
acc0
 =ácc0 
OP
 
d©a
[4];

1164 
acc1
 =ácc1 
OP
 
d©a
[5];

1165 
acc0
 =ácc0 
OP
 
d©a
[6];

1166 
acc1
 =ácc1 
OP
 
d©a
[7];

1167 
d©a
 += 8;

1169 
díd
 += 7;

1170 
d©a
 < 
díd
) {

1171 
acc0
 =ácc0 
OP
 *
d©a
;

1172 
d©a
 ++;

1174 *
de°
 = 
acc0
 
OP
 
acc1
;

1175 
	}
}

1177 
	guƒﬁl9x3_des¸
[] = "unroll9x3: Pointer code, unrolled by 9, Superscalar x3";

1178 
	$uƒﬁl9x3_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1180 
Àngth
 = 
	`vec_Àngth
(
v
);

1181 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1182 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-8;

1183 
d©a_t
 
acc0
 = 
IDENT
;

1184 
d©a_t
 
acc1
 = 
IDENT
;

1185 
d©a_t
 
acc2
 = 
IDENT
;

1187 
d©a
 < 
díd
) {

1188 
acc0
 =ácc0 
OP
 
d©a
[0];

1189 
acc1
 =ácc1 
OP
 
d©a
[1];

1190 
acc2
 =ácc2 
OP
 
d©a
[2];

1191 
acc0
 =ácc0 
OP
 
d©a
[3];

1192 
acc1
 =ácc1 
OP
 
d©a
[4];

1193 
acc2
 =ácc2 
OP
 
d©a
[5];

1194 
acc0
 =ácc0 
OP
 
d©a
[6];

1195 
acc1
 =ácc1 
OP
 
d©a
[7];

1196 
acc2
 =ácc2 
OP
 
d©a
[8];

1197 
d©a
 += 9;

1199 
díd
 += 8;

1200 
d©a
 < 
díd
) {

1201 
acc0
 =ácc0 
OP
 *
d©a
;

1202 
d©a
 ++;

1204 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
;

1205 
	}
}

1208 
	guƒﬁl8x4_des¸
[] = "unroll8x4: Pointer code, unrolled by 8, Superscalar x4";

1209 
	$uƒﬁl8x4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1211 
Àngth
 = 
	`vec_Àngth
(
v
);

1212 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1213 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1214 
d©a_t
 
acc0
 = 
IDENT
;

1215 
d©a_t
 
acc1
 = 
IDENT
;

1216 
d©a_t
 
acc2
 = 
IDENT
;

1217 
d©a_t
 
acc3
 = 
IDENT
;

1219 
d©a
 < 
díd
) {

1220 
acc0
 =ácc0 
OP
 
d©a
[0];

1221 
acc1
 =ácc1 
OP
 
d©a
[1];

1222 
acc2
 =ácc2 
OP
 
d©a
[2];

1223 
acc3
 =ácc3 
OP
 
d©a
[3];

1224 
acc0
 =ácc0 
OP
 
d©a
[4];

1225 
acc1
 =ácc1 
OP
 
d©a
[5];

1226 
acc2
 =ácc2 
OP
 
d©a
[6];

1227 
acc3
 =ácc3 
OP
 
d©a
[7];

1228 
d©a
 += 8;

1230 
díd
 += 7;

1231 
d©a
 < 
díd
) {

1232 
acc3
 =ácc3 
OP
 *
d©a
;

1233 
d©a
 ++;

1235 *
de°
 = 
acc3
 
OP
 
acc0
 OP 
acc1
 OP 
acc2
;

1236 
	}
}

1238 
	guƒﬁl8x8_des¸
[] = "unroll8x8: Pointer code, unrolled by 8, Superscalar x8";

1239 
	$uƒﬁl8x8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1241 
Àngth
 = 
	`vec_Àngth
(
v
);

1242 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1243 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1244 
d©a_t
 
acc0
 = 
IDENT
;

1245 
d©a_t
 
acc1
 = 
IDENT
;

1246 
d©a_t
 
acc2
 = 
IDENT
;

1247 
d©a_t
 
acc3
 = 
IDENT
;

1248 
d©a_t
 
acc4
 = 
IDENT
;

1249 
d©a_t
 
acc5
 = 
IDENT
;

1250 
d©a_t
 
acc6
 = 
IDENT
;

1251 
d©a_t
 
acc7
 = 
IDENT
;

1253 
d©a
 < 
díd
) {

1254 
acc0
 =ácc0 
OP
 
d©a
[0];

1255 
acc1
 =ácc1 
OP
 
d©a
[1];

1256 
acc2
 =ácc2 
OP
 
d©a
[2];

1257 
acc3
 =ácc3 
OP
 
d©a
[3];

1258 
acc4
 =ácc4 
OP
 
d©a
[4];

1259 
acc5
 =ácc5 
OP
 
d©a
[5];

1260 
acc6
 =ácc6 
OP
 
d©a
[6];

1261 
acc7
 =ácc7 
OP
 
d©a
[7];

1262 
d©a
 += 8;

1264 
díd
 += 7;

1265 
d©a
 < 
díd
) {

1266 
acc0
 =ácc0 
OP
 *
d©a
;

1267 
d©a
 ++;

1269 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
 OP 
acc3
 OP 
acc4
 OP 
acc5
 OP 
acc6
 OP 
acc7
;

1270 
	}
}

1272 
	gcomböe7_des¸
[] = "combine7: Array code, unrolled by 2, differentássociativity";

1275 
	$comböe7
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1277 
i
;

1278 
Àngth
 = 
	`vec_Àngth
(
v
);

1279 
limô
 = 
Àngth
-1;

1280 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1281 
d©a_t
 
acc
 = 
IDENT
;

1284 
i
 = 0; i < 
limô
; i+=2) {

1286 
acc
 =ác¯
	`OP
 (
d©a
[
i
] 
OP
 data[i+1]);

1291 ; 
i
 < 
Àngth
; i++) {

1292 
acc
 =ác¯
OP
 
d©a
[
i
];

1294 *
de°
 = 
acc
;

1295 
	}
}

1298 
	guƒﬁl3Ø_des¸
[] = "unroll3aa: Array code, unrolled by 3, Different Associativity";

1299 
	$uƒﬁl3Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1301 
i
;

1302 
Àngth
 = 
	`vec_Àngth
(
v
);

1303 
limô
 = 
Àngth
-2;

1304 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1305 
d©a_t
 
acc
 = 
IDENT
;

1308 
i
 = 0; i < 
limô
; i+=3) {

1309 
acc
 =ác¯
	`OP
 (
d©a
[
i
] 
OP
 data[i+1] OP data[i+2]);

1313 ; 
i
 < 
Àngth
; i++) {

1314 
acc
 =ác¯
OP
 
d©a
[
i
];

1316 *
de°
 = 
acc
;

1317 
	}
}

1319 
	guƒﬁl4Ø_des¸
[] = "unroll4aa: Array code, unrolled by 4, Different Associativity";

1320 
	$uƒﬁl4Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1322 
i
;

1323 
Àngth
 = 
	`vec_Àngth
(
v
);

1324 
limô
 = 
Àngth
-3;

1325 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1326 
d©a_t
 
acc
 = 
IDENT
;

1329 
i
 = 0; i < 
limô
; i+=4) {

1330 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1331 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1332 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
);

1336 ; 
i
 < 
Àngth
; i++) {

1337 
acc
 =ác¯
OP
 
d©a
[
i
];

1339 *
de°
 = 
acc
;

1340 
	}
}

1342 
	guƒﬁl5Ø_des¸
[] = "unroll5aa: Array code, unrolled by 5, Different Associativity";

1343 
	$uƒﬁl5Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1345 
i
;

1346 
Àngth
 = 
	`vec_Àngth
(
v
);

1347 
limô
 = 
Àngth
-4;

1348 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1349 
d©a_t
 
acc
 = 
IDENT
;

1352 
i
 = 0; i < 
limô
; i+=5) {

1353 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1354 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1355 
d©a_t
 
t3
 = 
d©a
[
i
+4];

1356 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
 OP 
t3
);

1360 ; 
i
 < 
Àngth
; i++) {

1361 
acc
 =ác¯
OP
 
d©a
[
i
];

1363 *
de°
 = 
acc
;

1364 
	}
}

1366 
	guƒﬁl6Ø_des¸
[] = "unroll6aa: Array code, unrolled by 6, Different Associativity";

1367 
	$uƒﬁl6Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1369 
i
;

1370 
Àngth
 = 
	`vec_Àngth
(
v
);

1371 
limô
 = 
Àngth
-5;

1372 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1373 
d©a_t
 
acc
 = 
IDENT
;

1376 
i
 = 0; i < 
limô
; i+=6) {

1377 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1378 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1379 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1380 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
 OP 
t3
);

1384 ; 
i
 < 
Àngth
; i++) {

1385 
acc
 =ác¯
OP
 
d©a
[
i
];

1387 *
de°
 = 
acc
;

1388 
	}
}

1390 
	guƒﬁl7Ø_des¸
[] = "unroll7aa: Array code, unrolled by 7, Different Associativity";

1391 
	$uƒﬁl7Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1393 
i
;

1394 
Àngth
 = 
	`vec_Àngth
(
v
);

1395 
limô
 = 
Àngth
-6;

1396 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1397 
d©a_t
 
acc
 = 
IDENT
;

1400 
i
 = 0; i < 
limô
; i+=7) {

1401 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1402 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1403 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1404 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1405 
d©a_t
 
t4
 = 
d©a
[
i
+6];

1406 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1407 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1411 ; 
i
 < 
Àngth
; i++) {

1412 
acc
 =ác¯
OP
 
d©a
[
i
];

1415 *
de°
 = 
acc
;

1416 
	}
}

1418 
	guƒﬁl8Ø_des¸
[] = "unroll8aa: Array code, unrolled by 8, Different Associativity";

1419 
	$uƒﬁl8Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1421 
i
;

1422 
Àngth
 = 
	`vec_Àngth
(
v
);

1423 
limô
 = 
Àngth
-7;

1424 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1425 
d©a_t
 
acc
 = 
IDENT
;

1428 
i
 = 0; i < 
limô
; i+=8) {

1429 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1430 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1431 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1432 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1433 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1434 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1435 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1439 ; 
i
 < 
Àngth
; i++) {

1440 
acc
 =ác¯
OP
 
d©a
[
i
];

1443 *
de°
 = 
acc
;

1444 
	}
}

1446 
	guƒﬁl9Ø_des¸
[] = "unroll9aa: Array code, unrolled by 9, Different Associativity";

1447 
	$uƒﬁl9Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1449 
i
;

1450 
Àngth
 = 
	`vec_Àngth
(
v
);

1451 
limô
 = 
Àngth
-8;

1452 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1453 
d©a_t
 
acc
 = 
IDENT
;

1456 
i
 = 0; i < 
limô
; i+=9) {

1457 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1458 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1459 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1460 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1461 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1462 
d©a_t
 
t5
 = 
d©a
[
i
+8];

1463 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
 OP 
t5
;

1464 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1468 ; 
i
 < 
Àngth
; i++) {

1469 
acc
 =ác¯
OP
 
d©a
[
i
];

1472 *
de°
 = 
acc
;

1473 
	}
}

1475 
	guƒﬁl10Ø_des¸
[] = "unroll10aa: Array code, unrolled by 10, Different Associativity";

1476 
	$uƒﬁl10Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1478 
i
;

1479 
Àngth
 = 
	`vec_Àngth
(
v
);

1480 
limô
 = 
Àngth
-9;

1481 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1482 
d©a_t
 
acc
 = 
IDENT
;

1485 
i
 = 0; i < 
limô
; i+=10) {

1486 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1487 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1488 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1489 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1490 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1491 
d©a_t
 
t5
 = 
d©a
[
i
+8] 
OP
 data[i+9];

1492 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
 OP 
t5
;

1493 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1497 ; 
i
 < 
Àngth
; i++) {

1498 
acc
 =ác¯
OP
 
d©a
[
i
];

1501 *
de°
 = 
acc
;

1502 
	}
}

1505 
	guƒﬁl12Ø_des¸
[] = "unroll12aa: Array code, unrolled by 12, Different Associativity";

1506 
	$uƒﬁl12Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1508 
i
;

1509 
Àngth
 = 
	`vec_Àngth
(
v
);

1510 
limô
 = 
Àngth
-11;

1511 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1512 
d©a_t
 
acc
 = 
IDENT
;

1515 
i
 = 0; i < 
limô
; i+=12) {

1516 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1517 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1518 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1519 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1520 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1521 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1522 
d©a_t
 
t5
 = 
d©a
[
i
+8] 
OP
 data[i+9];

1523 
d©a_t
 
t6
 = 
d©a
[
i
+10] 
OP
 data[i+11];

1524 
d©a_t
 
u3
 = 
t5
 
OP
 
t6
;

1525 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
 OP 
u3
);

1529 ; 
i
 < 
Àngth
; i++) {

1530 
acc
 =ác¯
OP
 
d©a
[
i
];

1533 *
de°
 = 
acc
;

1534 
	}
}

1540 
	#VBYTES
 32

	)

1543 
	#VSIZE
 
VBYTES
/(
d©a_t
)

	)

1548 
d©a_t
 
	tvec_t
 
	t__©åibuã__
 ((
	tve˘‹_size
(
	tVBYTES
)));

1553 
vec_t
 
	mv
;

1554 
d©a_t
 
	md
[
VSIZE
];

1555 } 
	t∑ck_t
;

1558 
	gsimd_v1_des¸
[] = "simd_v1: SSE code, 1*VSIZE-wayÖarallelism";

1560 
	$simd_v1_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1562 
i
;

1563 
∑ck_t
 
x„r
;

1564 
vec_t
 
accum
;

1565 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1566 
˙t
 = 
	`vec_Àngth
(
v
);

1567 
d©a_t
 
ªsu…
 = 
IDENT
;

1570 
i
 = 0; i < 
VSIZE
; i++)

1571 
x„r
.
d
[
i
] = 
IDENT
;

1572 
accum
 = 
x„r
.
v
;

1576 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1577 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1578 
˙t
--;

1582 
˙t
 >
VSIZE
) {

1583 
vec_t
 
chunk
 = *((vec_à*Ë
d©a
);

1584 
accum
 =áccum 
OP
 
chunk
;

1585 
d©a
 +
VSIZE
;

1586 
˙t
 -
VSIZE
;

1590 
˙t
) {

1591 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1592 
˙t
--;

1596 
x„r
.
v
 = 
accum
;

1597 
i
 = 0; i < 
VSIZE
; i++)

1598 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1601 *
de°
 = 
ªsu…
;

1602 
	}
}

1606 
	gsimd_v2_des¸
[] = "simd_v2: SSE code, 2*VSIZE-wayÖarallelism";

1607 
	$simd_v2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1609 
i
;

1610 
∑ck_t
 
x„r
;

1611 
vec_t
 
accum0
, 
accum1
;

1612 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1613 
˙t
 = 
	`vec_Àngth
(
v
);

1614 
d©a_t
 
ªsu…
 = 
IDENT
;

1617 
i
 = 0; i < 
VSIZE
; i++)

1618 
x„r
.
d
[
i
] = 
IDENT
;

1619 
accum0
 = 
x„r
.
v
;

1620 
accum1
 = 
x„r
.
v
;

1623 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1624 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1625 
˙t
--;

1628 
˙t
 >2*
VSIZE
) {

1629 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1630 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1631 
accum0
 =áccum0 
OP
 
chunk0
;

1632 
accum1
 =áccum1 
OP
 
chunk1
;

1633 
d©a
 +2*
VSIZE
;

1634 
˙t
 -2*
VSIZE
;

1636 
˙t
) {

1637 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1638 
˙t
--;

1640 
x„r
.
v
 = 
accum0
 
OP
 
accum1
;

1641 
i
 = 0; i < 
VSIZE
; i++)

1642 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1643 *
de°
 = 
ªsu…
;

1644 
	}
}

1646 
	gsimd_v4_des¸
[] = "simd_v4: SSE code, 4*VSIZE-wayÖarallelism";

1647 
	$simd_v4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1649 
i
;

1650 
∑ck_t
 
x„r
;

1651 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1652 
˙t
 = 
	`vec_Àngth
(
v
);

1653 
d©a_t
 
ªsu…
 = 
IDENT
;

1656 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
;

1657 
i
 = 0; i < 
VSIZE
; i++)

1658 
x„r
.
d
[
i
] = 
IDENT
;

1659 
accum0
 = 
x„r
.
v
; 
accum1
 = xfer.v;

1660 
accum2
 = 
x„r
.
v
; 
accum3
 = xfer.v;

1663 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1664 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1665 
˙t
--;

1670 
˙t
 >4*
VSIZE
) {

1671 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1672 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1673 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1674 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1675 
accum0
 =áccum0 
OP
 
chunk0
;

1676 
accum1
 =áccum1 
OP
 
chunk1
;

1677 
accum2
 =áccum2 
OP
 
chunk2
;

1678 
accum3
 =áccum3 
OP
 
chunk3
;

1679 
d©a
 +4*
VSIZE
;

1680 
˙t
 -4*
VSIZE
;

1684 
˙t
) {

1685 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1686 
˙t
--;

1691 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1694 
i
 = 0; i < 
VSIZE
; i++)

1695 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1697 *
de°
 = 
ªsu…
;

1698 
	}
}

1700 
	gsimd_v8_des¸
[] = "simd_v8: SSE code, 8*VSIZE-wayÖarallelism";

1701 
	$simd_v8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1703 
i
;

1704 
∑ck_t
 
x„r
;

1705 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
, 
accum5
, 
accum6
, 
accum7
;

1706 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1707 
˙t
 = 
	`vec_Àngth
(
v
);

1708 
d©a_t
 
ªsu…
 = 
IDENT
;

1711 
i
 = 0; i < 
VSIZE
; i++)

1712 
x„r
.
d
[
i
] = 
IDENT
;

1713 
accum0
 = 
x„r
.
v
;

1714 
accum1
 = 
x„r
.
v
;

1715 
accum2
 = 
x„r
.
v
;

1716 
accum3
 = 
x„r
.
v
;

1717 
accum4
 = 
x„r
.
v
;

1718 
accum5
 = 
x„r
.
v
;

1719 
accum6
 = 
x„r
.
v
;

1720 
accum7
 = 
x„r
.
v
;

1723 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1724 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1725 
˙t
--;

1728 
˙t
 >8*
VSIZE
) {

1729 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1730 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1731 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1732 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1733 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1734 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1735 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1736 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1737 
accum0
 =áccum0 
OP
 
chunk0
;

1738 
accum1
 =áccum1 
OP
 
chunk1
;

1739 
accum2
 =áccum2 
OP
 
chunk2
;

1740 
accum3
 =áccum3 
OP
 
chunk3
;

1741 
accum4
 =áccum4 
OP
 
chunk4
;

1742 
accum5
 =áccum5 
OP
 
chunk5
;

1743 
accum6
 =áccum6 
OP
 
chunk6
;

1744 
accum7
 =áccum7 
OP
 
chunk7
;

1745 
d©a
 +8*
VSIZE
;

1746 
˙t
 -8*
VSIZE
;

1748 
˙t
) {

1749 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1750 
˙t
--;

1752 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1753 
x„r
.
v
 = x„r.v 
	`OP
 (
accum4
 
OP
 
accum5
ËOP (
accum6
 OP 
accum7
);

1754 
i
 = 0; i < 
VSIZE
; i++)

1755 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1756 *
de°
 = 
ªsu…
;

1757 
	}
}

1759 
	gsimd_v10_des¸
[] = "simd_v10: SSE code, 10*VSIZE-wayÖarallelism";

1760 
	$simd_v10_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1762 
i
;

1763 
∑ck_t
 
x„r
;

1764 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
, 
accum5
, 
accum6
, 
accum7
, 
accum8
, 
accum9
;

1765 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1766 
˙t
 = 
	`vec_Àngth
(
v
);

1767 
d©a_t
 
ªsu…
 = 
IDENT
;

1770 
i
 = 0; i < 
VSIZE
; i++)

1771 
x„r
.
d
[
i
] = 
IDENT
;

1772 
accum0
 = 
x„r
.
v
;

1773 
accum1
 = 
x„r
.
v
;

1774 
accum2
 = 
x„r
.
v
;

1775 
accum3
 = 
x„r
.
v
;

1776 
accum4
 = 
x„r
.
v
;

1777 
accum5
 = 
x„r
.
v
;

1778 
accum6
 = 
x„r
.
v
;

1779 
accum7
 = 
x„r
.
v
;

1780 
accum8
 = 
x„r
.
v
;

1781 
accum9
 = 
x„r
.
v
;

1784 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1785 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1786 
˙t
--;

1789 
˙t
 >10*
VSIZE
) {

1790 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1791 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1792 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1793 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1794 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1795 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1796 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1797 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1798 
vec_t
 
chunk8
 = *((vec_à*Ë(
d©a
+8*
VSIZE
));

1799 
vec_t
 
chunk9
 = *((vec_à*Ë(
d©a
+9*
VSIZE
));

1800 
accum0
 =áccum0 
OP
 
chunk0
;

1801 
accum1
 =áccum1 
OP
 
chunk1
;

1802 
accum2
 =áccum2 
OP
 
chunk2
;

1803 
accum3
 =áccum3 
OP
 
chunk3
;

1804 
accum4
 =áccum4 
OP
 
chunk4
;

1805 
accum5
 =áccum5 
OP
 
chunk5
;

1806 
accum6
 =áccum6 
OP
 
chunk6
;

1807 
accum7
 =áccum7 
OP
 
chunk7
;

1808 
accum8
 =áccum8 
OP
 
chunk8
;

1809 
accum9
 =áccum9 
OP
 
chunk9
;

1810 
d©a
 +10*
VSIZE
;

1811 
˙t
 -10*
VSIZE
;

1813 
˙t
) {

1814 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1815 
˙t
--;

1817 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1818 
x„r
.
v
 = x„r.v 
	`OP
 (
accum4
 
OP
 
accum5
ËOP (
accum6
 OP 
accum7
);

1819 
x„r
.
v
 = x„r.v 
	`OP
 (
accum8
 
OP
 
accum9
);

1820 
i
 = 0; i < 
VSIZE
; i++)

1821 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1822 *
de°
 = 
ªsu…
;

1823 
	}
}

1825 
	gsimd_v12_des¸
[] = "simd_v12: SSE code, 12*VSIZE-wayÖarallelism";

1826 
	$simd_v12_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1828 
i
;

1829 
∑ck_t
 
x„r
;

1830 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
, 
accum5
, 
accum6
, 
accum7
;

1831 
vec_t
 
accum8
, 
accum9
, 
accum10
, 
accum11
;

1832 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1833 
˙t
 = 
	`vec_Àngth
(
v
);

1834 
d©a_t
 
ªsu…
 = 
IDENT
;

1837 
i
 = 0; i < 
VSIZE
; i++)

1838 
x„r
.
d
[
i
] = 
IDENT
;

1839 
accum0
 = 
x„r
.
v
;

1840 
accum1
 = 
x„r
.
v
;

1841 
accum2
 = 
x„r
.
v
;

1842 
accum3
 = 
x„r
.
v
;

1843 
accum4
 = 
x„r
.
v
;

1844 
accum5
 = 
x„r
.
v
;

1845 
accum6
 = 
x„r
.
v
;

1846 
accum7
 = 
x„r
.
v
;

1847 
accum8
 = 
x„r
.
v
;

1848 
accum9
 = 
x„r
.
v
;

1849 
accum10
 = 
x„r
.
v
;

1850 
accum11
 = 
x„r
.
v
;

1853 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1854 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1855 
˙t
--;

1858 
˙t
 >12*
VSIZE
) {

1859 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1860 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1861 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1862 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1863 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1864 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1865 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1866 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1867 
vec_t
 
chunk8
 = *((vec_à*Ë(
d©a
+8*
VSIZE
));

1868 
vec_t
 
chunk9
 = *((vec_à*Ë(
d©a
+9*
VSIZE
));

1869 
vec_t
 
chunk10
 = *((vec_à*Ë(
d©a
+10*
VSIZE
));

1870 
vec_t
 
chunk11
 = *((vec_à*Ë(
d©a
+11*
VSIZE
));

1871 
accum0
 =áccum0 
OP
 
chunk0
;

1872 
accum1
 =áccum1 
OP
 
chunk1
;

1873 
accum2
 =áccum2 
OP
 
chunk2
;

1874 
accum3
 =áccum3 
OP
 
chunk3
;

1875 
accum4
 =áccum4 
OP
 
chunk4
;

1876 
accum5
 =áccum5 
OP
 
chunk5
;

1877 
accum6
 =áccum6 
OP
 
chunk6
;

1878 
accum7
 =áccum7 
OP
 
chunk7
;

1879 
accum8
 =áccum8 
OP
 
chunk8
;

1880 
accum9
 =áccum9 
OP
 
chunk9
;

1881 
accum10
 =áccum10 
OP
 
chunk10
;

1882 
accum11
 =áccum11 
OP
 
chunk11
;

1883 
d©a
 +12*
VSIZE
;

1884 
˙t
 -12*
VSIZE
;

1886 
˙t
) {

1887 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1888 
˙t
--;

1890 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1891 
x„r
.
v
 = x„r.v 
	`OP
 (
accum4
 
OP
 
accum5
ËOP (
accum6
 OP 
accum7
);

1892 
x„r
.
v
 = x„r.v 
	`OP
 (
accum8
 
OP
 
accum9
ËOP (
accum10
 OP 
accum11
);

1893 
i
 = 0; i < 
VSIZE
; i++)

1894 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1895 *
de°
 = 
ªsu…
;

1896 
	}
}

1899 
	gsimd_v2a_des¸
[] = "simd_v2a: SSE code, 2*VSIZE-wayÖarallelism,Ñeassociate";

1900 
	$simd_v2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1902 
i
;

1903 
∑ck_t
 
x„r
;

1904 
vec_t
 
accum
;

1905 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1906 
˙t
 = 
	`vec_Àngth
(
v
);

1907 
d©a_t
 
ªsu…
 = 
IDENT
;

1910 
i
 = 0; i < 
VSIZE
; i++)

1911 
x„r
.
d
[
i
] = 
IDENT
;

1912 
accum
 = 
x„r
.
v
;

1915 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1916 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1917 
˙t
--;

1920 
˙t
 >2*
VSIZE
) {

1921 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1922 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1923 
accum
 =áccum 
	`OP
 (
chunk0
 
OP
 
chunk1
);

1924 
d©a
 +2*
VSIZE
;

1925 
˙t
 -2*
VSIZE
;

1927 
˙t
) {

1928 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1929 
˙t
--;

1931 
x„r
.
v
 = 
accum
;

1932 
i
 = 0; i < 
VSIZE
; i++)

1933 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1934 *
de°
 = 
ªsu…
;

1935 
	}
}

1937 
	gsimd_v4a_des¸
[] = "simd_v4a: SSE code, 4*VSIZE-wayÖarallelism,Ñeassociate";

1938 
	$simd_v4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1940 
i
;

1941 
∑ck_t
 
x„r
;

1942 
vec_t
 
accum
;

1943 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1944 
˙t
 = 
	`vec_Àngth
(
v
);

1945 
d©a_t
 
ªsu…
 = 
IDENT
;

1948 
i
 = 0; i < 
VSIZE
; i++)

1949 
x„r
.
d
[
i
] = 
IDENT
;

1950 
accum
 = 
x„r
.
v
;

1953 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1954 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1955 
˙t
--;

1959 
˙t
 >4*
VSIZE
) {

1960 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1961 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1962 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1963 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1964 
accum
 =áccum 
OP


1965 ((
chunk0
 
OP
 
chunk1
Ë
	`OP
 (
chunk2
 OP 
chunk3
));

1966 
d©a
 +4*
VSIZE
;

1967 
˙t
 -4*
VSIZE
;

1971 
˙t
) {

1972 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1973 
˙t
--;

1975 
x„r
.
v
 = 
accum
;

1976 
i
 = 0; i < 
VSIZE
; i++)

1977 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1978 *
de°
 = 
ªsu…
;

1979 
	}
}

1981 
	gsimd_v8a_des¸
[] = "simd_v8a: SSE code, 8*VSIZE-wayÖarallelism,Ñeassociate";

1982 
	$simd_v8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1984 
i
;

1985 
∑ck_t
 
x„r
;

1986 
vec_t
 
accum
;

1987 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1988 
˙t
 = 
	`vec_Àngth
(
v
);

1989 
d©a_t
 
ªsu…
 = 
IDENT
;

1992 
i
 = 0; i < 
VSIZE
; i++)

1993 
x„r
.
d
[
i
] = 
IDENT
;

1994 
accum
 = 
x„r
.
v
;

1997 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1998 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1999 
˙t
--;

2002 
˙t
 >8*
VSIZE
) {

2003 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

2004 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

2005 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

2006 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

2007 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

2008 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

2009 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

2010 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

2011 
accum
 =áccum 
OP


2012 (((
chunk0
 
OP
 
chunk1
Ë
	`OP
 (
chunk2
 OP 
chunk3
))

2013 
OP


2014 ((
chunk4
 
OP
 
chunk5
Ë
	`OP
 (
chunk6
 OP 
chunk7
)));

2015 
d©a
 +8*
VSIZE
;

2016 
˙t
 -8*
VSIZE
;

2018 
˙t
) {

2019 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

2020 
˙t
--;

2022 
x„r
.
v
 = 
accum
;

2023 
i
 = 0; i < 
VSIZE
; i++)

2024 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

2025 *
de°
 = 
ªsu…
;

2026 
	}
}

2029 
	$ªgi°î_comböîs
()

2031 #i‚de‡
UNROLL_ONLY


2032 
	`add_comböî
(
comböe1
, comböe1, 
comböe1_des¸
);

2033 
	`add_comböî
(
comböe2
, 
comböe1
, 
comböe2_des¸
);

2034 
	`add_comböî
(
comböe3
, 
comböe1
, 
comböe3_des¸
);

2035 
	`add_comböî
(
comböe3w
, 
comböe1
, 
comböe3w_des¸
);

2037 
	`add_comböî
(
comböe4
, 
comböe1
,
comböe4_des¸
);

2038 #i‚de‡
UNROLL_ONLY


2039 
	`add_comböî
(
comböe4b
, 
comböe1
, 
comböe4b_des¸
);

2040 
	`add_comböî
(
comböe4p
, 
comböe1
, 
comböe4p_des¸
);

2042 
	`add_comböî
(
comböe5
, 
comböe1
, 
comböe5_des¸
);

2043 #i‚de‡
UNROLL_ONLY


2044 
	`add_comböî
(
comböe5p
, 
comböe1
, 
comböe5p_des¸
);

2045 
	`add_comböî
(
uƒﬁl2aw_comböe
, 
comböe1
, 
uƒﬁl2aw_des¸
);

2047 
	`add_comböî
(
uƒﬁl3a_comböe
, 
comböe1
, 
uƒﬁl3a_des¸
);

2048 
	`add_comböî
(
uƒﬁl4a_comböe
, 
comböe1
, 
uƒﬁl4a_des¸
);

2049 
	`add_comböî
(
uƒﬁl5a_comböe
, 
comböe1
, 
uƒﬁl5a_des¸
);

2050 
	`add_comböî
(
uƒﬁl6a_comböe
, 
comböe1
, 
uƒﬁl6a_des¸
);

2051 
	`add_comböî
(
uƒﬁl7a_comböe
, 
comböe1
, 
uƒﬁl7a_des¸
);

2052 
	`add_comböî
(
uƒﬁl8a_comböe
, 
comböe1
, 
uƒﬁl8a_des¸
);

2053 
	`add_comböî
(
uƒﬁl9a_comböe
, 
comböe1
, 
uƒﬁl9a_des¸
);

2054 
	`add_comböî
(
uƒﬁl10a_comböe
, 
comböe1
, 
uƒﬁl10a_des¸
);

2055 
	`add_comböî
(
uƒﬁl16a_comböe
, 
comböe1
, 
uƒﬁl16a_des¸
);

2056 #i‚de‡
UNROLL_ONLY


2057 
	`add_comböî
(
uƒﬁl2_comböe
, 
comböe1
, 
uƒﬁl2_des¸
);

2058 
	`add_comböî
(
uƒﬁl3_comböe
, 
comböe1
, 
uƒﬁl3_des¸
);

2059 
	`add_comböî
(
uƒﬁl4_comböe
, 
comböe1
, 
uƒﬁl4_des¸
);

2060 
	`add_comböî
(
uƒﬁl8_comböe
, 
comböe1
, 
uƒﬁl8_des¸
);

2061 
	`add_comböî
(
uƒﬁl16_comböe
, 
comböe1
, 
uƒﬁl16_des¸
);

2062 
	`add_comböî
(
comböe6
, 
comböe1
, 
comböe6_des¸
);

2063 
	`add_comböî
(
uƒﬁl4x2a_comböe
, 
comböe1
, 
uƒﬁl4x2a_des¸
);

2064 
	`add_comböî
(
uƒﬁl8x2a_comböe
, 
comböe1
, 
uƒﬁl8x2a_des¸
);

2065 
	`add_comböî
(
uƒﬁl3x3a_comböe
, 
comböe1
, 
uƒﬁl3x3a_des¸
);

2066 
	`add_comböî
(
uƒﬁl4x4a_comböe
, 
comböe1
, 
uƒﬁl4x4a_des¸
);

2067 
	`add_comböî
(
uƒﬁl5x5a_comböe
, 
comböe1
, 
uƒﬁl5x5a_des¸
);

2068 
	`add_comböî
(
uƒﬁl6x6a_comböe
, 
comböe1
, 
uƒﬁl6x6a_des¸
);

2069 
	`add_comböî
(
uƒﬁl7x7a_comböe
, 
comböe1
, 
uƒﬁl7x7a_des¸
);

2070 
	`add_comböî
(
uƒﬁl8x4a_comböe
, 
comböe1
, 
uƒﬁl8x4a_des¸
);

2071 
	`add_comböî
(
uƒﬁl8x8a_comböe
, 
comböe1
, 
uƒﬁl8x8a_des¸
);

2072 
	`add_comböî
(
uƒﬁl9x9a_comböe
, 
comböe1
, 
uƒﬁl9x9a_des¸
);

2073 
	`add_comböî
(
uƒﬁl10x10a_comböe
, 
comböe1
, 
uƒﬁl10x10a_des¸
);

2074 
	`add_comböî
(
uƒﬁl12x6a_comböe
, 
comböe1
, 
uƒﬁl12x6a_des¸
);

2075 
	`add_comböî
(
uƒﬁl12x12a_comböe
, 
comböe1
, 
uƒﬁl12x12a_des¸
);

2076 
	`add_comböî
(
uƒﬁl16x16a_comböe
, 
comböe1
, 
uƒﬁl16x16a_des¸
);

2077 
	`add_comböî
(
uƒﬁl20x20a_comböe
, 
comböe1
, 
uƒﬁl20x20a_des¸
);

2078 
	`add_comböî
(
uƒﬁl8x2_comböe
, 
comböe1
, 
uƒﬁl8x2_des¸
);

2079 
	`add_comböî
(
uƒﬁl8x4_comböe
, 
comböe1
, 
uƒﬁl8x4_des¸
);

2080 
	`add_comböî
(
uƒﬁl8x8_comböe
, 
comböe1
, 
uƒﬁl8x8_des¸
);

2081 
	`add_comböî
(
uƒﬁl9x3_comböe
, 
comböe1
, 
uƒﬁl9x3_des¸
);

2082 
	`add_comböî
(
uƒﬁlx2as_comböe
, 
comböe1
, 
uƒﬁlx2as_des¸
);

2083 
	`add_comböî
(
comböe7
, 
comböe1
, 
comböe7_des¸
);

2084 
	`add_comböî
(
uƒﬁl3Ø_comböe
, 
comböe1
, 
uƒﬁl3Ø_des¸
);

2085 
	`add_comböî
(
uƒﬁl4Ø_comböe
, 
comböe1
, 
uƒﬁl4Ø_des¸
);

2086 
	`add_comböî
(
uƒﬁl5Ø_comböe
, 
comböe1
, 
uƒﬁl5Ø_des¸
);

2087 
	`add_comböî
(
uƒﬁl6Ø_comböe
, 
comböe1
, 
uƒﬁl6Ø_des¸
);

2088 
	`add_comböî
(
uƒﬁl7Ø_comböe
, 
comböe1
, 
uƒﬁl7Ø_des¸
);

2089 
	`add_comböî
(
uƒﬁl8Ø_comböe
, 
comböe1
, 
uƒﬁl8Ø_des¸
);

2090 
	`add_comböî
(
uƒﬁl9Ø_comböe
, 
comböe1
, 
uƒﬁl9Ø_des¸
);

2091 
	`add_comböî
(
uƒﬁl10Ø_comböe
, 
comböe1
, 
uƒﬁl10Ø_des¸
);

2092 
	`add_comböî
(
uƒﬁl12Ø_comböe
, 
comböe1
, 
uƒﬁl12Ø_des¸
);

2093 
	`add_comböî
(
simd_v1_comböe
, 
comböe1
, 
simd_v1_des¸
);

2094 
	`add_comböî
(
simd_v2_comböe
, 
comböe1
, 
simd_v2_des¸
);

2095 
	`add_comböî
(
simd_v4_comböe
, 
comböe1
, 
simd_v4_des¸
);

2096 
	`add_comböî
(
simd_v8_comböe
, 
comböe1
, 
simd_v8_des¸
);

2097 
	`add_comböî
(
simd_v10_comböe
, 
comböe1
, 
simd_v10_des¸
);

2098 
	`add_comböî
(
simd_v12_comböe
, 
comböe1
, 
simd_v12_des¸
);

2099 
	`add_comböî
(
simd_v2a_comböe
, 
comböe1
, 
simd_v2a_des¸
);

2100 
	`add_comböî
(
simd_v4a_comböe
, 
comböe1
, 
simd_v4a_des¸
);

2101 
	`add_comböî
(
simd_v8a_comböe
, 
comböe1
, 
simd_v8a_des¸
);

2102 
	`log_comböî
(
simd_v8a_comböe
, 0.16, 0.24);

2104 
	}
}

	@opt/dpb-O2.c

1 
	~<°dlib.h
>

2 
	~"comböe.h
"

6 
	gcomböe1_des¸
[] = "combine1: Maximum use of dataábstraction";

9 
	$comböe1
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

11 
i
;

13 *
de°
 = 
IDENT
;

14 
i
 = 0; i < 
	`vec_Àngth
(
v
); i++) {

15 
d©a_t
 
vÆ
;

16 
	`gë_vec_ñemít
(
v
, 
i
, &
vÆ
);

18 *
de°
 = *de° 
OP
 
vÆ
;

21 
	}
}

24 
	gcomböe2_des¸
[] = "combine2: Take vec_length() out ofÜoop";

27 
	$comböe2
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

29 
i
;

30 
Àngth
 = 
	`vec_Àngth
(
v
);

32 *
de°
 = 
IDENT
;

33 
i
 = 0; i < 
Àngth
; i++) {

34 
d©a_t
 
vÆ
;

35 
	`gë_vec_ñemít
(
v
, 
i
, &
vÆ
);

36 *
de°
 = *de° 
OP
 
vÆ
;

38 
	}
}

41 
	gcomböe3_des¸
[] = "combine3: ArrayÑeferenceÅo vector data";

44 
	$comböe3
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

46 
i
;

47 
Àngth
 = 
	`vec_Àngth
(
v
);

48 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

50 *
de°
 = 
IDENT
;

51 
i
 = 0; i < 
Àngth
; i++) {

52 *
de°
 = *de° 
OP
 
d©a
[
i
];

54 
	}
}

57 
	gcomböe3w_des¸
[] = "combine3w: Update *dest withinÜoop only with write";

60 
	$comböe3w
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

62 
i
;

63 
Àngth
 = 
	`vec_Àngth
(
v
);

64 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

65 
d©a_t
 
acc
 = 
IDENT
;

68 *
de°
 = 
acc
;

70 
i
 = 0; i < 
Àngth
; i++) {

71 
acc
 =ác¯
OP
 
d©a
[
i
];

72 *
de°
 = 
acc
;

74 
	}
}

77 
	gcomböe4_des¸
[] = "combine4: ArrayÑeference,áccumulate inÅemporary";

80 
	$comböe4
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

82 
i
;

83 
Àngth
 = 
	`vec_Àngth
(
v
);

84 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

85 
d©a_t
 
acc
 = 
IDENT
;

87 
i
 = 0; i < 
Àngth
; i++) {

88 
acc
 =ác¯
OP
 
d©a
[
i
];

90 *
de°
 = 
acc
;

91 
	}
}

94 
	gcomböe4b_des¸
[] = "combine4b: Include bonds check inÜoop";

97 
	$comböe4b
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

99 
i
;

100 
Àngth
 = 
	`vec_Àngth
(
v
);

101 
d©a_t
 
acc
 = 
IDENT
;

103 
i
 = 0; i < 
Àngth
; i++) {

104 i‡(
i
 >0 && i < 
v
->
Àn
) {

105 
acc
 =ác¯
OP
 
v
->
d©a
[
i
];

108 *
de°
 = 
acc
;

109 
	}
}

113 
	gcomböe4p_des¸
[] = "combine4p: PointerÑeference,áccumulate inÅemporary";

116 
	$comböe4p
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

118 
Àngth
 = 
	`vec_Àngth
(
v
);

119 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

120 
d©a_t
 *
díd
 = 
d©a
+
Àngth
;

121 
d©a_t
 
acc
 = 
IDENT
;

123 ; 
d©a
 < 
díd
; data++)

124 
acc
 =ác¯
OP
 *
d©a
;

125 *
de°
 = 
acc
;

126 
	}
}

130 
	gcomböe5_des¸
[] = "combine5: Array code, unrolled by 2";

133 
	$comböe5
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

135 
i
;

136 
Àngth
 = 
	`vec_Àngth
(
v
);

137 
limô
 = 
Àngth
-1;

138 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

139 
d©a_t
 
acc
 = 
IDENT
;

142 
i
 = 0; i < 
limô
; i+=2) {

144 
acc
 = (ac¯
OP
 
d©a
[
i
]) OP data[i+1];

149 ; 
i
 < 
Àngth
; i++) {

150 
acc
 =ác¯
OP
 
d©a
[
i
];

152 *
de°
 = 
acc
;

153 
	}
}

156 
	guƒﬁl3a_des¸
[] = "unroll3a: Array code, unrolled by 3";

157 
	$uƒﬁl3a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

159 
i
;

160 
Àngth
 = 
	`vec_Àngth
(
v
);

161 
limô
 = 
Àngth
-2;

162 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

163 
d©a_t
 
acc
 = 
IDENT
;

166 
i
 = 0; i < 
limô
; i+=3) {

167 
acc
 =ác¯
OP
 
d©a
[
i
];

168 
acc
 =ác¯
OP
 
d©a
[
i
+1];

169 
acc
 =ác¯
OP
 
d©a
[
i
+2];

173 ; 
i
 < 
Àngth
; i++) {

174 
acc
 =ác¯
OP
 
d©a
[
i
];

176 *
de°
 = 
acc
;

177 
	}
}

180 
	gcomböe5p_des¸
[] = "combine5p: Pointer code, unrolled by 2, forÜoop";

183 
	$comböe5p
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

185 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

186 
d©a_t
 *
díd
 = 
d©a
+
	`vec_Àngth
(
v
);

187 
d©a_t
 *
dlimô
 = 
díd
-1;

188 
d©a_t
 
acc
 = 
IDENT
;

191 ; 
d©a
 < 
dlimô
; data += 2) {

192 
acc
 =ác¯
OP
 
d©a
[0] OP data[1];

196 ; 
d©a
 < 
díd
; data++) {

197 
acc
 =ác¯
OP
 
d©a
[0];

199 *
de°
 = 
acc
;

200 
	}
}

203 
	guƒﬁl2aw_des¸
[] = "unroll2aw: Array code, unrolled by 2, whileÜoop";

204 
	$uƒﬁl2aw_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

206 
i
 = 0;

207 
Àngth
 = 
	`vec_Àngth
(
v
);

208 
limô
 = 
Àngth
-1;

209 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

210 
d©a_t
 
acc
 = 
IDENT
;

213 
i
 < 
limô
) {

214 
acc
 =ác¯
OP
 
d©a
[
i
];

215 
i
+= 2;

216 
acc
 =ác¯
OP
 
d©a
[
i
-1];

220 ; 
i
 < 
Àngth
; i++) {

221 
acc
 =ác¯
OP
 
d©a
[
i
];

223 *
de°
 = 
acc
;

224 
	}
}

227 
	guƒﬁl4a_des¸
[] = "unroll4a: Array code, unrolled by 4";

228 
	$uƒﬁl4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

230 
i
;

231 
Àngth
 = 
	`vec_Àngth
(
v
);

232 
limô
 = 
Àngth
-3;

233 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

234 
d©a_t
 
acc
 = 
IDENT
;

237 
i
 = 0; i < 
limô
; i+=4) {

238 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

239 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

243 ; 
i
 < 
Àngth
; i++) {

244 
acc
 =ác¯
OP
 
d©a
[
i
];

246 *
de°
 = 
acc
;

247 
	}
}

249 
	guƒﬁl5a_des¸
[] = "unroll5a: Array code, unrolled by 5";

252 
	$uƒﬁl5
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

255 
	$uƒﬁl5a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

259 
i
;

260 
Àngth
 = 
	`vec_Àngth
(
v
);

261 
limô
 = 
Àngth
-4;

262 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

263 
d©a_t
 
acc
 = 
IDENT
;

266 
i
 = 0; i < 
limô
; i+=5) {

267 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

268 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

269 
acc
 =ác¯
OP
 
d©a
[
i
+4];

273 ; 
i
 < 
Àngth
; i++) {

274 
acc
 =ác¯
OP
 
d©a
[
i
];

276 *
de°
 = 
acc
;

277 
	}
}

280 
	guƒﬁl6a_des¸
[] = "unroll6a: Array code, unrolled by 6";

281 
	$uƒﬁl6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

283 
i
;

284 
Àngth
 = 
	`vec_Àngth
(
v
);

285 
limô
 = 
Àngth
-5;

286 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

287 
d©a_t
 
acc
 = 
IDENT
;

290 
i
 = 0; i < 
limô
; i+=6) {

291 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

292 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

293 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

297 ; 
i
 < 
Àngth
; i++) {

298 
acc
 =ác¯
OP
 
d©a
[
i
];

300 *
de°
 = 
acc
;

301 
	}
}

303 
	guƒﬁl7a_des¸
[] = "unroll7a: Array code, unrolled by 7";

304 
	$uƒﬁl7a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

306 
i
;

307 
Àngth
 = 
	`vec_Àngth
(
v
);

308 
limô
 = 
Àngth
-6;

309 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

310 
d©a_t
 
acc
 = 
IDENT
;

313 
i
 = 0; i < 
limô
; i+=7) {

314 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

315 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

316 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

317 
acc
 =ác¯
OP
 
d©a
[
i
+6];

321 ; 
i
 < 
Àngth
; i++) {

322 
acc
 =ác¯
OP
 
d©a
[
i
];

324 *
de°
 = 
acc
;

325 
	}
}

328 
	guƒﬁl8a_des¸
[] = "unroll8a: Array code, unrolled by 8";

329 
	$uƒﬁl8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

331 
i
;

332 
Àngth
 = 
	`vec_Àngth
(
v
);

333 
limô
 = 
Àngth
-7;

334 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

335 
d©a_t
 
acc
 = 
IDENT
;

338 
i
 = 0; i < 
limô
; i+=8) {

339 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

340 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

341 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

342 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

346 ; 
i
 < 
Àngth
; i++) {

347 
acc
 =ác¯
OP
 
d©a
[
i
];

349 *
de°
 = 
acc
;

350 
	}
}

352 
	guƒﬁl9a_des¸
[] = "unroll9a: Array code, unrolled by 9";

353 
	$uƒﬁl9a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

355 
i
;

356 
Àngth
 = 
	`vec_Àngth
(
v
);

357 
limô
 = 
Àngth
-8;

358 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

359 
d©a_t
 
acc
 = 
IDENT
;

362 
i
 = 0; i < 
limô
; i+=9) {

363 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

364 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

365 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

366 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

367 
acc
 =ác¯
OP
 
d©a
[
i
+8];

371 ; 
i
 < 
Àngth
; i++) {

372 
acc
 =ác¯
OP
 
d©a
[
i
];

374 *
de°
 = 
acc
;

375 
	}
}

377 
	guƒﬁl10a_des¸
[] = "unroll10a: Array code, unrolled by 10";

378 
	$uƒﬁl10a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

380 
i
;

381 
Àngth
 = 
	`vec_Àngth
(
v
);

382 
limô
 = 
Àngth
-9;

383 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

384 
d©a_t
 
acc
 = 
IDENT
;

387 
i
 = 0; i < 
limô
; i+=10) {

388 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

389 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

390 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

391 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

392 
acc
 =ác¯
OP
 
d©a
[
i
+8] OP data[i+9];

396 ; 
i
 < 
Àngth
; i++) {

397 
acc
 =ác¯
OP
 
d©a
[
i
];

399 *
de°
 = 
acc
;

400 
	}
}

403 
	guƒﬁl16a_des¸
[] = "unroll16a: Array code, unrolled by 16";

404 
	$uƒﬁl16a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

406 
i
;

407 
Àngth
 = 
	`vec_Àngth
(
v
);

408 
limô
 = 
Àngth
-15;

409 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

410 
d©a_t
 
acc
 = 
IDENT
;

413 
i
 = 0; i < 
limô
; i+=16) {

414 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

415 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

416 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

417 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

418 
acc
 =ác¯
OP
 
d©a
[
i
+8] OP data[i+9];

419 
acc
 =ác¯
OP
 
d©a
[
i
+10] OP data[i+11];

420 
acc
 =ác¯
OP
 
d©a
[
i
+12] OP data[i+13];

421 
acc
 =ác¯
OP
 
d©a
[
i
+14] OP data[i+15];

425 ; 
i
 < 
Àngth
; i++) {

426 
acc
 =ác¯
OP
 
d©a
[
i
];

428 *
de°
 = 
acc
;

429 
	}
}

431 
	guƒﬁl2_des¸
[] = "unroll2: Pointer code, unrolled by 2";

432 
	$uƒﬁl2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

434 
Àngth
 = 
	`vec_Àngth
(
v
);

435 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

436 
ovî
 = 
Àngth
%2;

437 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

438 
d©a_t
 
acc
 = 
IDENT
;

440 
d©a
 < 
díd
) {

441 
acc
 =ác¯
OP
 
d©a
[0];

442 
acc
 =ác¯
OP
 
d©a
[1];

443 
d©a
 += 2;

445 
díd
 +
ovî
;

446 
d©a
 < 
díd
) {

447 
acc
 =ác¯
OP
 *
d©a
;

448 
d©a
 ++;

450 *
de°
 = 
acc
;

451 
	}
}

454 
	guƒﬁl3_des¸
[] = "unroll3: Pointer code, unrolled by 3";

455 
	$uƒﬁl3_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

457 
Àngth
 = 
	`vec_Àngth
(
v
);

458 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

459 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-2;

460 
d©a_t
 
acc
 = 
IDENT
;

462 
d©a
 < 
díd
) {

463 
acc
 =ác¯
OP
 
d©a
[0];

464 
acc
 =ác¯
OP
 
d©a
[1];

465 
acc
 =ác¯
OP
 
d©a
[2];

466 
d©a
 += 3;

468 
díd
 += 2;

469 
d©a
 < 
díd
) {

470 
acc
 =ác¯
OP
 *
d©a
;

471 
d©a
 ++;

473 *
de°
 = 
acc
;

474 
	}
}

477 
	guƒﬁl4_des¸
[] = "unroll4: Pointer code, unrolled by 4";

478 
	$uƒﬁl4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

480 
Àngth
 = 
	`vec_Àngth
(
v
);

481 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

482 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-3;

483 
d©a_t
 
acc
 = 
IDENT
;

485 
d©a
 < 
díd
) {

486 
acc
 =ác¯
OP
 
d©a
[0];

487 
acc
 =ác¯
OP
 
d©a
[1];

488 
acc
 =ác¯
OP
 
d©a
[2];

489 
acc
 =ác¯
OP
 
d©a
[3];

490 
d©a
 += 4;

492 
díd
 += 3;

493 
d©a
 < 
díd
) {

494 
acc
 =ác¯
OP
 *
d©a
;

495 
d©a
 ++;

497 *
de°
 = 
acc
;

498 
	}
}

500 
	guƒﬁl8_des¸
[] = "unroll8: Pointer code, unrolled by 8";

501 
	$uƒﬁl8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

503 
Àngth
 = 
	`vec_Àngth
(
v
);

504 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

505 
ovî
 = 
Àngth
%8;

506 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

507 
d©a_t
 
acc
 = 
IDENT
;

509 
d©a
 < 
díd
) {

510 
acc
 =ác¯
OP
 
d©a
[0];

511 
acc
 =ác¯
OP
 
d©a
[1];

512 
acc
 =ác¯
OP
 
d©a
[2];

513 
acc
 =ác¯
OP
 
d©a
[3];

514 
acc
 =ác¯
OP
 
d©a
[4];

515 
acc
 =ác¯
OP
 
d©a
[5];

516 
acc
 =ác¯
OP
 
d©a
[6];

517 
acc
 =ác¯
OP
 
d©a
[7];

518 
d©a
 += 8;

520 
díd
 +
ovî
;

521 
d©a
 < 
díd
) {

522 
acc
 =ác¯
OP
 *
d©a
;

523 
d©a
 ++;

525 *
de°
 = 
acc
;

526 
	}
}

528 
	guƒﬁl16_des¸
[] = "unroll16: Pointer code, unrolled by 16";

529 
	$uƒﬁl16_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

531 
Àngth
 = 
	`vec_Àngth
(
v
);

532 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

533 
ovî
 = 
Àngth
%16;

534 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

535 
d©a_t
 
acc
 = 
IDENT
;

537 
d©a
 < 
díd
) {

538 
acc
 =ác¯
OP
 
d©a
[0];

539 
acc
 =ác¯
OP
 
d©a
[1];

540 
acc
 =ác¯
OP
 
d©a
[2];

541 
acc
 =ác¯
OP
 
d©a
[3];

542 
acc
 =ác¯
OP
 
d©a
[4];

543 
acc
 =ác¯
OP
 
d©a
[5];

544 
acc
 =ác¯
OP
 
d©a
[6];

545 
acc
 =ác¯
OP
 
d©a
[7];

546 
acc
 =ác¯
OP
 
d©a
[8];

547 
acc
 =ác¯
OP
 
d©a
[9];

548 
acc
 =ác¯
OP
 
d©a
[10];

549 
acc
 =ác¯
OP
 
d©a
[11];

550 
acc
 =ác¯
OP
 
d©a
[12];

551 
acc
 =ác¯
OP
 
d©a
[13];

552 
acc
 =ác¯
OP
 
d©a
[14];

553 
acc
 =ác¯
OP
 
d©a
[15];

554 
d©a
 += 16;

556 
díd
 +
ovî
;

557 
d©a
 < 
díd
) {

558 
acc
 =ác¯
OP
 *
d©a
;

559 
d©a
 ++;

561 *
de°
 = 
acc
;

562 
	}
}

565 
	gcomböe6_des¸
[] = "combine6: Array code, unrolled by 2, Superscalar x2";

568 
	$comböe6
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

570 
i
;

571 
Àngth
 = 
	`vec_Àngth
(
v
);

572 
limô
 = 
Àngth
-1;

573 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

574 
d©a_t
 
acc0
 = 
IDENT
;

575 
d©a_t
 
acc1
 = 
IDENT
;

578 
i
 = 0; i < 
limô
; i+=2) {

579 
acc0
 =ácc0 
OP
 
d©a
[
i
];

580 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

584 ; 
i
 < 
Àngth
; i++) {

585 
acc0
 =ácc0 
OP
 
d©a
[
i
];

587 *
de°
 = 
acc0
 
OP
 
acc1
;

588 
	}
}

591 
	guƒﬁl4x2a_des¸
[] = "unroll4x2a: Array code, unrolled by 4, Superscalar x2";

592 
	$uƒﬁl4x2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

594 
i
;

595 
Àngth
 = 
	`vec_Àngth
(
v
);

596 
limô
 = 
Àngth
-3;

597 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

598 
d©a_t
 
acc0
 = 
IDENT
;

599 
d©a_t
 
acc1
 = 
IDENT
;

602 
i
 = 0; i < 
limô
; i+=4) {

603 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

604 
acc0
 =ácc0 
OP
 
d©a
[
i
+2]; 
acc1
 =ácc1 OP data[i+3];

608 ; 
i
 < 
Àngth
; i++) {

609 
acc0
 =ácc0 
OP
 
d©a
[
i
];

611 *
de°
 = 
acc0
 
OP
 
acc1
;

612 
	}
}

615 
	guƒﬁl8x2a_des¸
[] = "unroll8x2a: Array code, unrolled by 8, Superscalar x2";

616 
	$uƒﬁl8x2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

618 
i
;

619 
Àngth
 = 
	`vec_Àngth
(
v
);

620 
limô
 = 
Àngth
-7;

621 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

622 
d©a_t
 
acc0
 = 
IDENT
;

623 
d©a_t
 
acc1
 = 
IDENT
;

626 
i
 = 0; i < 
limô
; i+=8) {

627 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

628 
acc0
 =ácc0 
OP
 
d©a
[
i
+2]; 
acc1
 =ácc1 OP data[i+3];

629 
acc0
 =ácc0 
OP
 
d©a
[
i
+4]; 
acc1
 =ácc1 OP data[i+5];

630 
acc0
 =ácc0 
OP
 
d©a
[
i
+6]; 
acc1
 =ácc1 OP data[i+7];

634 ; 
i
 < 
Àngth
; i++) {

635 
acc0
 =ácc0 
OP
 
d©a
[
i
];

637 *
de°
 = 
acc0
 
OP
 
acc1
;

638 
	}
}

640 
	guƒﬁl3x3a_des¸
[] = "unroll3x3a: Array code, unrolled by 3, Superscalar x3";

641 
	$uƒﬁl3x3a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

643 
i
;

644 
Àngth
 = 
	`vec_Àngth
(
v
);

645 
limô
 = 
Àngth
-2;

646 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

647 
d©a_t
 
acc0
 = 
IDENT
;

648 
d©a_t
 
acc1
 = 
IDENT
;

649 
d©a_t
 
acc2
 = 
IDENT
;

652 
i
 = 0; i < 
limô
; i+=3) {

653 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

654 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

658 ; 
i
 < 
Àngth
; i++) {

659 
acc0
 =ácc0 
OP
 
d©a
[
i
];

661 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
;

662 
	}
}

665 
	guƒﬁl4x4a_des¸
[] = "unroll4x4a: Array code, unrolled by 4, Superscalar x4";

666 
	$uƒﬁl4x4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

668 
i
;

669 
Àngth
 = 
	`vec_Àngth
(
v
);

670 
limô
 = 
Àngth
-3;

671 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

672 
d©a_t
 
acc0
 = 
IDENT
;

673 
d©a_t
 
acc1
 = 
IDENT
;

674 
d©a_t
 
acc2
 = 
IDENT
;

675 
d©a_t
 
acc3
 = 
IDENT
;

678 
i
 = 0; i < 
limô
; i+=4) {

679 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

680 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

684 ; 
i
 < 
Àngth
; i++) {

685 
acc0
 =ácc0 
OP
 
d©a
[
i
];

687 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
);

689 
	}
}

691 
	guƒﬁl8x4a_des¸
[] = "unroll8x4a: Array code, unrolled by 8, Superscalar x4";

692 
	$uƒﬁl8x4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

694 
i
;

695 
Àngth
 = 
	`vec_Àngth
(
v
);

696 
limô
 = 
Àngth
-7;

697 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

698 
d©a_t
 
acc0
 = 
IDENT
;

699 
d©a_t
 
acc1
 = 
IDENT
;

700 
d©a_t
 
acc2
 = 
IDENT
;

701 
d©a_t
 
acc3
 = 
IDENT
;

704 
i
 = 0; i < 
limô
; i+=8) {

705 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

706 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

707 
acc0
 =ácc0 
OP
 
d©a
[
i
+4]; 
acc1
 =ácc1 OP data[i+5];

708 
acc2
 =ácc2 
OP
 
d©a
[
i
+6]; 
acc3
 =ácc3 OP data[i+7];

712 ; 
i
 < 
Àngth
; i++) {

713 
acc0
 =ácc0 
OP
 
d©a
[
i
];

715 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
 OP 
acc3
;

716 
	}
}

718 
	guƒﬁl12x6a_des¸
[] = "unroll2x6a: Array code, unrolled by 12, Superscalar x6";

719 
	$uƒﬁl12x6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

721 
i
;

722 
Àngth
 = 
	`vec_Àngth
(
v
);

723 
limô
 = 
Àngth
-11;

724 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

725 
d©a_t
 
acc0
 = 
IDENT
;

726 
d©a_t
 
acc1
 = 
IDENT
;

727 
d©a_t
 
acc2
 = 
IDENT
;

728 
d©a_t
 
acc3
 = 
IDENT
;

729 
d©a_t
 
acc4
 = 
IDENT
;

730 
d©a_t
 
acc5
 = 
IDENT
;

733 
i
 = 0; i < 
limô
; i+=12) {

734 
acc0
 =ácc0 
OP
 
d©a
[
i
];

735 
acc0
 =ácc0 
OP
 
d©a
[
i
+6];

736 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

737 
acc1
 =ácc1 
OP
 
d©a
[
i
+7];

738 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

739 
acc2
 =ácc2 
OP
 
d©a
[
i
+8];

740 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

741 
acc3
 =ácc3 
OP
 
d©a
[
i
+9];

742 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

743 
acc4
 =ácc4 
OP
 
d©a
[
i
+10];

744 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

745 
acc5
 =ácc5 
OP
 
d©a
[
i
+11];

749 ; 
i
 < 
Àngth
; i++) {

750 
acc0
 =ácc0 
OP
 
d©a
[
i
];

752 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
);

753 
	}
}

755 
	guƒﬁl12x12a_des¸
[] = "unroll12x12a: Array code, unrolled by 12, Superscalar x12";

756 
	$uƒﬁl12x12a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

758 
i
;

759 
Àngth
 = 
	`vec_Àngth
(
v
);

760 
limô
 = 
Àngth
-11;

761 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

762 
d©a_t
 
acc0
 = 
IDENT
;

763 
d©a_t
 
acc1
 = 
IDENT
;

764 
d©a_t
 
acc2
 = 
IDENT
;

765 
d©a_t
 
acc3
 = 
IDENT
;

766 
d©a_t
 
acc4
 = 
IDENT
;

767 
d©a_t
 
acc5
 = 
IDENT
;

768 
d©a_t
 
acc6
 = 
IDENT
;

769 
d©a_t
 
acc7
 = 
IDENT
;

770 
d©a_t
 
acc8
 = 
IDENT
;

771 
d©a_t
 
acc9
 = 
IDENT
;

772 
d©a_t
 
acc10
 = 
IDENT
;

773 
d©a_t
 
acc11

IDENT
;

776 
i
 = 0; i < 
limô
; i+=12) {

777 
acc0
 =ácc0 
OP
 
d©a
[
i
];

778 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

779 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

780 
acc7
 =ácc7 
OP
 
d©a
[
i
+7];

781 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

782 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

783 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

784 
acc9
 =ácc9 
OP
 
d©a
[
i
+9];

785 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

786 
acc10
 =ácc10 
OP
 
d©a
[
i
+10];

787 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

788 
acc11
 =ácc11 
OP
 
d©a
[
i
+11];

792 ; 
i
 < 
Àngth
; i++) {

793 
acc0
 =ácc0 
OP
 
d©a
[
i
];

795 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
)

796 
	`OP
 (
acc6
 
OP
 
acc7
ËOP (
acc8
 OP 
acc9
ËOP (
acc10
 OP 
acc11
);

797 
	}
}

799 
	guƒﬁl16x16a_des¸
[] = "unroll16x16a: Array code, unrolled by 16, Superscalar x16";

800 
	$uƒﬁl16x16a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

802 
i
;

803 
Àngth
 = 
	`vec_Àngth
(
v
);

804 
limô
 = 
Àngth
-15;

805 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

806 
d©a_t
 
acc0
 = 
IDENT
;

807 
d©a_t
 
acc1
 = 
IDENT
;

808 
d©a_t
 
acc2
 = 
IDENT
;

809 
d©a_t
 
acc3
 = 
IDENT
;

810 
d©a_t
 
acc4
 = 
IDENT
;

811 
d©a_t
 
acc5
 = 
IDENT
;

812 
d©a_t
 
acc6
 = 
IDENT
;

813 
d©a_t
 
acc7
 = 
IDENT
;

814 
d©a_t
 
acc8
 = 
IDENT
;

815 
d©a_t
 
acc9
 = 
IDENT
;

816 
d©a_t
 
acc10
 = 
IDENT
;

817 
d©a_t
 
acc11

IDENT
;

818 
d©a_t
 
acc12

IDENT
;

819 
d©a_t
 
acc13

IDENT
;

820 
d©a_t
 
acc14

IDENT
;

821 
d©a_t
 
acc15

IDENT
;

824 
i
 = 0; i < 
limô
; i+=16) {

825 
acc0
 =ácc0 
OP
 
d©a
[
i
];

826 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

827 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

828 
acc7
 =ácc7 
OP
 
d©a
[
i
+7];

829 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

830 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

831 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

832 
acc9
 =ácc9 
OP
 
d©a
[
i
+9];

833 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

834 
acc10
 =ácc10 
OP
 
d©a
[
i
+10];

835 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

836 
acc11
 =ácc11 
OP
 
d©a
[
i
+11];

837 
acc12
 =ácc12 
OP
 
d©a
[
i
+12];

838 
acc13
 =ácc13 
OP
 
d©a
[
i
+13];

839 
acc14
 =ácc14 
OP
 
d©a
[
i
+14];

840 
acc15
 =ácc15 
OP
 
d©a
[
i
+15];

844 ; 
i
 < 
Àngth
; i++) {

845 
acc0
 =ácc0 
OP
 
d©a
[
i
];

847 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
))

848 
	`OP
 ((
acc6
 
OP
 
acc7
ËOP (
acc8
 OP 
acc9
ËOP (
acc10
 OP 
acc11
))

849 
	`OP
 ((
acc12
 
OP
 
acc13
ËOP (
acc14
 OP 
acc15
));

850 
	}
}

852 
	guƒﬁl20x20a_des¸
[] = "unroll20x20a: Array code, unrolled by 20, Superscalar x20";

853 
	$uƒﬁl20x20a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

855 
i
;

856 
Àngth
 = 
	`vec_Àngth
(
v
);

857 
limô
 = 
Àngth
-19;

858 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

859 
d©a_t
 
acc0
 = 
IDENT
;

860 
d©a_t
 
acc1
 = 
IDENT
;

861 
d©a_t
 
acc2
 = 
IDENT
;

862 
d©a_t
 
acc3
 = 
IDENT
;

863 
d©a_t
 
acc4
 = 
IDENT
;

864 
d©a_t
 
acc5
 = 
IDENT
;

865 
d©a_t
 
acc6
 = 
IDENT
;

866 
d©a_t
 
acc7
 = 
IDENT
;

867 
d©a_t
 
acc8
 = 
IDENT
;

868 
d©a_t
 
acc9
 = 
IDENT
;

869 
d©a_t
 
acc10
 = 
IDENT
;

870 
d©a_t
 
acc11

IDENT
;

871 
d©a_t
 
acc12

IDENT
;

872 
d©a_t
 
acc13

IDENT
;

873 
d©a_t
 
acc14

IDENT
;

874 
d©a_t
 
acc15

IDENT
;

875 
d©a_t
 
acc16

IDENT
;

876 
d©a_t
 
acc17

IDENT
;

877 
d©a_t
 
acc18

IDENT
;

878 
d©a_t
 
acc19

IDENT
;

881 
i
 = 0; i < 
limô
; i+=20) {

882 
acc0
 =ácc0 
OP
 
d©a
[
i
];

883 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

884 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

885 
acc7
 =ácc7 
OP
 
d©a
[
i
+7];

886 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

887 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

888 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

889 
acc9
 =ácc9 
OP
 
d©a
[
i
+9];

890 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

891 
acc10
 =ácc10 
OP
 
d©a
[
i
+10];

892 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

893 
acc11
 =ácc11 
OP
 
d©a
[
i
+11];

894 
acc12
 =ácc12 
OP
 
d©a
[
i
+12];

895 
acc13
 =ácc13 
OP
 
d©a
[
i
+13];

896 
acc14
 =ácc14 
OP
 
d©a
[
i
+14];

897 
acc15
 =ácc15 
OP
 
d©a
[
i
+15];

898 
acc16
 =ácc16 
OP
 
d©a
[
i
+16];

899 
acc17
 =ácc17 
OP
 
d©a
[
i
+17];

900 
acc18
 =ácc18 
OP
 
d©a
[
i
+18];

901 
acc19
 =ácc19 
OP
 
d©a
[
i
+19];

905 ; 
i
 < 
Àngth
; i++) {

906 
acc0
 =ácc0 
OP
 
d©a
[
i
];

908 *
de°
 =

909 (((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
))

910 
	`OP
 ((
acc6
 
OP
 
acc7
ËOP (
acc8
 OP 
acc9
ËOP (
acc10
 OP 
acc11
)))

911 
OP


912 (((
acc12
 
OP
 
acc13
Ë
	`OP
 (
acc14
 OP 
acc15
)ËOP ((
acc16
 OP 
acc17
ËOP (
acc18
 OP 
acc19
)));

913 
	}
}

916 
	guƒﬁl5x5a_des¸
[] = "unroll5x5a: Array code, unrolled by 5, Superscalar x5";

917 
	$uƒﬁl5x5a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

919 
i
;

920 
Àngth
 = 
	`vec_Àngth
(
v
);

921 
limô
 = 
Àngth
-4;

922 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

923 
d©a_t
 
acc0
 = 
IDENT
;

924 
d©a_t
 
acc1
 = 
IDENT
;

925 
d©a_t
 
acc2
 = 
IDENT
;

926 
d©a_t
 
acc3
 = 
IDENT
;

927 
d©a_t
 
acc4
 = 
IDENT
;

930 
i
 = 0; i < 
limô
; i+=5) {

931 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

932 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

933 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

937 ; 
i
 < 
Àngth
; i++) {

938 
acc0
 =ácc0 
OP
 
d©a
[
i
];

940 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
 OP 
acc4
);

941 
	}
}

943 
	guƒﬁl6x6a_des¸
[] = "unroll6x6a: Array code, unrolled by 6, Superscalar x6";

944 
	$uƒﬁl6x6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

946 
i
;

947 
Àngth
 = 
	`vec_Àngth
(
v
);

948 
limô
 = 
Àngth
-5;

949 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

950 
d©a_t
 
acc0
 = 
IDENT
;

951 
d©a_t
 
acc1
 = 
IDENT
;

952 
d©a_t
 
acc2
 = 
IDENT
;

953 
d©a_t
 
acc3
 = 
IDENT
;

954 
d©a_t
 
acc4
 = 
IDENT
;

955 
d©a_t
 
acc5
 = 
IDENT
;

958 
i
 = 0; i < 
limô
; i+=6) {

959 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

960 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

961 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

965 ; 
i
 < 
Àngth
; i++) {

966 
acc0
 =ácc0 
OP
 
d©a
[
i
];

968 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
);

969 
	}
}

971 
	guƒﬁl7x7a_des¸
[] = "unroll7x7a: Array code, unrolled by 7, Superscalar x7";

972 
	$uƒﬁl7x7a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

974 
i
;

975 
Àngth
 = 
	`vec_Àngth
(
v
);

976 
limô
 = 
Àngth
-6;

977 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

978 
d©a_t
 
acc0
 = 
IDENT
;

979 
d©a_t
 
acc1
 = 
IDENT
;

980 
d©a_t
 
acc2
 = 
IDENT
;

981 
d©a_t
 
acc3
 = 
IDENT
;

982 
d©a_t
 
acc4
 = 
IDENT
;

983 
d©a_t
 
acc5
 = 
IDENT
;

984 
d©a_t
 
acc6
 = 
IDENT
;

987 
i
 = 0; i < 
limô
; i+=7) {

988 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

989 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

990 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

991 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

995 ; 
i
 < 
Àngth
; i++) {

996 
acc0
 =ácc0 
OP
 
d©a
[
i
];

998 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP (
acc4
 OP 
acc5
 OP 
acc6
);

999 
	}
}

1001 
	guƒﬁl8x8a_des¸
[] = "unroll8x8a: Array code, unrolled by 8, Superscalar x8";

1002 
	$uƒﬁl8x8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1004 
i
;

1005 
Àngth
 = 
	`vec_Àngth
(
v
);

1006 
limô
 = 
Àngth
-7;

1007 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1008 
d©a_t
 
acc0
 = 
IDENT
;

1009 
d©a_t
 
acc1
 = 
IDENT
;

1010 
d©a_t
 
acc2
 = 
IDENT
;

1011 
d©a_t
 
acc3
 = 
IDENT
;

1012 
d©a_t
 
acc4
 = 
IDENT
;

1013 
d©a_t
 
acc5
 = 
IDENT
;

1014 
d©a_t
 
acc6
 = 
IDENT
;

1015 
d©a_t
 
acc7
 = 
IDENT
;

1018 
i
 = 0; i < 
limô
; i+=8) {

1019 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

1020 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

1021 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

1022 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

1026 ; 
i
 < 
Àngth
; i++) {

1027 
acc0
 =ácc0 
OP
 
d©a
[
i
];

1029 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP ((
acc4
 OP 
acc5
ËOP (
acc6
 OP 
acc7
));

1030 
	}
}

1032 
	guƒﬁl9x9a_des¸
[] = "unroll9x9a: Array code, unrolled by 9, Superscalar x9";

1033 
	$uƒﬁl9x9a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1035 
i
;

1036 
Àngth
 = 
	`vec_Àngth
(
v
);

1037 
limô
 = 
Àngth
-8;

1038 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1039 
d©a_t
 
acc0
 = 
IDENT
;

1040 
d©a_t
 
acc1
 = 
IDENT
;

1041 
d©a_t
 
acc2
 = 
IDENT
;

1042 
d©a_t
 
acc3
 = 
IDENT
;

1043 
d©a_t
 
acc4
 = 
IDENT
;

1044 
d©a_t
 
acc5
 = 
IDENT
;

1045 
d©a_t
 
acc6
 = 
IDENT
;

1046 
d©a_t
 
acc7
 = 
IDENT
;

1047 
d©a_t
 
acc8
 = 
IDENT
;

1050 
i
 = 0; i < 
limô
; i+=9) {

1051 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

1052 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

1053 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

1054 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

1055 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

1059 ; 
i
 < 
Àngth
; i++) {

1060 
acc0
 =ácc0 
OP
 
d©a
[
i
];

1062 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP ((
acc4
 OP 
acc5
ËOP (
acc6
 OP 
acc7
ËOP 
acc8
);

1063 
	}
}

1065 
	guƒﬁl10x10a_des¸
[] = "unroll10x10a: Array code, unrolled by 10, Superscalar x10";

1066 
	$uƒﬁl10x10a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1068 
i
;

1069 
Àngth
 = 
	`vec_Àngth
(
v
);

1070 
limô
 = 
Àngth
-9;

1071 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1072 
d©a_t
 
acc0
 = 
IDENT
;

1073 
d©a_t
 
acc1
 = 
IDENT
;

1074 
d©a_t
 
acc2
 = 
IDENT
;

1075 
d©a_t
 
acc3
 = 
IDENT
;

1076 
d©a_t
 
acc4
 = 
IDENT
;

1077 
d©a_t
 
acc5
 = 
IDENT
;

1078 
d©a_t
 
acc6
 = 
IDENT
;

1079 
d©a_t
 
acc7
 = 
IDENT
;

1080 
d©a_t
 
acc8
 = 
IDENT
;

1081 
d©a_t
 
acc9
 = 
IDENT
;

1084 
i
 = 0; i < 
limô
; i+=10) {

1085 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

1086 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

1087 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

1088 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

1089 
acc8
 =ácc8 
OP
 
d©a
[
i
+8]; 
acc9
 =ácc9 OP data[i+9];

1093 ; 
i
 < 
Àngth
; i++) {

1094 
acc0
 =ácc0 
OP
 
d©a
[
i
];

1096 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)) OP

1097 ((
acc4
 
OP
 
acc5
Ë
	`OP
 (
acc6
 OP 
acc7
)) OP

1098 (
acc8
 
OP
 
acc9
);

1099 
	}
}

1101 
	guƒﬁlx2as_des¸
[] = "unrollx2as: Array code, Unroll x2, Superscalar x2,Çoninterleaved";

1102 
	$uƒﬁlx2as_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1104 
i
;

1105 
Àngth
 = 
	`vec_Àngth
(
v
);

1106 
limô
 = 
Àngth
/2;

1107 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1108 
d©a_t
 *
d©a2
 = 
d©a
+
limô
;

1109 
d©a_t
 
acc0
 = 
IDENT
;

1110 
d©a_t
 
acc1
 = 
IDENT
;

1113 
i
 = 0; i < 
limô
; i++) {

1114 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP 
d©a2
[i];

1118 
i
 = 
limô
*2; i < 
Àngth
; i++) {

1119 
acc1
 =ácc1 
OP
 
d©a
[
i
];

1121 *
de°
 = 
acc0
 
OP
 
acc1
;

1122 
	}
}

1124 
	guƒﬁl4x2as_des¸
[] = "unroll4x2as: Array code, Unroll x4, Superscalar x2,Çoninterleaved";

1125 
	$uƒﬁl4x2as_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1127 
i
;

1128 
Àngth
 = 
	`vec_Àngth
(
v
);

1129 
limô
 = 
Àngth
/2;

1130 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1131 
d©a_t
 *
d©a2
 = 
d©a
+
limô
;

1132 
d©a_t
 
acc0
 = 
IDENT
;

1133 
d©a_t
 
acc1
 = 
IDENT
;

1136 
i
 = 0; i < 
limô
; i++) {

1137 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP 
d©a2
[i];

1141 
i
 = 
limô
*2; i < 
Àngth
; i++) {

1142 
acc1
 =ácc1 
OP
 
d©a
[
i
];

1144 *
de°
 = 
acc0
 
OP
 
acc1
;

1145 
	}
}

1149 
	guƒﬁl8x2_des¸
[] = "unroll8x2: Pointer code, unrolled by 8, Superscalar x2";

1150 
	$uƒﬁl8x2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1152 
Àngth
 = 
	`vec_Àngth
(
v
);

1153 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1154 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1155 
d©a_t
 
acc0
 = 
IDENT
;

1156 
d©a_t
 
acc1
 = 
IDENT
;

1158 
d©a
 < 
díd
) {

1159 
acc0
 =ácc0 
OP
 
d©a
[0];

1160 
acc1
 =ácc1 
OP
 
d©a
[1];

1161 
acc0
 =ácc0 
OP
 
d©a
[2];

1162 
acc1
 =ácc1 
OP
 
d©a
[3];

1163 
acc0
 =ácc0 
OP
 
d©a
[4];

1164 
acc1
 =ácc1 
OP
 
d©a
[5];

1165 
acc0
 =ácc0 
OP
 
d©a
[6];

1166 
acc1
 =ácc1 
OP
 
d©a
[7];

1167 
d©a
 += 8;

1169 
díd
 += 7;

1170 
d©a
 < 
díd
) {

1171 
acc0
 =ácc0 
OP
 *
d©a
;

1172 
d©a
 ++;

1174 *
de°
 = 
acc0
 
OP
 
acc1
;

1175 
	}
}

1177 
	guƒﬁl9x3_des¸
[] = "unroll9x3: Pointer code, unrolled by 9, Superscalar x3";

1178 
	$uƒﬁl9x3_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1180 
Àngth
 = 
	`vec_Àngth
(
v
);

1181 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1182 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-8;

1183 
d©a_t
 
acc0
 = 
IDENT
;

1184 
d©a_t
 
acc1
 = 
IDENT
;

1185 
d©a_t
 
acc2
 = 
IDENT
;

1187 
d©a
 < 
díd
) {

1188 
acc0
 =ácc0 
OP
 
d©a
[0];

1189 
acc1
 =ácc1 
OP
 
d©a
[1];

1190 
acc2
 =ácc2 
OP
 
d©a
[2];

1191 
acc0
 =ácc0 
OP
 
d©a
[3];

1192 
acc1
 =ácc1 
OP
 
d©a
[4];

1193 
acc2
 =ácc2 
OP
 
d©a
[5];

1194 
acc0
 =ácc0 
OP
 
d©a
[6];

1195 
acc1
 =ácc1 
OP
 
d©a
[7];

1196 
acc2
 =ácc2 
OP
 
d©a
[8];

1197 
d©a
 += 9;

1199 
díd
 += 8;

1200 
d©a
 < 
díd
) {

1201 
acc0
 =ácc0 
OP
 *
d©a
;

1202 
d©a
 ++;

1204 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
;

1205 
	}
}

1208 
	guƒﬁl8x4_des¸
[] = "unroll8x4: Pointer code, unrolled by 8, Superscalar x4";

1209 
	$uƒﬁl8x4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1211 
Àngth
 = 
	`vec_Àngth
(
v
);

1212 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1213 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1214 
d©a_t
 
acc0
 = 
IDENT
;

1215 
d©a_t
 
acc1
 = 
IDENT
;

1216 
d©a_t
 
acc2
 = 
IDENT
;

1217 
d©a_t
 
acc3
 = 
IDENT
;

1219 
d©a
 < 
díd
) {

1220 
acc0
 =ácc0 
OP
 
d©a
[0];

1221 
acc1
 =ácc1 
OP
 
d©a
[1];

1222 
acc2
 =ácc2 
OP
 
d©a
[2];

1223 
acc3
 =ácc3 
OP
 
d©a
[3];

1224 
acc0
 =ácc0 
OP
 
d©a
[4];

1225 
acc1
 =ácc1 
OP
 
d©a
[5];

1226 
acc2
 =ácc2 
OP
 
d©a
[6];

1227 
acc3
 =ácc3 
OP
 
d©a
[7];

1228 
d©a
 += 8;

1230 
díd
 += 7;

1231 
d©a
 < 
díd
) {

1232 
acc3
 =ácc3 
OP
 *
d©a
;

1233 
d©a
 ++;

1235 *
de°
 = 
acc3
 
OP
 
acc0
 OP 
acc1
 OP 
acc2
;

1236 
	}
}

1238 
	guƒﬁl8x8_des¸
[] = "unroll8x8: Pointer code, unrolled by 8, Superscalar x8";

1239 
	$uƒﬁl8x8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1241 
Àngth
 = 
	`vec_Àngth
(
v
);

1242 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1243 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1244 
d©a_t
 
acc0
 = 
IDENT
;

1245 
d©a_t
 
acc1
 = 
IDENT
;

1246 
d©a_t
 
acc2
 = 
IDENT
;

1247 
d©a_t
 
acc3
 = 
IDENT
;

1248 
d©a_t
 
acc4
 = 
IDENT
;

1249 
d©a_t
 
acc5
 = 
IDENT
;

1250 
d©a_t
 
acc6
 = 
IDENT
;

1251 
d©a_t
 
acc7
 = 
IDENT
;

1253 
d©a
 < 
díd
) {

1254 
acc0
 =ácc0 
OP
 
d©a
[0];

1255 
acc1
 =ácc1 
OP
 
d©a
[1];

1256 
acc2
 =ácc2 
OP
 
d©a
[2];

1257 
acc3
 =ácc3 
OP
 
d©a
[3];

1258 
acc4
 =ácc4 
OP
 
d©a
[4];

1259 
acc5
 =ácc5 
OP
 
d©a
[5];

1260 
acc6
 =ácc6 
OP
 
d©a
[6];

1261 
acc7
 =ácc7 
OP
 
d©a
[7];

1262 
d©a
 += 8;

1264 
díd
 += 7;

1265 
d©a
 < 
díd
) {

1266 
acc0
 =ácc0 
OP
 *
d©a
;

1267 
d©a
 ++;

1269 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
 OP 
acc3
 OP 
acc4
 OP 
acc5
 OP 
acc6
 OP 
acc7
;

1270 
	}
}

1272 
	gcomböe7_des¸
[] = "combine7: Array code, unrolled by 2, differentássociativity";

1275 
	$comböe7
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1277 
i
;

1278 
Àngth
 = 
	`vec_Àngth
(
v
);

1279 
limô
 = 
Àngth
-1;

1280 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1281 
d©a_t
 
acc
 = 
IDENT
;

1284 
i
 = 0; i < 
limô
; i+=2) {

1286 
acc
 =ác¯
	`OP
 (
d©a
[
i
] 
OP
 data[i+1]);

1291 ; 
i
 < 
Àngth
; i++) {

1292 
acc
 =ác¯
OP
 
d©a
[
i
];

1294 *
de°
 = 
acc
;

1295 
	}
}

1298 
	guƒﬁl3Ø_des¸
[] = "unroll3aa: Array code, unrolled by 3, Different Associativity";

1299 
	$uƒﬁl3Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1301 
i
;

1302 
Àngth
 = 
	`vec_Àngth
(
v
);

1303 
limô
 = 
Àngth
-2;

1304 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1305 
d©a_t
 
acc
 = 
IDENT
;

1308 
i
 = 0; i < 
limô
; i+=3) {

1309 
acc
 =ác¯
	`OP
 (
d©a
[
i
] 
OP
 data[i+1] OP data[i+2]);

1313 ; 
i
 < 
Àngth
; i++) {

1314 
acc
 =ác¯
OP
 
d©a
[
i
];

1316 *
de°
 = 
acc
;

1317 
	}
}

1319 
	guƒﬁl4Ø_des¸
[] = "unroll4aa: Array code, unrolled by 4, Different Associativity";

1320 
	$uƒﬁl4Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1322 
i
;

1323 
Àngth
 = 
	`vec_Àngth
(
v
);

1324 
limô
 = 
Àngth
-3;

1325 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1326 
d©a_t
 
acc
 = 
IDENT
;

1329 
i
 = 0; i < 
limô
; i+=4) {

1330 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1331 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1332 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
);

1336 ; 
i
 < 
Àngth
; i++) {

1337 
acc
 =ác¯
OP
 
d©a
[
i
];

1339 *
de°
 = 
acc
;

1340 
	}
}

1342 
	guƒﬁl5Ø_des¸
[] = "unroll5aa: Array code, unrolled by 5, Different Associativity";

1343 
	$uƒﬁl5Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1345 
i
;

1346 
Àngth
 = 
	`vec_Àngth
(
v
);

1347 
limô
 = 
Àngth
-4;

1348 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1349 
d©a_t
 
acc
 = 
IDENT
;

1352 
i
 = 0; i < 
limô
; i+=5) {

1353 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1354 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1355 
d©a_t
 
t3
 = 
d©a
[
i
+4];

1356 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
 OP 
t3
);

1360 ; 
i
 < 
Àngth
; i++) {

1361 
acc
 =ác¯
OP
 
d©a
[
i
];

1363 *
de°
 = 
acc
;

1364 
	}
}

1366 
	guƒﬁl6Ø_des¸
[] = "unroll6aa: Array code, unrolled by 6, Different Associativity";

1367 
	$uƒﬁl6Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1369 
i
;

1370 
Àngth
 = 
	`vec_Àngth
(
v
);

1371 
limô
 = 
Àngth
-5;

1372 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1373 
d©a_t
 
acc
 = 
IDENT
;

1376 
i
 = 0; i < 
limô
; i+=6) {

1377 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1378 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1379 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1380 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
 OP 
t3
);

1384 ; 
i
 < 
Àngth
; i++) {

1385 
acc
 =ác¯
OP
 
d©a
[
i
];

1387 *
de°
 = 
acc
;

1388 
	}
}

1390 
	guƒﬁl7Ø_des¸
[] = "unroll7aa: Array code, unrolled by 7, Different Associativity";

1391 
	$uƒﬁl7Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1393 
i
;

1394 
Àngth
 = 
	`vec_Àngth
(
v
);

1395 
limô
 = 
Àngth
-6;

1396 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1397 
d©a_t
 
acc
 = 
IDENT
;

1400 
i
 = 0; i < 
limô
; i+=7) {

1401 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1402 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1403 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1404 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1405 
d©a_t
 
t4
 = 
d©a
[
i
+6];

1406 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1407 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1411 ; 
i
 < 
Àngth
; i++) {

1412 
acc
 =ác¯
OP
 
d©a
[
i
];

1415 *
de°
 = 
acc
;

1416 
	}
}

1418 
	guƒﬁl8Ø_des¸
[] = "unroll8aa: Array code, unrolled by 8, Different Associativity";

1419 
	$uƒﬁl8Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1421 
i
;

1422 
Àngth
 = 
	`vec_Àngth
(
v
);

1423 
limô
 = 
Àngth
-7;

1424 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1425 
d©a_t
 
acc
 = 
IDENT
;

1428 
i
 = 0; i < 
limô
; i+=8) {

1429 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1430 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1431 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1432 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1433 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1434 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1435 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1439 ; 
i
 < 
Àngth
; i++) {

1440 
acc
 =ác¯
OP
 
d©a
[
i
];

1443 *
de°
 = 
acc
;

1444 
	}
}

1446 
	guƒﬁl9Ø_des¸
[] = "unroll9aa: Array code, unrolled by 9, Different Associativity";

1447 
	$uƒﬁl9Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1449 
i
;

1450 
Àngth
 = 
	`vec_Àngth
(
v
);

1451 
limô
 = 
Àngth
-8;

1452 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1453 
d©a_t
 
acc
 = 
IDENT
;

1456 
i
 = 0; i < 
limô
; i+=9) {

1457 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1458 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1459 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1460 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1461 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1462 
d©a_t
 
t5
 = 
d©a
[
i
+8];

1463 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
 OP 
t5
;

1464 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1468 ; 
i
 < 
Àngth
; i++) {

1469 
acc
 =ác¯
OP
 
d©a
[
i
];

1472 *
de°
 = 
acc
;

1473 
	}
}

1475 
	guƒﬁl10Ø_des¸
[] = "unroll10aa: Array code, unrolled by 10, Different Associativity";

1476 
	$uƒﬁl10Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1478 
i
;

1479 
Àngth
 = 
	`vec_Àngth
(
v
);

1480 
limô
 = 
Àngth
-9;

1481 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1482 
d©a_t
 
acc
 = 
IDENT
;

1485 
i
 = 0; i < 
limô
; i+=10) {

1486 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1487 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1488 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1489 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1490 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1491 
d©a_t
 
t5
 = 
d©a
[
i
+8] 
OP
 data[i+9];

1492 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
 OP 
t5
;

1493 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1497 ; 
i
 < 
Àngth
; i++) {

1498 
acc
 =ác¯
OP
 
d©a
[
i
];

1501 *
de°
 = 
acc
;

1502 
	}
}

1505 
	guƒﬁl12Ø_des¸
[] = "unroll12aa: Array code, unrolled by 12, Different Associativity";

1506 
	$uƒﬁl12Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1508 
i
;

1509 
Àngth
 = 
	`vec_Àngth
(
v
);

1510 
limô
 = 
Àngth
-11;

1511 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1512 
d©a_t
 
acc
 = 
IDENT
;

1515 
i
 = 0; i < 
limô
; i+=12) {

1516 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1517 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1518 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1519 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1520 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1521 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1522 
d©a_t
 
t5
 = 
d©a
[
i
+8] 
OP
 data[i+9];

1523 
d©a_t
 
t6
 = 
d©a
[
i
+10] 
OP
 data[i+11];

1524 
d©a_t
 
u3
 = 
t5
 
OP
 
t6
;

1525 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
 OP 
u3
);

1529 ; 
i
 < 
Àngth
; i++) {

1530 
acc
 =ác¯
OP
 
d©a
[
i
];

1533 *
de°
 = 
acc
;

1534 
	}
}

1540 
	#VBYTES
 32

	)

1543 
	#VSIZE
 
VBYTES
/(
d©a_t
)

	)

1548 
d©a_t
 
	tvec_t
 
	t__©åibuã__
 ((
	tve˘‹_size
(
	tVBYTES
)));

1553 
vec_t
 
	mv
;

1554 
d©a_t
 
	md
[
VSIZE
];

1555 } 
	t∑ck_t
;

1558 
	gsimd_v1_des¸
[] = "simd_v1: SSE code, 1*VSIZE-wayÖarallelism";

1560 
	$simd_v1_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1562 
i
;

1563 
∑ck_t
 
x„r
;

1564 
vec_t
 
accum
;

1565 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1566 
˙t
 = 
	`vec_Àngth
(
v
);

1567 
d©a_t
 
ªsu…
 = 
IDENT
;

1570 
i
 = 0; i < 
VSIZE
; i++)

1571 
x„r
.
d
[
i
] = 
IDENT
;

1572 
accum
 = 
x„r
.
v
;

1576 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1577 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1578 
˙t
--;

1582 
˙t
 >
VSIZE
) {

1583 
vec_t
 
chunk
 = *((vec_à*Ë
d©a
);

1584 
accum
 =áccum 
OP
 
chunk
;

1585 
d©a
 +
VSIZE
;

1586 
˙t
 -
VSIZE
;

1590 
˙t
) {

1591 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1592 
˙t
--;

1596 
x„r
.
v
 = 
accum
;

1597 
i
 = 0; i < 
VSIZE
; i++)

1598 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1601 *
de°
 = 
ªsu…
;

1602 
	}
}

1606 
	gsimd_v2_des¸
[] = "simd_v2: SSE code, 2*VSIZE-wayÖarallelism";

1607 
	$simd_v2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1609 
i
;

1610 
∑ck_t
 
x„r
;

1611 
vec_t
 
accum0
, 
accum1
;

1612 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1613 
˙t
 = 
	`vec_Àngth
(
v
);

1614 
d©a_t
 
ªsu…
 = 
IDENT
;

1617 
i
 = 0; i < 
VSIZE
; i++)

1618 
x„r
.
d
[
i
] = 
IDENT
;

1619 
accum0
 = 
x„r
.
v
;

1620 
accum1
 = 
x„r
.
v
;

1623 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1624 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1625 
˙t
--;

1628 
˙t
 >2*
VSIZE
) {

1629 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1630 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1631 
accum0
 =áccum0 
OP
 
chunk0
;

1632 
accum1
 =áccum1 
OP
 
chunk1
;

1633 
d©a
 +2*
VSIZE
;

1634 
˙t
 -2*
VSIZE
;

1636 
˙t
) {

1637 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1638 
˙t
--;

1640 
x„r
.
v
 = 
accum0
 
OP
 
accum1
;

1641 
i
 = 0; i < 
VSIZE
; i++)

1642 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1643 *
de°
 = 
ªsu…
;

1644 
	}
}

1646 
	gsimd_v4_des¸
[] = "simd_v4: SSE code, 4*VSIZE-wayÖarallelism";

1647 
	$simd_v4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1649 
i
;

1650 
∑ck_t
 
x„r
;

1651 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1652 
˙t
 = 
	`vec_Àngth
(
v
);

1653 
d©a_t
 
ªsu…
 = 
IDENT
;

1656 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
;

1657 
i
 = 0; i < 
VSIZE
; i++)

1658 
x„r
.
d
[
i
] = 
IDENT
;

1659 
accum0
 = 
x„r
.
v
; 
accum1
 = xfer.v;

1660 
accum2
 = 
x„r
.
v
; 
accum3
 = xfer.v;

1663 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1664 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1665 
˙t
--;

1670 
˙t
 >4*
VSIZE
) {

1671 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1672 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1673 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1674 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1675 
accum0
 =áccum0 
OP
 
chunk0
;

1676 
accum1
 =áccum1 
OP
 
chunk1
;

1677 
accum2
 =áccum2 
OP
 
chunk2
;

1678 
accum3
 =áccum3 
OP
 
chunk3
;

1679 
d©a
 +4*
VSIZE
;

1680 
˙t
 -4*
VSIZE
;

1684 
˙t
) {

1685 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1686 
˙t
--;

1691 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1694 
i
 = 0; i < 
VSIZE
; i++)

1695 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1697 *
de°
 = 
ªsu…
;

1698 
	}
}

1700 
	gsimd_v8_des¸
[] = "simd_v8: SSE code, 8*VSIZE-wayÖarallelism";

1701 
	$simd_v8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1703 
i
;

1704 
∑ck_t
 
x„r
;

1705 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
, 
accum5
, 
accum6
, 
accum7
;

1706 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1707 
˙t
 = 
	`vec_Àngth
(
v
);

1708 
d©a_t
 
ªsu…
 = 
IDENT
;

1711 
i
 = 0; i < 
VSIZE
; i++)

1712 
x„r
.
d
[
i
] = 
IDENT
;

1713 
accum0
 = 
x„r
.
v
;

1714 
accum1
 = 
x„r
.
v
;

1715 
accum2
 = 
x„r
.
v
;

1716 
accum3
 = 
x„r
.
v
;

1717 
accum4
 = 
x„r
.
v
;

1718 
accum5
 = 
x„r
.
v
;

1719 
accum6
 = 
x„r
.
v
;

1720 
accum7
 = 
x„r
.
v
;

1723 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1724 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1725 
˙t
--;

1728 
˙t
 >8*
VSIZE
) {

1729 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1730 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1731 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1732 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1733 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1734 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1735 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1736 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1737 
accum0
 =áccum0 
OP
 
chunk0
;

1738 
accum1
 =áccum1 
OP
 
chunk1
;

1739 
accum2
 =áccum2 
OP
 
chunk2
;

1740 
accum3
 =áccum3 
OP
 
chunk3
;

1741 
accum4
 =áccum4 
OP
 
chunk4
;

1742 
accum5
 =áccum5 
OP
 
chunk5
;

1743 
accum6
 =áccum6 
OP
 
chunk6
;

1744 
accum7
 =áccum7 
OP
 
chunk7
;

1745 
d©a
 +8*
VSIZE
;

1746 
˙t
 -8*
VSIZE
;

1748 
˙t
) {

1749 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1750 
˙t
--;

1752 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1753 
x„r
.
v
 = x„r.v 
	`OP
 (
accum4
 
OP
 
accum5
ËOP (
accum6
 OP 
accum7
);

1754 
i
 = 0; i < 
VSIZE
; i++)

1755 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1756 *
de°
 = 
ªsu…
;

1757 
	}
}

1759 
	gsimd_v10_des¸
[] = "simd_v10: SSE code, 10*VSIZE-wayÖarallelism";

1760 
	$simd_v10_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1762 
i
;

1763 
∑ck_t
 
x„r
;

1764 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
, 
accum5
, 
accum6
, 
accum7
, 
accum8
, 
accum9
;

1765 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1766 
˙t
 = 
	`vec_Àngth
(
v
);

1767 
d©a_t
 
ªsu…
 = 
IDENT
;

1770 
i
 = 0; i < 
VSIZE
; i++)

1771 
x„r
.
d
[
i
] = 
IDENT
;

1772 
accum0
 = 
x„r
.
v
;

1773 
accum1
 = 
x„r
.
v
;

1774 
accum2
 = 
x„r
.
v
;

1775 
accum3
 = 
x„r
.
v
;

1776 
accum4
 = 
x„r
.
v
;

1777 
accum5
 = 
x„r
.
v
;

1778 
accum6
 = 
x„r
.
v
;

1779 
accum7
 = 
x„r
.
v
;

1780 
accum8
 = 
x„r
.
v
;

1781 
accum9
 = 
x„r
.
v
;

1784 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1785 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1786 
˙t
--;

1789 
˙t
 >10*
VSIZE
) {

1790 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1791 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1792 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1793 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1794 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1795 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1796 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1797 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1798 
vec_t
 
chunk8
 = *((vec_à*Ë(
d©a
+8*
VSIZE
));

1799 
vec_t
 
chunk9
 = *((vec_à*Ë(
d©a
+9*
VSIZE
));

1800 
accum0
 =áccum0 
OP
 
chunk0
;

1801 
accum1
 =áccum1 
OP
 
chunk1
;

1802 
accum2
 =áccum2 
OP
 
chunk2
;

1803 
accum3
 =áccum3 
OP
 
chunk3
;

1804 
accum4
 =áccum4 
OP
 
chunk4
;

1805 
accum5
 =áccum5 
OP
 
chunk5
;

1806 
accum6
 =áccum6 
OP
 
chunk6
;

1807 
accum7
 =áccum7 
OP
 
chunk7
;

1808 
accum8
 =áccum8 
OP
 
chunk8
;

1809 
accum9
 =áccum9 
OP
 
chunk9
;

1810 
d©a
 +10*
VSIZE
;

1811 
˙t
 -10*
VSIZE
;

1813 
˙t
) {

1814 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1815 
˙t
--;

1817 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1818 
x„r
.
v
 = x„r.v 
	`OP
 (
accum4
 
OP
 
accum5
ËOP (
accum6
 OP 
accum7
);

1819 
x„r
.
v
 = x„r.v 
	`OP
 (
accum8
 
OP
 
accum9
);

1820 
i
 = 0; i < 
VSIZE
; i++)

1821 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1822 *
de°
 = 
ªsu…
;

1823 
	}
}

1825 
	gsimd_v12_des¸
[] = "simd_v12: SSE code, 12*VSIZE-wayÖarallelism";

1826 
	$simd_v12_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1828 
i
;

1829 
∑ck_t
 
x„r
;

1830 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
, 
accum5
, 
accum6
, 
accum7
;

1831 
vec_t
 
accum8
, 
accum9
, 
accum10
, 
accum11
;

1832 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1833 
˙t
 = 
	`vec_Àngth
(
v
);

1834 
d©a_t
 
ªsu…
 = 
IDENT
;

1837 
i
 = 0; i < 
VSIZE
; i++)

1838 
x„r
.
d
[
i
] = 
IDENT
;

1839 
accum0
 = 
x„r
.
v
;

1840 
accum1
 = 
x„r
.
v
;

1841 
accum2
 = 
x„r
.
v
;

1842 
accum3
 = 
x„r
.
v
;

1843 
accum4
 = 
x„r
.
v
;

1844 
accum5
 = 
x„r
.
v
;

1845 
accum6
 = 
x„r
.
v
;

1846 
accum7
 = 
x„r
.
v
;

1847 
accum8
 = 
x„r
.
v
;

1848 
accum9
 = 
x„r
.
v
;

1849 
accum10
 = 
x„r
.
v
;

1850 
accum11
 = 
x„r
.
v
;

1853 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1854 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1855 
˙t
--;

1858 
˙t
 >12*
VSIZE
) {

1859 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1860 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1861 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1862 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1863 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1864 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1865 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1866 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1867 
vec_t
 
chunk8
 = *((vec_à*Ë(
d©a
+8*
VSIZE
));

1868 
vec_t
 
chunk9
 = *((vec_à*Ë(
d©a
+9*
VSIZE
));

1869 
vec_t
 
chunk10
 = *((vec_à*Ë(
d©a
+10*
VSIZE
));

1870 
vec_t
 
chunk11
 = *((vec_à*Ë(
d©a
+11*
VSIZE
));

1871 
accum0
 =áccum0 
OP
 
chunk0
;

1872 
accum1
 =áccum1 
OP
 
chunk1
;

1873 
accum2
 =áccum2 
OP
 
chunk2
;

1874 
accum3
 =áccum3 
OP
 
chunk3
;

1875 
accum4
 =áccum4 
OP
 
chunk4
;

1876 
accum5
 =áccum5 
OP
 
chunk5
;

1877 
accum6
 =áccum6 
OP
 
chunk6
;

1878 
accum7
 =áccum7 
OP
 
chunk7
;

1879 
accum8
 =áccum8 
OP
 
chunk8
;

1880 
accum9
 =áccum9 
OP
 
chunk9
;

1881 
accum10
 =áccum10 
OP
 
chunk10
;

1882 
accum11
 =áccum11 
OP
 
chunk11
;

1883 
d©a
 +12*
VSIZE
;

1884 
˙t
 -12*
VSIZE
;

1886 
˙t
) {

1887 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1888 
˙t
--;

1890 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1891 
x„r
.
v
 = x„r.v 
	`OP
 (
accum4
 
OP
 
accum5
ËOP (
accum6
 OP 
accum7
);

1892 
x„r
.
v
 = x„r.v 
	`OP
 (
accum8
 
OP
 
accum9
ËOP (
accum10
 OP 
accum11
);

1893 
i
 = 0; i < 
VSIZE
; i++)

1894 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1895 *
de°
 = 
ªsu…
;

1896 
	}
}

1899 
	gsimd_v2a_des¸
[] = "simd_v2a: SSE code, 2*VSIZE-wayÖarallelism,Ñeassociate";

1900 
	$simd_v2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1902 
i
;

1903 
∑ck_t
 
x„r
;

1904 
vec_t
 
accum
;

1905 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1906 
˙t
 = 
	`vec_Àngth
(
v
);

1907 
d©a_t
 
ªsu…
 = 
IDENT
;

1910 
i
 = 0; i < 
VSIZE
; i++)

1911 
x„r
.
d
[
i
] = 
IDENT
;

1912 
accum
 = 
x„r
.
v
;

1915 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1916 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1917 
˙t
--;

1920 
˙t
 >2*
VSIZE
) {

1921 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1922 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1923 
accum
 =áccum 
	`OP
 (
chunk0
 
OP
 
chunk1
);

1924 
d©a
 +2*
VSIZE
;

1925 
˙t
 -2*
VSIZE
;

1927 
˙t
) {

1928 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1929 
˙t
--;

1931 
x„r
.
v
 = 
accum
;

1932 
i
 = 0; i < 
VSIZE
; i++)

1933 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1934 *
de°
 = 
ªsu…
;

1935 
	}
}

1937 
	gsimd_v4a_des¸
[] = "simd_v4a: SSE code, 4*VSIZE-wayÖarallelism,Ñeassociate";

1938 
	$simd_v4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1940 
i
;

1941 
∑ck_t
 
x„r
;

1942 
vec_t
 
accum
;

1943 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1944 
˙t
 = 
	`vec_Àngth
(
v
);

1945 
d©a_t
 
ªsu…
 = 
IDENT
;

1948 
i
 = 0; i < 
VSIZE
; i++)

1949 
x„r
.
d
[
i
] = 
IDENT
;

1950 
accum
 = 
x„r
.
v
;

1953 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1954 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1955 
˙t
--;

1959 
˙t
 >4*
VSIZE
) {

1960 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1961 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1962 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1963 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1964 
accum
 =áccum 
OP


1965 ((
chunk0
 
OP
 
chunk1
Ë
	`OP
 (
chunk2
 OP 
chunk3
));

1966 
d©a
 +4*
VSIZE
;

1967 
˙t
 -4*
VSIZE
;

1971 
˙t
) {

1972 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1973 
˙t
--;

1975 
x„r
.
v
 = 
accum
;

1976 
i
 = 0; i < 
VSIZE
; i++)

1977 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1978 *
de°
 = 
ªsu…
;

1979 
	}
}

1981 
	gsimd_v8a_des¸
[] = "simd_v8a: SSE code, 8*VSIZE-wayÖarallelism,Ñeassociate";

1982 
	$simd_v8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1984 
i
;

1985 
∑ck_t
 
x„r
;

1986 
vec_t
 
accum
;

1987 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1988 
˙t
 = 
	`vec_Àngth
(
v
);

1989 
d©a_t
 
ªsu…
 = 
IDENT
;

1992 
i
 = 0; i < 
VSIZE
; i++)

1993 
x„r
.
d
[
i
] = 
IDENT
;

1994 
accum
 = 
x„r
.
v
;

1997 (((
size_t
Ë
d©a
Ë% 
VBYTES
Ë!0 && 
˙t
) {

1998 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1999 
˙t
--;

2002 
˙t
 >8*
VSIZE
) {

2003 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

2004 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

2005 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

2006 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

2007 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

2008 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

2009 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

2010 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

2011 
accum
 =áccum 
OP


2012 (((
chunk0
 
OP
 
chunk1
Ë
	`OP
 (
chunk2
 OP 
chunk3
))

2013 
OP


2014 ((
chunk4
 
OP
 
chunk5
Ë
	`OP
 (
chunk6
 OP 
chunk7
)));

2015 
d©a
 +8*
VSIZE
;

2016 
˙t
 -8*
VSIZE
;

2018 
˙t
) {

2019 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

2020 
˙t
--;

2022 
x„r
.
v
 = 
accum
;

2023 
i
 = 0; i < 
VSIZE
; i++)

2024 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

2025 *
de°
 = 
ªsu…
;

2026 
	}
}

2029 
	$ªgi°î_comböîs
()

2031 #i‚de‡
UNROLL_ONLY


2032 
	`add_comböî
(
comböe1
, comböe1, 
comböe1_des¸
);

2033 
	`add_comböî
(
comböe2
, 
comböe1
, 
comböe2_des¸
);

2034 
	`add_comböî
(
comböe3
, 
comböe1
, 
comböe3_des¸
);

2035 
	`add_comböî
(
comböe3w
, 
comböe1
, 
comböe3w_des¸
);

2037 
	`add_comböî
(
comböe4
, 
comböe1
,
comböe4_des¸
);

2038 #i‚de‡
UNROLL_ONLY


2039 
	`add_comböî
(
comböe4b
, 
comböe1
, 
comböe4b_des¸
);

2040 
	`add_comböî
(
comböe4p
, 
comböe1
, 
comböe4p_des¸
);

2042 
	`add_comböî
(
comböe5
, 
comböe1
, 
comböe5_des¸
);

2043 #i‚de‡
UNROLL_ONLY


2044 
	`add_comböî
(
comböe5p
, 
comböe1
, 
comböe5p_des¸
);

2045 
	`add_comböî
(
uƒﬁl2aw_comböe
, 
comböe1
, 
uƒﬁl2aw_des¸
);

2047 
	`add_comböî
(
uƒﬁl3a_comböe
, 
comböe1
, 
uƒﬁl3a_des¸
);

2048 
	`add_comböî
(
uƒﬁl4a_comböe
, 
comböe1
, 
uƒﬁl4a_des¸
);

2049 
	`add_comböî
(
uƒﬁl5a_comböe
, 
comböe1
, 
uƒﬁl5a_des¸
);

2050 
	`add_comböî
(
uƒﬁl6a_comböe
, 
comböe1
, 
uƒﬁl6a_des¸
);

2051 
	`add_comböî
(
uƒﬁl7a_comböe
, 
comböe1
, 
uƒﬁl7a_des¸
);

2052 
	`add_comböî
(
uƒﬁl8a_comböe
, 
comböe1
, 
uƒﬁl8a_des¸
);

2053 
	`add_comböî
(
uƒﬁl9a_comböe
, 
comböe1
, 
uƒﬁl9a_des¸
);

2054 
	`add_comböî
(
uƒﬁl10a_comböe
, 
comböe1
, 
uƒﬁl10a_des¸
);

2055 
	`add_comböî
(
uƒﬁl16a_comböe
, 
comböe1
, 
uƒﬁl16a_des¸
);

2056 #i‚de‡
UNROLL_ONLY


2057 
	`add_comböî
(
uƒﬁl2_comböe
, 
comböe1
, 
uƒﬁl2_des¸
);

2058 
	`add_comböî
(
uƒﬁl3_comböe
, 
comböe1
, 
uƒﬁl3_des¸
);

2059 
	`add_comböî
(
uƒﬁl4_comböe
, 
comböe1
, 
uƒﬁl4_des¸
);

2060 
	`add_comböî
(
uƒﬁl8_comböe
, 
comböe1
, 
uƒﬁl8_des¸
);

2061 
	`add_comböî
(
uƒﬁl16_comböe
, 
comböe1
, 
uƒﬁl16_des¸
);

2062 
	`add_comböî
(
comböe6
, 
comböe1
, 
comböe6_des¸
);

2063 
	`add_comböî
(
uƒﬁl4x2a_comböe
, 
comböe1
, 
uƒﬁl4x2a_des¸
);

2064 
	`add_comböî
(
uƒﬁl8x2a_comböe
, 
comböe1
, 
uƒﬁl8x2a_des¸
);

2065 
	`add_comböî
(
uƒﬁl3x3a_comböe
, 
comböe1
, 
uƒﬁl3x3a_des¸
);

2066 
	`add_comböî
(
uƒﬁl4x4a_comböe
, 
comböe1
, 
uƒﬁl4x4a_des¸
);

2067 
	`add_comböî
(
uƒﬁl5x5a_comböe
, 
comböe1
, 
uƒﬁl5x5a_des¸
);

2068 
	`add_comböî
(
uƒﬁl6x6a_comböe
, 
comböe1
, 
uƒﬁl6x6a_des¸
);

2069 
	`add_comböî
(
uƒﬁl7x7a_comböe
, 
comböe1
, 
uƒﬁl7x7a_des¸
);

2070 
	`add_comböî
(
uƒﬁl8x4a_comböe
, 
comböe1
, 
uƒﬁl8x4a_des¸
);

2071 
	`add_comböî
(
uƒﬁl8x8a_comböe
, 
comböe1
, 
uƒﬁl8x8a_des¸
);

2072 
	`add_comböî
(
uƒﬁl9x9a_comböe
, 
comböe1
, 
uƒﬁl9x9a_des¸
);

2073 
	`add_comböî
(
uƒﬁl10x10a_comböe
, 
comböe1
, 
uƒﬁl10x10a_des¸
);

2074 
	`add_comböî
(
uƒﬁl12x6a_comböe
, 
comböe1
, 
uƒﬁl12x6a_des¸
);

2075 
	`add_comböî
(
uƒﬁl12x12a_comböe
, 
comböe1
, 
uƒﬁl12x12a_des¸
);

2076 
	`add_comböî
(
uƒﬁl16x16a_comböe
, 
comböe1
, 
uƒﬁl16x16a_des¸
);

2077 
	`add_comböî
(
uƒﬁl20x20a_comböe
, 
comböe1
, 
uƒﬁl20x20a_des¸
);

2078 
	`add_comböî
(
uƒﬁl8x2_comböe
, 
comböe1
, 
uƒﬁl8x2_des¸
);

2079 
	`add_comböî
(
uƒﬁl8x4_comböe
, 
comböe1
, 
uƒﬁl8x4_des¸
);

2080 
	`add_comböî
(
uƒﬁl8x8_comböe
, 
comböe1
, 
uƒﬁl8x8_des¸
);

2081 
	`add_comböî
(
uƒﬁl9x3_comböe
, 
comböe1
, 
uƒﬁl9x3_des¸
);

2082 
	`add_comböî
(
uƒﬁlx2as_comböe
, 
comböe1
, 
uƒﬁlx2as_des¸
);

2083 
	`add_comböî
(
comböe7
, 
comböe1
, 
comböe7_des¸
);

2084 
	`add_comböî
(
uƒﬁl3Ø_comböe
, 
comböe1
, 
uƒﬁl3Ø_des¸
);

2085 
	`add_comböî
(
uƒﬁl4Ø_comböe
, 
comböe1
, 
uƒﬁl4Ø_des¸
);

2086 
	`add_comböî
(
uƒﬁl5Ø_comböe
, 
comböe1
, 
uƒﬁl5Ø_des¸
);

2087 
	`add_comböî
(
uƒﬁl6Ø_comböe
, 
comböe1
, 
uƒﬁl6Ø_des¸
);

2088 
	`add_comböî
(
uƒﬁl7Ø_comböe
, 
comböe1
, 
uƒﬁl7Ø_des¸
);

2089 
	`add_comböî
(
uƒﬁl8Ø_comböe
, 
comböe1
, 
uƒﬁl8Ø_des¸
);

2090 
	`add_comböî
(
uƒﬁl9Ø_comböe
, 
comböe1
, 
uƒﬁl9Ø_des¸
);

2091 
	`add_comböî
(
uƒﬁl10Ø_comböe
, 
comböe1
, 
uƒﬁl10Ø_des¸
);

2092 
	`add_comböî
(
uƒﬁl12Ø_comböe
, 
comböe1
, 
uƒﬁl12Ø_des¸
);

2093 
	`add_comböî
(
simd_v1_comböe
, 
comböe1
, 
simd_v1_des¸
);

2094 
	`add_comböî
(
simd_v2_comböe
, 
comböe1
, 
simd_v2_des¸
);

2095 
	`add_comböî
(
simd_v4_comböe
, 
comböe1
, 
simd_v4_des¸
);

2096 
	`add_comböî
(
simd_v8_comböe
, 
comböe1
, 
simd_v8_des¸
);

2097 
	`add_comböî
(
simd_v10_comböe
, 
comböe1
, 
simd_v10_des¸
);

2098 
	`add_comböî
(
simd_v12_comböe
, 
comböe1
, 
simd_v12_des¸
);

2099 
	`add_comböî
(
simd_v2a_comböe
, 
comböe1
, 
simd_v2a_des¸
);

2100 
	`add_comböî
(
simd_v4a_comböe
, 
comböe1
, 
simd_v4a_des¸
);

2101 
	`add_comböî
(
simd_v8a_comböe
, 
comböe1
, 
simd_v8a_des¸
);

2102 
	`log_comböî
(
simd_v8a_comböe
, 0.16, 0.24);

2104 
	}
}

	@opt/dpb.c

1 
	~"comböe.h
"

5 
	gcomböe1_des¸
[] = "combine1: Maximum use of dataábstraction";

8 
	$comböe1
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

10 
i
;

12 *
de°
 = 
IDENT
;

13 
i
 = 0; i < 
	`vec_Àngth
(
v
); i++) {

14 
d©a_t
 
vÆ
;

15 
	`gë_vec_ñemít
(
v
, 
i
, &
vÆ
);

17 *
de°
 = *de° 
OP
 
vÆ
;

20 
	}
}

23 
	gcomböe2_des¸
[] = "combine2: Take vec_length() out ofÜoop";

26 
	$comböe2
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

28 
i
;

29 
Àngth
 = 
	`vec_Àngth
(
v
);

31 *
de°
 = 
IDENT
;

32 
i
 = 0; i < 
Àngth
; i++) {

33 
d©a_t
 
vÆ
;

34 
	`gë_vec_ñemít
(
v
, 
i
, &
vÆ
);

35 *
de°
 = *de° 
OP
 
vÆ
;

37 
	}
}

40 
	gcomböe3_des¸
[] = "combine3: ArrayÑeferenceÅo vector data";

43 
	$comböe3
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

45 
i
;

46 
Àngth
 = 
	`vec_Àngth
(
v
);

47 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

49 *
de°
 = 
IDENT
;

50 
i
 = 0; i < 
Àngth
; i++) {

51 *
de°
 = *de° 
OP
 
d©a
[
i
];

53 
	}
}

56 
	gcomböe3w_des¸
[] = "combine3w: Update *dest withinÜoop only with write";

59 
	$comböe3w
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

61 
i
;

62 
Àngth
 = 
	`vec_Àngth
(
v
);

63 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

64 
d©a_t
 
acc
 = 
IDENT
;

67 *
de°
 = 
acc
;

69 
i
 = 0; i < 
Àngth
; i++) {

70 
acc
 =ác¯
OP
 
d©a
[
i
];

71 *
de°
 = 
acc
;

73 
	}
}

76 
	gcomböe4_des¸
[] = "combine4: ArrayÑeference,áccumulate inÅemporary";

79 
	$comböe4
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

81 
i
;

82 
Àngth
 = 
	`vec_Àngth
(
v
);

83 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

84 
d©a_t
 
acc
 = 
IDENT
;

86 
i
 = 0; i < 
Àngth
; i++) {

87 
acc
 =ác¯
OP
 
d©a
[
i
];

89 *
de°
 = 
acc
;

90 
	}
}

93 
	gcomböe4b_des¸
[] = "combine4b: Include bonds check inÜoop";

96 
	$comböe4b
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

98 
i
;

99 
Àngth
 = 
	`vec_Àngth
(
v
);

100 
d©a_t
 
acc
 = 
IDENT
;

102 
i
 = 0; i < 
Àngth
; i++) {

103 i‡(
i
 >0 && i < 
v
->
Àn
) {

104 
acc
 =ác¯
OP
 
v
->
d©a
[
i
];

107 *
de°
 = 
acc
;

108 
	}
}

112 
	gcomböe4p_des¸
[] = "combine4p: PointerÑeference,áccumulate inÅemporary";

115 
	$comböe4p
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

117 
Àngth
 = 
	`vec_Àngth
(
v
);

118 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

119 
d©a_t
 *
díd
 = 
d©a
+
Àngth
;

120 
d©a_t
 
acc
 = 
IDENT
;

122 ; 
d©a
 < 
díd
; data++)

123 
acc
 =ác¯
OP
 *
d©a
;

124 *
de°
 = 
acc
;

125 
	}
}

129 
	gcomböe5_des¸
[] = "combine5: Array code, unrolled by 2";

132 
	$comböe5
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

134 
i
;

135 
Àngth
 = 
	`vec_Àngth
(
v
);

136 
limô
 = 
Àngth
-1;

137 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

138 
d©a_t
 
acc
 = 
IDENT
;

141 
i
 = 0; i < 
limô
; i+=2) {

143 
acc
 = (ac¯
OP
 
d©a
[
i
]) OP data[i+1];

148 ; 
i
 < 
Àngth
; i++) {

149 
acc
 =ác¯
OP
 
d©a
[
i
];

151 *
de°
 = 
acc
;

152 
	}
}

155 
	guƒﬁl3a_des¸
[] = "unroll3a: Array code, unrolled by 3";

156 
	$uƒﬁl3a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

158 
i
;

159 
Àngth
 = 
	`vec_Àngth
(
v
);

160 
limô
 = 
Àngth
-2;

161 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

162 
d©a_t
 
acc
 = 
IDENT
;

165 
i
 = 0; i < 
limô
; i+=3) {

166 
acc
 =ác¯
OP
 
d©a
[
i
];

167 
acc
 =ác¯
OP
 
d©a
[
i
+1];

168 
acc
 =ác¯
OP
 
d©a
[
i
+2];

172 ; 
i
 < 
Àngth
; i++) {

173 
acc
 =ác¯
OP
 
d©a
[
i
];

175 *
de°
 = 
acc
;

176 
	}
}

179 
	gcomböe5p_des¸
[] = "combine5p: Pointer code, unrolled by 2, forÜoop";

182 
	$comböe5p
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

184 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

185 
d©a_t
 *
díd
 = 
d©a
+
	`vec_Àngth
(
v
);

186 
d©a_t
 *
dlimô
 = 
díd
-1;

187 
d©a_t
 
acc
 = 
IDENT
;

190 ; 
d©a
 < 
dlimô
; data += 2) {

191 
acc
 =ác¯
OP
 
d©a
[0] OP data[1];

195 ; 
d©a
 < 
díd
; data++) {

196 
acc
 =ác¯
OP
 
d©a
[0];

198 *
de°
 = 
acc
;

199 
	}
}

202 
	guƒﬁl2aw_des¸
[] = "unroll2aw: Array code, unrolled by 2, whileÜoop";

203 
	$uƒﬁl2aw_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

205 
i
 = 0;

206 
Àngth
 = 
	`vec_Àngth
(
v
);

207 
limô
 = 
Àngth
-1;

208 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

209 
d©a_t
 
acc
 = 
IDENT
;

212 
i
 < 
limô
) {

213 
acc
 =ác¯
OP
 
d©a
[
i
];

214 
i
+= 2;

215 
acc
 =ác¯
OP
 
d©a
[
i
-1];

219 ; 
i
 < 
Àngth
; i++) {

220 
acc
 =ác¯
OP
 
d©a
[
i
];

222 *
de°
 = 
acc
;

223 
	}
}

226 
	guƒﬁl4a_des¸
[] = "unroll4a: Array code, unrolled by 4";

227 
	$uƒﬁl4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

229 
i
;

230 
Àngth
 = 
	`vec_Àngth
(
v
);

231 
limô
 = 
Àngth
-3;

232 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

233 
d©a_t
 
acc
 = 
IDENT
;

236 
i
 = 0; i < 
limô
; i+=4) {

237 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

238 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

242 ; 
i
 < 
Àngth
; i++) {

243 
acc
 =ác¯
OP
 
d©a
[
i
];

245 *
de°
 = 
acc
;

246 
	}
}

248 
	guƒﬁl5a_des¸
[] = "unroll5a: Array code, unrolled by 5";

251 
	$uƒﬁl5
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

254 
	$uƒﬁl5a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

258 
i
;

259 
Àngth
 = 
	`vec_Àngth
(
v
);

260 
limô
 = 
Àngth
-4;

261 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

262 
d©a_t
 
acc
 = 
IDENT
;

265 
i
 = 0; i < 
limô
; i+=5) {

266 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

267 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

268 
acc
 =ác¯
OP
 
d©a
[
i
+4];

272 ; 
i
 < 
Àngth
; i++) {

273 
acc
 =ác¯
OP
 
d©a
[
i
];

275 *
de°
 = 
acc
;

276 
	}
}

279 
	guƒﬁl6a_des¸
[] = "unroll6a: Array code, unrolled by 6";

280 
	$uƒﬁl6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

282 
i
;

283 
Àngth
 = 
	`vec_Àngth
(
v
);

284 
limô
 = 
Àngth
-5;

285 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

286 
d©a_t
 
acc
 = 
IDENT
;

289 
i
 = 0; i < 
limô
; i+=6) {

290 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

291 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

292 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

296 ; 
i
 < 
Àngth
; i++) {

297 
acc
 =ác¯
OP
 
d©a
[
i
];

299 *
de°
 = 
acc
;

300 
	}
}

302 
	guƒﬁl7a_des¸
[] = "unroll7a: Array code, unrolled by 7";

303 
	$uƒﬁl7a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

305 
i
;

306 
Àngth
 = 
	`vec_Àngth
(
v
);

307 
limô
 = 
Àngth
-6;

308 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

309 
d©a_t
 
acc
 = 
IDENT
;

312 
i
 = 0; i < 
limô
; i+=7) {

313 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

314 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

315 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

316 
acc
 =ác¯
OP
 
d©a
[
i
+6];

320 ; 
i
 < 
Àngth
; i++) {

321 
acc
 =ác¯
OP
 
d©a
[
i
];

323 *
de°
 = 
acc
;

324 
	}
}

327 
	guƒﬁl8a_des¸
[] = "unroll8a: Array code, unrolled by 8";

328 
	$uƒﬁl8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

330 
i
;

331 
Àngth
 = 
	`vec_Àngth
(
v
);

332 
limô
 = 
Àngth
-7;

333 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

334 
d©a_t
 
acc
 = 
IDENT
;

337 
i
 = 0; i < 
limô
; i+=8) {

338 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

339 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

340 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

341 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

345 ; 
i
 < 
Àngth
; i++) {

346 
acc
 =ác¯
OP
 
d©a
[
i
];

348 *
de°
 = 
acc
;

349 
	}
}

351 
	guƒﬁl9a_des¸
[] = "unroll9a: Array code, unrolled by 9";

352 
	$uƒﬁl9a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

354 
i
;

355 
Àngth
 = 
	`vec_Àngth
(
v
);

356 
limô
 = 
Àngth
-8;

357 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

358 
d©a_t
 
acc
 = 
IDENT
;

361 
i
 = 0; i < 
limô
; i+=9) {

362 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

363 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

364 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

365 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

366 
acc
 =ác¯
OP
 
d©a
[
i
+8];

370 ; 
i
 < 
Àngth
; i++) {

371 
acc
 =ác¯
OP
 
d©a
[
i
];

373 *
de°
 = 
acc
;

374 
	}
}

376 
	guƒﬁl10a_des¸
[] = "unroll10a: Array code, unrolled by 10";

377 
	$uƒﬁl10a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

379 
i
;

380 
Àngth
 = 
	`vec_Àngth
(
v
);

381 
limô
 = 
Àngth
-9;

382 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

383 
d©a_t
 
acc
 = 
IDENT
;

386 
i
 = 0; i < 
limô
; i+=10) {

387 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

388 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

389 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

390 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

391 
acc
 =ác¯
OP
 
d©a
[
i
+8] OP data[i+9];

395 ; 
i
 < 
Àngth
; i++) {

396 
acc
 =ác¯
OP
 
d©a
[
i
];

398 *
de°
 = 
acc
;

399 
	}
}

402 
	guƒﬁl16a_des¸
[] = "unroll16a: Array code, unrolled by 16";

403 
	$uƒﬁl16a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

405 
i
;

406 
Àngth
 = 
	`vec_Àngth
(
v
);

407 
limô
 = 
Àngth
-15;

408 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

409 
d©a_t
 
acc
 = 
IDENT
;

412 
i
 = 0; i < 
limô
; i+=16) {

413 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

414 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

415 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

416 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

417 
acc
 =ác¯
OP
 
d©a
[
i
+8] OP data[i+9];

418 
acc
 =ác¯
OP
 
d©a
[
i
+10] OP data[i+11];

419 
acc
 =ác¯
OP
 
d©a
[
i
+12] OP data[i+13];

420 
acc
 =ác¯
OP
 
d©a
[
i
+14] OP data[i+15];

424 ; 
i
 < 
Àngth
; i++) {

425 
acc
 =ác¯
OP
 
d©a
[
i
];

427 *
de°
 = 
acc
;

428 
	}
}

430 
	guƒﬁl2_des¸
[] = "unroll2: Pointer code, unrolled by 2";

431 
	$uƒﬁl2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

433 
Àngth
 = 
	`vec_Àngth
(
v
);

434 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

435 
ovî
 = 
Àngth
%2;

436 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

437 
d©a_t
 
acc
 = 
IDENT
;

439 
d©a
 < 
díd
) {

440 
acc
 =ác¯
OP
 
d©a
[0];

441 
acc
 =ác¯
OP
 
d©a
[1];

442 
d©a
 += 2;

444 
díd
 +
ovî
;

445 
d©a
 < 
díd
) {

446 
acc
 =ác¯
OP
 *
d©a
;

447 
d©a
 ++;

449 *
de°
 = 
acc
;

450 
	}
}

453 
	guƒﬁl3_des¸
[] = "unroll3: Pointer code, unrolled by 3";

454 
	$uƒﬁl3_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

456 
Àngth
 = 
	`vec_Àngth
(
v
);

457 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

458 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-2;

459 
d©a_t
 
acc
 = 
IDENT
;

461 
d©a
 < 
díd
) {

462 
acc
 =ác¯
OP
 
d©a
[0];

463 
acc
 =ác¯
OP
 
d©a
[1];

464 
acc
 =ác¯
OP
 
d©a
[2];

465 
d©a
 += 3;

467 
díd
 += 2;

468 
d©a
 < 
díd
) {

469 
acc
 =ác¯
OP
 *
d©a
;

470 
d©a
 ++;

472 *
de°
 = 
acc
;

473 
	}
}

476 
	guƒﬁl4_des¸
[] = "unroll4: Pointer code, unrolled by 4";

477 
	$uƒﬁl4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

479 
Àngth
 = 
	`vec_Àngth
(
v
);

480 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

481 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-3;

482 
d©a_t
 
acc
 = 
IDENT
;

484 
d©a
 < 
díd
) {

485 
acc
 =ác¯
OP
 
d©a
[0];

486 
acc
 =ác¯
OP
 
d©a
[1];

487 
acc
 =ác¯
OP
 
d©a
[2];

488 
acc
 =ác¯
OP
 
d©a
[3];

489 
d©a
 += 4;

491 
díd
 += 3;

492 
d©a
 < 
díd
) {

493 
acc
 =ác¯
OP
 *
d©a
;

494 
d©a
 ++;

496 *
de°
 = 
acc
;

497 
	}
}

499 
	guƒﬁl8_des¸
[] = "unroll8: Pointer code, unrolled by 8";

500 
	$uƒﬁl8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

502 
Àngth
 = 
	`vec_Àngth
(
v
);

503 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

504 
ovî
 = 
Àngth
%8;

505 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

506 
d©a_t
 
acc
 = 
IDENT
;

508 
d©a
 < 
díd
) {

509 
acc
 =ác¯
OP
 
d©a
[0];

510 
acc
 =ác¯
OP
 
d©a
[1];

511 
acc
 =ác¯
OP
 
d©a
[2];

512 
acc
 =ác¯
OP
 
d©a
[3];

513 
acc
 =ác¯
OP
 
d©a
[4];

514 
acc
 =ác¯
OP
 
d©a
[5];

515 
acc
 =ác¯
OP
 
d©a
[6];

516 
acc
 =ác¯
OP
 
d©a
[7];

517 
d©a
 += 8;

519 
díd
 +
ovî
;

520 
d©a
 < 
díd
) {

521 
acc
 =ác¯
OP
 *
d©a
;

522 
d©a
 ++;

524 *
de°
 = 
acc
;

525 
	}
}

527 
	guƒﬁl16_des¸
[] = "unroll16: Pointer code, unrolled by 16";

528 
	$uƒﬁl16_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

530 
Àngth
 = 
	`vec_Àngth
(
v
);

531 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

532 
ovî
 = 
Àngth
%16;

533 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

534 
d©a_t
 
acc
 = 
IDENT
;

536 
d©a
 < 
díd
) {

537 
acc
 =ác¯
OP
 
d©a
[0];

538 
acc
 =ác¯
OP
 
d©a
[1];

539 
acc
 =ác¯
OP
 
d©a
[2];

540 
acc
 =ác¯
OP
 
d©a
[3];

541 
acc
 =ác¯
OP
 
d©a
[4];

542 
acc
 =ác¯
OP
 
d©a
[5];

543 
acc
 =ác¯
OP
 
d©a
[6];

544 
acc
 =ác¯
OP
 
d©a
[7];

545 
acc
 =ác¯
OP
 
d©a
[8];

546 
acc
 =ác¯
OP
 
d©a
[9];

547 
acc
 =ác¯
OP
 
d©a
[10];

548 
acc
 =ác¯
OP
 
d©a
[11];

549 
acc
 =ác¯
OP
 
d©a
[12];

550 
acc
 =ác¯
OP
 
d©a
[13];

551 
acc
 =ác¯
OP
 
d©a
[14];

552 
acc
 =ác¯
OP
 
d©a
[15];

553 
d©a
 += 16;

555 
díd
 +
ovî
;

556 
d©a
 < 
díd
) {

557 
acc
 =ác¯
OP
 *
d©a
;

558 
d©a
 ++;

560 *
de°
 = 
acc
;

561 
	}
}

564 
	gcomböe6_des¸
[] = "combine6: Array code, unrolled by 2, Superscalar x2";

567 
	$comböe6
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

569 
i
;

570 
Àngth
 = 
	`vec_Àngth
(
v
);

571 
limô
 = 
Àngth
-1;

572 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

573 
d©a_t
 
acc0
 = 
IDENT
;

574 
d©a_t
 
acc1
 = 
IDENT
;

577 
i
 = 0; i < 
limô
; i+=2) {

578 
acc0
 =ácc0 
OP
 
d©a
[
i
];

579 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

583 ; 
i
 < 
Àngth
; i++) {

584 
acc0
 =ácc0 
OP
 
d©a
[
i
];

586 *
de°
 = 
acc0
 
OP
 
acc1
;

587 
	}
}

590 
	guƒﬁl4x2a_des¸
[] = "unroll4x2a: Array code, unrolled by 4, Superscalar x2";

591 
	$uƒﬁl4x2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

593 
i
;

594 
Àngth
 = 
	`vec_Àngth
(
v
);

595 
limô
 = 
Àngth
-3;

596 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

597 
d©a_t
 
acc0
 = 
IDENT
;

598 
d©a_t
 
acc1
 = 
IDENT
;

601 
i
 = 0; i < 
limô
; i+=4) {

602 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

603 
acc0
 =ácc0 
OP
 
d©a
[
i
+2]; 
acc1
 =ácc1 OP data[i+3];

607 ; 
i
 < 
Àngth
; i++) {

608 
acc0
 =ácc0 
OP
 
d©a
[
i
];

610 *
de°
 = 
acc0
 
OP
 
acc1
;

611 
	}
}

614 
	guƒﬁl8x2a_des¸
[] = "unroll8x2a: Array code, unrolled by 8, Superscalar x2";

615 
	$uƒﬁl8x2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

617 
i
;

618 
Àngth
 = 
	`vec_Àngth
(
v
);

619 
limô
 = 
Àngth
-7;

620 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

621 
d©a_t
 
acc0
 = 
IDENT
;

622 
d©a_t
 
acc1
 = 
IDENT
;

625 
i
 = 0; i < 
limô
; i+=8) {

626 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

627 
acc0
 =ácc0 
OP
 
d©a
[
i
+2]; 
acc1
 =ácc1 OP data[i+3];

628 
acc0
 =ácc0 
OP
 
d©a
[
i
+4]; 
acc1
 =ácc1 OP data[i+5];

629 
acc0
 =ácc0 
OP
 
d©a
[
i
+6]; 
acc1
 =ácc1 OP data[i+7];

633 ; 
i
 < 
Àngth
; i++) {

634 
acc0
 =ácc0 
OP
 
d©a
[
i
];

636 *
de°
 = 
acc0
 
OP
 
acc1
;

637 
	}
}

639 
	guƒﬁl3x3a_des¸
[] = "unroll3x3a: Array code, unrolled by 3, Superscalar x3";

640 
	$uƒﬁl3x3a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

642 
i
;

643 
Àngth
 = 
	`vec_Àngth
(
v
);

644 
limô
 = 
Àngth
-2;

645 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

646 
d©a_t
 
acc0
 = 
IDENT
;

647 
d©a_t
 
acc1
 = 
IDENT
;

648 
d©a_t
 
acc2
 = 
IDENT
;

651 
i
 = 0; i < 
limô
; i+=3) {

652 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

653 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

657 ; 
i
 < 
Àngth
; i++) {

658 
acc0
 =ácc0 
OP
 
d©a
[
i
];

660 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
;

661 
	}
}

664 
	guƒﬁl4x4a_des¸
[] = "unroll4x4a: Array code, unrolled by 4, Superscalar x4";

665 
	$uƒﬁl4x4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

667 
i
;

668 
Àngth
 = 
	`vec_Àngth
(
v
);

669 
limô
 = 
Àngth
-3;

670 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

671 
d©a_t
 
acc0
 = 
IDENT
;

672 
d©a_t
 
acc1
 = 
IDENT
;

673 
d©a_t
 
acc2
 = 
IDENT
;

674 
d©a_t
 
acc3
 = 
IDENT
;

677 
i
 = 0; i < 
limô
; i+=4) {

678 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

679 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

683 ; 
i
 < 
Àngth
; i++) {

684 
acc0
 =ácc0 
OP
 
d©a
[
i
];

686 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
);

688 
	}
}

690 
	guƒﬁl8x4a_des¸
[] = "unroll8x4a: Array code, unrolled by 8, Superscalar x4";

691 
	$uƒﬁl8x4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

693 
i
;

694 
Àngth
 = 
	`vec_Àngth
(
v
);

695 
limô
 = 
Àngth
-7;

696 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

697 
d©a_t
 
acc0
 = 
IDENT
;

698 
d©a_t
 
acc1
 = 
IDENT
;

699 
d©a_t
 
acc2
 = 
IDENT
;

700 
d©a_t
 
acc3
 = 
IDENT
;

703 
i
 = 0; i < 
limô
; i+=8) {

704 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

705 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

706 
acc0
 =ácc0 
OP
 
d©a
[
i
+4]; 
acc1
 =ácc1 OP data[i+5];

707 
acc2
 =ácc2 
OP
 
d©a
[
i
+6]; 
acc3
 =ácc3 OP data[i+7];

711 ; 
i
 < 
Àngth
; i++) {

712 
acc0
 =ácc0 
OP
 
d©a
[
i
];

714 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
 OP 
acc3
;

715 
	}
}

717 
	guƒﬁl12x6a_des¸
[] = "unroll2x6a: Array code, unrolled by 12, Superscalar x6";

718 
	$uƒﬁl12x6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

720 
i
;

721 
Àngth
 = 
	`vec_Àngth
(
v
);

722 
limô
 = 
Àngth
-11;

723 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

724 
d©a_t
 
acc0
 = 
IDENT
;

725 
d©a_t
 
acc1
 = 
IDENT
;

726 
d©a_t
 
acc2
 = 
IDENT
;

727 
d©a_t
 
acc3
 = 
IDENT
;

728 
d©a_t
 
acc4
 = 
IDENT
;

729 
d©a_t
 
acc5
 = 
IDENT
;

732 
i
 = 0; i < 
limô
; i+=12) {

733 
acc0
 =ácc0 
OP
 
d©a
[
i
];

734 
acc0
 =ácc0 
OP
 
d©a
[
i
+6];

735 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

736 
acc1
 =ácc1 
OP
 
d©a
[
i
+7];

737 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

738 
acc2
 =ácc2 
OP
 
d©a
[
i
+8];

739 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

740 
acc3
 =ácc3 
OP
 
d©a
[
i
+9];

741 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

742 
acc4
 =ácc4 
OP
 
d©a
[
i
+10];

743 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

744 
acc5
 =ácc5 
OP
 
d©a
[
i
+11];

748 ; 
i
 < 
Àngth
; i++) {

749 
acc0
 =ácc0 
OP
 
d©a
[
i
];

751 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
);

752 
	}
}

754 
	guƒﬁl12x12a_des¸
[] = "unroll12x12a: Array code, unrolled by 12, Superscalar x12";

755 
	$uƒﬁl12x12a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

757 
i
;

758 
Àngth
 = 
	`vec_Àngth
(
v
);

759 
limô
 = 
Àngth
-11;

760 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

761 
d©a_t
 
acc0
 = 
IDENT
;

762 
d©a_t
 
acc1
 = 
IDENT
;

763 
d©a_t
 
acc2
 = 
IDENT
;

764 
d©a_t
 
acc3
 = 
IDENT
;

765 
d©a_t
 
acc4
 = 
IDENT
;

766 
d©a_t
 
acc5
 = 
IDENT
;

767 
d©a_t
 
acc6
 = 
IDENT
;

768 
d©a_t
 
acc7
 = 
IDENT
;

769 
d©a_t
 
acc8
 = 
IDENT
;

770 
d©a_t
 
acc9
 = 
IDENT
;

771 
d©a_t
 
acc10
 = 
IDENT
;

772 
d©a_t
 
acc11

IDENT
;

775 
i
 = 0; i < 
limô
; i+=12) {

776 
acc0
 =ácc0 
OP
 
d©a
[
i
];

777 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

778 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

779 
acc7
 =ácc7 
OP
 
d©a
[
i
+7];

780 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

781 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

782 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

783 
acc9
 =ácc9 
OP
 
d©a
[
i
+9];

784 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

785 
acc10
 =ácc10 
OP
 
d©a
[
i
+10];

786 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

787 
acc11
 =ácc11 
OP
 
d©a
[
i
+11];

791 ; 
i
 < 
Àngth
; i++) {

792 
acc0
 =ácc0 
OP
 
d©a
[
i
];

794 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
)

795 
	`OP
 (
acc6
 
OP
 
acc7
ËOP (
acc8
 OP 
acc9
ËOP (
acc10
 OP 
acc11
);

796 
	}
}

798 
	guƒﬁl5x5a_des¸
[] = "unroll5x5a: Array code, unrolled by 5, Superscalar x5";

799 
	$uƒﬁl5x5a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

801 
i
;

802 
Àngth
 = 
	`vec_Àngth
(
v
);

803 
limô
 = 
Àngth
-4;

804 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

805 
d©a_t
 
acc0
 = 
IDENT
;

806 
d©a_t
 
acc1
 = 
IDENT
;

807 
d©a_t
 
acc2
 = 
IDENT
;

808 
d©a_t
 
acc3
 = 
IDENT
;

809 
d©a_t
 
acc4
 = 
IDENT
;

812 
i
 = 0; i < 
limô
; i+=5) {

813 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

814 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

815 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

819 ; 
i
 < 
Àngth
; i++) {

820 
acc0
 =ácc0 
OP
 
d©a
[
i
];

822 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
 OP 
acc4
);

823 
	}
}

825 
	guƒﬁl6x6a_des¸
[] = "unroll6x6a: Array code, unrolled by 6, Superscalar x6";

826 
	$uƒﬁl6x6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

828 
i
;

829 
Àngth
 = 
	`vec_Àngth
(
v
);

830 
limô
 = 
Àngth
-5;

831 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

832 
d©a_t
 
acc0
 = 
IDENT
;

833 
d©a_t
 
acc1
 = 
IDENT
;

834 
d©a_t
 
acc2
 = 
IDENT
;

835 
d©a_t
 
acc3
 = 
IDENT
;

836 
d©a_t
 
acc4
 = 
IDENT
;

837 
d©a_t
 
acc5
 = 
IDENT
;

840 
i
 = 0; i < 
limô
; i+=6) {

841 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

842 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

843 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

847 ; 
i
 < 
Àngth
; i++) {

848 
acc0
 =ácc0 
OP
 
d©a
[
i
];

850 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
);

851 
	}
}

853 
	guƒﬁl7x7a_des¸
[] = "unroll7x7a: Array code, unrolled by 7, Superscalar x7";

854 
	$uƒﬁl7x7a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

856 
i
;

857 
Àngth
 = 
	`vec_Àngth
(
v
);

858 
limô
 = 
Àngth
-6;

859 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

860 
d©a_t
 
acc0
 = 
IDENT
;

861 
d©a_t
 
acc1
 = 
IDENT
;

862 
d©a_t
 
acc2
 = 
IDENT
;

863 
d©a_t
 
acc3
 = 
IDENT
;

864 
d©a_t
 
acc4
 = 
IDENT
;

865 
d©a_t
 
acc5
 = 
IDENT
;

866 
d©a_t
 
acc6
 = 
IDENT
;

869 
i
 = 0; i < 
limô
; i+=7) {

870 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

871 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

872 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

873 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

877 ; 
i
 < 
Àngth
; i++) {

878 
acc0
 =ácc0 
OP
 
d©a
[
i
];

880 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP (
acc4
 OP 
acc5
 OP 
acc6
);

881 
	}
}

883 
	guƒﬁl8x8a_des¸
[] = "unroll8x8a: Array code, unrolled by 8, Superscalar x8";

884 
	$uƒﬁl8x8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

886 
i
;

887 
Àngth
 = 
	`vec_Àngth
(
v
);

888 
limô
 = 
Àngth
-7;

889 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

890 
d©a_t
 
acc0
 = 
IDENT
;

891 
d©a_t
 
acc1
 = 
IDENT
;

892 
d©a_t
 
acc2
 = 
IDENT
;

893 
d©a_t
 
acc3
 = 
IDENT
;

894 
d©a_t
 
acc4
 = 
IDENT
;

895 
d©a_t
 
acc5
 = 
IDENT
;

896 
d©a_t
 
acc6
 = 
IDENT
;

897 
d©a_t
 
acc7
 = 
IDENT
;

900 
i
 = 0; i < 
limô
; i+=8) {

901 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

902 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

903 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

904 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

908 ; 
i
 < 
Àngth
; i++) {

909 
acc0
 =ácc0 
OP
 
d©a
[
i
];

911 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP ((
acc4
 OP 
acc5
ËOP (
acc6
 OP 
acc7
));

912 
	}
}

914 
	guƒﬁl9x9a_des¸
[] = "unroll9x9a: Array code, unrolled by 9, Superscalar x9";

915 
	$uƒﬁl9x9a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

917 
i
;

918 
Àngth
 = 
	`vec_Àngth
(
v
);

919 
limô
 = 
Àngth
-8;

920 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

921 
d©a_t
 
acc0
 = 
IDENT
;

922 
d©a_t
 
acc1
 = 
IDENT
;

923 
d©a_t
 
acc2
 = 
IDENT
;

924 
d©a_t
 
acc3
 = 
IDENT
;

925 
d©a_t
 
acc4
 = 
IDENT
;

926 
d©a_t
 
acc5
 = 
IDENT
;

927 
d©a_t
 
acc6
 = 
IDENT
;

928 
d©a_t
 
acc7
 = 
IDENT
;

929 
d©a_t
 
acc8
 = 
IDENT
;

932 
i
 = 0; i < 
limô
; i+=9) {

933 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

934 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

935 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

936 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

937 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

941 ; 
i
 < 
Àngth
; i++) {

942 
acc0
 =ácc0 
OP
 
d©a
[
i
];

944 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP ((
acc4
 OP 
acc5
ËOP (
acc6
 OP 
acc7
ËOP 
acc8
);

945 
	}
}

947 
	guƒﬁl10x10a_des¸
[] = "unroll10x10a: Array code, unrolled by 10, Superscalar x10";

948 
	$uƒﬁl10x10a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

950 
i
;

951 
Àngth
 = 
	`vec_Àngth
(
v
);

952 
limô
 = 
Àngth
-9;

953 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

954 
d©a_t
 
acc0
 = 
IDENT
;

955 
d©a_t
 
acc1
 = 
IDENT
;

956 
d©a_t
 
acc2
 = 
IDENT
;

957 
d©a_t
 
acc3
 = 
IDENT
;

958 
d©a_t
 
acc4
 = 
IDENT
;

959 
d©a_t
 
acc5
 = 
IDENT
;

960 
d©a_t
 
acc6
 = 
IDENT
;

961 
d©a_t
 
acc7
 = 
IDENT
;

962 
d©a_t
 
acc8
 = 
IDENT
;

963 
d©a_t
 
acc9
 = 
IDENT
;

966 
i
 = 0; i < 
limô
; i+=10) {

967 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

968 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

969 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

970 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

971 
acc8
 =ácc8 
OP
 
d©a
[
i
+8]; 
acc9
 =ácc9 OP data[i+9];

975 ; 
i
 < 
Àngth
; i++) {

976 
acc0
 =ácc0 
OP
 
d©a
[
i
];

978 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)) OP

979 ((
acc4
 
OP
 
acc5
Ë
	`OP
 (
acc6
 OP 
acc7
)) OP

980 (
acc8
 
OP
 
acc9
);

981 
	}
}

983 
	guƒﬁlx2as_des¸
[] = "unrollx2as: Array code, Unroll x2, Superscalar x2,Çoninterleaved";

984 
	$uƒﬁlx2as_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

986 
i
;

987 
Àngth
 = 
	`vec_Àngth
(
v
);

988 
limô
 = 
Àngth
/2;

989 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

990 
d©a_t
 *
d©a2
 = 
d©a
+
limô
;

991 
d©a_t
 
acc0
 = 
IDENT
;

992 
d©a_t
 
acc1
 = 
IDENT
;

995 
i
 = 0; i < 
limô
; i++) {

996 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP 
d©a2
[i];

1000 
i
 = 
limô
*2; i < 
Àngth
; i++) {

1001 
acc1
 =ácc1 
OP
 
d©a
[
i
];

1003 *
de°
 = 
acc0
 
OP
 
acc1
;

1004 
	}
}

1006 
	guƒﬁl4x2as_des¸
[] = "unroll4x2as: Array code, Unroll x4, Superscalar x2,Çoninterleaved";

1007 
	$uƒﬁl4x2as_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1009 
i
;

1010 
Àngth
 = 
	`vec_Àngth
(
v
);

1011 
limô
 = 
Àngth
/2;

1012 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1013 
d©a_t
 *
d©a2
 = 
d©a
+
limô
;

1014 
d©a_t
 
acc0
 = 
IDENT
;

1015 
d©a_t
 
acc1
 = 
IDENT
;

1018 
i
 = 0; i < 
limô
; i++) {

1019 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP 
d©a2
[i];

1023 
i
 = 
limô
*2; i < 
Àngth
; i++) {

1024 
acc1
 =ácc1 
OP
 
d©a
[
i
];

1026 *
de°
 = 
acc0
 
OP
 
acc1
;

1027 
	}
}

1031 
	guƒﬁl8x2_des¸
[] = "unroll8x2: Pointer code, unrolled by 8, Superscalar x2";

1032 
	$uƒﬁl8x2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1034 
Àngth
 = 
	`vec_Àngth
(
v
);

1035 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1036 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1037 
d©a_t
 
acc0
 = 
IDENT
;

1038 
d©a_t
 
acc1
 = 
IDENT
;

1040 
d©a
 < 
díd
) {

1041 
acc0
 =ácc0 
OP
 
d©a
[0];

1042 
acc1
 =ácc1 
OP
 
d©a
[1];

1043 
acc0
 =ácc0 
OP
 
d©a
[2];

1044 
acc1
 =ácc1 
OP
 
d©a
[3];

1045 
acc0
 =ácc0 
OP
 
d©a
[4];

1046 
acc1
 =ácc1 
OP
 
d©a
[5];

1047 
acc0
 =ácc0 
OP
 
d©a
[6];

1048 
acc1
 =ácc1 
OP
 
d©a
[7];

1049 
d©a
 += 8;

1051 
díd
 += 7;

1052 
d©a
 < 
díd
) {

1053 
acc0
 =ácc0 
OP
 *
d©a
;

1054 
d©a
 ++;

1056 *
de°
 = 
acc0
 
OP
 
acc1
;

1057 
	}
}

1059 
	guƒﬁl9x3_des¸
[] = "unroll9x3: Pointer code, unrolled by 9, Superscalar x3";

1060 
	$uƒﬁl9x3_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1062 
Àngth
 = 
	`vec_Àngth
(
v
);

1063 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1064 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-8;

1065 
d©a_t
 
acc0
 = 
IDENT
;

1066 
d©a_t
 
acc1
 = 
IDENT
;

1067 
d©a_t
 
acc2
 = 
IDENT
;

1069 
d©a
 < 
díd
) {

1070 
acc0
 =ácc0 
OP
 
d©a
[0];

1071 
acc1
 =ácc1 
OP
 
d©a
[1];

1072 
acc2
 =ácc2 
OP
 
d©a
[2];

1073 
acc0
 =ácc0 
OP
 
d©a
[3];

1074 
acc1
 =ácc1 
OP
 
d©a
[4];

1075 
acc2
 =ácc2 
OP
 
d©a
[5];

1076 
acc0
 =ácc0 
OP
 
d©a
[6];

1077 
acc1
 =ácc1 
OP
 
d©a
[7];

1078 
acc2
 =ácc2 
OP
 
d©a
[8];

1079 
d©a
 += 9;

1081 
díd
 += 8;

1082 
d©a
 < 
díd
) {

1083 
acc0
 =ácc0 
OP
 *
d©a
;

1084 
d©a
 ++;

1086 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
;

1087 
	}
}

1090 
	guƒﬁl8x4_des¸
[] = "unroll8x4: Pointer code, unrolled by 8, Superscalar x4";

1091 
	$uƒﬁl8x4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1093 
Àngth
 = 
	`vec_Àngth
(
v
);

1094 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1095 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1096 
d©a_t
 
acc3
 = 
IDENT
;

1097 
d©a_t
 
acc0
 = 
IDENT
;

1098 
d©a_t
 
acc1
 = 
IDENT
;

1099 
d©a_t
 
acc2
 = 
IDENT
;

1101 
d©a
 < 
díd
) {

1102 
acc3
 =ácc3 
OP
 
d©a
[0];

1103 
acc0
 =ácc0 
OP
 
d©a
[1];

1104 
acc1
 =ácc1 
OP
 
d©a
[2];

1105 
acc2
 =ácc2 
OP
 
d©a
[3];

1106 
acc3
 =ácc3 
OP
 
d©a
[4];

1107 
acc0
 =ácc0 
OP
 
d©a
[5];

1108 
acc1
 =ácc1 
OP
 
d©a
[6];

1109 
acc2
 =ácc2 
OP
 
d©a
[7];

1110 
d©a
 += 8;

1112 
díd
 += 7;

1113 
d©a
 < 
díd
) {

1114 
acc3
 =ácc3 
OP
 *
d©a
;

1115 
d©a
 ++;

1117 *
de°
 = 
acc3
 
OP
 
acc0
 OP 
acc1
 OP 
acc2
;

1118 
	}
}

1120 
	guƒﬁl8x8_des¸
[] = "unroll8x8: Pointer code, unrolled by 8, Superscalar x8";

1121 
	$uƒﬁl8x8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1123 
Àngth
 = 
	`vec_Àngth
(
v
);

1124 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1125 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1126 
d©a_t
 
acc4
 = 
IDENT
;

1127 
d©a_t
 
acc5
 = 
IDENT
;

1128 
d©a_t
 
acc6
 = 
IDENT
;

1129 
d©a_t
 
acc7
 = 
IDENT
;

1130 
d©a_t
 
acc3
 = 
IDENT
;

1131 
d©a_t
 
acc0
 = 
IDENT
;

1132 
d©a_t
 
acc1
 = 
IDENT
;

1133 
d©a_t
 
acc2
 = 
IDENT
;

1135 
d©a
 < 
díd
) {

1136 
acc0
 =ácc0 
OP
 
d©a
[0];

1137 
acc1
 =ácc1 
OP
 
d©a
[1];

1138 
acc2
 =ácc2 
OP
 
d©a
[2];

1139 
acc3
 =ácc3 
OP
 
d©a
[3];

1140 
acc4
 =ácc4 
OP
 
d©a
[4];

1141 
acc6
 = 
acc5
 
OP
 
d©a
[5];

1142 
acc6
 =ácc6 
OP
 
d©a
[6];

1143 
acc7
 =ácc7 
OP
 
d©a
[7];

1144 
d©a
 += 8;

1146 
díd
 += 7;

1147 
d©a
 < 
díd
) {

1148 
acc0
 =ácc0 
OP
 *
d©a
;

1149 
d©a
 ++;

1151 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
 OP 
acc3
 OP 
acc4
 OP 
acc5
 OP 
acc6
 OP 
acc7
;

1152 
	}
}

1154 
	gcomböe7_des¸
[] = "combine7: Array code, unrolled by 2, differentássociativity";

1157 
	$comböe7
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1159 
i
;

1160 
Àngth
 = 
	`vec_Àngth
(
v
);

1161 
limô
 = 
Àngth
-1;

1162 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1163 
d©a_t
 
acc
 = 
IDENT
;

1166 
i
 = 0; i < 
limô
; i+=2) {

1168 
acc
 =ác¯
	`OP
 (
d©a
[
i
] 
OP
 data[i+1]);

1173 ; 
i
 < 
Àngth
; i++) {

1174 
acc
 =ác¯
OP
 
d©a
[
i
];

1176 *
de°
 = 
acc
;

1177 
	}
}

1180 
	guƒﬁl3Ø_des¸
[] = "unroll3aa: Array code, unrolled by 3, Different Associativity";

1181 
	$uƒﬁl3Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1183 
i
;

1184 
Àngth
 = 
	`vec_Àngth
(
v
);

1185 
limô
 = 
Àngth
-2;

1186 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1187 
d©a_t
 
acc
 = 
IDENT
;

1190 
i
 = 0; i < 
limô
; i+=3) {

1191 
acc
 =ác¯
	`OP
 (
d©a
[
i
] 
OP
 data[i+1] OP data[i+2]);

1195 ; 
i
 < 
Àngth
; i++) {

1196 
acc
 =ác¯
OP
 
d©a
[
i
];

1198 *
de°
 = 
acc
;

1199 
	}
}

1201 
	guƒﬁl4Ø_des¸
[] = "unroll4aa: Array code, unrolled by 4, Different Associativity";

1202 
	$uƒﬁl4Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1204 
i
;

1205 
Àngth
 = 
	`vec_Àngth
(
v
);

1206 
limô
 = 
Àngth
-3;

1207 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1208 
d©a_t
 
acc
 = 
IDENT
;

1211 
i
 = 0; i < 
limô
; i+=4) {

1212 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1213 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1214 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
);

1218 ; 
i
 < 
Àngth
; i++) {

1219 
acc
 =ác¯
OP
 
d©a
[
i
];

1221 *
de°
 = 
acc
;

1222 
	}
}

1224 
	guƒﬁl5Ø_des¸
[] = "unroll5aa: Array code, unrolled by 5, Different Associativity";

1225 
	$uƒﬁl5Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1227 
i
;

1228 
Àngth
 = 
	`vec_Àngth
(
v
);

1229 
limô
 = 
Àngth
-4;

1230 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1231 
d©a_t
 
acc
 = 
IDENT
;

1234 
i
 = 0; i < 
limô
; i+=5) {

1235 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1236 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1237 
d©a_t
 
t3
 = 
d©a
[
i
+4];

1238 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
 OP 
t3
);

1242 ; 
i
 < 
Àngth
; i++) {

1243 
acc
 =ác¯
OP
 
d©a
[
i
];

1245 *
de°
 = 
acc
;

1246 
	}
}

1248 
	guƒﬁl6Ø_des¸
[] = "unroll6aa: Array code, unrolled by 6, Different Associativity";

1249 
	$uƒﬁl6Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1251 
i
;

1252 
Àngth
 = 
	`vec_Àngth
(
v
);

1253 
limô
 = 
Àngth
-5;

1254 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1255 
d©a_t
 
acc
 = 
IDENT
;

1258 
i
 = 0; i < 
limô
; i+=6) {

1259 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1260 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1261 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1262 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
 OP 
t3
);

1266 ; 
i
 < 
Àngth
; i++) {

1267 
acc
 =ác¯
OP
 
d©a
[
i
];

1269 *
de°
 = 
acc
;

1270 
	}
}

1272 
	guƒﬁl7Ø_des¸
[] = "unroll7aa: Array code, unrolled by 7, Different Associativity";

1273 
	$uƒﬁl7Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1275 
i
;

1276 
Àngth
 = 
	`vec_Àngth
(
v
);

1277 
limô
 = 
Àngth
-6;

1278 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1279 
d©a_t
 
acc
 = 
IDENT
;

1282 
i
 = 0; i < 
limô
; i+=7) {

1283 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1284 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1285 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1286 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1287 
d©a_t
 
t4
 = 
d©a
[
i
+6];

1288 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1289 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1293 ; 
i
 < 
Àngth
; i++) {

1294 
acc
 =ác¯
OP
 
d©a
[
i
];

1297 *
de°
 = 
acc
;

1298 
	}
}

1300 
	guƒﬁl8Ø_des¸
[] = "unroll8aa: Array code, unrolled by 8, Different Associativity";

1301 
	$uƒﬁl8Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1303 
i
;

1304 
Àngth
 = 
	`vec_Àngth
(
v
);

1305 
limô
 = 
Àngth
-7;

1306 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1307 
d©a_t
 
acc
 = 
IDENT
;

1310 
i
 = 0; i < 
limô
; i+=8) {

1311 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1312 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1313 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1314 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1315 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1316 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1317 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1321 ; 
i
 < 
Àngth
; i++) {

1322 
acc
 =ác¯
OP
 
d©a
[
i
];

1325 *
de°
 = 
acc
;

1326 
	}
}

1328 
	guƒﬁl9Ø_des¸
[] = "unroll9aa: Array code, unrolled by 9, Different Associativity";

1329 
	$uƒﬁl9Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1331 
i
;

1332 
Àngth
 = 
	`vec_Àngth
(
v
);

1333 
limô
 = 
Àngth
-8;

1334 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1335 
d©a_t
 
acc
 = 
IDENT
;

1338 
i
 = 0; i < 
limô
; i+=9) {

1339 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1340 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1341 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1342 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1343 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1344 
d©a_t
 
t5
 = 
d©a
[
i
+8];

1345 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
 OP 
t5
;

1346 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1350 ; 
i
 < 
Àngth
; i++) {

1351 
acc
 =ác¯
OP
 
d©a
[
i
];

1354 *
de°
 = 
acc
;

1355 
	}
}

1357 
	guƒﬁl10Ø_des¸
[] = "unroll10aa: Array code, unrolled by 10, Different Associativity";

1358 
	$uƒﬁl10Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1360 
i
;

1361 
Àngth
 = 
	`vec_Àngth
(
v
);

1362 
limô
 = 
Àngth
-9;

1363 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1364 
d©a_t
 
acc
 = 
IDENT
;

1367 
i
 = 0; i < 
limô
; i+=10) {

1368 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1369 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1370 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1371 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1372 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1373 
d©a_t
 
t5
 = 
d©a
[
i
+8] 
OP
 data[i+9];

1374 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
 OP 
t5
;

1375 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1379 ; 
i
 < 
Àngth
; i++) {

1380 
acc
 =ác¯
OP
 
d©a
[
i
];

1383 *
de°
 = 
acc
;

1384 
	}
}

1387 
	guƒﬁl12Ø_des¸
[] = "unroll12aa: Array code, unrolled by 12, Different Associativity";

1388 
	$uƒﬁl12Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1390 
i
;

1391 
Àngth
 = 
	`vec_Àngth
(
v
);

1392 
limô
 = 
Àngth
-11;

1393 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1394 
d©a_t
 
acc
 = 
IDENT
;

1397 
i
 = 0; i < 
limô
; i+=12) {

1398 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1399 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1400 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1401 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1402 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1403 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1404 
d©a_t
 
t5
 = 
d©a
[
i
+8] 
OP
 data[i+9];

1405 
d©a_t
 
t6
 = 
d©a
[
i
+10] 
OP
 data[i+11];

1406 
d©a_t
 
u3
 = 
t5
 
OP
 
t6
;

1407 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
 OP 
u3
);

1411 ; 
i
 < 
Àngth
; i++) {

1412 
acc
 =ác¯
OP
 
d©a
[
i
];

1415 *
de°
 = 
acc
;

1416 
	}
}

1422 
	#VBYTES
 16

	)

1425 
	#VSIZE
 
VBYTES
/(
d©a_t
)

	)

1430 
d©a_t
 
	tvec_t
 
	t__©åibuã__
 ((
	tve˘‹_size
(
	tVBYTES
)));

1435 
vec_t
 
	mv
;

1436 
d©a_t
 
	md
[
VSIZE
];

1437 } 
	t∑ck_t
;

1440 
	gsimd_v1_des¸
[] = "simd_v1: SSE code, 1*VSIZE-wayÖarallelism";

1442 
	$simd_v1_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1444 
i
;

1445 
∑ck_t
 
x„r
;

1446 
vec_t
 
accum
;

1447 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1448 
˙t
 = 
	`vec_Àngth
(
v
);

1449 
d©a_t
 
ªsu…
 = 
IDENT
;

1452 
i
 = 0; i < 
VSIZE
; i++)

1453 
x„r
.
d
[
i
] = 
IDENT
;

1454 
accum
 = 
x„r
.
v
;

1458 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1459 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1460 
˙t
--;

1464 
˙t
 >
VSIZE
) {

1465 
vec_t
 
chunk
 = *((vec_à*Ë
d©a
);

1466 
accum
 =áccum 
OP
 
chunk
;

1467 
d©a
 +
VSIZE
;

1468 
˙t
 -
VSIZE
;

1472 
˙t
) {

1473 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1474 
˙t
--;

1478 
x„r
.
v
 = 
accum
;

1479 
i
 = 0; i < 
VSIZE
; i++)

1480 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1483 *
de°
 = 
ªsu…
;

1484 
	}
}

1488 
	gsimd_v2_des¸
[] = "simd_v2: SSE code, 2*VSIZE-wayÖarallelism";

1489 
	$simd_v2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1491 
i
;

1492 
∑ck_t
 
x„r
;

1493 
vec_t
 
accum0
, 
accum1
;

1494 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1495 
˙t
 = 
	`vec_Àngth
(
v
);

1496 
d©a_t
 
ªsu…
 = 
IDENT
;

1499 
i
 = 0; i < 
VSIZE
; i++)

1500 
x„r
.
d
[
i
] = 
IDENT
;

1501 
accum0
 = 
x„r
.
v
;

1502 
accum1
 = 
x„r
.
v
;

1504 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1505 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1506 
˙t
--;

1509 
˙t
 >2*
VSIZE
) {

1510 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1511 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1512 
accum0
 =áccum0 
OP
 
chunk0
;

1513 
accum1
 =áccum1 
OP
 
chunk1
;

1514 
d©a
 +2*
VSIZE
;

1515 
˙t
 -2*
VSIZE
;

1517 
˙t
) {

1518 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1519 
˙t
--;

1521 
x„r
.
v
 = 
accum0
 
OP
 
accum1
;

1522 
i
 = 0; i < 
VSIZE
; i++)

1523 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1524 *
de°
 = 
ªsu…
;

1525 
	}
}

1527 
	gsimd_v4_des¸
[] = "simd_v4: SSE code, 4*VSIZE-wayÖarallelism";

1528 
	$simd_v4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1530 
i
;

1531 
∑ck_t
 
x„r
;

1532 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1533 
˙t
 = 
	`vec_Àngth
(
v
);

1534 
d©a_t
 
ªsu…
 = 
IDENT
;

1537 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
;

1538 
i
 = 0; i < 
VSIZE
; i++)

1539 
x„r
.
d
[
i
] = 
IDENT
;

1540 
accum0
 = 
x„r
.
v
; 
accum1
 = xfer.v;

1541 
accum2
 = 
x„r
.
v
; 
accum3
 = xfer.v;

1543 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1544 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1545 
˙t
--;

1550 
˙t
 >4*
VSIZE
) {

1551 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1552 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1553 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1554 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1555 
accum0
 =áccum0 
OP
 
chunk0
;

1556 
accum1
 =áccum1 
OP
 
chunk1
;

1557 
accum2
 =áccum2 
OP
 
chunk2
;

1558 
accum3
 =áccum3 
OP
 
chunk3
;

1559 
d©a
 +4*
VSIZE
;

1560 
˙t
 -4*
VSIZE
;

1564 
˙t
) {

1565 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1566 
˙t
--;

1571 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1574 
i
 = 0; i < 
VSIZE
; i++)

1575 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1577 *
de°
 = 
ªsu…
;

1578 
	}
}

1580 
	gsimd_v8_des¸
[] = "simd_v8: SSE code, 8*VSIZE-wayÖarallelism";

1581 
	$simd_v8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1583 
i
;

1584 
∑ck_t
 
x„r
;

1585 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
, 
accum5
, 
accum6
, 
accum7
;

1586 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1587 
˙t
 = 
	`vec_Àngth
(
v
);

1588 
d©a_t
 
ªsu…
 = 
IDENT
;

1591 
i
 = 0; i < 
VSIZE
; i++)

1592 
x„r
.
d
[
i
] = 
IDENT
;

1593 
accum0
 = 
x„r
.
v
;

1594 
accum1
 = 
x„r
.
v
;

1595 
accum2
 = 
x„r
.
v
;

1596 
accum3
 = 
x„r
.
v
;

1597 
accum4
 = 
x„r
.
v
;

1598 
accum5
 = 
x„r
.
v
;

1599 
accum6
 = 
x„r
.
v
;

1600 
accum7
 = 
x„r
.
v
;

1602 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1603 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1604 
˙t
--;

1607 
˙t
 >8*
VSIZE
) {

1608 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1609 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1610 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1611 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1612 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1613 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1614 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1615 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1616 
accum0
 =áccum0 
OP
 
chunk0
;

1617 
accum1
 =áccum1 
OP
 
chunk1
;

1618 
accum2
 =áccum2 
OP
 
chunk2
;

1619 
accum3
 =áccum3 
OP
 
chunk3
;

1620 
accum4
 =áccum4 
OP
 
chunk4
;

1621 
accum5
 =áccum5 
OP
 
chunk5
;

1622 
accum6
 =áccum6 
OP
 
chunk6
;

1623 
accum7
 =áccum7 
OP
 
chunk7
;

1624 
d©a
 +8*
VSIZE
;

1625 
˙t
 -8*
VSIZE
;

1627 
˙t
) {

1628 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1629 
˙t
--;

1631 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1632 
x„r
.
v
 = x„r.v 
	`OP
 (
accum4
 
OP
 
accum5
ËOP (
accum6
 OP 
accum7
);

1633 
i
 = 0; i < 
VSIZE
; i++)

1634 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1635 *
de°
 = 
ªsu…
;

1636 
	}
}

1638 
	gsimd_v12_des¸
[] = "simd_v12: SSE code, 12*VSIZE-wayÖarallelism";

1639 
	$simd_v12_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1641 
i
;

1642 
∑ck_t
 
x„r
;

1643 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
, 
accum5
, 
accum6
, 
accum7
;

1644 
vec_t
 
accum8
, 
accum9
, 
accum10
, 
accum11
;

1645 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1646 
˙t
 = 
	`vec_Àngth
(
v
);

1647 
d©a_t
 
ªsu…
 = 
IDENT
;

1650 
i
 = 0; i < 
VSIZE
; i++)

1651 
x„r
.
d
[
i
] = 
IDENT
;

1652 
accum0
 = 
x„r
.
v
;

1653 
accum1
 = 
x„r
.
v
;

1654 
accum2
 = 
x„r
.
v
;

1655 
accum3
 = 
x„r
.
v
;

1656 
accum4
 = 
x„r
.
v
;

1657 
accum5
 = 
x„r
.
v
;

1658 
accum6
 = 
x„r
.
v
;

1659 
accum7
 = 
x„r
.
v
;

1660 
accum8
 = 
x„r
.
v
;

1661 
accum9
 = 
x„r
.
v
;

1662 
accum10
 = 
x„r
.
v
;

1663 
accum11
 = 
x„r
.
v
;

1664 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1665 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1666 
˙t
--;

1669 
˙t
 >12*
VSIZE
) {

1670 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1671 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1672 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1673 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1674 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1675 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1676 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1677 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1678 
vec_t
 
chunk8
 = *((vec_à*Ë(
d©a
+8*
VSIZE
));

1679 
vec_t
 
chunk9
 = *((vec_à*Ë(
d©a
+9*
VSIZE
));

1680 
vec_t
 
chunk10
 = *((vec_à*Ë(
d©a
+10*
VSIZE
));

1681 
vec_t
 
chunk11
 = *((vec_à*Ë(
d©a
+11*
VSIZE
));

1682 
accum0
 =áccum0 
OP
 
chunk0
;

1683 
accum1
 =áccum1 
OP
 
chunk1
;

1684 
accum2
 =áccum2 
OP
 
chunk2
;

1685 
accum3
 =áccum3 
OP
 
chunk3
;

1686 
accum4
 =áccum4 
OP
 
chunk4
;

1687 
accum5
 =áccum5 
OP
 
chunk5
;

1688 
accum6
 =áccum6 
OP
 
chunk6
;

1689 
accum7
 =áccum7 
OP
 
chunk7
;

1690 
accum8
 =áccum8 
OP
 
chunk8
;

1691 
accum9
 =áccum9 
OP
 
chunk9
;

1692 
accum10
 =áccum10 
OP
 
chunk10
;

1693 
accum11
 =áccum11 
OP
 
chunk11
;

1694 
d©a
 +12*
VSIZE
;

1695 
˙t
 -12*
VSIZE
;

1697 
˙t
) {

1698 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1699 
˙t
--;

1701 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1702 
x„r
.
v
 = x„r.v 
	`OP
 (
accum4
 
OP
 
accum5
ËOP (
accum6
 OP 
accum7
);

1703 
x„r
.
v
 = x„r.v 
	`OP
 (
accum8
 
OP
 
accum9
ËOP (
accum10
 OP 
accum11
);

1704 
i
 = 0; i < 
VSIZE
; i++)

1705 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1706 *
de°
 = 
ªsu…
;

1707 
	}
}

1710 
	gsimd_v2a_des¸
[] = "simd_v2a: SSE code, 2*VSIZE-wayÖarallelism,Ñeassociate";

1711 
	$simd_v2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1713 
i
;

1714 
∑ck_t
 
x„r
;

1715 
vec_t
 
accum
;

1716 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1717 
˙t
 = 
	`vec_Àngth
(
v
);

1718 
d©a_t
 
ªsu…
 = 
IDENT
;

1721 
i
 = 0; i < 
VSIZE
; i++)

1722 
x„r
.
d
[
i
] = 
IDENT
;

1723 
accum
 = 
x„r
.
v
;

1725 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1726 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1727 
˙t
--;

1730 
˙t
 >2*
VSIZE
) {

1731 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1732 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1733 
accum
 =áccum 
	`OP
 (
chunk0
 
OP
 
chunk1
);

1734 
d©a
 +2*
VSIZE
;

1735 
˙t
 -2*
VSIZE
;

1737 
˙t
) {

1738 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1739 
˙t
--;

1741 
x„r
.
v
 = 
accum
;

1742 
i
 = 0; i < 
VSIZE
; i++)

1743 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1744 *
de°
 = 
ªsu…
;

1745 
	}
}

1747 
	gsimd_v4a_des¸
[] = "simd_v4a: SSE code, 4*VSIZE-wayÖarallelism,Ñeassociate";

1748 
	$simd_v4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1750 
i
;

1751 
∑ck_t
 
x„r
;

1752 
vec_t
 
accum
;

1753 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1754 
˙t
 = 
	`vec_Àngth
(
v
);

1755 
d©a_t
 
ªsu…
 = 
IDENT
;

1758 
i
 = 0; i < 
VSIZE
; i++)

1759 
x„r
.
d
[
i
] = 
IDENT
;

1760 
accum
 = 
x„r
.
v
;

1762 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1763 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1764 
˙t
--;

1768 
˙t
 >4*
VSIZE
) {

1769 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1770 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1771 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1772 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1773 
accum
 =áccum 
OP


1774 ((
chunk0
 
OP
 
chunk1
Ë
	`OP
 (
chunk2
 OP 
chunk3
));

1775 
d©a
 +4*
VSIZE
;

1776 
˙t
 -4*
VSIZE
;

1780 
˙t
) {

1781 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1782 
˙t
--;

1784 
x„r
.
v
 = 
accum
;

1785 
i
 = 0; i < 
VSIZE
; i++)

1786 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1787 *
de°
 = 
ªsu…
;

1788 
	}
}

1790 
	gsimd_v8a_des¸
[] = "simd_v8a: SSE code, 8*VSIZE-wayÖarallelism,Ñeassociate";

1791 
	$simd_v8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1793 
i
;

1794 
∑ck_t
 
x„r
;

1795 
vec_t
 
accum
;

1796 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1797 
˙t
 = 
	`vec_Àngth
(
v
);

1798 
d©a_t
 
ªsu…
 = 
IDENT
;

1801 
i
 = 0; i < 
VSIZE
; i++)

1802 
x„r
.
d
[
i
] = 
IDENT
;

1803 
accum
 = 
x„r
.
v
;

1805 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1806 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1807 
˙t
--;

1810 
˙t
 >8*
VSIZE
) {

1811 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1812 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1813 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1814 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1815 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1816 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1817 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1818 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1819 
accum
 =áccum 
OP


1820 (((
chunk0
 
OP
 
chunk1
Ë
	`OP
 (
chunk2
 OP 
chunk3
))

1821 
OP


1822 ((
chunk4
 
OP
 
chunk5
Ë
	`OP
 (
chunk6
 OP 
chunk7
)));

1823 
d©a
 +8*
VSIZE
;

1824 
˙t
 -8*
VSIZE
;

1826 
˙t
) {

1827 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1828 
˙t
--;

1830 
x„r
.
v
 = 
accum
;

1831 
i
 = 0; i < 
VSIZE
; i++)

1832 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1833 *
de°
 = 
ªsu…
;

1834 
	}
}

1837 
	$ªgi°î_comböîs
()

1839 #i‚de‡
UNROLL_ONLY


1840 
	`add_comböî
(
comböe1
, comböe1, 
comböe1_des¸
);

1841 
	`add_comböî
(
comböe2
, 
comböe1
, 
comböe2_des¸
);

1842 
	`add_comböî
(
comböe3
, 
comböe1
, 
comböe3_des¸
);

1843 
	`add_comböî
(
comböe3w
, 
comböe1
, 
comböe3w_des¸
);

1845 
	`add_comböî
(
comböe4
, 
comböe1
,
comböe4_des¸
);

1846 #i‚de‡
UNROLL_ONLY


1847 
	`add_comböî
(
comböe4b
, 
comböe1
, 
comböe4b_des¸
);

1848 
	`add_comböî
(
comböe4p
, 
comböe1
, 
comböe4p_des¸
);

1850 
	`add_comböî
(
comböe5
, 
comböe1
, 
comböe5_des¸
);

1851 #i‚de‡
UNROLL_ONLY


1852 
	`add_comböî
(
comböe5p
, 
comböe1
, 
comböe5p_des¸
);

1853 
	`add_comböî
(
uƒﬁl2aw_comböe
, 
comböe1
, 
uƒﬁl2aw_des¸
);

1855 
	`add_comböî
(
uƒﬁl3a_comböe
, 
comböe1
, 
uƒﬁl3a_des¸
);

1856 
	`add_comböî
(
uƒﬁl4a_comböe
, 
comböe1
, 
uƒﬁl4a_des¸
);

1857 
	`add_comböî
(
uƒﬁl5a_comböe
, 
comböe1
, 
uƒﬁl5a_des¸
);

1858 
	`add_comböî
(
uƒﬁl6a_comböe
, 
comböe1
, 
uƒﬁl6a_des¸
);

1859 
	`add_comböî
(
uƒﬁl7a_comböe
, 
comböe1
, 
uƒﬁl7a_des¸
);

1860 
	`add_comböî
(
uƒﬁl8a_comböe
, 
comböe1
, 
uƒﬁl8a_des¸
);

1861 
	`add_comböî
(
uƒﬁl9a_comböe
, 
comböe1
, 
uƒﬁl9a_des¸
);

1862 
	`add_comböî
(
uƒﬁl10a_comböe
, 
comböe1
, 
uƒﬁl10a_des¸
);

1863 
	`add_comböî
(
uƒﬁl16a_comböe
, 
comböe1
, 
uƒﬁl16a_des¸
);

1864 #i‚de‡
UNROLL_ONLY


1865 
	`add_comböî
(
uƒﬁl2_comböe
, 
comböe1
, 
uƒﬁl2_des¸
);

1866 
	`add_comböî
(
uƒﬁl3_comböe
, 
comböe1
, 
uƒﬁl3_des¸
);

1867 
	`add_comböî
(
uƒﬁl4_comböe
, 
comböe1
, 
uƒﬁl4_des¸
);

1868 
	`add_comböî
(
uƒﬁl8_comböe
, 
comböe1
, 
uƒﬁl8_des¸
);

1869 
	`add_comböî
(
uƒﬁl16_comböe
, 
comböe1
, 
uƒﬁl16_des¸
);

1870 
	`add_comböî
(
comböe6
, 
comböe1
, 
comböe6_des¸
);

1871 
	`add_comböî
(
uƒﬁl4x2a_comböe
, 
comböe1
, 
uƒﬁl4x2a_des¸
);

1872 
	`add_comböî
(
uƒﬁl8x2a_comböe
, 
comböe1
, 
uƒﬁl8x2a_des¸
);

1873 
	`add_comböî
(
uƒﬁl3x3a_comböe
, 
comböe1
, 
uƒﬁl3x3a_des¸
);

1874 
	`add_comböî
(
uƒﬁl4x4a_comböe
, 
comböe1
, 
uƒﬁl4x4a_des¸
);

1875 
	`add_comböî
(
uƒﬁl5x5a_comböe
, 
comböe1
, 
uƒﬁl5x5a_des¸
);

1876 
	`add_comböî
(
uƒﬁl6x6a_comböe
, 
comböe1
, 
uƒﬁl6x6a_des¸
);

1877 
	`add_comböî
(
uƒﬁl7x7a_comböe
, 
comböe1
, 
uƒﬁl7x7a_des¸
);

1878 
	`add_comböî
(
uƒﬁl8x4a_comböe
, 
comböe1
, 
uƒﬁl8x4a_des¸
);

1879 
	`add_comböî
(
uƒﬁl8x8a_comböe
, 
comböe1
, 
uƒﬁl8x8a_des¸
);

1880 
	`add_comböî
(
uƒﬁl9x9a_comböe
, 
comböe1
, 
uƒﬁl9x9a_des¸
);

1881 
	`add_comböî
(
uƒﬁl10x10a_comböe
, 
comböe1
, 
uƒﬁl10x10a_des¸
);

1882 
	`add_comböî
(
uƒﬁl12x6a_comböe
, 
comböe1
, 
uƒﬁl12x6a_des¸
);

1883 
	`add_comböî
(
uƒﬁl12x12a_comböe
, 
comböe1
, 
uƒﬁl12x12a_des¸
);

1884 
	`add_comböî
(
uƒﬁl8x2_comböe
, 
comböe1
, 
uƒﬁl8x2_des¸
);

1885 
	`add_comböî
(
uƒﬁl8x4_comböe
, 
comböe1
, 
uƒﬁl8x4_des¸
);

1886 
	`add_comböî
(
uƒﬁl8x8_comböe
, 
comböe1
, 
uƒﬁl8x8_des¸
);

1887 
	`add_comböî
(
uƒﬁl9x3_comböe
, 
comböe1
, 
uƒﬁl9x3_des¸
);

1888 
	`add_comböî
(
uƒﬁlx2as_comböe
, 
comböe1
, 
uƒﬁlx2as_des¸
);

1889 
	`add_comböî
(
comböe7
, 
comböe1
, 
comböe7_des¸
);

1890 
	`add_comböî
(
uƒﬁl3Ø_comböe
, 
comböe1
, 
uƒﬁl3Ø_des¸
);

1891 
	`add_comböî
(
uƒﬁl4Ø_comböe
, 
comböe1
, 
uƒﬁl4Ø_des¸
);

1892 
	`add_comböî
(
uƒﬁl5Ø_comböe
, 
comböe1
, 
uƒﬁl5Ø_des¸
);

1893 
	`add_comböî
(
uƒﬁl6Ø_comböe
, 
comböe1
, 
uƒﬁl6Ø_des¸
);

1894 
	`add_comböî
(
uƒﬁl7Ø_comböe
, 
comböe1
, 
uƒﬁl7Ø_des¸
);

1895 
	`add_comböî
(
uƒﬁl8Ø_comböe
, 
comböe1
, 
uƒﬁl8Ø_des¸
);

1896 
	`add_comböî
(
uƒﬁl9Ø_comböe
, 
comböe1
, 
uƒﬁl9Ø_des¸
);

1897 
	`add_comböî
(
uƒﬁl10Ø_comböe
, 
comböe1
, 
uƒﬁl10Ø_des¸
);

1898 
	`add_comböî
(
uƒﬁl12Ø_comböe
, 
comböe1
, 
uƒﬁl12Ø_des¸
);

1899 
	`add_comböî
(
simd_v1_comböe
, 
comböe1
, 
simd_v1_des¸
);

1900 
	`add_comböî
(
simd_v2_comböe
, 
comböe1
, 
simd_v2_des¸
);

1901 
	`add_comböî
(
simd_v4_comböe
, 
comböe1
, 
simd_v4_des¸
);

1902 
	`add_comböî
(
simd_v8_comböe
, 
comböe1
, 
simd_v8_des¸
);

1903 
	`add_comböî
(
simd_v12_comböe
, 
comböe1
, 
simd_v12_des¸
);

1904 
	`add_comböî
(
simd_v2a_comböe
, 
comböe1
, 
simd_v2a_des¸
);

1905 
	`add_comböî
(
simd_v4a_comböe
, 
comböe1
, 
simd_v4a_des¸
);

1906 
	`add_comböî
(
simd_v8a_comböe
, 
comböe1
, 
simd_v8a_des¸
);

1907 
	`log_comböî
(
simd_v8a_comböe
, 0.16, 0.24);

1909 
	}
}

	@opt/fact.c

2 
	~<°dio.h
>

3 
	~"˝e.h
"

5 
	#ASIZE
 1024

	)

7 
	$rÁ˘
(
n
)

9 i‡(
n
 <= 1)

11  
n
 * 
	`rÁ˘
(n-1);

12 
	}
}

15 
	$Á˘
(
n
)

17 
i
;

18 
ªsu…
 = 1;

20 
i
 = 2; i <
n
; i++)

21 
ªsu…
 =Ñesu… * 
i
;

22  
ªsu…
;

23 
	}
}

27 
	$Á˘_u2a
(
n
)

29 
i
;

30 
ªsu…
 = 1;

32 
i
 = 2; i <
n
-1; i +=2) {

33 
ªsu…
 = (ªsu… * 
i
) * (i+1);

35 ; 
i
 <
n
; i++)

36 
ªsu…
 *
i
;

37  
ªsu…
;

38 
	}
}

41 
	$Á˘_u2b
(
n
)

43 
i
;

44 
ªsu…
 = 1;

46 
i
 = 2; i <
n
-1; i +=2) {

48 
ªsu…
 =Ñesu… * (
i
 * (i+1));

51 ; 
i
 <
n
; i++)

52 
ªsu…
 *
i
;

53  
ªsu…
;

54 
	}
}

56 
	$Á˘_u2c
(
n
)

58 
i
;

59 
ªsu…0
 = 1;

60 
ªsu…1
 = 1;

62 
i
 = 2; i <
n
-1; i+=2) {

63 
ªsu…0
 *
i
;

64 
ªsu…1
 *(
i
+1);

66 ; 
i
 <
n
; i++)

67 
ªsu…0
 *
i
;

68  
ªsu…0
 * 
ªsu…1
;

69 
	}
}

72 
	$Á˘_u3a
(
n
)

74 
i
;

75 
ªsu…
 = 1;

77 
i
 = 2; i <
n
-2; i +=3) {

78 
ªsu…
 = (ªsu… * 
i
) * (i+1) * (i+2);

80 ; 
i
 <
n
; i++)

81 
ªsu…
 *
i
;

82  
ªsu…
;

83 
	}
}

85 
	$Á˘_u3b
(
n
)

87 
i
;

88 
ªsu…
 = 1;

90 
i
 = 2; i <
n
-2; i +=3) {

91 
ªsu…
 =Ñesu… * (
i
 * (i+1) * (i+2));

93 ; 
i
 <
n
; i++)

94 
ªsu…
 *
i
;

95  
ªsu…
;

96 
	}
}

98 
	$Á˘_u3c
(
n
)

100 
i
;

101 
ªsu…0
 = 1;

102 
ªsu…1
 = 1;

103 
ªsu…2
 = 1;

105 
i
 = 2; i <
n
-2; i+=3) {

106 
ªsu…0
 *
i
;

107 
ªsu…1
 *(
i
+1);

108 
ªsu…2
 *(
i
+2);

110 ; 
i
 <
n
; i++)

111 
ªsu…0
 *
i
;

112  
ªsu…0
 * 
ªsu…1
 * 
ªsu…2
;

113 
	}
}

116 
	$rÁ˘_a
(
n
)

118 i‡(
n
 <= 1)

120  
n
 * -
	`rÁ˘_a
(n-1);

121 
	}
}

125 (*
	tÁ˘_fun
)();

127 
	#TEST_COUNT
 9

	)

129 
Á˘_fun
 
funs
[
TEST_COUNT
] =

130 { 
rÁ˘
, 
Á˘
,

131 
Á˘_u2a
, 
Á˘_u2b
, 
Á˘_u2c
,

132 
Á˘_u3a
, 
Á˘_u3b
, 
Á˘_u3c
,

133 
rÁ˘_a


134 
	}
};

137 *
	gã°_des¸
[
TEST_COUNT
] =

151 
	gidx
 = 0;

153 
	$ã°
(
n
)

155 
funs
[
idx
](
n
);

156 
	}
}

159 
	$·e°
(
i
)

161 
n
;

162 
n
 = 0;Ç < 10;Ç++) {

163 i‡(
funs
[
i
](
n
Ë!
	`rÁ˘
(n)) {

164 
	`¥ötf
("Oops. %ld! yields %ld, should be %ld\n",

165 
n
, 
funs
[
i
]“), 
	`rÁ˘
(n));

169 
	}
}

171 
	$run_ã°
(
i
)

173 
˝e
;

174 
	`¥ötf
("Description: %s, ",

175 
ã°_des¸
[
i
]);

176 
idx
 = 
i
;

177 
˝e
 = 
	`föd_˝e
(
ã°
, 
ASIZE
);

179 
	`¥ötf
("CPE = %.2f\n", 
˝e
);

180 
	`·e°
(
i
);

181 
	}
}

183 
	$maö
()

185 
i
;

186 
i
 = 0; i < 
TEST_COUNT
; i++)

187 
	`run_ã°
(
i
);

189 
	}
}

	@opt/fpb-O1.c

1 
	~"comböe.h
"

5 
	gcomböe1_des¸
[] = "combine1: Maximum use of dataábstraction";

8 
	$comböe1
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

10 
i
;

12 *
de°
 = 
IDENT
;

13 
i
 = 0; i < 
	`vec_Àngth
(
v
); i++) {

14 
d©a_t
 
vÆ
;

15 
	`gë_vec_ñemít
(
v
, 
i
, &
vÆ
);

17 *
de°
 = *de° 
OP
 
vÆ
;

20 
	}
}

23 
	gcomböe2_des¸
[] = "combine2: Take vec_length() out ofÜoop";

26 
	$comböe2
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

28 
i
;

29 
Àngth
 = 
	`vec_Àngth
(
v
);

31 *
de°
 = 
IDENT
;

32 
i
 = 0; i < 
Àngth
; i++) {

33 
d©a_t
 
vÆ
;

34 
	`gë_vec_ñemít
(
v
, 
i
, &
vÆ
);

35 *
de°
 = *de° 
OP
 
vÆ
;

37 
	}
}

40 
	gcomböe3_des¸
[] = "combine3: ArrayÑeferenceÅo vector data";

43 
	$comböe3
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

45 
i
;

46 
Àngth
 = 
	`vec_Àngth
(
v
);

47 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

49 *
de°
 = 
IDENT
;

50 
i
 = 0; i < 
Àngth
; i++) {

51 *
de°
 = *de° 
OP
 
d©a
[
i
];

53 
	}
}

56 
	gcomböe3w_des¸
[] = "combine3w: Update *dest withinÜoop only with write";

59 
	$comböe3w
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

61 
i
;

62 
Àngth
 = 
	`vec_Àngth
(
v
);

63 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

64 
d©a_t
 
acc
 = 
IDENT
;

67 *
de°
 = 
acc
;

69 
i
 = 0; i < 
Àngth
; i++) {

70 
acc
 =ác¯
OP
 
d©a
[
i
];

71 *
de°
 = 
acc
;

73 
	}
}

76 
	gcomböe4_des¸
[] = "combine4: ArrayÑeference,áccumulate inÅemporary";

79 
	$comböe4
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

81 
i
;

82 
Àngth
 = 
	`vec_Àngth
(
v
);

83 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

84 
d©a_t
 
acc
 = 
IDENT
;

86 
i
 = 0; i < 
Àngth
; i++) {

87 
acc
 =ác¯
OP
 
d©a
[
i
];

89 *
de°
 = 
acc
;

90 
	}
}

93 
	gcomböe4b_des¸
[] = "combine4b: Include bonds check inÜoop";

96 
	$comböe4b
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

98 
i
;

99 
Àngth
 = 
	`vec_Àngth
(
v
);

100 
d©a_t
 
acc
 = 
IDENT
;

102 
i
 = 0; i < 
Àngth
; i++) {

103 i‡(
i
 >0 && i < 
v
->
Àn
) {

104 
acc
 =ác¯
OP
 
v
->
d©a
[
i
];

107 *
de°
 = 
acc
;

108 
	}
}

112 
	gcomböe4p_des¸
[] = "combine4p: PointerÑeference,áccumulate inÅemporary";

115 
	$comböe4p
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

117 
Àngth
 = 
	`vec_Àngth
(
v
);

118 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

119 
d©a_t
 *
díd
 = 
d©a
+
Àngth
;

120 
d©a_t
 
acc
 = 
IDENT
;

122 ; 
d©a
 < 
díd
; data++)

123 
acc
 =ác¯
OP
 *
d©a
;

124 *
de°
 = 
acc
;

125 
	}
}

129 
	gcomböe5_des¸
[] = "combine5: Array code, unrolled by 2";

132 
	$comböe5
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

134 
i
;

135 
Àngth
 = 
	`vec_Àngth
(
v
);

136 
limô
 = 
Àngth
-1;

137 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

138 
d©a_t
 
acc
 = 
IDENT
;

141 
i
 = 0; i < 
limô
; i+=2) {

143 
acc
 = (ac¯
OP
 
d©a
[
i
]) OP data[i+1];

148 ; 
i
 < 
Àngth
; i++) {

149 
acc
 =ác¯
OP
 
d©a
[
i
];

151 *
de°
 = 
acc
;

152 
	}
}

155 
	guƒﬁl3a_des¸
[] = "unroll3a: Array code, unrolled by 3";

156 
	$uƒﬁl3a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

158 
i
;

159 
Àngth
 = 
	`vec_Àngth
(
v
);

160 
limô
 = 
Àngth
-2;

161 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

162 
d©a_t
 
acc
 = 
IDENT
;

165 
i
 = 0; i < 
limô
; i+=3) {

166 
acc
 =ác¯
OP
 
d©a
[
i
];

167 
acc
 =ác¯
OP
 
d©a
[
i
+1];

168 
acc
 =ác¯
OP
 
d©a
[
i
+2];

172 ; 
i
 < 
Àngth
; i++) {

173 
acc
 =ác¯
OP
 
d©a
[
i
];

175 *
de°
 = 
acc
;

176 
	}
}

179 
	gcomböe5p_des¸
[] = "combine5p: Pointer code, unrolled by 2, forÜoop";

182 
	$comböe5p
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

184 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

185 
d©a_t
 *
díd
 = 
d©a
+
	`vec_Àngth
(
v
);

186 
d©a_t
 *
dlimô
 = 
díd
-1;

187 
d©a_t
 
acc
 = 
IDENT
;

190 ; 
d©a
 < 
dlimô
; data += 2) {

191 
acc
 =ác¯
OP
 
d©a
[0] OP data[1];

195 ; 
d©a
 < 
díd
; data++) {

196 
acc
 =ác¯
OP
 
d©a
[0];

198 *
de°
 = 
acc
;

199 
	}
}

202 
	guƒﬁl2aw_des¸
[] = "unroll2aw: Array code, unrolled by 2, whileÜoop";

203 
	$uƒﬁl2aw_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

205 
i
 = 0;

206 
Àngth
 = 
	`vec_Àngth
(
v
);

207 
limô
 = 
Àngth
-1;

208 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

209 
d©a_t
 
acc
 = 
IDENT
;

212 
i
 < 
limô
) {

213 
acc
 =ác¯
OP
 
d©a
[
i
];

214 
i
+= 2;

215 
acc
 =ác¯
OP
 
d©a
[
i
-1];

219 ; 
i
 < 
Àngth
; i++) {

220 
acc
 =ác¯
OP
 
d©a
[
i
];

222 *
de°
 = 
acc
;

223 
	}
}

226 
	guƒﬁl4a_des¸
[] = "unroll4a: Array code, unrolled by 4";

227 
	$uƒﬁl4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

229 
i
;

230 
Àngth
 = 
	`vec_Àngth
(
v
);

231 
limô
 = 
Àngth
-3;

232 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

233 
d©a_t
 
acc
 = 
IDENT
;

236 
i
 = 0; i < 
limô
; i+=4) {

237 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

238 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

242 ; 
i
 < 
Àngth
; i++) {

243 
acc
 =ác¯
OP
 
d©a
[
i
];

245 *
de°
 = 
acc
;

246 
	}
}

248 
	guƒﬁl5a_des¸
[] = "unroll5a: Array code, unrolled by 5";

251 
	$uƒﬁl5
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

254 
	$uƒﬁl5a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

258 
i
;

259 
Àngth
 = 
	`vec_Àngth
(
v
);

260 
limô
 = 
Àngth
-4;

261 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

262 
d©a_t
 
acc
 = 
IDENT
;

265 
i
 = 0; i < 
limô
; i+=5) {

266 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

267 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

268 
acc
 =ác¯
OP
 
d©a
[
i
+4];

272 ; 
i
 < 
Àngth
; i++) {

273 
acc
 =ác¯
OP
 
d©a
[
i
];

275 *
de°
 = 
acc
;

276 
	}
}

279 
	guƒﬁl6a_des¸
[] = "unroll6a: Array code, unrolled by 6";

280 
	$uƒﬁl6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

282 
i
;

283 
Àngth
 = 
	`vec_Àngth
(
v
);

284 
limô
 = 
Àngth
-5;

285 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

286 
d©a_t
 
acc
 = 
IDENT
;

289 
i
 = 0; i < 
limô
; i+=6) {

290 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

291 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

292 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

296 ; 
i
 < 
Àngth
; i++) {

297 
acc
 =ác¯
OP
 
d©a
[
i
];

299 *
de°
 = 
acc
;

300 
	}
}

302 
	guƒﬁl7a_des¸
[] = "unroll7a: Array code, unrolled by 7";

303 
	$uƒﬁl7a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

305 
i
;

306 
Àngth
 = 
	`vec_Àngth
(
v
);

307 
limô
 = 
Àngth
-6;

308 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

309 
d©a_t
 
acc
 = 
IDENT
;

312 
i
 = 0; i < 
limô
; i+=7) {

313 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

314 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

315 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

316 
acc
 =ác¯
OP
 
d©a
[
i
+6];

320 ; 
i
 < 
Àngth
; i++) {

321 
acc
 =ác¯
OP
 
d©a
[
i
];

323 *
de°
 = 
acc
;

324 
	}
}

327 
	guƒﬁl8a_des¸
[] = "unroll8a: Array code, unrolled by 8";

328 
	$uƒﬁl8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

330 
i
;

331 
Àngth
 = 
	`vec_Àngth
(
v
);

332 
limô
 = 
Àngth
-7;

333 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

334 
d©a_t
 
acc
 = 
IDENT
;

337 
i
 = 0; i < 
limô
; i+=8) {

338 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

339 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

340 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

341 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

345 ; 
i
 < 
Àngth
; i++) {

346 
acc
 =ác¯
OP
 
d©a
[
i
];

348 *
de°
 = 
acc
;

349 
	}
}

351 
	guƒﬁl9a_des¸
[] = "unroll9a: Array code, unrolled by 9";

352 
	$uƒﬁl9a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

354 
i
;

355 
Àngth
 = 
	`vec_Àngth
(
v
);

356 
limô
 = 
Àngth
-8;

357 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

358 
d©a_t
 
acc
 = 
IDENT
;

361 
i
 = 0; i < 
limô
; i+=9) {

362 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

363 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

364 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

365 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

366 
acc
 =ác¯
OP
 
d©a
[
i
+8];

370 ; 
i
 < 
Àngth
; i++) {

371 
acc
 =ác¯
OP
 
d©a
[
i
];

373 *
de°
 = 
acc
;

374 
	}
}

376 
	guƒﬁl10a_des¸
[] = "unroll10a: Array code, unrolled by 10";

377 
	$uƒﬁl10a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

379 
i
;

380 
Àngth
 = 
	`vec_Àngth
(
v
);

381 
limô
 = 
Àngth
-9;

382 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

383 
d©a_t
 
acc
 = 
IDENT
;

386 
i
 = 0; i < 
limô
; i+=10) {

387 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

388 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

389 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

390 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

391 
acc
 =ác¯
OP
 
d©a
[
i
+8] OP data[i+9];

395 ; 
i
 < 
Àngth
; i++) {

396 
acc
 =ác¯
OP
 
d©a
[
i
];

398 *
de°
 = 
acc
;

399 
	}
}

402 
	guƒﬁl16a_des¸
[] = "unroll16a: Array code, unrolled by 16";

403 
	$uƒﬁl16a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

405 
i
;

406 
Àngth
 = 
	`vec_Àngth
(
v
);

407 
limô
 = 
Àngth
-15;

408 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

409 
d©a_t
 
acc
 = 
IDENT
;

412 
i
 = 0; i < 
limô
; i+=16) {

413 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

414 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

415 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

416 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

417 
acc
 =ác¯
OP
 
d©a
[
i
+8] OP data[i+9];

418 
acc
 =ác¯
OP
 
d©a
[
i
+10] OP data[i+11];

419 
acc
 =ác¯
OP
 
d©a
[
i
+12] OP data[i+13];

420 
acc
 =ác¯
OP
 
d©a
[
i
+14] OP data[i+15];

424 ; 
i
 < 
Àngth
; i++) {

425 
acc
 =ác¯
OP
 
d©a
[
i
];

427 *
de°
 = 
acc
;

428 
	}
}

430 
	guƒﬁl2_des¸
[] = "unroll2: Pointer code, unrolled by 2";

431 
	$uƒﬁl2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

433 
Àngth
 = 
	`vec_Àngth
(
v
);

434 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

435 
ovî
 = 
Àngth
%2;

436 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

437 
d©a_t
 
acc
 = 
IDENT
;

439 
d©a
 < 
díd
) {

440 
acc
 =ác¯
OP
 
d©a
[0];

441 
acc
 =ác¯
OP
 
d©a
[1];

442 
d©a
 += 2;

444 
díd
 +
ovî
;

445 
d©a
 < 
díd
) {

446 
acc
 =ác¯
OP
 *
d©a
;

447 
d©a
 ++;

449 *
de°
 = 
acc
;

450 
	}
}

453 
	guƒﬁl3_des¸
[] = "unroll3: Pointer code, unrolled by 3";

454 
	$uƒﬁl3_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

456 
Àngth
 = 
	`vec_Àngth
(
v
);

457 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

458 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-2;

459 
d©a_t
 
acc
 = 
IDENT
;

461 
d©a
 < 
díd
) {

462 
acc
 =ác¯
OP
 
d©a
[0];

463 
acc
 =ác¯
OP
 
d©a
[1];

464 
acc
 =ác¯
OP
 
d©a
[2];

465 
d©a
 += 3;

467 
díd
 += 2;

468 
d©a
 < 
díd
) {

469 
acc
 =ác¯
OP
 *
d©a
;

470 
d©a
 ++;

472 *
de°
 = 
acc
;

473 
	}
}

476 
	guƒﬁl4_des¸
[] = "unroll4: Pointer code, unrolled by 4";

477 
	$uƒﬁl4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

479 
Àngth
 = 
	`vec_Àngth
(
v
);

480 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

481 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-3;

482 
d©a_t
 
acc
 = 
IDENT
;

484 
d©a
 < 
díd
) {

485 
acc
 =ác¯
OP
 
d©a
[0];

486 
acc
 =ác¯
OP
 
d©a
[1];

487 
acc
 =ác¯
OP
 
d©a
[2];

488 
acc
 =ác¯
OP
 
d©a
[3];

489 
d©a
 += 4;

491 
díd
 += 3;

492 
d©a
 < 
díd
) {

493 
acc
 =ác¯
OP
 *
d©a
;

494 
d©a
 ++;

496 *
de°
 = 
acc
;

497 
	}
}

499 
	guƒﬁl8_des¸
[] = "unroll8: Pointer code, unrolled by 8";

500 
	$uƒﬁl8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

502 
Àngth
 = 
	`vec_Àngth
(
v
);

503 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

504 
ovî
 = 
Àngth
%8;

505 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

506 
d©a_t
 
acc
 = 
IDENT
;

508 
d©a
 < 
díd
) {

509 
acc
 =ác¯
OP
 
d©a
[0];

510 
acc
 =ác¯
OP
 
d©a
[1];

511 
acc
 =ác¯
OP
 
d©a
[2];

512 
acc
 =ác¯
OP
 
d©a
[3];

513 
acc
 =ác¯
OP
 
d©a
[4];

514 
acc
 =ác¯
OP
 
d©a
[5];

515 
acc
 =ác¯
OP
 
d©a
[6];

516 
acc
 =ác¯
OP
 
d©a
[7];

517 
d©a
 += 8;

519 
díd
 +
ovî
;

520 
d©a
 < 
díd
) {

521 
acc
 =ác¯
OP
 *
d©a
;

522 
d©a
 ++;

524 *
de°
 = 
acc
;

525 
	}
}

527 
	guƒﬁl16_des¸
[] = "unroll16: Pointer code, unrolled by 16";

528 
	$uƒﬁl16_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

530 
Àngth
 = 
	`vec_Àngth
(
v
);

531 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

532 
ovî
 = 
Àngth
%16;

533 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

534 
d©a_t
 
acc
 = 
IDENT
;

536 
d©a
 < 
díd
) {

537 
acc
 =ác¯
OP
 
d©a
[0];

538 
acc
 =ác¯
OP
 
d©a
[1];

539 
acc
 =ác¯
OP
 
d©a
[2];

540 
acc
 =ác¯
OP
 
d©a
[3];

541 
acc
 =ác¯
OP
 
d©a
[4];

542 
acc
 =ác¯
OP
 
d©a
[5];

543 
acc
 =ác¯
OP
 
d©a
[6];

544 
acc
 =ác¯
OP
 
d©a
[7];

545 
acc
 =ác¯
OP
 
d©a
[8];

546 
acc
 =ác¯
OP
 
d©a
[9];

547 
acc
 =ác¯
OP
 
d©a
[10];

548 
acc
 =ác¯
OP
 
d©a
[11];

549 
acc
 =ác¯
OP
 
d©a
[12];

550 
acc
 =ác¯
OP
 
d©a
[13];

551 
acc
 =ác¯
OP
 
d©a
[14];

552 
acc
 =ác¯
OP
 
d©a
[15];

553 
d©a
 += 16;

555 
díd
 +
ovî
;

556 
d©a
 < 
díd
) {

557 
acc
 =ác¯
OP
 *
d©a
;

558 
d©a
 ++;

560 *
de°
 = 
acc
;

561 
	}
}

564 
	gcomböe6_des¸
[] = "combine6: Array code, unrolled by 2, Superscalar x2";

567 
	$comböe6
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

569 
i
;

570 
Àngth
 = 
	`vec_Àngth
(
v
);

571 
limô
 = 
Àngth
-1;

572 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

573 
d©a_t
 
acc0
 = 
IDENT
;

574 
d©a_t
 
acc1
 = 
IDENT
;

577 
i
 = 0; i < 
limô
; i+=2) {

578 
acc0
 =ácc0 
OP
 
d©a
[
i
];

579 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

583 ; 
i
 < 
Àngth
; i++) {

584 
acc0
 =ácc0 
OP
 
d©a
[
i
];

586 *
de°
 = 
acc0
 
OP
 
acc1
;

587 
	}
}

590 
	guƒﬁl4x2a_des¸
[] = "unroll4x2a: Array code, unrolled by 4, Superscalar x2";

591 
	$uƒﬁl4x2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

593 
i
;

594 
Àngth
 = 
	`vec_Àngth
(
v
);

595 
limô
 = 
Àngth
-3;

596 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

597 
d©a_t
 
acc0
 = 
IDENT
;

598 
d©a_t
 
acc1
 = 
IDENT
;

601 
i
 = 0; i < 
limô
; i+=4) {

602 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

603 
acc0
 =ácc0 
OP
 
d©a
[
i
+2]; 
acc1
 =ácc1 OP data[i+3];

607 ; 
i
 < 
Àngth
; i++) {

608 
acc0
 =ácc0 
OP
 
d©a
[
i
];

610 *
de°
 = 
acc0
 
OP
 
acc1
;

611 
	}
}

614 
	guƒﬁl8x2a_des¸
[] = "unroll8x2a: Array code, unrolled by 8, Superscalar x2";

615 
	$uƒﬁl8x2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

617 
i
;

618 
Àngth
 = 
	`vec_Àngth
(
v
);

619 
limô
 = 
Àngth
-7;

620 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

621 
d©a_t
 
acc0
 = 
IDENT
;

622 
d©a_t
 
acc1
 = 
IDENT
;

625 
i
 = 0; i < 
limô
; i+=8) {

626 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

627 
acc0
 =ácc0 
OP
 
d©a
[
i
+2]; 
acc1
 =ácc1 OP data[i+3];

628 
acc0
 =ácc0 
OP
 
d©a
[
i
+4]; 
acc1
 =ácc1 OP data[i+5];

629 
acc0
 =ácc0 
OP
 
d©a
[
i
+6]; 
acc1
 =ácc1 OP data[i+7];

633 ; 
i
 < 
Àngth
; i++) {

634 
acc0
 =ácc0 
OP
 
d©a
[
i
];

636 *
de°
 = 
acc0
 
OP
 
acc1
;

637 
	}
}

639 
	guƒﬁl3x3a_des¸
[] = "unroll3x3a: Array code, unrolled by 3, Superscalar x3";

640 
	$uƒﬁl3x3a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

642 
i
;

643 
Àngth
 = 
	`vec_Àngth
(
v
);

644 
limô
 = 
Àngth
-2;

645 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

646 
d©a_t
 
acc0
 = 
IDENT
;

647 
d©a_t
 
acc1
 = 
IDENT
;

648 
d©a_t
 
acc2
 = 
IDENT
;

651 
i
 = 0; i < 
limô
; i+=3) {

652 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

653 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

657 ; 
i
 < 
Àngth
; i++) {

658 
acc0
 =ácc0 
OP
 
d©a
[
i
];

660 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
;

661 
	}
}

664 
	guƒﬁl4x4a_des¸
[] = "unroll4x4a: Array code, unrolled by 4, Superscalar x4";

665 
	$uƒﬁl4x4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

667 
i
;

668 
Àngth
 = 
	`vec_Àngth
(
v
);

669 
limô
 = 
Àngth
-3;

670 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

671 
d©a_t
 
acc0
 = 
IDENT
;

672 
d©a_t
 
acc1
 = 
IDENT
;

673 
d©a_t
 
acc2
 = 
IDENT
;

674 
d©a_t
 
acc3
 = 
IDENT
;

677 
i
 = 0; i < 
limô
; i+=4) {

678 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

679 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

683 ; 
i
 < 
Àngth
; i++) {

684 
acc0
 =ácc0 
OP
 
d©a
[
i
];

686 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
);

688 
	}
}

690 
	guƒﬁl8x4a_des¸
[] = "unroll8x4a: Array code, unrolled by 8, Superscalar x4";

691 
	$uƒﬁl8x4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

693 
i
;

694 
Àngth
 = 
	`vec_Àngth
(
v
);

695 
limô
 = 
Àngth
-7;

696 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

697 
d©a_t
 
acc0
 = 
IDENT
;

698 
d©a_t
 
acc1
 = 
IDENT
;

699 
d©a_t
 
acc2
 = 
IDENT
;

700 
d©a_t
 
acc3
 = 
IDENT
;

703 
i
 = 0; i < 
limô
; i+=8) {

704 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

705 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

706 
acc0
 =ácc0 
OP
 
d©a
[
i
+4]; 
acc1
 =ácc1 OP data[i+5];

707 
acc2
 =ácc2 
OP
 
d©a
[
i
+6]; 
acc3
 =ácc3 OP data[i+7];

711 ; 
i
 < 
Àngth
; i++) {

712 
acc0
 =ácc0 
OP
 
d©a
[
i
];

714 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
 OP 
acc3
;

715 
	}
}

717 
	guƒﬁl12x6a_des¸
[] = "unroll2x6a: Array code, unrolled by 12, Superscalar x6";

718 
	$uƒﬁl12x6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

720 
i
;

721 
Àngth
 = 
	`vec_Àngth
(
v
);

722 
limô
 = 
Àngth
-11;

723 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

724 
d©a_t
 
acc0
 = 
IDENT
;

725 
d©a_t
 
acc1
 = 
IDENT
;

726 
d©a_t
 
acc2
 = 
IDENT
;

727 
d©a_t
 
acc3
 = 
IDENT
;

728 
d©a_t
 
acc4
 = 
IDENT
;

729 
d©a_t
 
acc5
 = 
IDENT
;

732 
i
 = 0; i < 
limô
; i+=12) {

733 
acc0
 =ácc0 
OP
 
d©a
[
i
];

734 
acc0
 =ácc0 
OP
 
d©a
[
i
+6];

735 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

736 
acc1
 =ácc1 
OP
 
d©a
[
i
+7];

737 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

738 
acc2
 =ácc2 
OP
 
d©a
[
i
+8];

739 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

740 
acc3
 =ácc3 
OP
 
d©a
[
i
+9];

741 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

742 
acc4
 =ácc4 
OP
 
d©a
[
i
+10];

743 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

744 
acc5
 =ácc5 
OP
 
d©a
[
i
+11];

748 ; 
i
 < 
Àngth
; i++) {

749 
acc0
 =ácc0 
OP
 
d©a
[
i
];

751 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
);

752 
	}
}

754 
	guƒﬁl12x12a_des¸
[] = "unroll12x12a: Array code, unrolled by 12, Superscalar x12";

755 
	$uƒﬁl12x12a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

757 
i
;

758 
Àngth
 = 
	`vec_Àngth
(
v
);

759 
limô
 = 
Àngth
-11;

760 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

761 
d©a_t
 
acc0
 = 
IDENT
;

762 
d©a_t
 
acc1
 = 
IDENT
;

763 
d©a_t
 
acc2
 = 
IDENT
;

764 
d©a_t
 
acc3
 = 
IDENT
;

765 
d©a_t
 
acc4
 = 
IDENT
;

766 
d©a_t
 
acc5
 = 
IDENT
;

767 
d©a_t
 
acc6
 = 
IDENT
;

768 
d©a_t
 
acc7
 = 
IDENT
;

769 
d©a_t
 
acc8
 = 
IDENT
;

770 
d©a_t
 
acc9
 = 
IDENT
;

771 
d©a_t
 
acc10
 = 
IDENT
;

772 
d©a_t
 
acc11

IDENT
;

775 
i
 = 0; i < 
limô
; i+=12) {

776 
acc0
 =ácc0 
OP
 
d©a
[
i
];

777 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

778 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

779 
acc7
 =ácc7 
OP
 
d©a
[
i
+7];

780 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

781 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

782 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

783 
acc9
 =ácc9 
OP
 
d©a
[
i
+9];

784 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

785 
acc10
 =ácc10 
OP
 
d©a
[
i
+10];

786 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

787 
acc11
 =ácc11 
OP
 
d©a
[
i
+11];

791 ; 
i
 < 
Àngth
; i++) {

792 
acc0
 =ácc0 
OP
 
d©a
[
i
];

794 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
)

795 
	`OP
 (
acc6
 
OP
 
acc7
ËOP (
acc8
 OP 
acc9
ËOP (
acc10
 OP 
acc11
);

796 
	}
}

798 
	guƒﬁl16x16a_des¸
[] = "unroll16x16a: Array code, unrolled by 16, Superscalar x16";

799 
	$uƒﬁl16x16a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

801 
i
;

802 
Àngth
 = 
	`vec_Àngth
(
v
);

803 
limô
 = 
Àngth
-15;

804 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

805 
d©a_t
 
acc0
 = 
IDENT
;

806 
d©a_t
 
acc1
 = 
IDENT
;

807 
d©a_t
 
acc2
 = 
IDENT
;

808 
d©a_t
 
acc3
 = 
IDENT
;

809 
d©a_t
 
acc4
 = 
IDENT
;

810 
d©a_t
 
acc5
 = 
IDENT
;

811 
d©a_t
 
acc6
 = 
IDENT
;

812 
d©a_t
 
acc7
 = 
IDENT
;

813 
d©a_t
 
acc8
 = 
IDENT
;

814 
d©a_t
 
acc9
 = 
IDENT
;

815 
d©a_t
 
acc10
 = 
IDENT
;

816 
d©a_t
 
acc11

IDENT
;

817 
d©a_t
 
acc12

IDENT
;

818 
d©a_t
 
acc13

IDENT
;

819 
d©a_t
 
acc14

IDENT
;

820 
d©a_t
 
acc15

IDENT
;

823 
i
 = 0; i < 
limô
; i+=16) {

824 
acc0
 =ácc0 
OP
 
d©a
[
i
];

825 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

826 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

827 
acc7
 =ácc7 
OP
 
d©a
[
i
+7];

828 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

829 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

830 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

831 
acc9
 =ácc9 
OP
 
d©a
[
i
+9];

832 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

833 
acc10
 =ácc10 
OP
 
d©a
[
i
+10];

834 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

835 
acc11
 =ácc11 
OP
 
d©a
[
i
+11];

836 
acc12
 =ácc12 
OP
 
d©a
[
i
+12];

837 
acc13
 =ácc13 
OP
 
d©a
[
i
+13];

838 
acc14
 =ácc14 
OP
 
d©a
[
i
+14];

839 
acc15
 =ácc15 
OP
 
d©a
[
i
+15];

843 ; 
i
 < 
Àngth
; i++) {

844 
acc0
 =ácc0 
OP
 
d©a
[
i
];

846 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
))

847 
	`OP
 ((
acc6
 
OP
 
acc7
ËOP (
acc8
 OP 
acc9
ËOP (
acc10
 OP 
acc11
))

848 
	`OP
 ((
acc12
 
OP
 
acc13
ËOP (
acc14
 OP 
acc15
));

849 
	}
}

851 
	guƒﬁl20x20a_des¸
[] = "unroll20x20a: Array code, unrolled by 20, Superscalar x20";

852 
	$uƒﬁl20x20a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

854 
i
;

855 
Àngth
 = 
	`vec_Àngth
(
v
);

856 
limô
 = 
Àngth
-19;

857 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

858 
d©a_t
 
acc0
 = 
IDENT
;

859 
d©a_t
 
acc1
 = 
IDENT
;

860 
d©a_t
 
acc2
 = 
IDENT
;

861 
d©a_t
 
acc3
 = 
IDENT
;

862 
d©a_t
 
acc4
 = 
IDENT
;

863 
d©a_t
 
acc5
 = 
IDENT
;

864 
d©a_t
 
acc6
 = 
IDENT
;

865 
d©a_t
 
acc7
 = 
IDENT
;

866 
d©a_t
 
acc8
 = 
IDENT
;

867 
d©a_t
 
acc9
 = 
IDENT
;

868 
d©a_t
 
acc10
 = 
IDENT
;

869 
d©a_t
 
acc11

IDENT
;

870 
d©a_t
 
acc12

IDENT
;

871 
d©a_t
 
acc13

IDENT
;

872 
d©a_t
 
acc14

IDENT
;

873 
d©a_t
 
acc15

IDENT
;

874 
d©a_t
 
acc16

IDENT
;

875 
d©a_t
 
acc17

IDENT
;

876 
d©a_t
 
acc18

IDENT
;

877 
d©a_t
 
acc19

IDENT
;

880 
i
 = 0; i < 
limô
; i+=20) {

881 
acc0
 =ácc0 
OP
 
d©a
[
i
];

882 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

883 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

884 
acc7
 =ácc7 
OP
 
d©a
[
i
+7];

885 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

886 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

887 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

888 
acc9
 =ácc9 
OP
 
d©a
[
i
+9];

889 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

890 
acc10
 =ácc10 
OP
 
d©a
[
i
+10];

891 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

892 
acc11
 =ácc11 
OP
 
d©a
[
i
+11];

893 
acc12
 =ácc12 
OP
 
d©a
[
i
+12];

894 
acc13
 =ácc13 
OP
 
d©a
[
i
+13];

895 
acc14
 =ácc14 
OP
 
d©a
[
i
+14];

896 
acc15
 =ácc15 
OP
 
d©a
[
i
+15];

897 
acc16
 =ácc16 
OP
 
d©a
[
i
+16];

898 
acc17
 =ácc17 
OP
 
d©a
[
i
+17];

899 
acc18
 =ácc18 
OP
 
d©a
[
i
+18];

900 
acc19
 =ácc19 
OP
 
d©a
[
i
+19];

904 ; 
i
 < 
Àngth
; i++) {

905 
acc0
 =ácc0 
OP
 
d©a
[
i
];

907 *
de°
 =

908 (((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
))

909 
	`OP
 ((
acc6
 
OP
 
acc7
ËOP (
acc8
 OP 
acc9
ËOP (
acc10
 OP 
acc11
)))

910 
OP


911 (((
acc12
 
OP
 
acc13
Ë
	`OP
 (
acc14
 OP 
acc15
)ËOP ((
acc16
 OP 
acc17
ËOP (
acc18
 OP 
acc19
)));

912 
	}
}

915 
	guƒﬁl5x5a_des¸
[] = "unroll5x5a: Array code, unrolled by 5, Superscalar x5";

916 
	$uƒﬁl5x5a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

918 
i
;

919 
Àngth
 = 
	`vec_Àngth
(
v
);

920 
limô
 = 
Àngth
-4;

921 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

922 
d©a_t
 
acc0
 = 
IDENT
;

923 
d©a_t
 
acc1
 = 
IDENT
;

924 
d©a_t
 
acc2
 = 
IDENT
;

925 
d©a_t
 
acc3
 = 
IDENT
;

926 
d©a_t
 
acc4
 = 
IDENT
;

929 
i
 = 0; i < 
limô
; i+=5) {

930 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

931 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

932 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

936 ; 
i
 < 
Àngth
; i++) {

937 
acc0
 =ácc0 
OP
 
d©a
[
i
];

939 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
 OP 
acc4
);

940 
	}
}

942 
	guƒﬁl6x6a_des¸
[] = "unroll6x6a: Array code, unrolled by 6, Superscalar x6";

943 
	$uƒﬁl6x6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

945 
i
;

946 
Àngth
 = 
	`vec_Àngth
(
v
);

947 
limô
 = 
Àngth
-5;

948 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

949 
d©a_t
 
acc0
 = 
IDENT
;

950 
d©a_t
 
acc1
 = 
IDENT
;

951 
d©a_t
 
acc2
 = 
IDENT
;

952 
d©a_t
 
acc3
 = 
IDENT
;

953 
d©a_t
 
acc4
 = 
IDENT
;

954 
d©a_t
 
acc5
 = 
IDENT
;

957 
i
 = 0; i < 
limô
; i+=6) {

958 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

959 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

960 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

964 ; 
i
 < 
Àngth
; i++) {

965 
acc0
 =ácc0 
OP
 
d©a
[
i
];

967 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
);

968 
	}
}

970 
	guƒﬁl7x7a_des¸
[] = "unroll7x7a: Array code, unrolled by 7, Superscalar x7";

971 
	$uƒﬁl7x7a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

973 
i
;

974 
Àngth
 = 
	`vec_Àngth
(
v
);

975 
limô
 = 
Àngth
-6;

976 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

977 
d©a_t
 
acc0
 = 
IDENT
;

978 
d©a_t
 
acc1
 = 
IDENT
;

979 
d©a_t
 
acc2
 = 
IDENT
;

980 
d©a_t
 
acc3
 = 
IDENT
;

981 
d©a_t
 
acc4
 = 
IDENT
;

982 
d©a_t
 
acc5
 = 
IDENT
;

983 
d©a_t
 
acc6
 = 
IDENT
;

986 
i
 = 0; i < 
limô
; i+=7) {

987 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

988 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

989 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

990 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

994 ; 
i
 < 
Àngth
; i++) {

995 
acc0
 =ácc0 
OP
 
d©a
[
i
];

997 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP (
acc4
 OP 
acc5
 OP 
acc6
);

998 
	}
}

1000 
	guƒﬁl8x8a_des¸
[] = "unroll8x8a: Array code, unrolled by 8, Superscalar x8";

1001 
	$uƒﬁl8x8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1003 
i
;

1004 
Àngth
 = 
	`vec_Àngth
(
v
);

1005 
limô
 = 
Àngth
-7;

1006 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1007 
d©a_t
 
acc0
 = 
IDENT
;

1008 
d©a_t
 
acc1
 = 
IDENT
;

1009 
d©a_t
 
acc2
 = 
IDENT
;

1010 
d©a_t
 
acc3
 = 
IDENT
;

1011 
d©a_t
 
acc4
 = 
IDENT
;

1012 
d©a_t
 
acc5
 = 
IDENT
;

1013 
d©a_t
 
acc6
 = 
IDENT
;

1014 
d©a_t
 
acc7
 = 
IDENT
;

1017 
i
 = 0; i < 
limô
; i+=8) {

1018 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

1019 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

1020 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

1021 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

1025 ; 
i
 < 
Àngth
; i++) {

1026 
acc0
 =ácc0 
OP
 
d©a
[
i
];

1028 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP ((
acc4
 OP 
acc5
ËOP (
acc6
 OP 
acc7
));

1029 
	}
}

1031 
	guƒﬁl9x9a_des¸
[] = "unroll9x9a: Array code, unrolled by 9, Superscalar x9";

1032 
	$uƒﬁl9x9a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1034 
i
;

1035 
Àngth
 = 
	`vec_Àngth
(
v
);

1036 
limô
 = 
Àngth
-8;

1037 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1038 
d©a_t
 
acc0
 = 
IDENT
;

1039 
d©a_t
 
acc1
 = 
IDENT
;

1040 
d©a_t
 
acc2
 = 
IDENT
;

1041 
d©a_t
 
acc3
 = 
IDENT
;

1042 
d©a_t
 
acc4
 = 
IDENT
;

1043 
d©a_t
 
acc5
 = 
IDENT
;

1044 
d©a_t
 
acc6
 = 
IDENT
;

1045 
d©a_t
 
acc7
 = 
IDENT
;

1046 
d©a_t
 
acc8
 = 
IDENT
;

1049 
i
 = 0; i < 
limô
; i+=9) {

1050 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

1051 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

1052 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

1053 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

1054 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

1058 ; 
i
 < 
Àngth
; i++) {

1059 
acc0
 =ácc0 
OP
 
d©a
[
i
];

1061 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP ((
acc4
 OP 
acc5
ËOP (
acc6
 OP 
acc7
ËOP 
acc8
);

1062 
	}
}

1064 
	guƒﬁl10x10a_des¸
[] = "unroll10x10a: Array code, unrolled by 10, Superscalar x10";

1065 
	$uƒﬁl10x10a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1067 
i
;

1068 
Àngth
 = 
	`vec_Àngth
(
v
);

1069 
limô
 = 
Àngth
-9;

1070 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1071 
d©a_t
 
acc0
 = 
IDENT
;

1072 
d©a_t
 
acc1
 = 
IDENT
;

1073 
d©a_t
 
acc2
 = 
IDENT
;

1074 
d©a_t
 
acc3
 = 
IDENT
;

1075 
d©a_t
 
acc4
 = 
IDENT
;

1076 
d©a_t
 
acc5
 = 
IDENT
;

1077 
d©a_t
 
acc6
 = 
IDENT
;

1078 
d©a_t
 
acc7
 = 
IDENT
;

1079 
d©a_t
 
acc8
 = 
IDENT
;

1080 
d©a_t
 
acc9
 = 
IDENT
;

1083 
i
 = 0; i < 
limô
; i+=10) {

1084 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

1085 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

1086 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

1087 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

1088 
acc8
 =ácc8 
OP
 
d©a
[
i
+8]; 
acc9
 =ácc9 OP data[i+9];

1092 ; 
i
 < 
Àngth
; i++) {

1093 
acc0
 =ácc0 
OP
 
d©a
[
i
];

1095 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)) OP

1096 ((
acc4
 
OP
 
acc5
Ë
	`OP
 (
acc6
 OP 
acc7
)) OP

1097 (
acc8
 
OP
 
acc9
);

1098 
	}
}

1100 
	guƒﬁlx2as_des¸
[] = "unrollx2as: Array code, Unroll x2, Superscalar x2,Çoninterleaved";

1101 
	$uƒﬁlx2as_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1103 
i
;

1104 
Àngth
 = 
	`vec_Àngth
(
v
);

1105 
limô
 = 
Àngth
/2;

1106 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1107 
d©a_t
 *
d©a2
 = 
d©a
+
limô
;

1108 
d©a_t
 
acc0
 = 
IDENT
;

1109 
d©a_t
 
acc1
 = 
IDENT
;

1112 
i
 = 0; i < 
limô
; i++) {

1113 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP 
d©a2
[i];

1117 
i
 = 
limô
*2; i < 
Àngth
; i++) {

1118 
acc1
 =ácc1 
OP
 
d©a
[
i
];

1120 *
de°
 = 
acc0
 
OP
 
acc1
;

1121 
	}
}

1123 
	guƒﬁl4x2as_des¸
[] = "unroll4x2as: Array code, Unroll x4, Superscalar x2,Çoninterleaved";

1124 
	$uƒﬁl4x2as_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1126 
i
;

1127 
Àngth
 = 
	`vec_Àngth
(
v
);

1128 
limô
 = 
Àngth
/2;

1129 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1130 
d©a_t
 *
d©a2
 = 
d©a
+
limô
;

1131 
d©a_t
 
acc0
 = 
IDENT
;

1132 
d©a_t
 
acc1
 = 
IDENT
;

1135 
i
 = 0; i < 
limô
; i++) {

1136 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP 
d©a2
[i];

1140 
i
 = 
limô
*2; i < 
Àngth
; i++) {

1141 
acc1
 =ácc1 
OP
 
d©a
[
i
];

1143 *
de°
 = 
acc0
 
OP
 
acc1
;

1144 
	}
}

1148 
	guƒﬁl8x2_des¸
[] = "unroll8x2: Pointer code, unrolled by 8, Superscalar x2";

1149 
	$uƒﬁl8x2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1151 
Àngth
 = 
	`vec_Àngth
(
v
);

1152 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1153 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1154 
d©a_t
 
acc0
 = 
IDENT
;

1155 
d©a_t
 
acc1
 = 
IDENT
;

1157 
d©a
 < 
díd
) {

1158 
acc0
 =ácc0 
OP
 
d©a
[0];

1159 
acc1
 =ácc1 
OP
 
d©a
[1];

1160 
acc0
 =ácc0 
OP
 
d©a
[2];

1161 
acc1
 =ácc1 
OP
 
d©a
[3];

1162 
acc0
 =ácc0 
OP
 
d©a
[4];

1163 
acc1
 =ácc1 
OP
 
d©a
[5];

1164 
acc0
 =ácc0 
OP
 
d©a
[6];

1165 
acc1
 =ácc1 
OP
 
d©a
[7];

1166 
d©a
 += 8;

1168 
díd
 += 7;

1169 
d©a
 < 
díd
) {

1170 
acc0
 =ácc0 
OP
 *
d©a
;

1171 
d©a
 ++;

1173 *
de°
 = 
acc0
 
OP
 
acc1
;

1174 
	}
}

1176 
	guƒﬁl9x3_des¸
[] = "unroll9x3: Pointer code, unrolled by 9, Superscalar x3";

1177 
	$uƒﬁl9x3_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1179 
Àngth
 = 
	`vec_Àngth
(
v
);

1180 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1181 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-8;

1182 
d©a_t
 
acc0
 = 
IDENT
;

1183 
d©a_t
 
acc1
 = 
IDENT
;

1184 
d©a_t
 
acc2
 = 
IDENT
;

1186 
d©a
 < 
díd
) {

1187 
acc0
 =ácc0 
OP
 
d©a
[0];

1188 
acc1
 =ácc1 
OP
 
d©a
[1];

1189 
acc2
 =ácc2 
OP
 
d©a
[2];

1190 
acc0
 =ácc0 
OP
 
d©a
[3];

1191 
acc1
 =ácc1 
OP
 
d©a
[4];

1192 
acc2
 =ácc2 
OP
 
d©a
[5];

1193 
acc0
 =ácc0 
OP
 
d©a
[6];

1194 
acc1
 =ácc1 
OP
 
d©a
[7];

1195 
acc2
 =ácc2 
OP
 
d©a
[8];

1196 
d©a
 += 9;

1198 
díd
 += 8;

1199 
d©a
 < 
díd
) {

1200 
acc0
 =ácc0 
OP
 *
d©a
;

1201 
d©a
 ++;

1203 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
;

1204 
	}
}

1207 
	guƒﬁl8x4_des¸
[] = "unroll8x4: Pointer code, unrolled by 8, Superscalar x4";

1208 
	$uƒﬁl8x4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1210 
Àngth
 = 
	`vec_Àngth
(
v
);

1211 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1212 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1213 
d©a_t
 
acc3
 = 
IDENT
;

1214 
d©a_t
 
acc0
 = 
IDENT
;

1215 
d©a_t
 
acc1
 = 
IDENT
;

1216 
d©a_t
 
acc2
 = 
IDENT
;

1218 
d©a
 < 
díd
) {

1219 
acc3
 =ácc3 
OP
 
d©a
[0];

1220 
acc0
 =ácc0 
OP
 
d©a
[1];

1221 
acc1
 =ácc1 
OP
 
d©a
[2];

1222 
acc2
 =ácc2 
OP
 
d©a
[3];

1223 
acc3
 =ácc3 
OP
 
d©a
[4];

1224 
acc0
 =ácc0 
OP
 
d©a
[5];

1225 
acc1
 =ácc1 
OP
 
d©a
[6];

1226 
acc2
 =ácc2 
OP
 
d©a
[7];

1227 
d©a
 += 8;

1229 
díd
 += 7;

1230 
d©a
 < 
díd
) {

1231 
acc3
 =ácc3 
OP
 *
d©a
;

1232 
d©a
 ++;

1234 *
de°
 = 
acc3
 
OP
 
acc0
 OP 
acc1
 OP 
acc2
;

1235 
	}
}

1237 
	guƒﬁl8x8_des¸
[] = "unroll8x8: Pointer code, unrolled by 8, Superscalar x8";

1238 
	$uƒﬁl8x8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1240 
Àngth
 = 
	`vec_Àngth
(
v
);

1241 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1242 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1243 
d©a_t
 
acc4
 = 
IDENT
;

1244 
d©a_t
 
acc5
 = 
IDENT
;

1245 
d©a_t
 
acc6
 = 
IDENT
;

1246 
d©a_t
 
acc7
 = 
IDENT
;

1247 
d©a_t
 
acc3
 = 
IDENT
;

1248 
d©a_t
 
acc0
 = 
IDENT
;

1249 
d©a_t
 
acc1
 = 
IDENT
;

1250 
d©a_t
 
acc2
 = 
IDENT
;

1252 
d©a
 < 
díd
) {

1253 
acc0
 =ácc0 
OP
 
d©a
[0];

1254 
acc1
 =ácc1 
OP
 
d©a
[1];

1255 
acc2
 =ácc2 
OP
 
d©a
[2];

1256 
acc3
 =ácc3 
OP
 
d©a
[3];

1257 
acc4
 =ácc4 
OP
 
d©a
[4];

1258 
acc6
 = 
acc5
 
OP
 
d©a
[5];

1259 
acc6
 =ácc6 
OP
 
d©a
[6];

1260 
acc7
 =ácc7 
OP
 
d©a
[7];

1261 
d©a
 += 8;

1263 
díd
 += 7;

1264 
d©a
 < 
díd
) {

1265 
acc0
 =ácc0 
OP
 *
d©a
;

1266 
d©a
 ++;

1268 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
 OP 
acc3
 OP 
acc4
 OP 
acc5
 OP 
acc6
 OP 
acc7
;

1269 
	}
}

1271 
	gcomböe7_des¸
[] = "combine7: Array code, unrolled by 2, differentássociativity";

1274 
	$comböe7
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1276 
i
;

1277 
Àngth
 = 
	`vec_Àngth
(
v
);

1278 
limô
 = 
Àngth
-1;

1279 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1280 
d©a_t
 
acc
 = 
IDENT
;

1283 
i
 = 0; i < 
limô
; i+=2) {

1285 
acc
 =ác¯
	`OP
 (
d©a
[
i
] 
OP
 data[i+1]);

1290 ; 
i
 < 
Àngth
; i++) {

1291 
acc
 =ác¯
OP
 
d©a
[
i
];

1293 *
de°
 = 
acc
;

1294 
	}
}

1297 
	guƒﬁl3Ø_des¸
[] = "unroll3aa: Array code, unrolled by 3, Different Associativity";

1298 
	$uƒﬁl3Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1300 
i
;

1301 
Àngth
 = 
	`vec_Àngth
(
v
);

1302 
limô
 = 
Àngth
-2;

1303 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1304 
d©a_t
 
acc
 = 
IDENT
;

1307 
i
 = 0; i < 
limô
; i+=3) {

1308 
acc
 =ác¯
	`OP
 (
d©a
[
i
] 
OP
 data[i+1] OP data[i+2]);

1312 ; 
i
 < 
Àngth
; i++) {

1313 
acc
 =ác¯
OP
 
d©a
[
i
];

1315 *
de°
 = 
acc
;

1316 
	}
}

1318 
	guƒﬁl4Ø_des¸
[] = "unroll4aa: Array code, unrolled by 4, Different Associativity";

1319 
	$uƒﬁl4Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1321 
i
;

1322 
Àngth
 = 
	`vec_Àngth
(
v
);

1323 
limô
 = 
Àngth
-3;

1324 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1325 
d©a_t
 
acc
 = 
IDENT
;

1328 
i
 = 0; i < 
limô
; i+=4) {

1329 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1330 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1331 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
);

1335 ; 
i
 < 
Àngth
; i++) {

1336 
acc
 =ác¯
OP
 
d©a
[
i
];

1338 *
de°
 = 
acc
;

1339 
	}
}

1341 
	guƒﬁl5Ø_des¸
[] = "unroll5aa: Array code, unrolled by 5, Different Associativity";

1342 
	$uƒﬁl5Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1344 
i
;

1345 
Àngth
 = 
	`vec_Àngth
(
v
);

1346 
limô
 = 
Àngth
-4;

1347 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1348 
d©a_t
 
acc
 = 
IDENT
;

1351 
i
 = 0; i < 
limô
; i+=5) {

1352 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1353 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1354 
d©a_t
 
t3
 = 
d©a
[
i
+4];

1355 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
 OP 
t3
);

1359 ; 
i
 < 
Àngth
; i++) {

1360 
acc
 =ác¯
OP
 
d©a
[
i
];

1362 *
de°
 = 
acc
;

1363 
	}
}

1365 
	guƒﬁl6Ø_des¸
[] = "unroll6aa: Array code, unrolled by 6, Different Associativity";

1366 
	$uƒﬁl6Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1368 
i
;

1369 
Àngth
 = 
	`vec_Àngth
(
v
);

1370 
limô
 = 
Àngth
-5;

1371 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1372 
d©a_t
 
acc
 = 
IDENT
;

1375 
i
 = 0; i < 
limô
; i+=6) {

1376 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1377 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1378 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1379 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
 OP 
t3
);

1383 ; 
i
 < 
Àngth
; i++) {

1384 
acc
 =ác¯
OP
 
d©a
[
i
];

1386 *
de°
 = 
acc
;

1387 
	}
}

1389 
	guƒﬁl7Ø_des¸
[] = "unroll7aa: Array code, unrolled by 7, Different Associativity";

1390 
	$uƒﬁl7Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1392 
i
;

1393 
Àngth
 = 
	`vec_Àngth
(
v
);

1394 
limô
 = 
Àngth
-6;

1395 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1396 
d©a_t
 
acc
 = 
IDENT
;

1399 
i
 = 0; i < 
limô
; i+=7) {

1400 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1401 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1402 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1403 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1404 
d©a_t
 
t4
 = 
d©a
[
i
+6];

1405 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1406 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1410 ; 
i
 < 
Àngth
; i++) {

1411 
acc
 =ác¯
OP
 
d©a
[
i
];

1414 *
de°
 = 
acc
;

1415 
	}
}

1417 
	guƒﬁl8Ø_des¸
[] = "unroll8aa: Array code, unrolled by 8, Different Associativity";

1418 
	$uƒﬁl8Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1420 
i
;

1421 
Àngth
 = 
	`vec_Àngth
(
v
);

1422 
limô
 = 
Àngth
-7;

1423 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1424 
d©a_t
 
acc
 = 
IDENT
;

1427 
i
 = 0; i < 
limô
; i+=8) {

1428 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1429 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1430 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1431 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1432 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1433 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1434 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1438 ; 
i
 < 
Àngth
; i++) {

1439 
acc
 =ác¯
OP
 
d©a
[
i
];

1442 *
de°
 = 
acc
;

1443 
	}
}

1445 
	guƒﬁl9Ø_des¸
[] = "unroll9aa: Array code, unrolled by 9, Different Associativity";

1446 
	$uƒﬁl9Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1448 
i
;

1449 
Àngth
 = 
	`vec_Àngth
(
v
);

1450 
limô
 = 
Àngth
-8;

1451 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1452 
d©a_t
 
acc
 = 
IDENT
;

1455 
i
 = 0; i < 
limô
; i+=9) {

1456 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1457 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1458 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1459 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1460 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1461 
d©a_t
 
t5
 = 
d©a
[
i
+8];

1462 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
 OP 
t5
;

1463 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1467 ; 
i
 < 
Àngth
; i++) {

1468 
acc
 =ác¯
OP
 
d©a
[
i
];

1471 *
de°
 = 
acc
;

1472 
	}
}

1474 
	guƒﬁl10Ø_des¸
[] = "unroll10aa: Array code, unrolled by 10, Different Associativity";

1475 
	$uƒﬁl10Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1477 
i
;

1478 
Àngth
 = 
	`vec_Àngth
(
v
);

1479 
limô
 = 
Àngth
-9;

1480 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1481 
d©a_t
 
acc
 = 
IDENT
;

1484 
i
 = 0; i < 
limô
; i+=10) {

1485 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1486 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1487 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1488 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1489 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1490 
d©a_t
 
t5
 = 
d©a
[
i
+8] 
OP
 data[i+9];

1491 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
 OP 
t5
;

1492 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1496 ; 
i
 < 
Àngth
; i++) {

1497 
acc
 =ác¯
OP
 
d©a
[
i
];

1500 *
de°
 = 
acc
;

1501 
	}
}

1504 
	guƒﬁl12Ø_des¸
[] = "unroll12aa: Array code, unrolled by 12, Different Associativity";

1505 
	$uƒﬁl12Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1507 
i
;

1508 
Àngth
 = 
	`vec_Àngth
(
v
);

1509 
limô
 = 
Àngth
-11;

1510 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1511 
d©a_t
 
acc
 = 
IDENT
;

1514 
i
 = 0; i < 
limô
; i+=12) {

1515 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1516 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1517 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1518 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1519 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1520 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1521 
d©a_t
 
t5
 = 
d©a
[
i
+8] 
OP
 data[i+9];

1522 
d©a_t
 
t6
 = 
d©a
[
i
+10] 
OP
 data[i+11];

1523 
d©a_t
 
u3
 = 
t5
 
OP
 
t6
;

1524 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
 OP 
u3
);

1528 ; 
i
 < 
Àngth
; i++) {

1529 
acc
 =ác¯
OP
 
d©a
[
i
];

1532 *
de°
 = 
acc
;

1533 
	}
}

1539 
	#VBYTES
 32

	)

1542 
	#VSIZE
 
VBYTES
/(
d©a_t
)

	)

1547 
d©a_t
 
	tvec_t
 
	t__©åibuã__
 ((
	tve˘‹_size
(
	tVBYTES
)));

1552 
vec_t
 
	mv
;

1553 
d©a_t
 
	md
[
VSIZE
];

1554 } 
	t∑ck_t
;

1557 
	gsimd_v1_des¸
[] = "simd_v1: SSE code, 1*VSIZE-wayÖarallelism";

1559 
	$simd_v1_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1561 
i
;

1562 
∑ck_t
 
x„r
;

1563 
vec_t
 
accum
;

1564 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1565 
˙t
 = 
	`vec_Àngth
(
v
);

1566 
d©a_t
 
ªsu…
 = 
IDENT
;

1569 
i
 = 0; i < 
VSIZE
; i++)

1570 
x„r
.
d
[
i
] = 
IDENT
;

1571 
accum
 = 
x„r
.
v
;

1575 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1576 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1577 
˙t
--;

1581 
˙t
 >
VSIZE
) {

1582 
vec_t
 
chunk
 = *((vec_à*Ë
d©a
);

1583 
accum
 =áccum 
OP
 
chunk
;

1584 
d©a
 +
VSIZE
;

1585 
˙t
 -
VSIZE
;

1589 
˙t
) {

1590 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1591 
˙t
--;

1595 
x„r
.
v
 = 
accum
;

1596 
i
 = 0; i < 
VSIZE
; i++)

1597 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1600 *
de°
 = 
ªsu…
;

1601 
	}
}

1605 
	gsimd_v2_des¸
[] = "simd_v2: SSE code, 2*VSIZE-wayÖarallelism";

1606 
	$simd_v2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1608 
i
;

1609 
∑ck_t
 
x„r
;

1610 
vec_t
 
accum0
, 
accum1
;

1611 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1612 
˙t
 = 
	`vec_Àngth
(
v
);

1613 
d©a_t
 
ªsu…
 = 
IDENT
;

1616 
i
 = 0; i < 
VSIZE
; i++)

1617 
x„r
.
d
[
i
] = 
IDENT
;

1618 
accum0
 = 
x„r
.
v
;

1619 
accum1
 = 
x„r
.
v
;

1621 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1622 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1623 
˙t
--;

1626 
˙t
 >2*
VSIZE
) {

1627 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1628 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1629 
accum0
 =áccum0 
OP
 
chunk0
;

1630 
accum1
 =áccum1 
OP
 
chunk1
;

1631 
d©a
 +2*
VSIZE
;

1632 
˙t
 -2*
VSIZE
;

1634 
˙t
) {

1635 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1636 
˙t
--;

1638 
x„r
.
v
 = 
accum0
 
OP
 
accum1
;

1639 
i
 = 0; i < 
VSIZE
; i++)

1640 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1641 *
de°
 = 
ªsu…
;

1642 
	}
}

1644 
	gsimd_v4_des¸
[] = "simd_v4: SSE code, 4*VSIZE-wayÖarallelism";

1645 
	$simd_v4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1647 
i
;

1648 
∑ck_t
 
x„r
;

1649 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1650 
˙t
 = 
	`vec_Àngth
(
v
);

1651 
d©a_t
 
ªsu…
 = 
IDENT
;

1654 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
;

1655 
i
 = 0; i < 
VSIZE
; i++)

1656 
x„r
.
d
[
i
] = 
IDENT
;

1657 
accum0
 = 
x„r
.
v
; 
accum1
 = xfer.v;

1658 
accum2
 = 
x„r
.
v
; 
accum3
 = xfer.v;

1660 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1661 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1662 
˙t
--;

1667 
˙t
 >4*
VSIZE
) {

1668 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1669 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1670 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1671 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1672 
accum0
 =áccum0 
OP
 
chunk0
;

1673 
accum1
 =áccum1 
OP
 
chunk1
;

1674 
accum2
 =áccum2 
OP
 
chunk2
;

1675 
accum3
 =áccum3 
OP
 
chunk3
;

1676 
d©a
 +4*
VSIZE
;

1677 
˙t
 -4*
VSIZE
;

1681 
˙t
) {

1682 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1683 
˙t
--;

1688 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1691 
i
 = 0; i < 
VSIZE
; i++)

1692 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1694 *
de°
 = 
ªsu…
;

1695 
	}
}

1697 
	gsimd_v8_des¸
[] = "simd_v8: SSE code, 8*VSIZE-wayÖarallelism";

1698 
	$simd_v8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1700 
i
;

1701 
∑ck_t
 
x„r
;

1702 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
, 
accum5
, 
accum6
, 
accum7
;

1703 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1704 
˙t
 = 
	`vec_Àngth
(
v
);

1705 
d©a_t
 
ªsu…
 = 
IDENT
;

1708 
i
 = 0; i < 
VSIZE
; i++)

1709 
x„r
.
d
[
i
] = 
IDENT
;

1710 
accum0
 = 
x„r
.
v
;

1711 
accum1
 = 
x„r
.
v
;

1712 
accum2
 = 
x„r
.
v
;

1713 
accum3
 = 
x„r
.
v
;

1714 
accum4
 = 
x„r
.
v
;

1715 
accum5
 = 
x„r
.
v
;

1716 
accum6
 = 
x„r
.
v
;

1717 
accum7
 = 
x„r
.
v
;

1719 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1720 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1721 
˙t
--;

1724 
˙t
 >8*
VSIZE
) {

1725 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1726 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1727 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1728 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1729 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1730 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1731 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1732 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1733 
accum0
 =áccum0 
OP
 
chunk0
;

1734 
accum1
 =áccum1 
OP
 
chunk1
;

1735 
accum2
 =áccum2 
OP
 
chunk2
;

1736 
accum3
 =áccum3 
OP
 
chunk3
;

1737 
accum4
 =áccum4 
OP
 
chunk4
;

1738 
accum5
 =áccum5 
OP
 
chunk5
;

1739 
accum6
 =áccum6 
OP
 
chunk6
;

1740 
accum7
 =áccum7 
OP
 
chunk7
;

1741 
d©a
 +8*
VSIZE
;

1742 
˙t
 -8*
VSIZE
;

1744 
˙t
) {

1745 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1746 
˙t
--;

1748 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1749 
x„r
.
v
 = x„r.v 
	`OP
 (
accum4
 
OP
 
accum5
ËOP (
accum6
 OP 
accum7
);

1750 
i
 = 0; i < 
VSIZE
; i++)

1751 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1752 *
de°
 = 
ªsu…
;

1753 
	}
}

1755 
	gsimd_v10_des¸
[] = "simd_v10: SSE code, 10*VSIZE-wayÖarallelism";

1756 
	$simd_v10_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1758 
i
;

1759 
∑ck_t
 
x„r
;

1760 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
, 
accum5
, 
accum6
, 
accum7
, 
accum8
, 
accum9
;

1761 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1762 
˙t
 = 
	`vec_Àngth
(
v
);

1763 
d©a_t
 
ªsu…
 = 
IDENT
;

1766 
i
 = 0; i < 
VSIZE
; i++)

1767 
x„r
.
d
[
i
] = 
IDENT
;

1768 
accum0
 = 
x„r
.
v
;

1769 
accum1
 = 
x„r
.
v
;

1770 
accum2
 = 
x„r
.
v
;

1771 
accum3
 = 
x„r
.
v
;

1772 
accum4
 = 
x„r
.
v
;

1773 
accum5
 = 
x„r
.
v
;

1774 
accum6
 = 
x„r
.
v
;

1775 
accum7
 = 
x„r
.
v
;

1776 
accum8
 = 
x„r
.
v
;

1777 
accum9
 = 
x„r
.
v
;

1779 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1780 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1781 
˙t
--;

1784 
˙t
 >10*
VSIZE
) {

1785 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1786 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1787 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1788 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1789 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1790 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1791 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1792 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1793 
vec_t
 
chunk8
 = *((vec_à*Ë(
d©a
+8*
VSIZE
));

1794 
vec_t
 
chunk9
 = *((vec_à*Ë(
d©a
+9*
VSIZE
));

1795 
accum0
 =áccum0 
OP
 
chunk0
;

1796 
accum1
 =áccum1 
OP
 
chunk1
;

1797 
accum2
 =áccum2 
OP
 
chunk2
;

1798 
accum3
 =áccum3 
OP
 
chunk3
;

1799 
accum4
 =áccum4 
OP
 
chunk4
;

1800 
accum5
 =áccum5 
OP
 
chunk5
;

1801 
accum6
 =áccum6 
OP
 
chunk6
;

1802 
accum7
 =áccum7 
OP
 
chunk7
;

1803 
accum8
 =áccum8 
OP
 
chunk8
;

1804 
accum9
 =áccum9 
OP
 
chunk9
;

1805 
d©a
 +10*
VSIZE
;

1806 
˙t
 -10*
VSIZE
;

1808 
˙t
) {

1809 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1810 
˙t
--;

1812 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1813 
x„r
.
v
 = x„r.v 
	`OP
 (
accum4
 
OP
 
accum5
ËOP (
accum6
 OP 
accum7
);

1814 
x„r
.
v
 = x„r.v 
	`OP
 (
accum8
 
OP
 
accum9
);

1815 
i
 = 0; i < 
VSIZE
; i++)

1816 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1817 *
de°
 = 
ªsu…
;

1818 
	}
}

1820 
	gsimd_v12_des¸
[] = "simd_v12: SSE code, 12*VSIZE-wayÖarallelism";

1821 
	$simd_v12_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1823 
i
;

1824 
∑ck_t
 
x„r
;

1825 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
, 
accum5
, 
accum6
, 
accum7
;

1826 
vec_t
 
accum8
, 
accum9
, 
accum10
, 
accum11
;

1827 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1828 
˙t
 = 
	`vec_Àngth
(
v
);

1829 
d©a_t
 
ªsu…
 = 
IDENT
;

1832 
i
 = 0; i < 
VSIZE
; i++)

1833 
x„r
.
d
[
i
] = 
IDENT
;

1834 
accum0
 = 
x„r
.
v
;

1835 
accum1
 = 
x„r
.
v
;

1836 
accum2
 = 
x„r
.
v
;

1837 
accum3
 = 
x„r
.
v
;

1838 
accum4
 = 
x„r
.
v
;

1839 
accum5
 = 
x„r
.
v
;

1840 
accum6
 = 
x„r
.
v
;

1841 
accum7
 = 
x„r
.
v
;

1842 
accum8
 = 
x„r
.
v
;

1843 
accum9
 = 
x„r
.
v
;

1844 
accum10
 = 
x„r
.
v
;

1845 
accum11
 = 
x„r
.
v
;

1846 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1847 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1848 
˙t
--;

1851 
˙t
 >12*
VSIZE
) {

1852 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1853 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1854 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1855 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1856 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1857 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1858 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1859 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1860 
vec_t
 
chunk8
 = *((vec_à*Ë(
d©a
+8*
VSIZE
));

1861 
vec_t
 
chunk9
 = *((vec_à*Ë(
d©a
+9*
VSIZE
));

1862 
vec_t
 
chunk10
 = *((vec_à*Ë(
d©a
+10*
VSIZE
));

1863 
vec_t
 
chunk11
 = *((vec_à*Ë(
d©a
+11*
VSIZE
));

1864 
accum0
 =áccum0 
OP
 
chunk0
;

1865 
accum1
 =áccum1 
OP
 
chunk1
;

1866 
accum2
 =áccum2 
OP
 
chunk2
;

1867 
accum3
 =áccum3 
OP
 
chunk3
;

1868 
accum4
 =áccum4 
OP
 
chunk4
;

1869 
accum5
 =áccum5 
OP
 
chunk5
;

1870 
accum6
 =áccum6 
OP
 
chunk6
;

1871 
accum7
 =áccum7 
OP
 
chunk7
;

1872 
accum8
 =áccum8 
OP
 
chunk8
;

1873 
accum9
 =áccum9 
OP
 
chunk9
;

1874 
accum10
 =áccum10 
OP
 
chunk10
;

1875 
accum11
 =áccum11 
OP
 
chunk11
;

1876 
d©a
 +12*
VSIZE
;

1877 
˙t
 -12*
VSIZE
;

1879 
˙t
) {

1880 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1881 
˙t
--;

1883 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1884 
x„r
.
v
 = x„r.v 
	`OP
 (
accum4
 
OP
 
accum5
ËOP (
accum6
 OP 
accum7
);

1885 
x„r
.
v
 = x„r.v 
	`OP
 (
accum8
 
OP
 
accum9
ËOP (
accum10
 OP 
accum11
);

1886 
i
 = 0; i < 
VSIZE
; i++)

1887 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1888 *
de°
 = 
ªsu…
;

1889 
	}
}

1892 
	gsimd_v2a_des¸
[] = "simd_v2a: SSE code, 2*VSIZE-wayÖarallelism,Ñeassociate";

1893 
	$simd_v2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1895 
i
;

1896 
∑ck_t
 
x„r
;

1897 
vec_t
 
accum
;

1898 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1899 
˙t
 = 
	`vec_Àngth
(
v
);

1900 
d©a_t
 
ªsu…
 = 
IDENT
;

1903 
i
 = 0; i < 
VSIZE
; i++)

1904 
x„r
.
d
[
i
] = 
IDENT
;

1905 
accum
 = 
x„r
.
v
;

1907 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1908 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1909 
˙t
--;

1912 
˙t
 >2*
VSIZE
) {

1913 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1914 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1915 
accum
 =áccum 
	`OP
 (
chunk0
 
OP
 
chunk1
);

1916 
d©a
 +2*
VSIZE
;

1917 
˙t
 -2*
VSIZE
;

1919 
˙t
) {

1920 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1921 
˙t
--;

1923 
x„r
.
v
 = 
accum
;

1924 
i
 = 0; i < 
VSIZE
; i++)

1925 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1926 *
de°
 = 
ªsu…
;

1927 
	}
}

1929 
	gsimd_v4a_des¸
[] = "simd_v4a: SSE code, 4*VSIZE-wayÖarallelism,Ñeassociate";

1930 
	$simd_v4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1932 
i
;

1933 
∑ck_t
 
x„r
;

1934 
vec_t
 
accum
;

1935 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1936 
˙t
 = 
	`vec_Àngth
(
v
);

1937 
d©a_t
 
ªsu…
 = 
IDENT
;

1940 
i
 = 0; i < 
VSIZE
; i++)

1941 
x„r
.
d
[
i
] = 
IDENT
;

1942 
accum
 = 
x„r
.
v
;

1944 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1945 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1946 
˙t
--;

1950 
˙t
 >4*
VSIZE
) {

1951 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1952 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1953 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1954 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1955 
accum
 =áccum 
OP


1956 ((
chunk0
 
OP
 
chunk1
Ë
	`OP
 (
chunk2
 OP 
chunk3
));

1957 
d©a
 +4*
VSIZE
;

1958 
˙t
 -4*
VSIZE
;

1962 
˙t
) {

1963 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1964 
˙t
--;

1966 
x„r
.
v
 = 
accum
;

1967 
i
 = 0; i < 
VSIZE
; i++)

1968 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1969 *
de°
 = 
ªsu…
;

1970 
	}
}

1972 
	gsimd_v8a_des¸
[] = "simd_v8a: SSE code, 8*VSIZE-wayÖarallelism,Ñeassociate";

1973 
	$simd_v8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1975 
i
;

1976 
∑ck_t
 
x„r
;

1977 
vec_t
 
accum
;

1978 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1979 
˙t
 = 
	`vec_Àngth
(
v
);

1980 
d©a_t
 
ªsu…
 = 
IDENT
;

1983 
i
 = 0; i < 
VSIZE
; i++)

1984 
x„r
.
d
[
i
] = 
IDENT
;

1985 
accum
 = 
x„r
.
v
;

1987 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1988 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1989 
˙t
--;

1992 
˙t
 >8*
VSIZE
) {

1993 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1994 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1995 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1996 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1997 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1998 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1999 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

2000 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

2001 
accum
 =áccum 
OP


2002 (((
chunk0
 
OP
 
chunk1
Ë
	`OP
 (
chunk2
 OP 
chunk3
))

2003 
OP


2004 ((
chunk4
 
OP
 
chunk5
Ë
	`OP
 (
chunk6
 OP 
chunk7
)));

2005 
d©a
 +8*
VSIZE
;

2006 
˙t
 -8*
VSIZE
;

2008 
˙t
) {

2009 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

2010 
˙t
--;

2012 
x„r
.
v
 = 
accum
;

2013 
i
 = 0; i < 
VSIZE
; i++)

2014 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

2015 *
de°
 = 
ªsu…
;

2016 
	}
}

2019 
	$ªgi°î_comböîs
()

2021 #i‚de‡
UNROLL_ONLY


2022 
	`add_comböî
(
comböe1
, comböe1, 
comböe1_des¸
);

2023 
	`add_comböî
(
comböe2
, 
comböe1
, 
comböe2_des¸
);

2024 
	`add_comböî
(
comböe3
, 
comböe1
, 
comböe3_des¸
);

2025 
	`add_comböî
(
comböe3w
, 
comböe1
, 
comböe3w_des¸
);

2027 
	`add_comböî
(
comböe4
, 
comböe1
,
comböe4_des¸
);

2028 #i‚de‡
UNROLL_ONLY


2029 
	`add_comböî
(
comböe4b
, 
comböe1
, 
comböe4b_des¸
);

2030 
	`add_comböî
(
comböe4p
, 
comböe1
, 
comböe4p_des¸
);

2032 
	`add_comböî
(
comböe5
, 
comböe1
, 
comböe5_des¸
);

2033 #i‚de‡
UNROLL_ONLY


2034 
	`add_comböî
(
comböe5p
, 
comböe1
, 
comböe5p_des¸
);

2035 
	`add_comböî
(
uƒﬁl2aw_comböe
, 
comböe1
, 
uƒﬁl2aw_des¸
);

2037 
	`add_comböî
(
uƒﬁl3a_comböe
, 
comböe1
, 
uƒﬁl3a_des¸
);

2038 
	`add_comböî
(
uƒﬁl4a_comböe
, 
comböe1
, 
uƒﬁl4a_des¸
);

2039 
	`add_comböî
(
uƒﬁl5a_comböe
, 
comböe1
, 
uƒﬁl5a_des¸
);

2040 
	`add_comböî
(
uƒﬁl6a_comböe
, 
comböe1
, 
uƒﬁl6a_des¸
);

2041 
	`add_comböî
(
uƒﬁl7a_comböe
, 
comböe1
, 
uƒﬁl7a_des¸
);

2042 
	`add_comböî
(
uƒﬁl8a_comböe
, 
comböe1
, 
uƒﬁl8a_des¸
);

2043 
	`add_comböî
(
uƒﬁl9a_comböe
, 
comböe1
, 
uƒﬁl9a_des¸
);

2044 
	`add_comböî
(
uƒﬁl10a_comböe
, 
comböe1
, 
uƒﬁl10a_des¸
);

2045 
	`add_comböî
(
uƒﬁl16a_comböe
, 
comböe1
, 
uƒﬁl16a_des¸
);

2046 #i‚de‡
UNROLL_ONLY


2047 
	`add_comböî
(
uƒﬁl2_comböe
, 
comböe1
, 
uƒﬁl2_des¸
);

2048 
	`add_comböî
(
uƒﬁl3_comböe
, 
comböe1
, 
uƒﬁl3_des¸
);

2049 
	`add_comböî
(
uƒﬁl4_comböe
, 
comböe1
, 
uƒﬁl4_des¸
);

2050 
	`add_comböî
(
uƒﬁl8_comböe
, 
comböe1
, 
uƒﬁl8_des¸
);

2051 
	`add_comböî
(
uƒﬁl16_comböe
, 
comböe1
, 
uƒﬁl16_des¸
);

2052 
	`add_comböî
(
comböe6
, 
comböe1
, 
comböe6_des¸
);

2053 
	`add_comböî
(
uƒﬁl4x2a_comböe
, 
comböe1
, 
uƒﬁl4x2a_des¸
);

2054 
	`add_comböî
(
uƒﬁl8x2a_comböe
, 
comböe1
, 
uƒﬁl8x2a_des¸
);

2055 
	`add_comböî
(
uƒﬁl3x3a_comböe
, 
comböe1
, 
uƒﬁl3x3a_des¸
);

2056 
	`add_comböî
(
uƒﬁl4x4a_comböe
, 
comböe1
, 
uƒﬁl4x4a_des¸
);

2057 
	`add_comböî
(
uƒﬁl5x5a_comböe
, 
comböe1
, 
uƒﬁl5x5a_des¸
);

2058 
	`add_comböî
(
uƒﬁl6x6a_comböe
, 
comböe1
, 
uƒﬁl6x6a_des¸
);

2059 
	`add_comböî
(
uƒﬁl7x7a_comböe
, 
comböe1
, 
uƒﬁl7x7a_des¸
);

2060 
	`add_comböî
(
uƒﬁl8x4a_comböe
, 
comböe1
, 
uƒﬁl8x4a_des¸
);

2061 
	`add_comböî
(
uƒﬁl8x8a_comböe
, 
comböe1
, 
uƒﬁl8x8a_des¸
);

2062 
	`add_comböî
(
uƒﬁl9x9a_comböe
, 
comböe1
, 
uƒﬁl9x9a_des¸
);

2063 
	`add_comböî
(
uƒﬁl10x10a_comböe
, 
comböe1
, 
uƒﬁl10x10a_des¸
);

2064 
	`add_comböî
(
uƒﬁl12x6a_comböe
, 
comböe1
, 
uƒﬁl12x6a_des¸
);

2065 
	`add_comböî
(
uƒﬁl12x12a_comböe
, 
comböe1
, 
uƒﬁl12x12a_des¸
);

2066 
	`add_comböî
(
uƒﬁl16x16a_comböe
, 
comböe1
, 
uƒﬁl16x16a_des¸
);

2067 
	`add_comböî
(
uƒﬁl20x20a_comböe
, 
comböe1
, 
uƒﬁl20x20a_des¸
);

2068 
	`add_comböî
(
uƒﬁl8x2_comböe
, 
comböe1
, 
uƒﬁl8x2_des¸
);

2069 
	`add_comböî
(
uƒﬁl8x4_comböe
, 
comböe1
, 
uƒﬁl8x4_des¸
);

2070 
	`add_comböî
(
uƒﬁl8x8_comböe
, 
comböe1
, 
uƒﬁl8x8_des¸
);

2071 
	`add_comböî
(
uƒﬁl9x3_comböe
, 
comböe1
, 
uƒﬁl9x3_des¸
);

2072 
	`add_comböî
(
uƒﬁlx2as_comböe
, 
comböe1
, 
uƒﬁlx2as_des¸
);

2073 
	`add_comböî
(
comböe7
, 
comböe1
, 
comböe7_des¸
);

2074 
	`add_comböî
(
uƒﬁl3Ø_comböe
, 
comböe1
, 
uƒﬁl3Ø_des¸
);

2075 
	`add_comböî
(
uƒﬁl4Ø_comböe
, 
comböe1
, 
uƒﬁl4Ø_des¸
);

2076 
	`add_comböî
(
uƒﬁl5Ø_comböe
, 
comböe1
, 
uƒﬁl5Ø_des¸
);

2077 
	`add_comböî
(
uƒﬁl6Ø_comböe
, 
comböe1
, 
uƒﬁl6Ø_des¸
);

2078 
	`add_comböî
(
uƒﬁl7Ø_comböe
, 
comböe1
, 
uƒﬁl7Ø_des¸
);

2079 
	`add_comböî
(
uƒﬁl8Ø_comböe
, 
comböe1
, 
uƒﬁl8Ø_des¸
);

2080 
	`add_comböî
(
uƒﬁl9Ø_comböe
, 
comböe1
, 
uƒﬁl9Ø_des¸
);

2081 
	`add_comböî
(
uƒﬁl10Ø_comböe
, 
comböe1
, 
uƒﬁl10Ø_des¸
);

2082 
	`add_comböî
(
uƒﬁl12Ø_comböe
, 
comböe1
, 
uƒﬁl12Ø_des¸
);

2083 
	`add_comböî
(
simd_v1_comböe
, 
comböe1
, 
simd_v1_des¸
);

2084 
	`add_comböî
(
simd_v2_comböe
, 
comböe1
, 
simd_v2_des¸
);

2085 
	`add_comböî
(
simd_v4_comböe
, 
comböe1
, 
simd_v4_des¸
);

2086 
	`add_comböî
(
simd_v8_comböe
, 
comböe1
, 
simd_v8_des¸
);

2087 
	`add_comböî
(
simd_v10_comböe
, 
comböe1
, 
simd_v10_des¸
);

2088 
	`add_comböî
(
simd_v12_comböe
, 
comböe1
, 
simd_v12_des¸
);

2089 
	`add_comböî
(
simd_v2a_comböe
, 
comböe1
, 
simd_v2a_des¸
);

2090 
	`add_comböî
(
simd_v4a_comböe
, 
comböe1
, 
simd_v4a_des¸
);

2091 
	`add_comböî
(
simd_v8a_comböe
, 
comböe1
, 
simd_v8a_des¸
);

2092 
	`log_comböî
(
simd_v8a_comböe
, 0.16, 0.24);

2094 
	}
}

	@opt/fpb-O2.c

1 
	~"comböe.h
"

5 
	gcomböe1_des¸
[] = "combine1: Maximum use of dataábstraction";

8 
	$comböe1
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

10 
i
;

12 *
de°
 = 
IDENT
;

13 
i
 = 0; i < 
	`vec_Àngth
(
v
); i++) {

14 
d©a_t
 
vÆ
;

15 
	`gë_vec_ñemít
(
v
, 
i
, &
vÆ
);

17 *
de°
 = *de° 
OP
 
vÆ
;

20 
	}
}

23 
	gcomböe2_des¸
[] = "combine2: Take vec_length() out ofÜoop";

26 
	$comböe2
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

28 
i
;

29 
Àngth
 = 
	`vec_Àngth
(
v
);

31 *
de°
 = 
IDENT
;

32 
i
 = 0; i < 
Àngth
; i++) {

33 
d©a_t
 
vÆ
;

34 
	`gë_vec_ñemít
(
v
, 
i
, &
vÆ
);

35 *
de°
 = *de° 
OP
 
vÆ
;

37 
	}
}

40 
	gcomböe3_des¸
[] = "combine3: ArrayÑeferenceÅo vector data";

43 
	$comböe3
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

45 
i
;

46 
Àngth
 = 
	`vec_Àngth
(
v
);

47 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

49 *
de°
 = 
IDENT
;

50 
i
 = 0; i < 
Àngth
; i++) {

51 *
de°
 = *de° 
OP
 
d©a
[
i
];

53 
	}
}

56 
	gcomböe3w_des¸
[] = "combine3w: Update *dest withinÜoop only with write";

59 
	$comböe3w
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

61 
i
;

62 
Àngth
 = 
	`vec_Àngth
(
v
);

63 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

64 
d©a_t
 
acc
 = 
IDENT
;

67 *
de°
 = 
acc
;

69 
i
 = 0; i < 
Àngth
; i++) {

70 
acc
 =ác¯
OP
 
d©a
[
i
];

71 *
de°
 = 
acc
;

73 
	}
}

76 
	gcomböe4_des¸
[] = "combine4: ArrayÑeference,áccumulate inÅemporary";

79 
	$comböe4
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

81 
i
;

82 
Àngth
 = 
	`vec_Àngth
(
v
);

83 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

84 
d©a_t
 
acc
 = 
IDENT
;

86 
i
 = 0; i < 
Àngth
; i++) {

87 
acc
 =ác¯
OP
 
d©a
[
i
];

89 *
de°
 = 
acc
;

90 
	}
}

93 
	gcomböe4b_des¸
[] = "combine4b: Include bonds check inÜoop";

96 
	$comböe4b
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

98 
i
;

99 
Àngth
 = 
	`vec_Àngth
(
v
);

100 
d©a_t
 
acc
 = 
IDENT
;

102 
i
 = 0; i < 
Àngth
; i++) {

103 i‡(
i
 >0 && i < 
v
->
Àn
) {

104 
acc
 =ác¯
OP
 
v
->
d©a
[
i
];

107 *
de°
 = 
acc
;

108 
	}
}

112 
	gcomböe4p_des¸
[] = "combine4p: PointerÑeference,áccumulate inÅemporary";

115 
	$comböe4p
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

117 
Àngth
 = 
	`vec_Àngth
(
v
);

118 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

119 
d©a_t
 *
díd
 = 
d©a
+
Àngth
;

120 
d©a_t
 
acc
 = 
IDENT
;

122 ; 
d©a
 < 
díd
; data++)

123 
acc
 =ác¯
OP
 *
d©a
;

124 *
de°
 = 
acc
;

125 
	}
}

129 
	gcomböe5_des¸
[] = "combine5: Array code, unrolled by 2";

132 
	$comböe5
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

134 
i
;

135 
Àngth
 = 
	`vec_Àngth
(
v
);

136 
limô
 = 
Àngth
-1;

137 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

138 
d©a_t
 
acc
 = 
IDENT
;

141 
i
 = 0; i < 
limô
; i+=2) {

143 
acc
 = (ac¯
OP
 
d©a
[
i
]) OP data[i+1];

148 ; 
i
 < 
Àngth
; i++) {

149 
acc
 =ác¯
OP
 
d©a
[
i
];

151 *
de°
 = 
acc
;

152 
	}
}

155 
	guƒﬁl3a_des¸
[] = "unroll3a: Array code, unrolled by 3";

156 
	$uƒﬁl3a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

158 
i
;

159 
Àngth
 = 
	`vec_Àngth
(
v
);

160 
limô
 = 
Àngth
-2;

161 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

162 
d©a_t
 
acc
 = 
IDENT
;

165 
i
 = 0; i < 
limô
; i+=3) {

166 
acc
 =ác¯
OP
 
d©a
[
i
];

167 
acc
 =ác¯
OP
 
d©a
[
i
+1];

168 
acc
 =ác¯
OP
 
d©a
[
i
+2];

172 ; 
i
 < 
Àngth
; i++) {

173 
acc
 =ác¯
OP
 
d©a
[
i
];

175 *
de°
 = 
acc
;

176 
	}
}

179 
	gcomböe5p_des¸
[] = "combine5p: Pointer code, unrolled by 2, forÜoop";

182 
	$comböe5p
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

184 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

185 
d©a_t
 *
díd
 = 
d©a
+
	`vec_Àngth
(
v
);

186 
d©a_t
 *
dlimô
 = 
díd
-1;

187 
d©a_t
 
acc
 = 
IDENT
;

190 ; 
d©a
 < 
dlimô
; data += 2) {

191 
acc
 =ác¯
OP
 
d©a
[0] OP data[1];

195 ; 
d©a
 < 
díd
; data++) {

196 
acc
 =ác¯
OP
 
d©a
[0];

198 *
de°
 = 
acc
;

199 
	}
}

202 
	guƒﬁl2aw_des¸
[] = "unroll2aw: Array code, unrolled by 2, whileÜoop";

203 
	$uƒﬁl2aw_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

205 
i
 = 0;

206 
Àngth
 = 
	`vec_Àngth
(
v
);

207 
limô
 = 
Àngth
-1;

208 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

209 
d©a_t
 
acc
 = 
IDENT
;

212 
i
 < 
limô
) {

213 
acc
 =ác¯
OP
 
d©a
[
i
];

214 
i
+= 2;

215 
acc
 =ác¯
OP
 
d©a
[
i
-1];

219 ; 
i
 < 
Àngth
; i++) {

220 
acc
 =ác¯
OP
 
d©a
[
i
];

222 *
de°
 = 
acc
;

223 
	}
}

226 
	guƒﬁl4a_des¸
[] = "unroll4a: Array code, unrolled by 4";

227 
	$uƒﬁl4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

229 
i
;

230 
Àngth
 = 
	`vec_Àngth
(
v
);

231 
limô
 = 
Àngth
-3;

232 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

233 
d©a_t
 
acc
 = 
IDENT
;

236 
i
 = 0; i < 
limô
; i+=4) {

237 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

238 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

242 ; 
i
 < 
Àngth
; i++) {

243 
acc
 =ác¯
OP
 
d©a
[
i
];

245 *
de°
 = 
acc
;

246 
	}
}

248 
	guƒﬁl5a_des¸
[] = "unroll5a: Array code, unrolled by 5";

251 
	$uƒﬁl5
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

254 
	$uƒﬁl5a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

258 
i
;

259 
Àngth
 = 
	`vec_Àngth
(
v
);

260 
limô
 = 
Àngth
-4;

261 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

262 
d©a_t
 
acc
 = 
IDENT
;

265 
i
 = 0; i < 
limô
; i+=5) {

266 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

267 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

268 
acc
 =ác¯
OP
 
d©a
[
i
+4];

272 ; 
i
 < 
Àngth
; i++) {

273 
acc
 =ác¯
OP
 
d©a
[
i
];

275 *
de°
 = 
acc
;

276 
	}
}

279 
	guƒﬁl6a_des¸
[] = "unroll6a: Array code, unrolled by 6";

280 
	$uƒﬁl6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

282 
i
;

283 
Àngth
 = 
	`vec_Àngth
(
v
);

284 
limô
 = 
Àngth
-5;

285 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

286 
d©a_t
 
acc
 = 
IDENT
;

289 
i
 = 0; i < 
limô
; i+=6) {

290 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

291 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

292 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

296 ; 
i
 < 
Àngth
; i++) {

297 
acc
 =ác¯
OP
 
d©a
[
i
];

299 *
de°
 = 
acc
;

300 
	}
}

302 
	guƒﬁl7a_des¸
[] = "unroll7a: Array code, unrolled by 7";

303 
	$uƒﬁl7a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

305 
i
;

306 
Àngth
 = 
	`vec_Àngth
(
v
);

307 
limô
 = 
Àngth
-6;

308 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

309 
d©a_t
 
acc
 = 
IDENT
;

312 
i
 = 0; i < 
limô
; i+=7) {

313 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

314 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

315 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

316 
acc
 =ác¯
OP
 
d©a
[
i
+6];

320 ; 
i
 < 
Àngth
; i++) {

321 
acc
 =ác¯
OP
 
d©a
[
i
];

323 *
de°
 = 
acc
;

324 
	}
}

327 
	guƒﬁl8a_des¸
[] = "unroll8a: Array code, unrolled by 8";

328 
	$uƒﬁl8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

330 
i
;

331 
Àngth
 = 
	`vec_Àngth
(
v
);

332 
limô
 = 
Àngth
-7;

333 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

334 
d©a_t
 
acc
 = 
IDENT
;

337 
i
 = 0; i < 
limô
; i+=8) {

338 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

339 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

340 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

341 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

345 ; 
i
 < 
Àngth
; i++) {

346 
acc
 =ác¯
OP
 
d©a
[
i
];

348 *
de°
 = 
acc
;

349 
	}
}

351 
	guƒﬁl9a_des¸
[] = "unroll9a: Array code, unrolled by 9";

352 
	$uƒﬁl9a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

354 
i
;

355 
Àngth
 = 
	`vec_Àngth
(
v
);

356 
limô
 = 
Àngth
-8;

357 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

358 
d©a_t
 
acc
 = 
IDENT
;

361 
i
 = 0; i < 
limô
; i+=9) {

362 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

363 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

364 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

365 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

366 
acc
 =ác¯
OP
 
d©a
[
i
+8];

370 ; 
i
 < 
Àngth
; i++) {

371 
acc
 =ác¯
OP
 
d©a
[
i
];

373 *
de°
 = 
acc
;

374 
	}
}

376 
	guƒﬁl10a_des¸
[] = "unroll10a: Array code, unrolled by 10";

377 
	$uƒﬁl10a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

379 
i
;

380 
Àngth
 = 
	`vec_Àngth
(
v
);

381 
limô
 = 
Àngth
-9;

382 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

383 
d©a_t
 
acc
 = 
IDENT
;

386 
i
 = 0; i < 
limô
; i+=10) {

387 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

388 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

389 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

390 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

391 
acc
 =ác¯
OP
 
d©a
[
i
+8] OP data[i+9];

395 ; 
i
 < 
Àngth
; i++) {

396 
acc
 =ác¯
OP
 
d©a
[
i
];

398 *
de°
 = 
acc
;

399 
	}
}

402 
	guƒﬁl16a_des¸
[] = "unroll16a: Array code, unrolled by 16";

403 
	$uƒﬁl16a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

405 
i
;

406 
Àngth
 = 
	`vec_Àngth
(
v
);

407 
limô
 = 
Àngth
-15;

408 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

409 
d©a_t
 
acc
 = 
IDENT
;

412 
i
 = 0; i < 
limô
; i+=16) {

413 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

414 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

415 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

416 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

417 
acc
 =ác¯
OP
 
d©a
[
i
+8] OP data[i+9];

418 
acc
 =ác¯
OP
 
d©a
[
i
+10] OP data[i+11];

419 
acc
 =ác¯
OP
 
d©a
[
i
+12] OP data[i+13];

420 
acc
 =ác¯
OP
 
d©a
[
i
+14] OP data[i+15];

424 ; 
i
 < 
Àngth
; i++) {

425 
acc
 =ác¯
OP
 
d©a
[
i
];

427 *
de°
 = 
acc
;

428 
	}
}

430 
	guƒﬁl2_des¸
[] = "unroll2: Pointer code, unrolled by 2";

431 
	$uƒﬁl2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

433 
Àngth
 = 
	`vec_Àngth
(
v
);

434 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

435 
ovî
 = 
Àngth
%2;

436 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

437 
d©a_t
 
acc
 = 
IDENT
;

439 
d©a
 < 
díd
) {

440 
acc
 =ác¯
OP
 
d©a
[0];

441 
acc
 =ác¯
OP
 
d©a
[1];

442 
d©a
 += 2;

444 
díd
 +
ovî
;

445 
d©a
 < 
díd
) {

446 
acc
 =ác¯
OP
 *
d©a
;

447 
d©a
 ++;

449 *
de°
 = 
acc
;

450 
	}
}

453 
	guƒﬁl3_des¸
[] = "unroll3: Pointer code, unrolled by 3";

454 
	$uƒﬁl3_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

456 
Àngth
 = 
	`vec_Àngth
(
v
);

457 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

458 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-2;

459 
d©a_t
 
acc
 = 
IDENT
;

461 
d©a
 < 
díd
) {

462 
acc
 =ác¯
OP
 
d©a
[0];

463 
acc
 =ác¯
OP
 
d©a
[1];

464 
acc
 =ác¯
OP
 
d©a
[2];

465 
d©a
 += 3;

467 
díd
 += 2;

468 
d©a
 < 
díd
) {

469 
acc
 =ác¯
OP
 *
d©a
;

470 
d©a
 ++;

472 *
de°
 = 
acc
;

473 
	}
}

476 
	guƒﬁl4_des¸
[] = "unroll4: Pointer code, unrolled by 4";

477 
	$uƒﬁl4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

479 
Àngth
 = 
	`vec_Àngth
(
v
);

480 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

481 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-3;

482 
d©a_t
 
acc
 = 
IDENT
;

484 
d©a
 < 
díd
) {

485 
acc
 =ác¯
OP
 
d©a
[0];

486 
acc
 =ác¯
OP
 
d©a
[1];

487 
acc
 =ác¯
OP
 
d©a
[2];

488 
acc
 =ác¯
OP
 
d©a
[3];

489 
d©a
 += 4;

491 
díd
 += 3;

492 
d©a
 < 
díd
) {

493 
acc
 =ác¯
OP
 *
d©a
;

494 
d©a
 ++;

496 *
de°
 = 
acc
;

497 
	}
}

499 
	guƒﬁl8_des¸
[] = "unroll8: Pointer code, unrolled by 8";

500 
	$uƒﬁl8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

502 
Àngth
 = 
	`vec_Àngth
(
v
);

503 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

504 
ovî
 = 
Àngth
%8;

505 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

506 
d©a_t
 
acc
 = 
IDENT
;

508 
d©a
 < 
díd
) {

509 
acc
 =ác¯
OP
 
d©a
[0];

510 
acc
 =ác¯
OP
 
d©a
[1];

511 
acc
 =ác¯
OP
 
d©a
[2];

512 
acc
 =ác¯
OP
 
d©a
[3];

513 
acc
 =ác¯
OP
 
d©a
[4];

514 
acc
 =ác¯
OP
 
d©a
[5];

515 
acc
 =ác¯
OP
 
d©a
[6];

516 
acc
 =ác¯
OP
 
d©a
[7];

517 
d©a
 += 8;

519 
díd
 +
ovî
;

520 
d©a
 < 
díd
) {

521 
acc
 =ác¯
OP
 *
d©a
;

522 
d©a
 ++;

524 *
de°
 = 
acc
;

525 
	}
}

527 
	guƒﬁl16_des¸
[] = "unroll16: Pointer code, unrolled by 16";

528 
	$uƒﬁl16_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

530 
Àngth
 = 
	`vec_Àngth
(
v
);

531 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

532 
ovî
 = 
Àngth
%16;

533 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

534 
d©a_t
 
acc
 = 
IDENT
;

536 
d©a
 < 
díd
) {

537 
acc
 =ác¯
OP
 
d©a
[0];

538 
acc
 =ác¯
OP
 
d©a
[1];

539 
acc
 =ác¯
OP
 
d©a
[2];

540 
acc
 =ác¯
OP
 
d©a
[3];

541 
acc
 =ác¯
OP
 
d©a
[4];

542 
acc
 =ác¯
OP
 
d©a
[5];

543 
acc
 =ác¯
OP
 
d©a
[6];

544 
acc
 =ác¯
OP
 
d©a
[7];

545 
acc
 =ác¯
OP
 
d©a
[8];

546 
acc
 =ác¯
OP
 
d©a
[9];

547 
acc
 =ác¯
OP
 
d©a
[10];

548 
acc
 =ác¯
OP
 
d©a
[11];

549 
acc
 =ác¯
OP
 
d©a
[12];

550 
acc
 =ác¯
OP
 
d©a
[13];

551 
acc
 =ác¯
OP
 
d©a
[14];

552 
acc
 =ác¯
OP
 
d©a
[15];

553 
d©a
 += 16;

555 
díd
 +
ovî
;

556 
d©a
 < 
díd
) {

557 
acc
 =ác¯
OP
 *
d©a
;

558 
d©a
 ++;

560 *
de°
 = 
acc
;

561 
	}
}

564 
	gcomböe6_des¸
[] = "combine6: Array code, unrolled by 2, Superscalar x2";

567 
	$comböe6
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

569 
i
;

570 
Àngth
 = 
	`vec_Àngth
(
v
);

571 
limô
 = 
Àngth
-1;

572 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

573 
d©a_t
 
acc0
 = 
IDENT
;

574 
d©a_t
 
acc1
 = 
IDENT
;

577 
i
 = 0; i < 
limô
; i+=2) {

578 
acc0
 =ácc0 
OP
 
d©a
[
i
];

579 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

583 ; 
i
 < 
Àngth
; i++) {

584 
acc0
 =ácc0 
OP
 
d©a
[
i
];

586 *
de°
 = 
acc0
 
OP
 
acc1
;

587 
	}
}

590 
	guƒﬁl4x2a_des¸
[] = "unroll4x2a: Array code, unrolled by 4, Superscalar x2";

591 
	$uƒﬁl4x2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

593 
i
;

594 
Àngth
 = 
	`vec_Àngth
(
v
);

595 
limô
 = 
Àngth
-3;

596 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

597 
d©a_t
 
acc0
 = 
IDENT
;

598 
d©a_t
 
acc1
 = 
IDENT
;

601 
i
 = 0; i < 
limô
; i+=4) {

602 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

603 
acc0
 =ácc0 
OP
 
d©a
[
i
+2]; 
acc1
 =ácc1 OP data[i+3];

607 ; 
i
 < 
Àngth
; i++) {

608 
acc0
 =ácc0 
OP
 
d©a
[
i
];

610 *
de°
 = 
acc0
 
OP
 
acc1
;

611 
	}
}

614 
	guƒﬁl8x2a_des¸
[] = "unroll8x2a: Array code, unrolled by 8, Superscalar x2";

615 
	$uƒﬁl8x2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

617 
i
;

618 
Àngth
 = 
	`vec_Àngth
(
v
);

619 
limô
 = 
Àngth
-7;

620 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

621 
d©a_t
 
acc0
 = 
IDENT
;

622 
d©a_t
 
acc1
 = 
IDENT
;

625 
i
 = 0; i < 
limô
; i+=8) {

626 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

627 
acc0
 =ácc0 
OP
 
d©a
[
i
+2]; 
acc1
 =ácc1 OP data[i+3];

628 
acc0
 =ácc0 
OP
 
d©a
[
i
+4]; 
acc1
 =ácc1 OP data[i+5];

629 
acc0
 =ácc0 
OP
 
d©a
[
i
+6]; 
acc1
 =ácc1 OP data[i+7];

633 ; 
i
 < 
Àngth
; i++) {

634 
acc0
 =ácc0 
OP
 
d©a
[
i
];

636 *
de°
 = 
acc0
 
OP
 
acc1
;

637 
	}
}

639 
	guƒﬁl3x3a_des¸
[] = "unroll3x3a: Array code, unrolled by 3, Superscalar x3";

640 
	$uƒﬁl3x3a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

642 
i
;

643 
Àngth
 = 
	`vec_Àngth
(
v
);

644 
limô
 = 
Àngth
-2;

645 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

646 
d©a_t
 
acc0
 = 
IDENT
;

647 
d©a_t
 
acc1
 = 
IDENT
;

648 
d©a_t
 
acc2
 = 
IDENT
;

651 
i
 = 0; i < 
limô
; i+=3) {

652 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

653 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

657 ; 
i
 < 
Àngth
; i++) {

658 
acc0
 =ácc0 
OP
 
d©a
[
i
];

660 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
;

661 
	}
}

664 
	guƒﬁl4x4a_des¸
[] = "unroll4x4a: Array code, unrolled by 4, Superscalar x4";

665 
	$uƒﬁl4x4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

667 
i
;

668 
Àngth
 = 
	`vec_Àngth
(
v
);

669 
limô
 = 
Àngth
-3;

670 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

671 
d©a_t
 
acc0
 = 
IDENT
;

672 
d©a_t
 
acc1
 = 
IDENT
;

673 
d©a_t
 
acc2
 = 
IDENT
;

674 
d©a_t
 
acc3
 = 
IDENT
;

677 
i
 = 0; i < 
limô
; i+=4) {

678 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

679 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

683 ; 
i
 < 
Àngth
; i++) {

684 
acc0
 =ácc0 
OP
 
d©a
[
i
];

686 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
);

688 
	}
}

690 
	guƒﬁl8x4a_des¸
[] = "unroll8x4a: Array code, unrolled by 8, Superscalar x4";

691 
	$uƒﬁl8x4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

693 
i
;

694 
Àngth
 = 
	`vec_Àngth
(
v
);

695 
limô
 = 
Àngth
-7;

696 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

697 
d©a_t
 
acc0
 = 
IDENT
;

698 
d©a_t
 
acc1
 = 
IDENT
;

699 
d©a_t
 
acc2
 = 
IDENT
;

700 
d©a_t
 
acc3
 = 
IDENT
;

703 
i
 = 0; i < 
limô
; i+=8) {

704 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

705 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

706 
acc0
 =ácc0 
OP
 
d©a
[
i
+4]; 
acc1
 =ácc1 OP data[i+5];

707 
acc2
 =ácc2 
OP
 
d©a
[
i
+6]; 
acc3
 =ácc3 OP data[i+7];

711 ; 
i
 < 
Àngth
; i++) {

712 
acc0
 =ácc0 
OP
 
d©a
[
i
];

714 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
 OP 
acc3
;

715 
	}
}

717 
	guƒﬁl12x6a_des¸
[] = "unroll2x6a: Array code, unrolled by 12, Superscalar x6";

718 
	$uƒﬁl12x6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

720 
i
;

721 
Àngth
 = 
	`vec_Àngth
(
v
);

722 
limô
 = 
Àngth
-11;

723 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

724 
d©a_t
 
acc0
 = 
IDENT
;

725 
d©a_t
 
acc1
 = 
IDENT
;

726 
d©a_t
 
acc2
 = 
IDENT
;

727 
d©a_t
 
acc3
 = 
IDENT
;

728 
d©a_t
 
acc4
 = 
IDENT
;

729 
d©a_t
 
acc5
 = 
IDENT
;

732 
i
 = 0; i < 
limô
; i+=12) {

733 
acc0
 =ácc0 
OP
 
d©a
[
i
];

734 
acc0
 =ácc0 
OP
 
d©a
[
i
+6];

735 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

736 
acc1
 =ácc1 
OP
 
d©a
[
i
+7];

737 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

738 
acc2
 =ácc2 
OP
 
d©a
[
i
+8];

739 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

740 
acc3
 =ácc3 
OP
 
d©a
[
i
+9];

741 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

742 
acc4
 =ácc4 
OP
 
d©a
[
i
+10];

743 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

744 
acc5
 =ácc5 
OP
 
d©a
[
i
+11];

748 ; 
i
 < 
Àngth
; i++) {

749 
acc0
 =ácc0 
OP
 
d©a
[
i
];

751 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
);

752 
	}
}

754 
	guƒﬁl12x12a_des¸
[] = "unroll12x12a: Array code, unrolled by 12, Superscalar x12";

755 
	$uƒﬁl12x12a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

757 
i
;

758 
Àngth
 = 
	`vec_Àngth
(
v
);

759 
limô
 = 
Àngth
-11;

760 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

761 
d©a_t
 
acc0
 = 
IDENT
;

762 
d©a_t
 
acc1
 = 
IDENT
;

763 
d©a_t
 
acc2
 = 
IDENT
;

764 
d©a_t
 
acc3
 = 
IDENT
;

765 
d©a_t
 
acc4
 = 
IDENT
;

766 
d©a_t
 
acc5
 = 
IDENT
;

767 
d©a_t
 
acc6
 = 
IDENT
;

768 
d©a_t
 
acc7
 = 
IDENT
;

769 
d©a_t
 
acc8
 = 
IDENT
;

770 
d©a_t
 
acc9
 = 
IDENT
;

771 
d©a_t
 
acc10
 = 
IDENT
;

772 
d©a_t
 
acc11

IDENT
;

775 
i
 = 0; i < 
limô
; i+=12) {

776 
acc0
 =ácc0 
OP
 
d©a
[
i
];

777 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

778 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

779 
acc7
 =ácc7 
OP
 
d©a
[
i
+7];

780 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

781 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

782 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

783 
acc9
 =ácc9 
OP
 
d©a
[
i
+9];

784 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

785 
acc10
 =ácc10 
OP
 
d©a
[
i
+10];

786 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

787 
acc11
 =ácc11 
OP
 
d©a
[
i
+11];

791 ; 
i
 < 
Àngth
; i++) {

792 
acc0
 =ácc0 
OP
 
d©a
[
i
];

794 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
)

795 
	`OP
 (
acc6
 
OP
 
acc7
ËOP (
acc8
 OP 
acc9
ËOP (
acc10
 OP 
acc11
);

796 
	}
}

798 
	guƒﬁl16x16a_des¸
[] = "unroll16x16a: Array code, unrolled by 16, Superscalar x16";

799 
	$uƒﬁl16x16a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

801 
i
;

802 
Àngth
 = 
	`vec_Àngth
(
v
);

803 
limô
 = 
Àngth
-15;

804 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

805 
d©a_t
 
acc0
 = 
IDENT
;

806 
d©a_t
 
acc1
 = 
IDENT
;

807 
d©a_t
 
acc2
 = 
IDENT
;

808 
d©a_t
 
acc3
 = 
IDENT
;

809 
d©a_t
 
acc4
 = 
IDENT
;

810 
d©a_t
 
acc5
 = 
IDENT
;

811 
d©a_t
 
acc6
 = 
IDENT
;

812 
d©a_t
 
acc7
 = 
IDENT
;

813 
d©a_t
 
acc8
 = 
IDENT
;

814 
d©a_t
 
acc9
 = 
IDENT
;

815 
d©a_t
 
acc10
 = 
IDENT
;

816 
d©a_t
 
acc11

IDENT
;

817 
d©a_t
 
acc12

IDENT
;

818 
d©a_t
 
acc13

IDENT
;

819 
d©a_t
 
acc14

IDENT
;

820 
d©a_t
 
acc15

IDENT
;

823 
i
 = 0; i < 
limô
; i+=16) {

824 
acc0
 =ácc0 
OP
 
d©a
[
i
];

825 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

826 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

827 
acc7
 =ácc7 
OP
 
d©a
[
i
+7];

828 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

829 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

830 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

831 
acc9
 =ácc9 
OP
 
d©a
[
i
+9];

832 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

833 
acc10
 =ácc10 
OP
 
d©a
[
i
+10];

834 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

835 
acc11
 =ácc11 
OP
 
d©a
[
i
+11];

836 
acc12
 =ácc12 
OP
 
d©a
[
i
+12];

837 
acc13
 =ácc13 
OP
 
d©a
[
i
+13];

838 
acc14
 =ácc14 
OP
 
d©a
[
i
+14];

839 
acc15
 =ácc15 
OP
 
d©a
[
i
+15];

843 ; 
i
 < 
Àngth
; i++) {

844 
acc0
 =ácc0 
OP
 
d©a
[
i
];

846 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
))

847 
	`OP
 ((
acc6
 
OP
 
acc7
ËOP (
acc8
 OP 
acc9
ËOP (
acc10
 OP 
acc11
))

848 
	`OP
 ((
acc12
 
OP
 
acc13
ËOP (
acc14
 OP 
acc15
));

849 
	}
}

851 
	guƒﬁl20x20a_des¸
[] = "unroll20x20a: Array code, unrolled by 20, Superscalar x20";

852 
	$uƒﬁl20x20a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

854 
i
;

855 
Àngth
 = 
	`vec_Àngth
(
v
);

856 
limô
 = 
Àngth
-19;

857 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

858 
d©a_t
 
acc0
 = 
IDENT
;

859 
d©a_t
 
acc1
 = 
IDENT
;

860 
d©a_t
 
acc2
 = 
IDENT
;

861 
d©a_t
 
acc3
 = 
IDENT
;

862 
d©a_t
 
acc4
 = 
IDENT
;

863 
d©a_t
 
acc5
 = 
IDENT
;

864 
d©a_t
 
acc6
 = 
IDENT
;

865 
d©a_t
 
acc7
 = 
IDENT
;

866 
d©a_t
 
acc8
 = 
IDENT
;

867 
d©a_t
 
acc9
 = 
IDENT
;

868 
d©a_t
 
acc10
 = 
IDENT
;

869 
d©a_t
 
acc11

IDENT
;

870 
d©a_t
 
acc12

IDENT
;

871 
d©a_t
 
acc13

IDENT
;

872 
d©a_t
 
acc14

IDENT
;

873 
d©a_t
 
acc15

IDENT
;

874 
d©a_t
 
acc16

IDENT
;

875 
d©a_t
 
acc17

IDENT
;

876 
d©a_t
 
acc18

IDENT
;

877 
d©a_t
 
acc19

IDENT
;

880 
i
 = 0; i < 
limô
; i+=20) {

881 
acc0
 =ácc0 
OP
 
d©a
[
i
];

882 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

883 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

884 
acc7
 =ácc7 
OP
 
d©a
[
i
+7];

885 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

886 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

887 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

888 
acc9
 =ácc9 
OP
 
d©a
[
i
+9];

889 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

890 
acc10
 =ácc10 
OP
 
d©a
[
i
+10];

891 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

892 
acc11
 =ácc11 
OP
 
d©a
[
i
+11];

893 
acc12
 =ácc12 
OP
 
d©a
[
i
+12];

894 
acc13
 =ácc13 
OP
 
d©a
[
i
+13];

895 
acc14
 =ácc14 
OP
 
d©a
[
i
+14];

896 
acc15
 =ácc15 
OP
 
d©a
[
i
+15];

897 
acc16
 =ácc16 
OP
 
d©a
[
i
+16];

898 
acc17
 =ácc17 
OP
 
d©a
[
i
+17];

899 
acc18
 =ácc18 
OP
 
d©a
[
i
+18];

900 
acc19
 =ácc19 
OP
 
d©a
[
i
+19];

904 ; 
i
 < 
Àngth
; i++) {

905 
acc0
 =ácc0 
OP
 
d©a
[
i
];

907 *
de°
 =

908 (((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
))

909 
	`OP
 ((
acc6
 
OP
 
acc7
ËOP (
acc8
 OP 
acc9
ËOP (
acc10
 OP 
acc11
)))

910 
OP


911 (((
acc12
 
OP
 
acc13
Ë
	`OP
 (
acc14
 OP 
acc15
)ËOP ((
acc16
 OP 
acc17
ËOP (
acc18
 OP 
acc19
)));

912 
	}
}

915 
	guƒﬁl5x5a_des¸
[] = "unroll5x5a: Array code, unrolled by 5, Superscalar x5";

916 
	$uƒﬁl5x5a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

918 
i
;

919 
Àngth
 = 
	`vec_Àngth
(
v
);

920 
limô
 = 
Àngth
-4;

921 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

922 
d©a_t
 
acc0
 = 
IDENT
;

923 
d©a_t
 
acc1
 = 
IDENT
;

924 
d©a_t
 
acc2
 = 
IDENT
;

925 
d©a_t
 
acc3
 = 
IDENT
;

926 
d©a_t
 
acc4
 = 
IDENT
;

929 
i
 = 0; i < 
limô
; i+=5) {

930 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

931 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

932 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

936 ; 
i
 < 
Àngth
; i++) {

937 
acc0
 =ácc0 
OP
 
d©a
[
i
];

939 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
 OP 
acc4
);

940 
	}
}

942 
	guƒﬁl6x6a_des¸
[] = "unroll6x6a: Array code, unrolled by 6, Superscalar x6";

943 
	$uƒﬁl6x6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

945 
i
;

946 
Àngth
 = 
	`vec_Àngth
(
v
);

947 
limô
 = 
Àngth
-5;

948 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

949 
d©a_t
 
acc0
 = 
IDENT
;

950 
d©a_t
 
acc1
 = 
IDENT
;

951 
d©a_t
 
acc2
 = 
IDENT
;

952 
d©a_t
 
acc3
 = 
IDENT
;

953 
d©a_t
 
acc4
 = 
IDENT
;

954 
d©a_t
 
acc5
 = 
IDENT
;

957 
i
 = 0; i < 
limô
; i+=6) {

958 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

959 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

960 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

964 ; 
i
 < 
Àngth
; i++) {

965 
acc0
 =ácc0 
OP
 
d©a
[
i
];

967 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
);

968 
	}
}

970 
	guƒﬁl7x7a_des¸
[] = "unroll7x7a: Array code, unrolled by 7, Superscalar x7";

971 
	$uƒﬁl7x7a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

973 
i
;

974 
Àngth
 = 
	`vec_Àngth
(
v
);

975 
limô
 = 
Àngth
-6;

976 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

977 
d©a_t
 
acc0
 = 
IDENT
;

978 
d©a_t
 
acc1
 = 
IDENT
;

979 
d©a_t
 
acc2
 = 
IDENT
;

980 
d©a_t
 
acc3
 = 
IDENT
;

981 
d©a_t
 
acc4
 = 
IDENT
;

982 
d©a_t
 
acc5
 = 
IDENT
;

983 
d©a_t
 
acc6
 = 
IDENT
;

986 
i
 = 0; i < 
limô
; i+=7) {

987 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

988 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

989 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

990 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

994 ; 
i
 < 
Àngth
; i++) {

995 
acc0
 =ácc0 
OP
 
d©a
[
i
];

997 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP (
acc4
 OP 
acc5
 OP 
acc6
);

998 
	}
}

1000 
	guƒﬁl8x8a_des¸
[] = "unroll8x8a: Array code, unrolled by 8, Superscalar x8";

1001 
	$uƒﬁl8x8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1003 
i
;

1004 
Àngth
 = 
	`vec_Àngth
(
v
);

1005 
limô
 = 
Àngth
-7;

1006 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1007 
d©a_t
 
acc0
 = 
IDENT
;

1008 
d©a_t
 
acc1
 = 
IDENT
;

1009 
d©a_t
 
acc2
 = 
IDENT
;

1010 
d©a_t
 
acc3
 = 
IDENT
;

1011 
d©a_t
 
acc4
 = 
IDENT
;

1012 
d©a_t
 
acc5
 = 
IDENT
;

1013 
d©a_t
 
acc6
 = 
IDENT
;

1014 
d©a_t
 
acc7
 = 
IDENT
;

1017 
i
 = 0; i < 
limô
; i+=8) {

1018 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

1019 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

1020 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

1021 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

1025 ; 
i
 < 
Àngth
; i++) {

1026 
acc0
 =ácc0 
OP
 
d©a
[
i
];

1028 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP ((
acc4
 OP 
acc5
ËOP (
acc6
 OP 
acc7
));

1029 
	}
}

1031 
	guƒﬁl9x9a_des¸
[] = "unroll9x9a: Array code, unrolled by 9, Superscalar x9";

1032 
	$uƒﬁl9x9a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1034 
i
;

1035 
Àngth
 = 
	`vec_Àngth
(
v
);

1036 
limô
 = 
Àngth
-8;

1037 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1038 
d©a_t
 
acc0
 = 
IDENT
;

1039 
d©a_t
 
acc1
 = 
IDENT
;

1040 
d©a_t
 
acc2
 = 
IDENT
;

1041 
d©a_t
 
acc3
 = 
IDENT
;

1042 
d©a_t
 
acc4
 = 
IDENT
;

1043 
d©a_t
 
acc5
 = 
IDENT
;

1044 
d©a_t
 
acc6
 = 
IDENT
;

1045 
d©a_t
 
acc7
 = 
IDENT
;

1046 
d©a_t
 
acc8
 = 
IDENT
;

1049 
i
 = 0; i < 
limô
; i+=9) {

1050 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

1051 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

1052 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

1053 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

1054 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

1058 ; 
i
 < 
Àngth
; i++) {

1059 
acc0
 =ácc0 
OP
 
d©a
[
i
];

1061 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP ((
acc4
 OP 
acc5
ËOP (
acc6
 OP 
acc7
ËOP 
acc8
);

1062 
	}
}

1064 
	guƒﬁl10x10a_des¸
[] = "unroll10x10a: Array code, unrolled by 10, Superscalar x10";

1065 
	$uƒﬁl10x10a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1067 
i
;

1068 
Àngth
 = 
	`vec_Àngth
(
v
);

1069 
limô
 = 
Àngth
-9;

1070 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1071 
d©a_t
 
acc0
 = 
IDENT
;

1072 
d©a_t
 
acc1
 = 
IDENT
;

1073 
d©a_t
 
acc2
 = 
IDENT
;

1074 
d©a_t
 
acc3
 = 
IDENT
;

1075 
d©a_t
 
acc4
 = 
IDENT
;

1076 
d©a_t
 
acc5
 = 
IDENT
;

1077 
d©a_t
 
acc6
 = 
IDENT
;

1078 
d©a_t
 
acc7
 = 
IDENT
;

1079 
d©a_t
 
acc8
 = 
IDENT
;

1080 
d©a_t
 
acc9
 = 
IDENT
;

1083 
i
 = 0; i < 
limô
; i+=10) {

1084 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

1085 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

1086 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

1087 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

1088 
acc8
 =ácc8 
OP
 
d©a
[
i
+8]; 
acc9
 =ácc9 OP data[i+9];

1092 ; 
i
 < 
Àngth
; i++) {

1093 
acc0
 =ácc0 
OP
 
d©a
[
i
];

1095 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)) OP

1096 ((
acc4
 
OP
 
acc5
Ë
	`OP
 (
acc6
 OP 
acc7
)) OP

1097 (
acc8
 
OP
 
acc9
);

1098 
	}
}

1100 
	guƒﬁlx2as_des¸
[] = "unrollx2as: Array code, Unroll x2, Superscalar x2,Çoninterleaved";

1101 
	$uƒﬁlx2as_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1103 
i
;

1104 
Àngth
 = 
	`vec_Àngth
(
v
);

1105 
limô
 = 
Àngth
/2;

1106 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1107 
d©a_t
 *
d©a2
 = 
d©a
+
limô
;

1108 
d©a_t
 
acc0
 = 
IDENT
;

1109 
d©a_t
 
acc1
 = 
IDENT
;

1112 
i
 = 0; i < 
limô
; i++) {

1113 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP 
d©a2
[i];

1117 
i
 = 
limô
*2; i < 
Àngth
; i++) {

1118 
acc1
 =ácc1 
OP
 
d©a
[
i
];

1120 *
de°
 = 
acc0
 
OP
 
acc1
;

1121 
	}
}

1123 
	guƒﬁl4x2as_des¸
[] = "unroll4x2as: Array code, Unroll x4, Superscalar x2,Çoninterleaved";

1124 
	$uƒﬁl4x2as_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1126 
i
;

1127 
Àngth
 = 
	`vec_Àngth
(
v
);

1128 
limô
 = 
Àngth
/2;

1129 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1130 
d©a_t
 *
d©a2
 = 
d©a
+
limô
;

1131 
d©a_t
 
acc0
 = 
IDENT
;

1132 
d©a_t
 
acc1
 = 
IDENT
;

1135 
i
 = 0; i < 
limô
; i++) {

1136 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP 
d©a2
[i];

1140 
i
 = 
limô
*2; i < 
Àngth
; i++) {

1141 
acc1
 =ácc1 
OP
 
d©a
[
i
];

1143 *
de°
 = 
acc0
 
OP
 
acc1
;

1144 
	}
}

1148 
	guƒﬁl8x2_des¸
[] = "unroll8x2: Pointer code, unrolled by 8, Superscalar x2";

1149 
	$uƒﬁl8x2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1151 
Àngth
 = 
	`vec_Àngth
(
v
);

1152 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1153 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1154 
d©a_t
 
acc0
 = 
IDENT
;

1155 
d©a_t
 
acc1
 = 
IDENT
;

1157 
d©a
 < 
díd
) {

1158 
acc0
 =ácc0 
OP
 
d©a
[0];

1159 
acc1
 =ácc1 
OP
 
d©a
[1];

1160 
acc0
 =ácc0 
OP
 
d©a
[2];

1161 
acc1
 =ácc1 
OP
 
d©a
[3];

1162 
acc0
 =ácc0 
OP
 
d©a
[4];

1163 
acc1
 =ácc1 
OP
 
d©a
[5];

1164 
acc0
 =ácc0 
OP
 
d©a
[6];

1165 
acc1
 =ácc1 
OP
 
d©a
[7];

1166 
d©a
 += 8;

1168 
díd
 += 7;

1169 
d©a
 < 
díd
) {

1170 
acc0
 =ácc0 
OP
 *
d©a
;

1171 
d©a
 ++;

1173 *
de°
 = 
acc0
 
OP
 
acc1
;

1174 
	}
}

1176 
	guƒﬁl9x3_des¸
[] = "unroll9x3: Pointer code, unrolled by 9, Superscalar x3";

1177 
	$uƒﬁl9x3_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1179 
Àngth
 = 
	`vec_Àngth
(
v
);

1180 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1181 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-8;

1182 
d©a_t
 
acc0
 = 
IDENT
;

1183 
d©a_t
 
acc1
 = 
IDENT
;

1184 
d©a_t
 
acc2
 = 
IDENT
;

1186 
d©a
 < 
díd
) {

1187 
acc0
 =ácc0 
OP
 
d©a
[0];

1188 
acc1
 =ácc1 
OP
 
d©a
[1];

1189 
acc2
 =ácc2 
OP
 
d©a
[2];

1190 
acc0
 =ácc0 
OP
 
d©a
[3];

1191 
acc1
 =ácc1 
OP
 
d©a
[4];

1192 
acc2
 =ácc2 
OP
 
d©a
[5];

1193 
acc0
 =ácc0 
OP
 
d©a
[6];

1194 
acc1
 =ácc1 
OP
 
d©a
[7];

1195 
acc2
 =ácc2 
OP
 
d©a
[8];

1196 
d©a
 += 9;

1198 
díd
 += 8;

1199 
d©a
 < 
díd
) {

1200 
acc0
 =ácc0 
OP
 *
d©a
;

1201 
d©a
 ++;

1203 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
;

1204 
	}
}

1207 
	guƒﬁl8x4_des¸
[] = "unroll8x4: Pointer code, unrolled by 8, Superscalar x4";

1208 
	$uƒﬁl8x4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1210 
Àngth
 = 
	`vec_Àngth
(
v
);

1211 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1212 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1213 
d©a_t
 
acc3
 = 
IDENT
;

1214 
d©a_t
 
acc0
 = 
IDENT
;

1215 
d©a_t
 
acc1
 = 
IDENT
;

1216 
d©a_t
 
acc2
 = 
IDENT
;

1218 
d©a
 < 
díd
) {

1219 
acc3
 =ácc3 
OP
 
d©a
[0];

1220 
acc0
 =ácc0 
OP
 
d©a
[1];

1221 
acc1
 =ácc1 
OP
 
d©a
[2];

1222 
acc2
 =ácc2 
OP
 
d©a
[3];

1223 
acc3
 =ácc3 
OP
 
d©a
[4];

1224 
acc0
 =ácc0 
OP
 
d©a
[5];

1225 
acc1
 =ácc1 
OP
 
d©a
[6];

1226 
acc2
 =ácc2 
OP
 
d©a
[7];

1227 
d©a
 += 8;

1229 
díd
 += 7;

1230 
d©a
 < 
díd
) {

1231 
acc3
 =ácc3 
OP
 *
d©a
;

1232 
d©a
 ++;

1234 *
de°
 = 
acc3
 
OP
 
acc0
 OP 
acc1
 OP 
acc2
;

1235 
	}
}

1237 
	guƒﬁl8x8_des¸
[] = "unroll8x8: Pointer code, unrolled by 8, Superscalar x8";

1238 
	$uƒﬁl8x8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1240 
Àngth
 = 
	`vec_Àngth
(
v
);

1241 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1242 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1243 
d©a_t
 
acc4
 = 
IDENT
;

1244 
d©a_t
 
acc5
 = 
IDENT
;

1245 
d©a_t
 
acc6
 = 
IDENT
;

1246 
d©a_t
 
acc7
 = 
IDENT
;

1247 
d©a_t
 
acc3
 = 
IDENT
;

1248 
d©a_t
 
acc0
 = 
IDENT
;

1249 
d©a_t
 
acc1
 = 
IDENT
;

1250 
d©a_t
 
acc2
 = 
IDENT
;

1252 
d©a
 < 
díd
) {

1253 
acc0
 =ácc0 
OP
 
d©a
[0];

1254 
acc1
 =ácc1 
OP
 
d©a
[1];

1255 
acc2
 =ácc2 
OP
 
d©a
[2];

1256 
acc3
 =ácc3 
OP
 
d©a
[3];

1257 
acc4
 =ácc4 
OP
 
d©a
[4];

1258 
acc6
 = 
acc5
 
OP
 
d©a
[5];

1259 
acc6
 =ácc6 
OP
 
d©a
[6];

1260 
acc7
 =ácc7 
OP
 
d©a
[7];

1261 
d©a
 += 8;

1263 
díd
 += 7;

1264 
d©a
 < 
díd
) {

1265 
acc0
 =ácc0 
OP
 *
d©a
;

1266 
d©a
 ++;

1268 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
 OP 
acc3
 OP 
acc4
 OP 
acc5
 OP 
acc6
 OP 
acc7
;

1269 
	}
}

1271 
	gcomböe7_des¸
[] = "combine7: Array code, unrolled by 2, differentássociativity";

1274 
	$comböe7
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1276 
i
;

1277 
Àngth
 = 
	`vec_Àngth
(
v
);

1278 
limô
 = 
Àngth
-1;

1279 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1280 
d©a_t
 
acc
 = 
IDENT
;

1283 
i
 = 0; i < 
limô
; i+=2) {

1285 
acc
 =ác¯
	`OP
 (
d©a
[
i
] 
OP
 data[i+1]);

1290 ; 
i
 < 
Àngth
; i++) {

1291 
acc
 =ác¯
OP
 
d©a
[
i
];

1293 *
de°
 = 
acc
;

1294 
	}
}

1297 
	guƒﬁl3Ø_des¸
[] = "unroll3aa: Array code, unrolled by 3, Different Associativity";

1298 
	$uƒﬁl3Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1300 
i
;

1301 
Àngth
 = 
	`vec_Àngth
(
v
);

1302 
limô
 = 
Àngth
-2;

1303 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1304 
d©a_t
 
acc
 = 
IDENT
;

1307 
i
 = 0; i < 
limô
; i+=3) {

1308 
acc
 =ác¯
	`OP
 (
d©a
[
i
] 
OP
 data[i+1] OP data[i+2]);

1312 ; 
i
 < 
Àngth
; i++) {

1313 
acc
 =ác¯
OP
 
d©a
[
i
];

1315 *
de°
 = 
acc
;

1316 
	}
}

1318 
	guƒﬁl4Ø_des¸
[] = "unroll4aa: Array code, unrolled by 4, Different Associativity";

1319 
	$uƒﬁl4Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1321 
i
;

1322 
Àngth
 = 
	`vec_Àngth
(
v
);

1323 
limô
 = 
Àngth
-3;

1324 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1325 
d©a_t
 
acc
 = 
IDENT
;

1328 
i
 = 0; i < 
limô
; i+=4) {

1329 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1330 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1331 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
);

1335 ; 
i
 < 
Àngth
; i++) {

1336 
acc
 =ác¯
OP
 
d©a
[
i
];

1338 *
de°
 = 
acc
;

1339 
	}
}

1341 
	guƒﬁl5Ø_des¸
[] = "unroll5aa: Array code, unrolled by 5, Different Associativity";

1342 
	$uƒﬁl5Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1344 
i
;

1345 
Àngth
 = 
	`vec_Àngth
(
v
);

1346 
limô
 = 
Àngth
-4;

1347 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1348 
d©a_t
 
acc
 = 
IDENT
;

1351 
i
 = 0; i < 
limô
; i+=5) {

1352 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1353 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1354 
d©a_t
 
t3
 = 
d©a
[
i
+4];

1355 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
 OP 
t3
);

1359 ; 
i
 < 
Àngth
; i++) {

1360 
acc
 =ác¯
OP
 
d©a
[
i
];

1362 *
de°
 = 
acc
;

1363 
	}
}

1365 
	guƒﬁl6Ø_des¸
[] = "unroll6aa: Array code, unrolled by 6, Different Associativity";

1366 
	$uƒﬁl6Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1368 
i
;

1369 
Àngth
 = 
	`vec_Àngth
(
v
);

1370 
limô
 = 
Àngth
-5;

1371 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1372 
d©a_t
 
acc
 = 
IDENT
;

1375 
i
 = 0; i < 
limô
; i+=6) {

1376 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1377 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1378 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1379 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
 OP 
t3
);

1383 ; 
i
 < 
Àngth
; i++) {

1384 
acc
 =ác¯
OP
 
d©a
[
i
];

1386 *
de°
 = 
acc
;

1387 
	}
}

1389 
	guƒﬁl7Ø_des¸
[] = "unroll7aa: Array code, unrolled by 7, Different Associativity";

1390 
	$uƒﬁl7Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1392 
i
;

1393 
Àngth
 = 
	`vec_Àngth
(
v
);

1394 
limô
 = 
Àngth
-6;

1395 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1396 
d©a_t
 
acc
 = 
IDENT
;

1399 
i
 = 0; i < 
limô
; i+=7) {

1400 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1401 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1402 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1403 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1404 
d©a_t
 
t4
 = 
d©a
[
i
+6];

1405 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1406 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1410 ; 
i
 < 
Àngth
; i++) {

1411 
acc
 =ác¯
OP
 
d©a
[
i
];

1414 *
de°
 = 
acc
;

1415 
	}
}

1417 
	guƒﬁl8Ø_des¸
[] = "unroll8aa: Array code, unrolled by 8, Different Associativity";

1418 
	$uƒﬁl8Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1420 
i
;

1421 
Àngth
 = 
	`vec_Àngth
(
v
);

1422 
limô
 = 
Àngth
-7;

1423 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1424 
d©a_t
 
acc
 = 
IDENT
;

1427 
i
 = 0; i < 
limô
; i+=8) {

1428 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1429 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1430 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1431 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1432 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1433 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1434 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1438 ; 
i
 < 
Àngth
; i++) {

1439 
acc
 =ác¯
OP
 
d©a
[
i
];

1442 *
de°
 = 
acc
;

1443 
	}
}

1445 
	guƒﬁl9Ø_des¸
[] = "unroll9aa: Array code, unrolled by 9, Different Associativity";

1446 
	$uƒﬁl9Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1448 
i
;

1449 
Àngth
 = 
	`vec_Àngth
(
v
);

1450 
limô
 = 
Àngth
-8;

1451 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1452 
d©a_t
 
acc
 = 
IDENT
;

1455 
i
 = 0; i < 
limô
; i+=9) {

1456 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1457 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1458 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1459 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1460 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1461 
d©a_t
 
t5
 = 
d©a
[
i
+8];

1462 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
 OP 
t5
;

1463 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1467 ; 
i
 < 
Àngth
; i++) {

1468 
acc
 =ác¯
OP
 
d©a
[
i
];

1471 *
de°
 = 
acc
;

1472 
	}
}

1474 
	guƒﬁl10Ø_des¸
[] = "unroll10aa: Array code, unrolled by 10, Different Associativity";

1475 
	$uƒﬁl10Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1477 
i
;

1478 
Àngth
 = 
	`vec_Àngth
(
v
);

1479 
limô
 = 
Àngth
-9;

1480 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1481 
d©a_t
 
acc
 = 
IDENT
;

1484 
i
 = 0; i < 
limô
; i+=10) {

1485 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1486 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1487 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1488 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1489 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1490 
d©a_t
 
t5
 = 
d©a
[
i
+8] 
OP
 data[i+9];

1491 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
 OP 
t5
;

1492 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1496 ; 
i
 < 
Àngth
; i++) {

1497 
acc
 =ác¯
OP
 
d©a
[
i
];

1500 *
de°
 = 
acc
;

1501 
	}
}

1504 
	guƒﬁl12Ø_des¸
[] = "unroll12aa: Array code, unrolled by 12, Different Associativity";

1505 
	$uƒﬁl12Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1507 
i
;

1508 
Àngth
 = 
	`vec_Àngth
(
v
);

1509 
limô
 = 
Àngth
-11;

1510 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1511 
d©a_t
 
acc
 = 
IDENT
;

1514 
i
 = 0; i < 
limô
; i+=12) {

1515 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1516 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1517 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1518 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1519 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1520 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1521 
d©a_t
 
t5
 = 
d©a
[
i
+8] 
OP
 data[i+9];

1522 
d©a_t
 
t6
 = 
d©a
[
i
+10] 
OP
 data[i+11];

1523 
d©a_t
 
u3
 = 
t5
 
OP
 
t6
;

1524 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
 OP 
u3
);

1528 ; 
i
 < 
Àngth
; i++) {

1529 
acc
 =ác¯
OP
 
d©a
[
i
];

1532 *
de°
 = 
acc
;

1533 
	}
}

1539 
	#VBYTES
 32

	)

1542 
	#VSIZE
 
VBYTES
/(
d©a_t
)

	)

1547 
d©a_t
 
	tvec_t
 
	t__©åibuã__
 ((
	tve˘‹_size
(
	tVBYTES
)));

1552 
vec_t
 
	mv
;

1553 
d©a_t
 
	md
[
VSIZE
];

1554 } 
	t∑ck_t
;

1557 
	gsimd_v1_des¸
[] = "simd_v1: SSE code, 1*VSIZE-wayÖarallelism";

1559 
	$simd_v1_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1561 
i
;

1562 
∑ck_t
 
x„r
;

1563 
vec_t
 
accum
;

1564 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1565 
˙t
 = 
	`vec_Àngth
(
v
);

1566 
d©a_t
 
ªsu…
 = 
IDENT
;

1569 
i
 = 0; i < 
VSIZE
; i++)

1570 
x„r
.
d
[
i
] = 
IDENT
;

1571 
accum
 = 
x„r
.
v
;

1575 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1576 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1577 
˙t
--;

1581 
˙t
 >
VSIZE
) {

1582 
vec_t
 
chunk
 = *((vec_à*Ë
d©a
);

1583 
accum
 =áccum 
OP
 
chunk
;

1584 
d©a
 +
VSIZE
;

1585 
˙t
 -
VSIZE
;

1589 
˙t
) {

1590 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1591 
˙t
--;

1595 
x„r
.
v
 = 
accum
;

1596 
i
 = 0; i < 
VSIZE
; i++)

1597 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1600 *
de°
 = 
ªsu…
;

1601 
	}
}

1605 
	gsimd_v2_des¸
[] = "simd_v2: SSE code, 2*VSIZE-wayÖarallelism";

1606 
	$simd_v2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1608 
i
;

1609 
∑ck_t
 
x„r
;

1610 
vec_t
 
accum0
, 
accum1
;

1611 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1612 
˙t
 = 
	`vec_Àngth
(
v
);

1613 
d©a_t
 
ªsu…
 = 
IDENT
;

1616 
i
 = 0; i < 
VSIZE
; i++)

1617 
x„r
.
d
[
i
] = 
IDENT
;

1618 
accum0
 = 
x„r
.
v
;

1619 
accum1
 = 
x„r
.
v
;

1621 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1622 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1623 
˙t
--;

1626 
˙t
 >2*
VSIZE
) {

1627 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1628 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1629 
accum0
 =áccum0 
OP
 
chunk0
;

1630 
accum1
 =áccum1 
OP
 
chunk1
;

1631 
d©a
 +2*
VSIZE
;

1632 
˙t
 -2*
VSIZE
;

1634 
˙t
) {

1635 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1636 
˙t
--;

1638 
x„r
.
v
 = 
accum0
 
OP
 
accum1
;

1639 
i
 = 0; i < 
VSIZE
; i++)

1640 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1641 *
de°
 = 
ªsu…
;

1642 
	}
}

1644 
	gsimd_v4_des¸
[] = "simd_v4: SSE code, 4*VSIZE-wayÖarallelism";

1645 
	$simd_v4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1647 
i
;

1648 
∑ck_t
 
x„r
;

1649 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1650 
˙t
 = 
	`vec_Àngth
(
v
);

1651 
d©a_t
 
ªsu…
 = 
IDENT
;

1654 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
;

1655 
i
 = 0; i < 
VSIZE
; i++)

1656 
x„r
.
d
[
i
] = 
IDENT
;

1657 
accum0
 = 
x„r
.
v
; 
accum1
 = xfer.v;

1658 
accum2
 = 
x„r
.
v
; 
accum3
 = xfer.v;

1660 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1661 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1662 
˙t
--;

1667 
˙t
 >4*
VSIZE
) {

1668 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1669 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1670 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1671 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1672 
accum0
 =áccum0 
OP
 
chunk0
;

1673 
accum1
 =áccum1 
OP
 
chunk1
;

1674 
accum2
 =áccum2 
OP
 
chunk2
;

1675 
accum3
 =áccum3 
OP
 
chunk3
;

1676 
d©a
 +4*
VSIZE
;

1677 
˙t
 -4*
VSIZE
;

1681 
˙t
) {

1682 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1683 
˙t
--;

1688 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1691 
i
 = 0; i < 
VSIZE
; i++)

1692 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1694 *
de°
 = 
ªsu…
;

1695 
	}
}

1697 
	gsimd_v8_des¸
[] = "simd_v8: SSE code, 8*VSIZE-wayÖarallelism";

1698 
	$simd_v8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1700 
i
;

1701 
∑ck_t
 
x„r
;

1702 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
, 
accum5
, 
accum6
, 
accum7
;

1703 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1704 
˙t
 = 
	`vec_Àngth
(
v
);

1705 
d©a_t
 
ªsu…
 = 
IDENT
;

1708 
i
 = 0; i < 
VSIZE
; i++)

1709 
x„r
.
d
[
i
] = 
IDENT
;

1710 
accum0
 = 
x„r
.
v
;

1711 
accum1
 = 
x„r
.
v
;

1712 
accum2
 = 
x„r
.
v
;

1713 
accum3
 = 
x„r
.
v
;

1714 
accum4
 = 
x„r
.
v
;

1715 
accum5
 = 
x„r
.
v
;

1716 
accum6
 = 
x„r
.
v
;

1717 
accum7
 = 
x„r
.
v
;

1719 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1720 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1721 
˙t
--;

1724 
˙t
 >8*
VSIZE
) {

1725 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1726 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1727 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1728 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1729 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1730 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1731 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1732 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1733 
accum0
 =áccum0 
OP
 
chunk0
;

1734 
accum1
 =áccum1 
OP
 
chunk1
;

1735 
accum2
 =áccum2 
OP
 
chunk2
;

1736 
accum3
 =áccum3 
OP
 
chunk3
;

1737 
accum4
 =áccum4 
OP
 
chunk4
;

1738 
accum5
 =áccum5 
OP
 
chunk5
;

1739 
accum6
 =áccum6 
OP
 
chunk6
;

1740 
accum7
 =áccum7 
OP
 
chunk7
;

1741 
d©a
 +8*
VSIZE
;

1742 
˙t
 -8*
VSIZE
;

1744 
˙t
) {

1745 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1746 
˙t
--;

1748 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1749 
x„r
.
v
 = x„r.v 
	`OP
 (
accum4
 
OP
 
accum5
ËOP (
accum6
 OP 
accum7
);

1750 
i
 = 0; i < 
VSIZE
; i++)

1751 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1752 *
de°
 = 
ªsu…
;

1753 
	}
}

1755 
	gsimd_v10_des¸
[] = "simd_v10: SSE code, 10*VSIZE-wayÖarallelism";

1756 
	$simd_v10_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1758 
i
;

1759 
∑ck_t
 
x„r
;

1760 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
, 
accum5
, 
accum6
, 
accum7
, 
accum8
, 
accum9
;

1761 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1762 
˙t
 = 
	`vec_Àngth
(
v
);

1763 
d©a_t
 
ªsu…
 = 
IDENT
;

1766 
i
 = 0; i < 
VSIZE
; i++)

1767 
x„r
.
d
[
i
] = 
IDENT
;

1768 
accum0
 = 
x„r
.
v
;

1769 
accum1
 = 
x„r
.
v
;

1770 
accum2
 = 
x„r
.
v
;

1771 
accum3
 = 
x„r
.
v
;

1772 
accum4
 = 
x„r
.
v
;

1773 
accum5
 = 
x„r
.
v
;

1774 
accum6
 = 
x„r
.
v
;

1775 
accum7
 = 
x„r
.
v
;

1776 
accum8
 = 
x„r
.
v
;

1777 
accum9
 = 
x„r
.
v
;

1779 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1780 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1781 
˙t
--;

1784 
˙t
 >10*
VSIZE
) {

1785 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1786 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1787 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1788 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1789 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1790 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1791 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1792 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1793 
vec_t
 
chunk8
 = *((vec_à*Ë(
d©a
+8*
VSIZE
));

1794 
vec_t
 
chunk9
 = *((vec_à*Ë(
d©a
+9*
VSIZE
));

1795 
accum0
 =áccum0 
OP
 
chunk0
;

1796 
accum1
 =áccum1 
OP
 
chunk1
;

1797 
accum2
 =áccum2 
OP
 
chunk2
;

1798 
accum3
 =áccum3 
OP
 
chunk3
;

1799 
accum4
 =áccum4 
OP
 
chunk4
;

1800 
accum5
 =áccum5 
OP
 
chunk5
;

1801 
accum6
 =áccum6 
OP
 
chunk6
;

1802 
accum7
 =áccum7 
OP
 
chunk7
;

1803 
accum8
 =áccum8 
OP
 
chunk8
;

1804 
accum9
 =áccum9 
OP
 
chunk9
;

1805 
d©a
 +10*
VSIZE
;

1806 
˙t
 -10*
VSIZE
;

1808 
˙t
) {

1809 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1810 
˙t
--;

1812 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1813 
x„r
.
v
 = x„r.v 
	`OP
 (
accum4
 
OP
 
accum5
ËOP (
accum6
 OP 
accum7
);

1814 
x„r
.
v
 = x„r.v 
	`OP
 (
accum8
 
OP
 
accum9
);

1815 
i
 = 0; i < 
VSIZE
; i++)

1816 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1817 *
de°
 = 
ªsu…
;

1818 
	}
}

1820 
	gsimd_v12_des¸
[] = "simd_v12: SSE code, 12*VSIZE-wayÖarallelism";

1821 
	$simd_v12_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1823 
i
;

1824 
∑ck_t
 
x„r
;

1825 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
, 
accum5
, 
accum6
, 
accum7
;

1826 
vec_t
 
accum8
, 
accum9
, 
accum10
, 
accum11
;

1827 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1828 
˙t
 = 
	`vec_Àngth
(
v
);

1829 
d©a_t
 
ªsu…
 = 
IDENT
;

1832 
i
 = 0; i < 
VSIZE
; i++)

1833 
x„r
.
d
[
i
] = 
IDENT
;

1834 
accum0
 = 
x„r
.
v
;

1835 
accum1
 = 
x„r
.
v
;

1836 
accum2
 = 
x„r
.
v
;

1837 
accum3
 = 
x„r
.
v
;

1838 
accum4
 = 
x„r
.
v
;

1839 
accum5
 = 
x„r
.
v
;

1840 
accum6
 = 
x„r
.
v
;

1841 
accum7
 = 
x„r
.
v
;

1842 
accum8
 = 
x„r
.
v
;

1843 
accum9
 = 
x„r
.
v
;

1844 
accum10
 = 
x„r
.
v
;

1845 
accum11
 = 
x„r
.
v
;

1846 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1847 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1848 
˙t
--;

1851 
˙t
 >12*
VSIZE
) {

1852 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1853 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1854 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1855 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1856 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1857 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1858 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1859 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1860 
vec_t
 
chunk8
 = *((vec_à*Ë(
d©a
+8*
VSIZE
));

1861 
vec_t
 
chunk9
 = *((vec_à*Ë(
d©a
+9*
VSIZE
));

1862 
vec_t
 
chunk10
 = *((vec_à*Ë(
d©a
+10*
VSIZE
));

1863 
vec_t
 
chunk11
 = *((vec_à*Ë(
d©a
+11*
VSIZE
));

1864 
accum0
 =áccum0 
OP
 
chunk0
;

1865 
accum1
 =áccum1 
OP
 
chunk1
;

1866 
accum2
 =áccum2 
OP
 
chunk2
;

1867 
accum3
 =áccum3 
OP
 
chunk3
;

1868 
accum4
 =áccum4 
OP
 
chunk4
;

1869 
accum5
 =áccum5 
OP
 
chunk5
;

1870 
accum6
 =áccum6 
OP
 
chunk6
;

1871 
accum7
 =áccum7 
OP
 
chunk7
;

1872 
accum8
 =áccum8 
OP
 
chunk8
;

1873 
accum9
 =áccum9 
OP
 
chunk9
;

1874 
accum10
 =áccum10 
OP
 
chunk10
;

1875 
accum11
 =áccum11 
OP
 
chunk11
;

1876 
d©a
 +12*
VSIZE
;

1877 
˙t
 -12*
VSIZE
;

1879 
˙t
) {

1880 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1881 
˙t
--;

1883 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1884 
x„r
.
v
 = x„r.v 
	`OP
 (
accum4
 
OP
 
accum5
ËOP (
accum6
 OP 
accum7
);

1885 
x„r
.
v
 = x„r.v 
	`OP
 (
accum8
 
OP
 
accum9
ËOP (
accum10
 OP 
accum11
);

1886 
i
 = 0; i < 
VSIZE
; i++)

1887 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1888 *
de°
 = 
ªsu…
;

1889 
	}
}

1892 
	gsimd_v2a_des¸
[] = "simd_v2a: SSE code, 2*VSIZE-wayÖarallelism,Ñeassociate";

1893 
	$simd_v2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1895 
i
;

1896 
∑ck_t
 
x„r
;

1897 
vec_t
 
accum
;

1898 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1899 
˙t
 = 
	`vec_Àngth
(
v
);

1900 
d©a_t
 
ªsu…
 = 
IDENT
;

1903 
i
 = 0; i < 
VSIZE
; i++)

1904 
x„r
.
d
[
i
] = 
IDENT
;

1905 
accum
 = 
x„r
.
v
;

1907 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1908 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1909 
˙t
--;

1912 
˙t
 >2*
VSIZE
) {

1913 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1914 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1915 
accum
 =áccum 
	`OP
 (
chunk0
 
OP
 
chunk1
);

1916 
d©a
 +2*
VSIZE
;

1917 
˙t
 -2*
VSIZE
;

1919 
˙t
) {

1920 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1921 
˙t
--;

1923 
x„r
.
v
 = 
accum
;

1924 
i
 = 0; i < 
VSIZE
; i++)

1925 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1926 *
de°
 = 
ªsu…
;

1927 
	}
}

1929 
	gsimd_v4a_des¸
[] = "simd_v4a: SSE code, 4*VSIZE-wayÖarallelism,Ñeassociate";

1930 
	$simd_v4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1932 
i
;

1933 
∑ck_t
 
x„r
;

1934 
vec_t
 
accum
;

1935 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1936 
˙t
 = 
	`vec_Àngth
(
v
);

1937 
d©a_t
 
ªsu…
 = 
IDENT
;

1940 
i
 = 0; i < 
VSIZE
; i++)

1941 
x„r
.
d
[
i
] = 
IDENT
;

1942 
accum
 = 
x„r
.
v
;

1944 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1945 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1946 
˙t
--;

1950 
˙t
 >4*
VSIZE
) {

1951 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1952 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1953 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1954 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1955 
accum
 =áccum 
OP


1956 ((
chunk0
 
OP
 
chunk1
Ë
	`OP
 (
chunk2
 OP 
chunk3
));

1957 
d©a
 +4*
VSIZE
;

1958 
˙t
 -4*
VSIZE
;

1962 
˙t
) {

1963 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1964 
˙t
--;

1966 
x„r
.
v
 = 
accum
;

1967 
i
 = 0; i < 
VSIZE
; i++)

1968 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1969 *
de°
 = 
ªsu…
;

1970 
	}
}

1972 
	gsimd_v8a_des¸
[] = "simd_v8a: SSE code, 8*VSIZE-wayÖarallelism,Ñeassociate";

1973 
	$simd_v8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1975 
i
;

1976 
∑ck_t
 
x„r
;

1977 
vec_t
 
accum
;

1978 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1979 
˙t
 = 
	`vec_Àngth
(
v
);

1980 
d©a_t
 
ªsu…
 = 
IDENT
;

1983 
i
 = 0; i < 
VSIZE
; i++)

1984 
x„r
.
d
[
i
] = 
IDENT
;

1985 
accum
 = 
x„r
.
v
;

1987 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1988 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1989 
˙t
--;

1992 
˙t
 >8*
VSIZE
) {

1993 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1994 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1995 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1996 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1997 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1998 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1999 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

2000 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

2001 
accum
 =áccum 
OP


2002 (((
chunk0
 
OP
 
chunk1
Ë
	`OP
 (
chunk2
 OP 
chunk3
))

2003 
OP


2004 ((
chunk4
 
OP
 
chunk5
Ë
	`OP
 (
chunk6
 OP 
chunk7
)));

2005 
d©a
 +8*
VSIZE
;

2006 
˙t
 -8*
VSIZE
;

2008 
˙t
) {

2009 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

2010 
˙t
--;

2012 
x„r
.
v
 = 
accum
;

2013 
i
 = 0; i < 
VSIZE
; i++)

2014 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

2015 *
de°
 = 
ªsu…
;

2016 
	}
}

2019 
	$ªgi°î_comböîs
()

2021 #i‚de‡
UNROLL_ONLY


2022 
	`add_comböî
(
comböe1
, comböe1, 
comböe1_des¸
);

2023 
	`add_comböî
(
comböe2
, 
comböe1
, 
comböe2_des¸
);

2024 
	`add_comböî
(
comböe3
, 
comböe1
, 
comböe3_des¸
);

2025 
	`add_comböî
(
comböe3w
, 
comböe1
, 
comböe3w_des¸
);

2027 
	`add_comböî
(
comböe4
, 
comböe1
,
comböe4_des¸
);

2028 #i‚de‡
UNROLL_ONLY


2029 
	`add_comböî
(
comböe4b
, 
comböe1
, 
comböe4b_des¸
);

2030 
	`add_comböî
(
comböe4p
, 
comböe1
, 
comböe4p_des¸
);

2032 
	`add_comböî
(
comböe5
, 
comböe1
, 
comböe5_des¸
);

2033 #i‚de‡
UNROLL_ONLY


2034 
	`add_comböî
(
comböe5p
, 
comböe1
, 
comböe5p_des¸
);

2035 
	`add_comböî
(
uƒﬁl2aw_comböe
, 
comböe1
, 
uƒﬁl2aw_des¸
);

2037 
	`add_comböî
(
uƒﬁl3a_comböe
, 
comböe1
, 
uƒﬁl3a_des¸
);

2038 
	`add_comböî
(
uƒﬁl4a_comböe
, 
comböe1
, 
uƒﬁl4a_des¸
);

2039 
	`add_comböî
(
uƒﬁl5a_comböe
, 
comböe1
, 
uƒﬁl5a_des¸
);

2040 
	`add_comböî
(
uƒﬁl6a_comböe
, 
comböe1
, 
uƒﬁl6a_des¸
);

2041 
	`add_comböî
(
uƒﬁl7a_comböe
, 
comböe1
, 
uƒﬁl7a_des¸
);

2042 
	`add_comböî
(
uƒﬁl8a_comböe
, 
comböe1
, 
uƒﬁl8a_des¸
);

2043 
	`add_comböî
(
uƒﬁl9a_comböe
, 
comböe1
, 
uƒﬁl9a_des¸
);

2044 
	`add_comböî
(
uƒﬁl10a_comböe
, 
comböe1
, 
uƒﬁl10a_des¸
);

2045 
	`add_comböî
(
uƒﬁl16a_comböe
, 
comböe1
, 
uƒﬁl16a_des¸
);

2046 #i‚de‡
UNROLL_ONLY


2047 
	`add_comböî
(
uƒﬁl2_comböe
, 
comböe1
, 
uƒﬁl2_des¸
);

2048 
	`add_comböî
(
uƒﬁl3_comböe
, 
comböe1
, 
uƒﬁl3_des¸
);

2049 
	`add_comböî
(
uƒﬁl4_comböe
, 
comböe1
, 
uƒﬁl4_des¸
);

2050 
	`add_comböî
(
uƒﬁl8_comböe
, 
comböe1
, 
uƒﬁl8_des¸
);

2051 
	`add_comböî
(
uƒﬁl16_comböe
, 
comböe1
, 
uƒﬁl16_des¸
);

2052 
	`add_comböî
(
comböe6
, 
comböe1
, 
comböe6_des¸
);

2053 
	`add_comböî
(
uƒﬁl4x2a_comböe
, 
comböe1
, 
uƒﬁl4x2a_des¸
);

2054 
	`add_comböî
(
uƒﬁl8x2a_comböe
, 
comböe1
, 
uƒﬁl8x2a_des¸
);

2055 
	`add_comböî
(
uƒﬁl3x3a_comböe
, 
comböe1
, 
uƒﬁl3x3a_des¸
);

2056 
	`add_comböî
(
uƒﬁl4x4a_comböe
, 
comböe1
, 
uƒﬁl4x4a_des¸
);

2057 
	`add_comböî
(
uƒﬁl5x5a_comböe
, 
comböe1
, 
uƒﬁl5x5a_des¸
);

2058 
	`add_comböî
(
uƒﬁl6x6a_comböe
, 
comböe1
, 
uƒﬁl6x6a_des¸
);

2059 
	`add_comböî
(
uƒﬁl7x7a_comböe
, 
comböe1
, 
uƒﬁl7x7a_des¸
);

2060 
	`add_comböî
(
uƒﬁl8x4a_comböe
, 
comböe1
, 
uƒﬁl8x4a_des¸
);

2061 
	`add_comböî
(
uƒﬁl8x8a_comböe
, 
comböe1
, 
uƒﬁl8x8a_des¸
);

2062 
	`add_comböî
(
uƒﬁl9x9a_comböe
, 
comböe1
, 
uƒﬁl9x9a_des¸
);

2063 
	`add_comböî
(
uƒﬁl10x10a_comböe
, 
comböe1
, 
uƒﬁl10x10a_des¸
);

2064 
	`add_comböî
(
uƒﬁl12x6a_comböe
, 
comböe1
, 
uƒﬁl12x6a_des¸
);

2065 
	`add_comböî
(
uƒﬁl12x12a_comböe
, 
comböe1
, 
uƒﬁl12x12a_des¸
);

2066 
	`add_comböî
(
uƒﬁl16x16a_comböe
, 
comböe1
, 
uƒﬁl16x16a_des¸
);

2067 
	`add_comböî
(
uƒﬁl20x20a_comböe
, 
comböe1
, 
uƒﬁl20x20a_des¸
);

2068 
	`add_comböî
(
uƒﬁl8x2_comböe
, 
comböe1
, 
uƒﬁl8x2_des¸
);

2069 
	`add_comböî
(
uƒﬁl8x4_comböe
, 
comböe1
, 
uƒﬁl8x4_des¸
);

2070 
	`add_comböî
(
uƒﬁl8x8_comböe
, 
comböe1
, 
uƒﬁl8x8_des¸
);

2071 
	`add_comböî
(
uƒﬁl9x3_comböe
, 
comböe1
, 
uƒﬁl9x3_des¸
);

2072 
	`add_comböî
(
uƒﬁlx2as_comböe
, 
comböe1
, 
uƒﬁlx2as_des¸
);

2073 
	`add_comböî
(
comböe7
, 
comböe1
, 
comböe7_des¸
);

2074 
	`add_comböî
(
uƒﬁl3Ø_comböe
, 
comböe1
, 
uƒﬁl3Ø_des¸
);

2075 
	`add_comböî
(
uƒﬁl4Ø_comböe
, 
comböe1
, 
uƒﬁl4Ø_des¸
);

2076 
	`add_comböî
(
uƒﬁl5Ø_comböe
, 
comböe1
, 
uƒﬁl5Ø_des¸
);

2077 
	`add_comböî
(
uƒﬁl6Ø_comböe
, 
comböe1
, 
uƒﬁl6Ø_des¸
);

2078 
	`add_comböî
(
uƒﬁl7Ø_comböe
, 
comböe1
, 
uƒﬁl7Ø_des¸
);

2079 
	`add_comböî
(
uƒﬁl8Ø_comböe
, 
comböe1
, 
uƒﬁl8Ø_des¸
);

2080 
	`add_comböî
(
uƒﬁl9Ø_comböe
, 
comböe1
, 
uƒﬁl9Ø_des¸
);

2081 
	`add_comböî
(
uƒﬁl10Ø_comböe
, 
comböe1
, 
uƒﬁl10Ø_des¸
);

2082 
	`add_comböî
(
uƒﬁl12Ø_comböe
, 
comböe1
, 
uƒﬁl12Ø_des¸
);

2083 
	`add_comböî
(
simd_v1_comböe
, 
comböe1
, 
simd_v1_des¸
);

2084 
	`add_comböî
(
simd_v2_comböe
, 
comböe1
, 
simd_v2_des¸
);

2085 
	`add_comböî
(
simd_v4_comböe
, 
comböe1
, 
simd_v4_des¸
);

2086 
	`add_comböî
(
simd_v8_comböe
, 
comböe1
, 
simd_v8_des¸
);

2087 
	`add_comböî
(
simd_v10_comböe
, 
comböe1
, 
simd_v10_des¸
);

2088 
	`add_comböî
(
simd_v12_comböe
, 
comböe1
, 
simd_v12_des¸
);

2089 
	`add_comböî
(
simd_v2a_comböe
, 
comböe1
, 
simd_v2a_des¸
);

2090 
	`add_comböî
(
simd_v4a_comböe
, 
comböe1
, 
simd_v4a_des¸
);

2091 
	`add_comböî
(
simd_v8a_comböe
, 
comböe1
, 
simd_v8a_des¸
);

2092 
	`log_comböî
(
simd_v8a_comböe
, 0.16, 0.24);

2094 
	}
}

	@opt/fragments.c

1 
	~"comböe.h
"

3 
comböe3
(
vec_±r
 
v
, 
d©a_t
 *
de°
);

4 
comböe4
(
vec_±r
 
v
, 
d©a_t
 *
de°
);

7 
	$mö
(
x
, 
y
Ë{  x < y ? x : y; 
	}
}

8 
	$max
(
x
, 
y
Ë{  x < y ? y : x; 
	}
}

9 
	$ö¸
(*
xp
, 
v
Ë{ *x∞+v; 
	}
}

10 
	$squ¨e
(
x
Ë{  x*x; 
	}
}

13 
	$‰agmíts
()

15 
i
, 
x
=0, 
y
=0, 
t
;

16 
vec_±r
 
v
 = 0;

19 
i
 = 
	`mö
(
x
, 
y
); i < 
	`max
(x, y); 
	`ö¸
(&i, 1))

20 
t
 +
	`squ¨e
(
i
);

24 
i
 = 
	`max
(
x
, 
y
Ë- 1; i >
	`mö
(x, y); 
	`ö¸
(&i, -1))

25 
t
 +
	`squ¨e
(
i
);

30 
low
 = 
	`mö
(
x
, 
y
);

31 
high
 = 
	`max
(
x
, 
y
);

33 
i
 = 
low
; i < 
high
; 
	`ö¸
(&i, 1))

34 
t
 +
	`squ¨e
(
i
);

39 
	`comböe3
(
v
, 
	`gë_vec_°¨t
(v) + 2);

40 
	`comböe4
(
v
, 
	`gë_vec_°¨t
(v) + 2);

43 
	}
}

	@opt/func.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

5 
f
();

7 
	$func1
() {

8  
	`f
() + f() + f() + f();

9 
	}
}

11 
	$func2
() {

12  4*
	`f
();

13 
	}
}

17 
	gcou¡î
 = 0;

19 
	$f
() {

20  
cou¡î
++;

21 
	}
}

26 
	$func1ö
() {

27 
t
 = 
cou¡î
++;

28 
t
 +
cou¡î
++;

29 
t
 +
cou¡î
++;

30 
t
 +
cou¡î
++;

31  
t
;

32 
	}
}

37 
	$func1›t
() {

38 
t
 = 4 * 
cou¡î
 + 6;

39 
cou¡î
 += 4;

40  
t
;

41 
	}
}

44 
	$maö
(
¨gc
, *
¨gv
[]) {

45 
ivÆ
 = 0;

46 i‡(
¨gc
 > 0)

47 
ivÆ
 = 
	`©oi
(
¨gv
[1]);

48 
cou¡î
 = 
ivÆ
; 
	`¥ötf
("func1 -> %ld, cou¡î = %ld\n", 
	`func1
(), counter);

49 
cou¡î
 = 
ivÆ
; 
	`¥ötf
("func2 -> %ld, cou¡î = %ld\n", 
	`func2
(), counter);

50 
cou¡î
 = 
ivÆ
; 
	`¥ötf
("func1ö -> %ld, cou¡î = %ld\n", 
	`func1ö
(), counter);

51 
cou¡î
 = 
ivÆ
; 
	`¥ötf
("func1›à-> %ld, cou¡î = %ld\n", 
	`func1›t
(), counter);

53 
	}
}

	@opt/ipb-O1.c

1 
	~"comböe.h
"

5 
	gcomböe1_des¸
[] = "combine1: Maximum use of dataábstraction";

8 
	$comböe1
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

10 
i
;

12 *
de°
 = 
IDENT
;

13 
i
 = 0; i < 
	`vec_Àngth
(
v
); i++) {

14 
d©a_t
 
vÆ
;

15 
	`gë_vec_ñemít
(
v
, 
i
, &
vÆ
);

17 *
de°
 = *de° 
OP
 
vÆ
;

20 
	}
}

23 
	gcomböe2_des¸
[] = "combine2: Take vec_length() out ofÜoop";

26 
	$comböe2
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

28 
i
;

29 
Àngth
 = 
	`vec_Àngth
(
v
);

31 *
de°
 = 
IDENT
;

32 
i
 = 0; i < 
Àngth
; i++) {

33 
d©a_t
 
vÆ
;

34 
	`gë_vec_ñemít
(
v
, 
i
, &
vÆ
);

35 *
de°
 = *de° 
OP
 
vÆ
;

37 
	}
}

40 
	gcomböe3_des¸
[] = "combine3: ArrayÑeferenceÅo vector data";

43 
	$comböe3
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

45 
i
;

46 
Àngth
 = 
	`vec_Àngth
(
v
);

47 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

49 *
de°
 = 
IDENT
;

50 
i
 = 0; i < 
Àngth
; i++) {

51 *
de°
 = *de° 
OP
 
d©a
[
i
];

53 
	}
}

56 
	gcomböe3w_des¸
[] = "combine3w: Update *dest withinÜoop only with write";

59 
	$comböe3w
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

61 
i
;

62 
Àngth
 = 
	`vec_Àngth
(
v
);

63 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

64 
d©a_t
 
acc
 = 
IDENT
;

67 *
de°
 = 
acc
;

69 
i
 = 0; i < 
Àngth
; i++) {

70 
acc
 =ác¯
OP
 
d©a
[
i
];

71 *
de°
 = 
acc
;

73 
	}
}

76 
	gcomböe4_des¸
[] = "combine4: ArrayÑeference,áccumulate inÅemporary";

79 
	$comböe4
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

81 
i
;

82 
Àngth
 = 
	`vec_Àngth
(
v
);

83 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

84 
d©a_t
 
acc
 = 
IDENT
;

86 
i
 = 0; i < 
Àngth
; i++) {

87 
acc
 =ác¯
OP
 
d©a
[
i
];

89 *
de°
 = 
acc
;

90 
	}
}

93 
	gcomböe4b_des¸
[] = "combine4b: Include bonds check inÜoop";

96 
	$comböe4b
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

98 
i
;

99 
Àngth
 = 
	`vec_Àngth
(
v
);

100 
d©a_t
 
acc
 = 
IDENT
;

102 
i
 = 0; i < 
Àngth
; i++) {

103 i‡(
i
 >0 && i < 
v
->
Àn
) {

104 
acc
 =ác¯
OP
 
v
->
d©a
[
i
];

107 *
de°
 = 
acc
;

108 
	}
}

112 
	gcomböe4p_des¸
[] = "combine4p: PointerÑeference,áccumulate inÅemporary";

115 
	$comböe4p
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

117 
Àngth
 = 
	`vec_Àngth
(
v
);

118 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

119 
d©a_t
 *
díd
 = 
d©a
+
Àngth
;

120 
d©a_t
 
acc
 = 
IDENT
;

122 ; 
d©a
 < 
díd
; data++)

123 
acc
 =ác¯
OP
 *
d©a
;

124 *
de°
 = 
acc
;

125 
	}
}

129 
	gcomböe5_des¸
[] = "combine5: Array code, unrolled by 2";

132 
	$comböe5
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

134 
i
;

135 
Àngth
 = 
	`vec_Àngth
(
v
);

136 
limô
 = 
Àngth
-1;

137 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

138 
d©a_t
 
acc
 = 
IDENT
;

141 
i
 = 0; i < 
limô
; i+=2) {

143 
acc
 = (ac¯
OP
 
d©a
[
i
]) OP data[i+1];

148 ; 
i
 < 
Àngth
; i++) {

149 
acc
 =ác¯
OP
 
d©a
[
i
];

151 *
de°
 = 
acc
;

152 
	}
}

155 
	guƒﬁl3a_des¸
[] = "unroll3a: Array code, unrolled by 3";

156 
	$uƒﬁl3a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

158 
i
;

159 
Àngth
 = 
	`vec_Àngth
(
v
);

160 
limô
 = 
Àngth
-2;

161 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

162 
d©a_t
 
acc
 = 
IDENT
;

165 
i
 = 0; i < 
limô
; i+=3) {

166 
acc
 =ác¯
OP
 
d©a
[
i
];

167 
acc
 =ác¯
OP
 
d©a
[
i
+1];

168 
acc
 =ác¯
OP
 
d©a
[
i
+2];

172 ; 
i
 < 
Àngth
; i++) {

173 
acc
 =ác¯
OP
 
d©a
[
i
];

175 *
de°
 = 
acc
;

176 
	}
}

179 
	gcomböe5p_des¸
[] = "combine5p: Pointer code, unrolled by 2, forÜoop";

182 
	$comböe5p
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

184 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

185 
d©a_t
 *
díd
 = 
d©a
+
	`vec_Àngth
(
v
);

186 
d©a_t
 *
dlimô
 = 
díd
-1;

187 
d©a_t
 
acc
 = 
IDENT
;

190 ; 
d©a
 < 
dlimô
; data += 2) {

191 
acc
 =ác¯
OP
 
d©a
[0] OP data[1];

195 ; 
d©a
 < 
díd
; data++) {

196 
acc
 =ác¯
OP
 
d©a
[0];

198 *
de°
 = 
acc
;

199 
	}
}

202 
	guƒﬁl2aw_des¸
[] = "unroll2aw: Array code, unrolled by 2, whileÜoop";

203 
	$uƒﬁl2aw_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

205 
i
 = 0;

206 
Àngth
 = 
	`vec_Àngth
(
v
);

207 
limô
 = 
Àngth
-1;

208 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

209 
d©a_t
 
acc
 = 
IDENT
;

212 
i
 < 
limô
) {

213 
acc
 =ác¯
OP
 
d©a
[
i
];

214 
i
+= 2;

215 
acc
 =ác¯
OP
 
d©a
[
i
-1];

219 ; 
i
 < 
Àngth
; i++) {

220 
acc
 =ác¯
OP
 
d©a
[
i
];

222 *
de°
 = 
acc
;

223 
	}
}

226 
	guƒﬁl4a_des¸
[] = "unroll4a: Array code, unrolled by 4";

227 
	$uƒﬁl4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

229 
i
;

230 
Àngth
 = 
	`vec_Àngth
(
v
);

231 
limô
 = 
Àngth
-3;

232 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

233 
d©a_t
 
acc
 = 
IDENT
;

236 
i
 = 0; i < 
limô
; i+=4) {

237 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

238 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

242 ; 
i
 < 
Àngth
; i++) {

243 
acc
 =ác¯
OP
 
d©a
[
i
];

245 *
de°
 = 
acc
;

246 
	}
}

248 
	guƒﬁl5a_des¸
[] = "unroll5a: Array code, unrolled by 5";

251 
	$uƒﬁl5
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

254 
	$uƒﬁl5a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

258 
i
;

259 
Àngth
 = 
	`vec_Àngth
(
v
);

260 
limô
 = 
Àngth
-4;

261 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

262 
d©a_t
 
acc
 = 
IDENT
;

265 
i
 = 0; i < 
limô
; i+=5) {

266 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

267 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

268 
acc
 =ác¯
OP
 
d©a
[
i
+4];

272 ; 
i
 < 
Àngth
; i++) {

273 
acc
 =ác¯
OP
 
d©a
[
i
];

275 *
de°
 = 
acc
;

276 
	}
}

279 
	guƒﬁl6a_des¸
[] = "unroll6a: Array code, unrolled by 6";

280 
	$uƒﬁl6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

282 
i
;

283 
Àngth
 = 
	`vec_Àngth
(
v
);

284 
limô
 = 
Àngth
-5;

285 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

286 
d©a_t
 
acc
 = 
IDENT
;

289 
i
 = 0; i < 
limô
; i+=6) {

290 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

291 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

292 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

296 ; 
i
 < 
Àngth
; i++) {

297 
acc
 =ác¯
OP
 
d©a
[
i
];

299 *
de°
 = 
acc
;

300 
	}
}

302 
	guƒﬁl7a_des¸
[] = "unroll7a: Array code, unrolled by 7";

303 
	$uƒﬁl7a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

305 
i
;

306 
Àngth
 = 
	`vec_Àngth
(
v
);

307 
limô
 = 
Àngth
-6;

308 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

309 
d©a_t
 
acc
 = 
IDENT
;

312 
i
 = 0; i < 
limô
; i+=7) {

313 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

314 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

315 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

316 
acc
 =ác¯
OP
 
d©a
[
i
+6];

320 ; 
i
 < 
Àngth
; i++) {

321 
acc
 =ác¯
OP
 
d©a
[
i
];

323 *
de°
 = 
acc
;

324 
	}
}

327 
	guƒﬁl8a_des¸
[] = "unroll8a: Array code, unrolled by 8";

328 
	$uƒﬁl8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

330 
i
;

331 
Àngth
 = 
	`vec_Àngth
(
v
);

332 
limô
 = 
Àngth
-7;

333 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

334 
d©a_t
 
acc
 = 
IDENT
;

337 
i
 = 0; i < 
limô
; i+=8) {

338 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

339 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

340 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

341 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

345 ; 
i
 < 
Àngth
; i++) {

346 
acc
 =ác¯
OP
 
d©a
[
i
];

348 *
de°
 = 
acc
;

349 
	}
}

351 
	guƒﬁl9a_des¸
[] = "unroll9a: Array code, unrolled by 9";

352 
	$uƒﬁl9a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

354 
i
;

355 
Àngth
 = 
	`vec_Àngth
(
v
);

356 
limô
 = 
Àngth
-8;

357 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

358 
d©a_t
 
acc
 = 
IDENT
;

361 
i
 = 0; i < 
limô
; i+=9) {

362 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

363 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

364 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

365 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

366 
acc
 =ác¯
OP
 
d©a
[
i
+8];

370 ; 
i
 < 
Àngth
; i++) {

371 
acc
 =ác¯
OP
 
d©a
[
i
];

373 *
de°
 = 
acc
;

374 
	}
}

376 
	guƒﬁl10a_des¸
[] = "unroll10a: Array code, unrolled by 10";

377 
	$uƒﬁl10a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

379 
i
;

380 
Àngth
 = 
	`vec_Àngth
(
v
);

381 
limô
 = 
Àngth
-9;

382 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

383 
d©a_t
 
acc
 = 
IDENT
;

386 
i
 = 0; i < 
limô
; i+=10) {

387 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

388 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

389 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

390 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

391 
acc
 =ác¯
OP
 
d©a
[
i
+8] OP data[i+9];

395 ; 
i
 < 
Àngth
; i++) {

396 
acc
 =ác¯
OP
 
d©a
[
i
];

398 *
de°
 = 
acc
;

399 
	}
}

402 
	guƒﬁl16a_des¸
[] = "unroll16a: Array code, unrolled by 16";

403 
	$uƒﬁl16a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

405 
i
;

406 
Àngth
 = 
	`vec_Àngth
(
v
);

407 
limô
 = 
Àngth
-15;

408 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

409 
d©a_t
 
acc
 = 
IDENT
;

412 
i
 = 0; i < 
limô
; i+=16) {

413 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

414 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

415 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

416 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

417 
acc
 =ác¯
OP
 
d©a
[
i
+8] OP data[i+9];

418 
acc
 =ác¯
OP
 
d©a
[
i
+10] OP data[i+11];

419 
acc
 =ác¯
OP
 
d©a
[
i
+12] OP data[i+13];

420 
acc
 =ác¯
OP
 
d©a
[
i
+14] OP data[i+15];

424 ; 
i
 < 
Àngth
; i++) {

425 
acc
 =ác¯
OP
 
d©a
[
i
];

427 *
de°
 = 
acc
;

428 
	}
}

430 
	guƒﬁl2_des¸
[] = "unroll2: Pointer code, unrolled by 2";

431 
	$uƒﬁl2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

433 
Àngth
 = 
	`vec_Àngth
(
v
);

434 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

435 
ovî
 = 
Àngth
%2;

436 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

437 
d©a_t
 
acc
 = 
IDENT
;

439 
d©a
 < 
díd
) {

440 
acc
 =ác¯
OP
 
d©a
[0];

441 
acc
 =ác¯
OP
 
d©a
[1];

442 
d©a
 += 2;

444 
díd
 +
ovî
;

445 
d©a
 < 
díd
) {

446 
acc
 =ác¯
OP
 *
d©a
;

447 
d©a
 ++;

449 *
de°
 = 
acc
;

450 
	}
}

453 
	guƒﬁl3_des¸
[] = "unroll3: Pointer code, unrolled by 3";

454 
	$uƒﬁl3_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

456 
Àngth
 = 
	`vec_Àngth
(
v
);

457 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

458 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-2;

459 
d©a_t
 
acc
 = 
IDENT
;

461 
d©a
 < 
díd
) {

462 
acc
 =ác¯
OP
 
d©a
[0];

463 
acc
 =ác¯
OP
 
d©a
[1];

464 
acc
 =ác¯
OP
 
d©a
[2];

465 
d©a
 += 3;

467 
díd
 += 2;

468 
d©a
 < 
díd
) {

469 
acc
 =ác¯
OP
 *
d©a
;

470 
d©a
 ++;

472 *
de°
 = 
acc
;

473 
	}
}

476 
	guƒﬁl4_des¸
[] = "unroll4: Pointer code, unrolled by 4";

477 
	$uƒﬁl4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

479 
Àngth
 = 
	`vec_Àngth
(
v
);

480 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

481 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-3;

482 
d©a_t
 
acc
 = 
IDENT
;

484 
d©a
 < 
díd
) {

485 
acc
 =ác¯
OP
 
d©a
[0];

486 
acc
 =ác¯
OP
 
d©a
[1];

487 
acc
 =ác¯
OP
 
d©a
[2];

488 
acc
 =ác¯
OP
 
d©a
[3];

489 
d©a
 += 4;

491 
díd
 += 3;

492 
d©a
 < 
díd
) {

493 
acc
 =ác¯
OP
 *
d©a
;

494 
d©a
 ++;

496 *
de°
 = 
acc
;

497 
	}
}

499 
	guƒﬁl8_des¸
[] = "unroll8: Pointer code, unrolled by 8";

500 
	$uƒﬁl8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

502 
Àngth
 = 
	`vec_Àngth
(
v
);

503 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

504 
ovî
 = 
Àngth
%8;

505 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

506 
d©a_t
 
acc
 = 
IDENT
;

508 
d©a
 < 
díd
) {

509 
acc
 =ác¯
OP
 
d©a
[0];

510 
acc
 =ác¯
OP
 
d©a
[1];

511 
acc
 =ác¯
OP
 
d©a
[2];

512 
acc
 =ác¯
OP
 
d©a
[3];

513 
acc
 =ác¯
OP
 
d©a
[4];

514 
acc
 =ác¯
OP
 
d©a
[5];

515 
acc
 =ác¯
OP
 
d©a
[6];

516 
acc
 =ác¯
OP
 
d©a
[7];

517 
d©a
 += 8;

519 
díd
 +
ovî
;

520 
d©a
 < 
díd
) {

521 
acc
 =ác¯
OP
 *
d©a
;

522 
d©a
 ++;

524 *
de°
 = 
acc
;

525 
	}
}

527 
	guƒﬁl16_des¸
[] = "unroll16: Pointer code, unrolled by 16";

528 
	$uƒﬁl16_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

530 
Àngth
 = 
	`vec_Àngth
(
v
);

531 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

532 
ovî
 = 
Àngth
%16;

533 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

534 
d©a_t
 
acc
 = 
IDENT
;

536 
d©a
 < 
díd
) {

537 
acc
 =ác¯
OP
 
d©a
[0];

538 
acc
 =ác¯
OP
 
d©a
[1];

539 
acc
 =ác¯
OP
 
d©a
[2];

540 
acc
 =ác¯
OP
 
d©a
[3];

541 
acc
 =ác¯
OP
 
d©a
[4];

542 
acc
 =ác¯
OP
 
d©a
[5];

543 
acc
 =ác¯
OP
 
d©a
[6];

544 
acc
 =ác¯
OP
 
d©a
[7];

545 
acc
 =ác¯
OP
 
d©a
[8];

546 
acc
 =ác¯
OP
 
d©a
[9];

547 
acc
 =ác¯
OP
 
d©a
[10];

548 
acc
 =ác¯
OP
 
d©a
[11];

549 
acc
 =ác¯
OP
 
d©a
[12];

550 
acc
 =ác¯
OP
 
d©a
[13];

551 
acc
 =ác¯
OP
 
d©a
[14];

552 
acc
 =ác¯
OP
 
d©a
[15];

553 
d©a
 += 16;

555 
díd
 +
ovî
;

556 
d©a
 < 
díd
) {

557 
acc
 =ác¯
OP
 *
d©a
;

558 
d©a
 ++;

560 *
de°
 = 
acc
;

561 
	}
}

564 
	gcomböe6_des¸
[] = "combine6: Array code, unrolled by 2, Superscalar x2";

567 
	$comböe6
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

569 
i
;

570 
Àngth
 = 
	`vec_Àngth
(
v
);

571 
limô
 = 
Àngth
-1;

572 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

573 
d©a_t
 
acc0
 = 
IDENT
;

574 
d©a_t
 
acc1
 = 
IDENT
;

577 
i
 = 0; i < 
limô
; i+=2) {

578 
acc0
 =ácc0 
OP
 
d©a
[
i
];

579 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

583 ; 
i
 < 
Àngth
; i++) {

584 
acc0
 =ácc0 
OP
 
d©a
[
i
];

586 *
de°
 = 
acc0
 
OP
 
acc1
;

587 
	}
}

590 
	guƒﬁl4x2a_des¸
[] = "unroll4x2a: Array code, unrolled by 4, Superscalar x2";

591 
	$uƒﬁl4x2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

593 
i
;

594 
Àngth
 = 
	`vec_Àngth
(
v
);

595 
limô
 = 
Àngth
-3;

596 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

597 
d©a_t
 
acc0
 = 
IDENT
;

598 
d©a_t
 
acc1
 = 
IDENT
;

601 
i
 = 0; i < 
limô
; i+=4) {

602 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

603 
acc0
 =ácc0 
OP
 
d©a
[
i
+2]; 
acc1
 =ácc1 OP data[i+3];

607 ; 
i
 < 
Àngth
; i++) {

608 
acc0
 =ácc0 
OP
 
d©a
[
i
];

610 *
de°
 = 
acc0
 
OP
 
acc1
;

611 
	}
}

614 
	guƒﬁl8x2a_des¸
[] = "unroll8x2a: Array code, unrolled by 8, Superscalar x2";

615 
	$uƒﬁl8x2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

617 
i
;

618 
Àngth
 = 
	`vec_Àngth
(
v
);

619 
limô
 = 
Àngth
-7;

620 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

621 
d©a_t
 
acc0
 = 
IDENT
;

622 
d©a_t
 
acc1
 = 
IDENT
;

625 
i
 = 0; i < 
limô
; i+=8) {

626 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

627 
acc0
 =ácc0 
OP
 
d©a
[
i
+2]; 
acc1
 =ácc1 OP data[i+3];

628 
acc0
 =ácc0 
OP
 
d©a
[
i
+4]; 
acc1
 =ácc1 OP data[i+5];

629 
acc0
 =ácc0 
OP
 
d©a
[
i
+6]; 
acc1
 =ácc1 OP data[i+7];

633 ; 
i
 < 
Àngth
; i++) {

634 
acc0
 =ácc0 
OP
 
d©a
[
i
];

636 *
de°
 = 
acc0
 
OP
 
acc1
;

637 
	}
}

639 
	guƒﬁl3x3a_des¸
[] = "unroll3x3a: Array code, unrolled by 3, Superscalar x3";

640 
	$uƒﬁl3x3a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

642 
i
;

643 
Àngth
 = 
	`vec_Àngth
(
v
);

644 
limô
 = 
Àngth
-2;

645 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

646 
d©a_t
 
acc0
 = 
IDENT
;

647 
d©a_t
 
acc1
 = 
IDENT
;

648 
d©a_t
 
acc2
 = 
IDENT
;

651 
i
 = 0; i < 
limô
; i+=3) {

652 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

653 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

657 ; 
i
 < 
Àngth
; i++) {

658 
acc0
 =ácc0 
OP
 
d©a
[
i
];

660 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
;

661 
	}
}

664 
	guƒﬁl4x4a_des¸
[] = "unroll4x4a: Array code, unrolled by 4, Superscalar x4";

665 
	$uƒﬁl4x4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

667 
i
;

668 
Àngth
 = 
	`vec_Àngth
(
v
);

669 
limô
 = 
Àngth
-3;

670 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

671 
d©a_t
 
acc0
 = 
IDENT
;

672 
d©a_t
 
acc1
 = 
IDENT
;

673 
d©a_t
 
acc2
 = 
IDENT
;

674 
d©a_t
 
acc3
 = 
IDENT
;

677 
i
 = 0; i < 
limô
; i+=4) {

678 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

679 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

683 ; 
i
 < 
Àngth
; i++) {

684 
acc0
 =ácc0 
OP
 
d©a
[
i
];

686 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
);

688 
	}
}

690 
	guƒﬁl8x4a_des¸
[] = "unroll8x4a: Array code, unrolled by 8, Superscalar x4";

691 
	$uƒﬁl8x4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

693 
i
;

694 
Àngth
 = 
	`vec_Àngth
(
v
);

695 
limô
 = 
Àngth
-7;

696 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

697 
d©a_t
 
acc0
 = 
IDENT
;

698 
d©a_t
 
acc1
 = 
IDENT
;

699 
d©a_t
 
acc2
 = 
IDENT
;

700 
d©a_t
 
acc3
 = 
IDENT
;

703 
i
 = 0; i < 
limô
; i+=8) {

704 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

705 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

706 
acc0
 =ácc0 
OP
 
d©a
[
i
+4]; 
acc1
 =ácc1 OP data[i+5];

707 
acc2
 =ácc2 
OP
 
d©a
[
i
+6]; 
acc3
 =ácc3 OP data[i+7];

711 ; 
i
 < 
Àngth
; i++) {

712 
acc0
 =ácc0 
OP
 
d©a
[
i
];

714 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
 OP 
acc3
;

715 
	}
}

717 
	guƒﬁl12x6a_des¸
[] = "unroll2x6a: Array code, unrolled by 12, Superscalar x6";

718 
	$uƒﬁl12x6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

720 
i
;

721 
Àngth
 = 
	`vec_Àngth
(
v
);

722 
limô
 = 
Àngth
-11;

723 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

724 
d©a_t
 
acc0
 = 
IDENT
;

725 
d©a_t
 
acc1
 = 
IDENT
;

726 
d©a_t
 
acc2
 = 
IDENT
;

727 
d©a_t
 
acc3
 = 
IDENT
;

728 
d©a_t
 
acc4
 = 
IDENT
;

729 
d©a_t
 
acc5
 = 
IDENT
;

732 
i
 = 0; i < 
limô
; i+=12) {

733 
acc0
 =ácc0 
OP
 
d©a
[
i
];

734 
acc0
 =ácc0 
OP
 
d©a
[
i
+6];

735 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

736 
acc1
 =ácc1 
OP
 
d©a
[
i
+7];

737 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

738 
acc2
 =ácc2 
OP
 
d©a
[
i
+8];

739 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

740 
acc3
 =ácc3 
OP
 
d©a
[
i
+9];

741 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

742 
acc4
 =ácc4 
OP
 
d©a
[
i
+10];

743 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

744 
acc5
 =ácc5 
OP
 
d©a
[
i
+11];

748 ; 
i
 < 
Àngth
; i++) {

749 
acc0
 =ácc0 
OP
 
d©a
[
i
];

751 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
);

752 
	}
}

754 
	guƒﬁl12x12a_des¸
[] = "unroll12x12a: Array code, unrolled by 12, Superscalar x12";

755 
	$uƒﬁl12x12a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

757 
i
;

758 
Àngth
 = 
	`vec_Àngth
(
v
);

759 
limô
 = 
Àngth
-11;

760 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

761 
d©a_t
 
acc0
 = 
IDENT
;

762 
d©a_t
 
acc1
 = 
IDENT
;

763 
d©a_t
 
acc2
 = 
IDENT
;

764 
d©a_t
 
acc3
 = 
IDENT
;

765 
d©a_t
 
acc4
 = 
IDENT
;

766 
d©a_t
 
acc5
 = 
IDENT
;

767 
d©a_t
 
acc6
 = 
IDENT
;

768 
d©a_t
 
acc7
 = 
IDENT
;

769 
d©a_t
 
acc8
 = 
IDENT
;

770 
d©a_t
 
acc9
 = 
IDENT
;

771 
d©a_t
 
acc10
 = 
IDENT
;

772 
d©a_t
 
acc11

IDENT
;

775 
i
 = 0; i < 
limô
; i+=12) {

776 
acc0
 =ácc0 
OP
 
d©a
[
i
];

777 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

778 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

779 
acc7
 =ácc7 
OP
 
d©a
[
i
+7];

780 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

781 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

782 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

783 
acc9
 =ácc9 
OP
 
d©a
[
i
+9];

784 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

785 
acc10
 =ácc10 
OP
 
d©a
[
i
+10];

786 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

787 
acc11
 =ácc11 
OP
 
d©a
[
i
+11];

791 ; 
i
 < 
Àngth
; i++) {

792 
acc0
 =ácc0 
OP
 
d©a
[
i
];

794 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
)

795 
	`OP
 (
acc6
 
OP
 
acc7
ËOP (
acc8
 OP 
acc9
ËOP (
acc10
 OP 
acc11
);

796 
	}
}

798 
	guƒﬁl5x5a_des¸
[] = "unroll5x5a: Array code, unrolled by 5, Superscalar x5";

799 
	$uƒﬁl5x5a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

801 
i
;

802 
Àngth
 = 
	`vec_Àngth
(
v
);

803 
limô
 = 
Àngth
-4;

804 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

805 
d©a_t
 
acc0
 = 
IDENT
;

806 
d©a_t
 
acc1
 = 
IDENT
;

807 
d©a_t
 
acc2
 = 
IDENT
;

808 
d©a_t
 
acc3
 = 
IDENT
;

809 
d©a_t
 
acc4
 = 
IDENT
;

812 
i
 = 0; i < 
limô
; i+=5) {

813 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

814 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

815 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

819 ; 
i
 < 
Àngth
; i++) {

820 
acc0
 =ácc0 
OP
 
d©a
[
i
];

822 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
 OP 
acc4
);

823 
	}
}

825 
	guƒﬁl6x6a_des¸
[] = "unroll6x6a: Array code, unrolled by 6, Superscalar x6";

826 
	$uƒﬁl6x6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

828 
i
;

829 
Àngth
 = 
	`vec_Àngth
(
v
);

830 
limô
 = 
Àngth
-5;

831 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

832 
d©a_t
 
acc0
 = 
IDENT
;

833 
d©a_t
 
acc1
 = 
IDENT
;

834 
d©a_t
 
acc2
 = 
IDENT
;

835 
d©a_t
 
acc3
 = 
IDENT
;

836 
d©a_t
 
acc4
 = 
IDENT
;

837 
d©a_t
 
acc5
 = 
IDENT
;

840 
i
 = 0; i < 
limô
; i+=6) {

841 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

842 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

843 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

847 ; 
i
 < 
Àngth
; i++) {

848 
acc0
 =ácc0 
OP
 
d©a
[
i
];

850 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
);

851 
	}
}

853 
	guƒﬁl7x7a_des¸
[] = "unroll7x7a: Array code, unrolled by 7, Superscalar x7";

854 
	$uƒﬁl7x7a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

856 
i
;

857 
Àngth
 = 
	`vec_Àngth
(
v
);

858 
limô
 = 
Àngth
-6;

859 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

860 
d©a_t
 
acc0
 = 
IDENT
;

861 
d©a_t
 
acc1
 = 
IDENT
;

862 
d©a_t
 
acc2
 = 
IDENT
;

863 
d©a_t
 
acc3
 = 
IDENT
;

864 
d©a_t
 
acc4
 = 
IDENT
;

865 
d©a_t
 
acc5
 = 
IDENT
;

866 
d©a_t
 
acc6
 = 
IDENT
;

869 
i
 = 0; i < 
limô
; i+=7) {

870 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

871 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

872 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

873 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

877 ; 
i
 < 
Àngth
; i++) {

878 
acc0
 =ácc0 
OP
 
d©a
[
i
];

880 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP (
acc4
 OP 
acc5
 OP 
acc6
);

881 
	}
}

883 
	guƒﬁl8x8a_des¸
[] = "unroll8x8a: Array code, unrolled by 8, Superscalar x8";

884 
	$uƒﬁl8x8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

886 
i
;

887 
Àngth
 = 
	`vec_Àngth
(
v
);

888 
limô
 = 
Àngth
-7;

889 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

890 
d©a_t
 
acc0
 = 
IDENT
;

891 
d©a_t
 
acc1
 = 
IDENT
;

892 
d©a_t
 
acc2
 = 
IDENT
;

893 
d©a_t
 
acc3
 = 
IDENT
;

894 
d©a_t
 
acc4
 = 
IDENT
;

895 
d©a_t
 
acc5
 = 
IDENT
;

896 
d©a_t
 
acc6
 = 
IDENT
;

897 
d©a_t
 
acc7
 = 
IDENT
;

900 
i
 = 0; i < 
limô
; i+=8) {

901 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

902 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

903 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

904 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

908 ; 
i
 < 
Àngth
; i++) {

909 
acc0
 =ácc0 
OP
 
d©a
[
i
];

911 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP ((
acc4
 OP 
acc5
ËOP (
acc6
 OP 
acc7
));

912 
	}
}

914 
	guƒﬁl9x9a_des¸
[] = "unroll9x9a: Array code, unrolled by 9, Superscalar x9";

915 
	$uƒﬁl9x9a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

917 
i
;

918 
Àngth
 = 
	`vec_Àngth
(
v
);

919 
limô
 = 
Àngth
-8;

920 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

921 
d©a_t
 
acc0
 = 
IDENT
;

922 
d©a_t
 
acc1
 = 
IDENT
;

923 
d©a_t
 
acc2
 = 
IDENT
;

924 
d©a_t
 
acc3
 = 
IDENT
;

925 
d©a_t
 
acc4
 = 
IDENT
;

926 
d©a_t
 
acc5
 = 
IDENT
;

927 
d©a_t
 
acc6
 = 
IDENT
;

928 
d©a_t
 
acc7
 = 
IDENT
;

929 
d©a_t
 
acc8
 = 
IDENT
;

932 
i
 = 0; i < 
limô
; i+=9) {

933 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

934 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

935 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

936 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

937 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

941 ; 
i
 < 
Àngth
; i++) {

942 
acc0
 =ácc0 
OP
 
d©a
[
i
];

944 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP ((
acc4
 OP 
acc5
ËOP (
acc6
 OP 
acc7
ËOP 
acc8
);

945 
	}
}

947 
	guƒﬁl10x10a_des¸
[] = "unroll10x10a: Array code, unrolled by 10, Superscalar x10";

948 
	$uƒﬁl10x10a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

950 
i
;

951 
Àngth
 = 
	`vec_Àngth
(
v
);

952 
limô
 = 
Àngth
-9;

953 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

954 
d©a_t
 
acc0
 = 
IDENT
;

955 
d©a_t
 
acc1
 = 
IDENT
;

956 
d©a_t
 
acc2
 = 
IDENT
;

957 
d©a_t
 
acc3
 = 
IDENT
;

958 
d©a_t
 
acc4
 = 
IDENT
;

959 
d©a_t
 
acc5
 = 
IDENT
;

960 
d©a_t
 
acc6
 = 
IDENT
;

961 
d©a_t
 
acc7
 = 
IDENT
;

962 
d©a_t
 
acc8
 = 
IDENT
;

963 
d©a_t
 
acc9
 = 
IDENT
;

966 
i
 = 0; i < 
limô
; i+=10) {

967 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

968 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

969 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

970 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

971 
acc8
 =ácc8 
OP
 
d©a
[
i
+8]; 
acc9
 =ácc9 OP data[i+9];

975 ; 
i
 < 
Àngth
; i++) {

976 
acc0
 =ácc0 
OP
 
d©a
[
i
];

978 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)) OP

979 ((
acc4
 
OP
 
acc5
Ë
	`OP
 (
acc6
 OP 
acc7
)) OP

980 (
acc8
 
OP
 
acc9
);

981 
	}
}

983 
	guƒﬁlx2as_des¸
[] = "unrollx2as: Array code, Unroll x2, Superscalar x2,Çoninterleaved";

984 
	$uƒﬁlx2as_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

986 
i
;

987 
Àngth
 = 
	`vec_Àngth
(
v
);

988 
limô
 = 
Àngth
/2;

989 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

990 
d©a_t
 *
d©a2
 = 
d©a
+
limô
;

991 
d©a_t
 
acc0
 = 
IDENT
;

992 
d©a_t
 
acc1
 = 
IDENT
;

995 
i
 = 0; i < 
limô
; i++) {

996 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP 
d©a2
[i];

1000 
i
 = 
limô
*2; i < 
Àngth
; i++) {

1001 
acc1
 =ácc1 
OP
 
d©a
[
i
];

1003 *
de°
 = 
acc0
 
OP
 
acc1
;

1004 
	}
}

1006 
	guƒﬁl4x2as_des¸
[] = "unroll4x2as: Array code, Unroll x4, Superscalar x2,Çoninterleaved";

1007 
	$uƒﬁl4x2as_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1009 
i
;

1010 
Àngth
 = 
	`vec_Àngth
(
v
);

1011 
limô
 = 
Àngth
/2;

1012 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1013 
d©a_t
 *
d©a2
 = 
d©a
+
limô
;

1014 
d©a_t
 
acc0
 = 
IDENT
;

1015 
d©a_t
 
acc1
 = 
IDENT
;

1018 
i
 = 0; i < 
limô
; i++) {

1019 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP 
d©a2
[i];

1023 
i
 = 
limô
*2; i < 
Àngth
; i++) {

1024 
acc1
 =ácc1 
OP
 
d©a
[
i
];

1026 *
de°
 = 
acc0
 
OP
 
acc1
;

1027 
	}
}

1031 
	guƒﬁl8x2_des¸
[] = "unroll8x2: Pointer code, unrolled by 8, Superscalar x2";

1032 
	$uƒﬁl8x2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1034 
Àngth
 = 
	`vec_Àngth
(
v
);

1035 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1036 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1037 
d©a_t
 
acc0
 = 
IDENT
;

1038 
d©a_t
 
acc1
 = 
IDENT
;

1040 
d©a
 < 
díd
) {

1041 
acc0
 =ácc0 
OP
 
d©a
[0];

1042 
acc1
 =ácc1 
OP
 
d©a
[1];

1043 
acc0
 =ácc0 
OP
 
d©a
[2];

1044 
acc1
 =ácc1 
OP
 
d©a
[3];

1045 
acc0
 =ácc0 
OP
 
d©a
[4];

1046 
acc1
 =ácc1 
OP
 
d©a
[5];

1047 
acc0
 =ácc0 
OP
 
d©a
[6];

1048 
acc1
 =ácc1 
OP
 
d©a
[7];

1049 
d©a
 += 8;

1051 
díd
 += 7;

1052 
d©a
 < 
díd
) {

1053 
acc0
 =ácc0 
OP
 *
d©a
;

1054 
d©a
 ++;

1056 *
de°
 = 
acc0
 
OP
 
acc1
;

1057 
	}
}

1059 
	guƒﬁl9x3_des¸
[] = "unroll9x3: Pointer code, unrolled by 9, Superscalar x3";

1060 
	$uƒﬁl9x3_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1062 
Àngth
 = 
	`vec_Àngth
(
v
);

1063 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1064 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-8;

1065 
d©a_t
 
acc0
 = 
IDENT
;

1066 
d©a_t
 
acc1
 = 
IDENT
;

1067 
d©a_t
 
acc2
 = 
IDENT
;

1069 
d©a
 < 
díd
) {

1070 
acc0
 =ácc0 
OP
 
d©a
[0];

1071 
acc1
 =ácc1 
OP
 
d©a
[1];

1072 
acc2
 =ácc2 
OP
 
d©a
[2];

1073 
acc0
 =ácc0 
OP
 
d©a
[3];

1074 
acc1
 =ácc1 
OP
 
d©a
[4];

1075 
acc2
 =ácc2 
OP
 
d©a
[5];

1076 
acc0
 =ácc0 
OP
 
d©a
[6];

1077 
acc1
 =ácc1 
OP
 
d©a
[7];

1078 
acc2
 =ácc2 
OP
 
d©a
[8];

1079 
d©a
 += 9;

1081 
díd
 += 8;

1082 
d©a
 < 
díd
) {

1083 
acc0
 =ácc0 
OP
 *
d©a
;

1084 
d©a
 ++;

1086 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
;

1087 
	}
}

1090 
	guƒﬁl8x4_des¸
[] = "unroll8x4: Pointer code, unrolled by 8, Superscalar x4";

1091 
	$uƒﬁl8x4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1093 
Àngth
 = 
	`vec_Àngth
(
v
);

1094 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1095 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1096 
d©a_t
 
acc3
 = 
IDENT
;

1097 
d©a_t
 
acc0
 = 
IDENT
;

1098 
d©a_t
 
acc1
 = 
IDENT
;

1099 
d©a_t
 
acc2
 = 
IDENT
;

1101 
d©a
 < 
díd
) {

1102 
acc3
 =ácc3 
OP
 
d©a
[0];

1103 
acc0
 =ácc0 
OP
 
d©a
[1];

1104 
acc1
 =ácc1 
OP
 
d©a
[2];

1105 
acc2
 =ácc2 
OP
 
d©a
[3];

1106 
acc3
 =ácc3 
OP
 
d©a
[4];

1107 
acc0
 =ácc0 
OP
 
d©a
[5];

1108 
acc1
 =ácc1 
OP
 
d©a
[6];

1109 
acc2
 =ácc2 
OP
 
d©a
[7];

1110 
d©a
 += 8;

1112 
díd
 += 7;

1113 
d©a
 < 
díd
) {

1114 
acc3
 =ácc3 
OP
 *
d©a
;

1115 
d©a
 ++;

1117 *
de°
 = 
acc3
 
OP
 
acc0
 OP 
acc1
 OP 
acc2
;

1118 
	}
}

1120 
	guƒﬁl8x8_des¸
[] = "unroll8x8: Pointer code, unrolled by 8, Superscalar x8";

1121 
	$uƒﬁl8x8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1123 
Àngth
 = 
	`vec_Àngth
(
v
);

1124 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1125 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1126 
d©a_t
 
acc4
 = 
IDENT
;

1127 
d©a_t
 
acc5
 = 
IDENT
;

1128 
d©a_t
 
acc6
 = 
IDENT
;

1129 
d©a_t
 
acc7
 = 
IDENT
;

1130 
d©a_t
 
acc3
 = 
IDENT
;

1131 
d©a_t
 
acc0
 = 
IDENT
;

1132 
d©a_t
 
acc1
 = 
IDENT
;

1133 
d©a_t
 
acc2
 = 
IDENT
;

1135 
d©a
 < 
díd
) {

1136 
acc0
 =ácc0 
OP
 
d©a
[0];

1137 
acc1
 =ácc1 
OP
 
d©a
[1];

1138 
acc2
 =ácc2 
OP
 
d©a
[2];

1139 
acc3
 =ácc3 
OP
 
d©a
[3];

1140 
acc4
 =ácc4 
OP
 
d©a
[4];

1141 
acc6
 = 
acc5
 
OP
 
d©a
[5];

1142 
acc6
 =ácc6 
OP
 
d©a
[6];

1143 
acc7
 =ácc7 
OP
 
d©a
[7];

1144 
d©a
 += 8;

1146 
díd
 += 7;

1147 
d©a
 < 
díd
) {

1148 
acc0
 =ácc0 
OP
 *
d©a
;

1149 
d©a
 ++;

1151 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
 OP 
acc3
 OP 
acc4
 OP 
acc5
 OP 
acc6
 OP 
acc7
;

1152 
	}
}

1154 
	gcomböe7_des¸
[] = "combine7: Array code, unrolled by 2, differentássociativity";

1157 
	$comböe7
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1159 
i
;

1160 
Àngth
 = 
	`vec_Àngth
(
v
);

1161 
limô
 = 
Àngth
-1;

1162 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1163 
d©a_t
 
acc
 = 
IDENT
;

1166 
i
 = 0; i < 
limô
; i+=2) {

1168 
acc
 =ác¯
	`OP
 (
d©a
[
i
] 
OP
 data[i+1]);

1173 ; 
i
 < 
Àngth
; i++) {

1174 
acc
 =ác¯
OP
 
d©a
[
i
];

1176 *
de°
 = 
acc
;

1177 
	}
}

1180 
	guƒﬁl3Ø_des¸
[] = "unroll3aa: Array code, unrolled by 3, Different Associativity";

1181 
	$uƒﬁl3Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1183 
i
;

1184 
Àngth
 = 
	`vec_Àngth
(
v
);

1185 
limô
 = 
Àngth
-2;

1186 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1187 
d©a_t
 
acc
 = 
IDENT
;

1190 
i
 = 0; i < 
limô
; i+=3) {

1191 
acc
 =ác¯
	`OP
 (
d©a
[
i
] 
OP
 data[i+1] OP data[i+2]);

1195 ; 
i
 < 
Àngth
; i++) {

1196 
acc
 =ác¯
OP
 
d©a
[
i
];

1198 *
de°
 = 
acc
;

1199 
	}
}

1201 
	guƒﬁl4Ø_des¸
[] = "unroll4aa: Array code, unrolled by 4, Different Associativity";

1202 
	$uƒﬁl4Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1204 
i
;

1205 
Àngth
 = 
	`vec_Àngth
(
v
);

1206 
limô
 = 
Àngth
-3;

1207 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1208 
d©a_t
 
acc
 = 
IDENT
;

1211 
i
 = 0; i < 
limô
; i+=4) {

1212 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1213 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1214 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
);

1218 ; 
i
 < 
Àngth
; i++) {

1219 
acc
 =ác¯
OP
 
d©a
[
i
];

1221 *
de°
 = 
acc
;

1222 
	}
}

1224 
	guƒﬁl5Ø_des¸
[] = "unroll5aa: Array code, unrolled by 5, Different Associativity";

1225 
	$uƒﬁl5Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1227 
i
;

1228 
Àngth
 = 
	`vec_Àngth
(
v
);

1229 
limô
 = 
Àngth
-4;

1230 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1231 
d©a_t
 
acc
 = 
IDENT
;

1234 
i
 = 0; i < 
limô
; i+=5) {

1235 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1236 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1237 
d©a_t
 
t3
 = 
d©a
[
i
+4];

1238 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
 OP 
t3
);

1242 ; 
i
 < 
Àngth
; i++) {

1243 
acc
 =ác¯
OP
 
d©a
[
i
];

1245 *
de°
 = 
acc
;

1246 
	}
}

1248 
	guƒﬁl6Ø_des¸
[] = "unroll6aa: Array code, unrolled by 6, Different Associativity";

1249 
	$uƒﬁl6Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1251 
i
;

1252 
Àngth
 = 
	`vec_Àngth
(
v
);

1253 
limô
 = 
Àngth
-5;

1254 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1255 
d©a_t
 
acc
 = 
IDENT
;

1258 
i
 = 0; i < 
limô
; i+=6) {

1259 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1260 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1261 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1262 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
 OP 
t3
);

1266 ; 
i
 < 
Àngth
; i++) {

1267 
acc
 =ác¯
OP
 
d©a
[
i
];

1269 *
de°
 = 
acc
;

1270 
	}
}

1272 
	guƒﬁl7Ø_des¸
[] = "unroll7aa: Array code, unrolled by 7, Different Associativity";

1273 
	$uƒﬁl7Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1275 
i
;

1276 
Àngth
 = 
	`vec_Àngth
(
v
);

1277 
limô
 = 
Àngth
-6;

1278 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1279 
d©a_t
 
acc
 = 
IDENT
;

1282 
i
 = 0; i < 
limô
; i+=7) {

1283 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1284 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1285 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1286 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1287 
d©a_t
 
t4
 = 
d©a
[
i
+6];

1288 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1289 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1293 ; 
i
 < 
Àngth
; i++) {

1294 
acc
 =ác¯
OP
 
d©a
[
i
];

1297 *
de°
 = 
acc
;

1298 
	}
}

1300 
	guƒﬁl8Ø_des¸
[] = "unroll8aa: Array code, unrolled by 8, Different Associativity";

1301 
	$uƒﬁl8Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1303 
i
;

1304 
Àngth
 = 
	`vec_Àngth
(
v
);

1305 
limô
 = 
Àngth
-7;

1306 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1307 
d©a_t
 
acc
 = 
IDENT
;

1310 
i
 = 0; i < 
limô
; i+=8) {

1311 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1312 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1313 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1314 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1315 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1316 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1317 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1321 ; 
i
 < 
Àngth
; i++) {

1322 
acc
 =ác¯
OP
 
d©a
[
i
];

1325 *
de°
 = 
acc
;

1326 
	}
}

1328 
	guƒﬁl9Ø_des¸
[] = "unroll9aa: Array code, unrolled by 9, Different Associativity";

1329 
	$uƒﬁl9Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1331 
i
;

1332 
Àngth
 = 
	`vec_Àngth
(
v
);

1333 
limô
 = 
Àngth
-8;

1334 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1335 
d©a_t
 
acc
 = 
IDENT
;

1338 
i
 = 0; i < 
limô
; i+=9) {

1339 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1340 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1341 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1342 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1343 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1344 
d©a_t
 
t5
 = 
d©a
[
i
+8];

1345 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
 OP 
t5
;

1346 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1350 ; 
i
 < 
Àngth
; i++) {

1351 
acc
 =ác¯
OP
 
d©a
[
i
];

1354 *
de°
 = 
acc
;

1355 
	}
}

1357 
	guƒﬁl10Ø_des¸
[] = "unroll10aa: Array code, unrolled by 10, Different Associativity";

1358 
	$uƒﬁl10Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1360 
i
;

1361 
Àngth
 = 
	`vec_Àngth
(
v
);

1362 
limô
 = 
Àngth
-9;

1363 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1364 
d©a_t
 
acc
 = 
IDENT
;

1367 
i
 = 0; i < 
limô
; i+=10) {

1368 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1369 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1370 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1371 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1372 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1373 
d©a_t
 
t5
 = 
d©a
[
i
+8] 
OP
 data[i+9];

1374 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
 OP 
t5
;

1375 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1379 ; 
i
 < 
Àngth
; i++) {

1380 
acc
 =ác¯
OP
 
d©a
[
i
];

1383 *
de°
 = 
acc
;

1384 
	}
}

1387 
	guƒﬁl12Ø_des¸
[] = "unroll12aa: Array code, unrolled by 12, Different Associativity";

1388 
	$uƒﬁl12Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1390 
i
;

1391 
Àngth
 = 
	`vec_Àngth
(
v
);

1392 
limô
 = 
Àngth
-11;

1393 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1394 
d©a_t
 
acc
 = 
IDENT
;

1397 
i
 = 0; i < 
limô
; i+=12) {

1398 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1399 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1400 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1401 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1402 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1403 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1404 
d©a_t
 
t5
 = 
d©a
[
i
+8] 
OP
 data[i+9];

1405 
d©a_t
 
t6
 = 
d©a
[
i
+10] 
OP
 data[i+11];

1406 
d©a_t
 
u3
 = 
t5
 
OP
 
t6
;

1407 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
 OP 
u3
);

1411 ; 
i
 < 
Àngth
; i++) {

1412 
acc
 =ác¯
OP
 
d©a
[
i
];

1415 *
de°
 = 
acc
;

1416 
	}
}

1422 
	#VBYTES
 32

	)

1425 
	#VSIZE
 
VBYTES
/(
d©a_t
)

	)

1430 
d©a_t
 
	tvec_t
 
	t__©åibuã__
 ((
	tve˘‹_size
(
	tVBYTES
)));

1435 
vec_t
 
	mv
;

1436 
d©a_t
 
	md
[
VSIZE
];

1437 } 
	t∑ck_t
;

1440 
	gsimd_v1_des¸
[] = "simd_v1: SSE code, 1*VSIZE-wayÖarallelism";

1442 
	$simd_v1_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1444 
i
;

1445 
∑ck_t
 
x„r
;

1446 
vec_t
 
accum
;

1447 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1448 
˙t
 = 
	`vec_Àngth
(
v
);

1449 
d©a_t
 
ªsu…
 = 
IDENT
;

1452 
i
 = 0; i < 
VSIZE
; i++)

1453 
x„r
.
d
[
i
] = 
IDENT
;

1454 
accum
 = 
x„r
.
v
;

1458 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1459 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1460 
˙t
--;

1464 
˙t
 >
VSIZE
) {

1465 
vec_t
 
chunk
 = *((vec_à*Ë
d©a
);

1466 
accum
 =áccum 
OP
 
chunk
;

1467 
d©a
 +
VSIZE
;

1468 
˙t
 -
VSIZE
;

1472 
˙t
) {

1473 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1474 
˙t
--;

1478 
x„r
.
v
 = 
accum
;

1479 
i
 = 0; i < 
VSIZE
; i++)

1480 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1483 *
de°
 = 
ªsu…
;

1484 
	}
}

1488 
	gsimd_v2_des¸
[] = "simd_v2: SSE code, 2*VSIZE-wayÖarallelism";

1489 
	$simd_v2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1491 
i
;

1492 
∑ck_t
 
x„r
;

1493 
vec_t
 
accum0
, 
accum1
;

1494 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1495 
˙t
 = 
	`vec_Àngth
(
v
);

1496 
d©a_t
 
ªsu…
 = 
IDENT
;

1499 
i
 = 0; i < 
VSIZE
; i++)

1500 
x„r
.
d
[
i
] = 
IDENT
;

1501 
accum0
 = 
x„r
.
v
;

1502 
accum1
 = 
x„r
.
v
;

1504 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1505 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1506 
˙t
--;

1509 
˙t
 >2*
VSIZE
) {

1510 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1511 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1512 
accum0
 =áccum0 
OP
 
chunk0
;

1513 
accum1
 =áccum1 
OP
 
chunk1
;

1514 
d©a
 +2*
VSIZE
;

1515 
˙t
 -2*
VSIZE
;

1517 
˙t
) {

1518 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1519 
˙t
--;

1521 
x„r
.
v
 = 
accum0
 
OP
 
accum1
;

1522 
i
 = 0; i < 
VSIZE
; i++)

1523 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1524 *
de°
 = 
ªsu…
;

1525 
	}
}

1527 
	gsimd_v4_des¸
[] = "simd_v4: SSE code, 4*VSIZE-wayÖarallelism";

1528 
	$simd_v4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1530 
i
;

1531 
∑ck_t
 
x„r
;

1532 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1533 
˙t
 = 
	`vec_Àngth
(
v
);

1534 
d©a_t
 
ªsu…
 = 
IDENT
;

1537 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
;

1538 
i
 = 0; i < 
VSIZE
; i++)

1539 
x„r
.
d
[
i
] = 
IDENT
;

1540 
accum0
 = 
x„r
.
v
; 
accum1
 = xfer.v;

1541 
accum2
 = 
x„r
.
v
; 
accum3
 = xfer.v;

1543 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1544 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1545 
˙t
--;

1550 
˙t
 >4*
VSIZE
) {

1551 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1552 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1553 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1554 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1555 
accum0
 =áccum0 
OP
 
chunk0
;

1556 
accum1
 =áccum1 
OP
 
chunk1
;

1557 
accum2
 =áccum2 
OP
 
chunk2
;

1558 
accum3
 =áccum3 
OP
 
chunk3
;

1559 
d©a
 +4*
VSIZE
;

1560 
˙t
 -4*
VSIZE
;

1564 
˙t
) {

1565 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1566 
˙t
--;

1571 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1574 
i
 = 0; i < 
VSIZE
; i++)

1575 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1577 *
de°
 = 
ªsu…
;

1578 
	}
}

1580 
	gsimd_v8_des¸
[] = "simd_v8: SSE code, 8*VSIZE-wayÖarallelism";

1581 
	$simd_v8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1583 
i
;

1584 
∑ck_t
 
x„r
;

1585 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
, 
accum5
, 
accum6
, 
accum7
;

1586 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1587 
˙t
 = 
	`vec_Àngth
(
v
);

1588 
d©a_t
 
ªsu…
 = 
IDENT
;

1591 
i
 = 0; i < 
VSIZE
; i++)

1592 
x„r
.
d
[
i
] = 
IDENT
;

1593 
accum0
 = 
x„r
.
v
;

1594 
accum1
 = 
x„r
.
v
;

1595 
accum2
 = 
x„r
.
v
;

1596 
accum3
 = 
x„r
.
v
;

1597 
accum4
 = 
x„r
.
v
;

1598 
accum5
 = 
x„r
.
v
;

1599 
accum6
 = 
x„r
.
v
;

1600 
accum7
 = 
x„r
.
v
;

1602 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1603 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1604 
˙t
--;

1607 
˙t
 >8*
VSIZE
) {

1608 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1609 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1610 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1611 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1612 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1613 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1614 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1615 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1616 
accum0
 =áccum0 
OP
 
chunk0
;

1617 
accum1
 =áccum1 
OP
 
chunk1
;

1618 
accum2
 =áccum2 
OP
 
chunk2
;

1619 
accum3
 =áccum3 
OP
 
chunk3
;

1620 
accum4
 =áccum4 
OP
 
chunk4
;

1621 
accum5
 =áccum5 
OP
 
chunk5
;

1622 
accum6
 =áccum6 
OP
 
chunk6
;

1623 
accum7
 =áccum7 
OP
 
chunk7
;

1624 
d©a
 +8*
VSIZE
;

1625 
˙t
 -8*
VSIZE
;

1627 
˙t
) {

1628 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1629 
˙t
--;

1631 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1632 
x„r
.
v
 = x„r.v 
	`OP
 (
accum4
 
OP
 
accum5
ËOP (
accum6
 OP 
accum7
);

1633 
i
 = 0; i < 
VSIZE
; i++)

1634 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1635 *
de°
 = 
ªsu…
;

1636 
	}
}

1638 
	gsimd_v12_des¸
[] = "simd_v12: SSE code, 12*VSIZE-wayÖarallelism";

1639 
	$simd_v12_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1641 
i
;

1642 
∑ck_t
 
x„r
;

1643 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
, 
accum5
, 
accum6
, 
accum7
;

1644 
vec_t
 
accum8
, 
accum9
, 
accum10
, 
accum11
;

1645 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1646 
˙t
 = 
	`vec_Àngth
(
v
);

1647 
d©a_t
 
ªsu…
 = 
IDENT
;

1650 
i
 = 0; i < 
VSIZE
; i++)

1651 
x„r
.
d
[
i
] = 
IDENT
;

1652 
accum0
 = 
x„r
.
v
;

1653 
accum1
 = 
x„r
.
v
;

1654 
accum2
 = 
x„r
.
v
;

1655 
accum3
 = 
x„r
.
v
;

1656 
accum4
 = 
x„r
.
v
;

1657 
accum5
 = 
x„r
.
v
;

1658 
accum6
 = 
x„r
.
v
;

1659 
accum7
 = 
x„r
.
v
;

1660 
accum8
 = 
x„r
.
v
;

1661 
accum9
 = 
x„r
.
v
;

1662 
accum10
 = 
x„r
.
v
;

1663 
accum11
 = 
x„r
.
v
;

1664 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1665 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1666 
˙t
--;

1669 
˙t
 >12*
VSIZE
) {

1670 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1671 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1672 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1673 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1674 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1675 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1676 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1677 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1678 
vec_t
 
chunk8
 = *((vec_à*Ë(
d©a
+8*
VSIZE
));

1679 
vec_t
 
chunk9
 = *((vec_à*Ë(
d©a
+9*
VSIZE
));

1680 
vec_t
 
chunk10
 = *((vec_à*Ë(
d©a
+10*
VSIZE
));

1681 
vec_t
 
chunk11
 = *((vec_à*Ë(
d©a
+11*
VSIZE
));

1682 
accum0
 =áccum0 
OP
 
chunk0
;

1683 
accum1
 =áccum1 
OP
 
chunk1
;

1684 
accum2
 =áccum2 
OP
 
chunk2
;

1685 
accum3
 =áccum3 
OP
 
chunk3
;

1686 
accum4
 =áccum4 
OP
 
chunk4
;

1687 
accum5
 =áccum5 
OP
 
chunk5
;

1688 
accum6
 =áccum6 
OP
 
chunk6
;

1689 
accum7
 =áccum7 
OP
 
chunk7
;

1690 
accum8
 =áccum8 
OP
 
chunk8
;

1691 
accum9
 =áccum9 
OP
 
chunk9
;

1692 
accum10
 =áccum10 
OP
 
chunk10
;

1693 
accum11
 =áccum11 
OP
 
chunk11
;

1694 
d©a
 +12*
VSIZE
;

1695 
˙t
 -12*
VSIZE
;

1697 
˙t
) {

1698 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1699 
˙t
--;

1701 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1702 
x„r
.
v
 = x„r.v 
	`OP
 (
accum4
 
OP
 
accum5
ËOP (
accum6
 OP 
accum7
);

1703 
x„r
.
v
 = x„r.v 
	`OP
 (
accum8
 
OP
 
accum9
ËOP (
accum10
 OP 
accum11
);

1704 
i
 = 0; i < 
VSIZE
; i++)

1705 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1706 *
de°
 = 
ªsu…
;

1707 
	}
}

1710 
	gsimd_v2a_des¸
[] = "simd_v2a: SSE code, 2*VSIZE-wayÖarallelism,Ñeassociate";

1711 
	$simd_v2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1713 
i
;

1714 
∑ck_t
 
x„r
;

1715 
vec_t
 
accum
;

1716 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1717 
˙t
 = 
	`vec_Àngth
(
v
);

1718 
d©a_t
 
ªsu…
 = 
IDENT
;

1721 
i
 = 0; i < 
VSIZE
; i++)

1722 
x„r
.
d
[
i
] = 
IDENT
;

1723 
accum
 = 
x„r
.
v
;

1725 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1726 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1727 
˙t
--;

1730 
˙t
 >2*
VSIZE
) {

1731 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1732 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1733 
accum
 =áccum 
	`OP
 (
chunk0
 
OP
 
chunk1
);

1734 
d©a
 +2*
VSIZE
;

1735 
˙t
 -2*
VSIZE
;

1737 
˙t
) {

1738 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1739 
˙t
--;

1741 
x„r
.
v
 = 
accum
;

1742 
i
 = 0; i < 
VSIZE
; i++)

1743 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1744 *
de°
 = 
ªsu…
;

1745 
	}
}

1747 
	gsimd_v4a_des¸
[] = "simd_v4a: SSE code, 4*VSIZE-wayÖarallelism,Ñeassociate";

1748 
	$simd_v4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1750 
i
;

1751 
∑ck_t
 
x„r
;

1752 
vec_t
 
accum
;

1753 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1754 
˙t
 = 
	`vec_Àngth
(
v
);

1755 
d©a_t
 
ªsu…
 = 
IDENT
;

1758 
i
 = 0; i < 
VSIZE
; i++)

1759 
x„r
.
d
[
i
] = 
IDENT
;

1760 
accum
 = 
x„r
.
v
;

1762 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1763 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1764 
˙t
--;

1768 
˙t
 >4*
VSIZE
) {

1769 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1770 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1771 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1772 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1773 
accum
 =áccum 
OP


1774 ((
chunk0
 
OP
 
chunk1
Ë
	`OP
 (
chunk2
 OP 
chunk3
));

1775 
d©a
 +4*
VSIZE
;

1776 
˙t
 -4*
VSIZE
;

1780 
˙t
) {

1781 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1782 
˙t
--;

1784 
x„r
.
v
 = 
accum
;

1785 
i
 = 0; i < 
VSIZE
; i++)

1786 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1787 *
de°
 = 
ªsu…
;

1788 
	}
}

1790 
	gsimd_v8a_des¸
[] = "simd_v8a: SSE code, 8*VSIZE-wayÖarallelism,Ñeassociate";

1791 
	$simd_v8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1793 
i
;

1794 
∑ck_t
 
x„r
;

1795 
vec_t
 
accum
;

1796 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1797 
˙t
 = 
	`vec_Àngth
(
v
);

1798 
d©a_t
 
ªsu…
 = 
IDENT
;

1801 
i
 = 0; i < 
VSIZE
; i++)

1802 
x„r
.
d
[
i
] = 
IDENT
;

1803 
accum
 = 
x„r
.
v
;

1805 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1806 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1807 
˙t
--;

1810 
˙t
 >8*
VSIZE
) {

1811 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1812 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1813 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1814 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1815 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1816 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1817 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1818 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1819 
accum
 =áccum 
OP


1820 (((
chunk0
 
OP
 
chunk1
Ë
	`OP
 (
chunk2
 OP 
chunk3
))

1821 
OP


1822 ((
chunk4
 
OP
 
chunk5
Ë
	`OP
 (
chunk6
 OP 
chunk7
)));

1823 
d©a
 +8*
VSIZE
;

1824 
˙t
 -8*
VSIZE
;

1826 
˙t
) {

1827 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1828 
˙t
--;

1830 
x„r
.
v
 = 
accum
;

1831 
i
 = 0; i < 
VSIZE
; i++)

1832 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1833 *
de°
 = 
ªsu…
;

1834 
	}
}

1837 
	$ªgi°î_comböîs
()

1839 #i‚de‡
UNROLL_ONLY


1840 
	`add_comböî
(
comböe1
, comböe1, 
comböe1_des¸
);

1841 
	`add_comböî
(
comböe2
, 
comböe1
, 
comböe2_des¸
);

1842 
	`add_comböî
(
comböe3
, 
comböe1
, 
comböe3_des¸
);

1843 
	`add_comböî
(
comböe3w
, 
comböe1
, 
comböe3w_des¸
);

1845 
	`add_comböî
(
comböe4
, 
comböe1
,
comböe4_des¸
);

1846 #i‚de‡
UNROLL_ONLY


1847 
	`add_comböî
(
comböe4b
, 
comböe1
, 
comböe4b_des¸
);

1848 
	`add_comböî
(
comböe4p
, 
comböe1
, 
comböe4p_des¸
);

1850 
	`add_comböî
(
comböe5
, 
comböe1
, 
comböe5_des¸
);

1851 #i‚de‡
UNROLL_ONLY


1852 
	`add_comböî
(
comböe5p
, 
comböe1
, 
comböe5p_des¸
);

1853 
	`add_comböî
(
uƒﬁl2aw_comböe
, 
comböe1
, 
uƒﬁl2aw_des¸
);

1855 
	`add_comböî
(
uƒﬁl3a_comböe
, 
comböe1
, 
uƒﬁl3a_des¸
);

1856 
	`add_comböî
(
uƒﬁl4a_comböe
, 
comböe1
, 
uƒﬁl4a_des¸
);

1857 
	`add_comböî
(
uƒﬁl5a_comböe
, 
comböe1
, 
uƒﬁl5a_des¸
);

1858 
	`add_comböî
(
uƒﬁl6a_comböe
, 
comböe1
, 
uƒﬁl6a_des¸
);

1859 
	`add_comböî
(
uƒﬁl7a_comböe
, 
comböe1
, 
uƒﬁl7a_des¸
);

1860 
	`add_comböî
(
uƒﬁl8a_comböe
, 
comböe1
, 
uƒﬁl8a_des¸
);

1861 
	`add_comböî
(
uƒﬁl9a_comböe
, 
comböe1
, 
uƒﬁl9a_des¸
);

1862 
	`add_comböî
(
uƒﬁl10a_comböe
, 
comböe1
, 
uƒﬁl10a_des¸
);

1863 
	`add_comböî
(
uƒﬁl16a_comböe
, 
comböe1
, 
uƒﬁl16a_des¸
);

1864 #i‚de‡
UNROLL_ONLY


1865 
	`add_comböî
(
uƒﬁl2_comböe
, 
comböe1
, 
uƒﬁl2_des¸
);

1866 
	`add_comböî
(
uƒﬁl3_comböe
, 
comböe1
, 
uƒﬁl3_des¸
);

1867 
	`add_comböî
(
uƒﬁl4_comböe
, 
comböe1
, 
uƒﬁl4_des¸
);

1868 
	`add_comböî
(
uƒﬁl8_comböe
, 
comböe1
, 
uƒﬁl8_des¸
);

1869 
	`add_comböî
(
uƒﬁl16_comböe
, 
comböe1
, 
uƒﬁl16_des¸
);

1870 
	`add_comböî
(
comböe6
, 
comböe1
, 
comböe6_des¸
);

1871 
	`add_comböî
(
uƒﬁl4x2a_comböe
, 
comböe1
, 
uƒﬁl4x2a_des¸
);

1872 
	`add_comböî
(
uƒﬁl8x2a_comböe
, 
comböe1
, 
uƒﬁl8x2a_des¸
);

1873 
	`add_comböî
(
uƒﬁl3x3a_comböe
, 
comböe1
, 
uƒﬁl3x3a_des¸
);

1874 
	`add_comböî
(
uƒﬁl4x4a_comböe
, 
comböe1
, 
uƒﬁl4x4a_des¸
);

1875 
	`add_comböî
(
uƒﬁl5x5a_comböe
, 
comböe1
, 
uƒﬁl5x5a_des¸
);

1876 
	`add_comböî
(
uƒﬁl6x6a_comböe
, 
comböe1
, 
uƒﬁl6x6a_des¸
);

1877 
	`add_comböî
(
uƒﬁl7x7a_comböe
, 
comböe1
, 
uƒﬁl7x7a_des¸
);

1878 
	`add_comböî
(
uƒﬁl8x4a_comböe
, 
comböe1
, 
uƒﬁl8x4a_des¸
);

1879 
	`add_comböî
(
uƒﬁl8x8a_comböe
, 
comböe1
, 
uƒﬁl8x8a_des¸
);

1880 
	`add_comböî
(
uƒﬁl9x9a_comböe
, 
comböe1
, 
uƒﬁl9x9a_des¸
);

1881 
	`add_comböî
(
uƒﬁl10x10a_comböe
, 
comböe1
, 
uƒﬁl10x10a_des¸
);

1882 
	`add_comböî
(
uƒﬁl12x6a_comböe
, 
comböe1
, 
uƒﬁl12x6a_des¸
);

1883 
	`add_comböî
(
uƒﬁl12x12a_comböe
, 
comböe1
, 
uƒﬁl12x12a_des¸
);

1884 
	`add_comböî
(
uƒﬁl8x2_comböe
, 
comböe1
, 
uƒﬁl8x2_des¸
);

1885 
	`add_comböî
(
uƒﬁl8x4_comböe
, 
comböe1
, 
uƒﬁl8x4_des¸
);

1886 
	`add_comböî
(
uƒﬁl8x8_comböe
, 
comböe1
, 
uƒﬁl8x8_des¸
);

1887 
	`add_comböî
(
uƒﬁl9x3_comböe
, 
comböe1
, 
uƒﬁl9x3_des¸
);

1888 
	`add_comböî
(
uƒﬁlx2as_comböe
, 
comböe1
, 
uƒﬁlx2as_des¸
);

1889 
	`add_comböî
(
comböe7
, 
comböe1
, 
comböe7_des¸
);

1890 
	`add_comböî
(
uƒﬁl3Ø_comböe
, 
comböe1
, 
uƒﬁl3Ø_des¸
);

1891 
	`add_comböî
(
uƒﬁl4Ø_comböe
, 
comböe1
, 
uƒﬁl4Ø_des¸
);

1892 
	`add_comböî
(
uƒﬁl5Ø_comböe
, 
comböe1
, 
uƒﬁl5Ø_des¸
);

1893 
	`add_comböî
(
uƒﬁl6Ø_comböe
, 
comböe1
, 
uƒﬁl6Ø_des¸
);

1894 
	`add_comböî
(
uƒﬁl7Ø_comböe
, 
comböe1
, 
uƒﬁl7Ø_des¸
);

1895 
	`add_comböî
(
uƒﬁl8Ø_comböe
, 
comböe1
, 
uƒﬁl8Ø_des¸
);

1896 
	`add_comböî
(
uƒﬁl9Ø_comböe
, 
comböe1
, 
uƒﬁl9Ø_des¸
);

1897 
	`add_comböî
(
uƒﬁl10Ø_comböe
, 
comböe1
, 
uƒﬁl10Ø_des¸
);

1898 
	`add_comböî
(
uƒﬁl12Ø_comböe
, 
comböe1
, 
uƒﬁl12Ø_des¸
);

1899 
	`add_comböî
(
simd_v1_comböe
, 
comböe1
, 
simd_v1_des¸
);

1900 
	`add_comböî
(
simd_v2_comböe
, 
comböe1
, 
simd_v2_des¸
);

1901 
	`add_comböî
(
simd_v4_comböe
, 
comböe1
, 
simd_v4_des¸
);

1902 
	`add_comböî
(
simd_v8_comböe
, 
comböe1
, 
simd_v8_des¸
);

1903 
	`add_comböî
(
simd_v12_comböe
, 
comböe1
, 
simd_v12_des¸
);

1904 
	`add_comböî
(
simd_v2a_comböe
, 
comböe1
, 
simd_v2a_des¸
);

1905 
	`add_comböî
(
simd_v4a_comböe
, 
comböe1
, 
simd_v4a_des¸
);

1906 
	`add_comböî
(
simd_v8a_comböe
, 
comböe1
, 
simd_v8a_des¸
);

1907 
	`log_comböî
(
simd_v8a_comböe
, 0.16, 0.24);

1909 
	}
}

	@opt/list.c

2 
	~<°dio.h
>

3 
	~"˝e.h
"

5 
	#ASIZE
 1024

	)

8 
	sELE
 {

9 
ELE
 *
	m√xt
;

10 
	md©a
;

11 } 
	tli°_ñe
, *
	tli°_±r
;

15 
li°_ñe
 
	gmaö_li°
[
ASIZE
];

17 
	$mylök
(
Àn
)

19 
i
;

21 
i
 = 0; i < 
Àn
-1; i++) {

22 
maö_li°
[
i
].
d©a
 = i;

23 
maö_li°
[
i
].
√xt
 = &main_list[i+1];

25 
maö_li°
[
Àn
-1].
d©a
 =Üen-1;

26 
maö_li°
[
Àn
-1].
√xt
 = 
NULL
;

27 
	}
}

30 
	$li°_Àn
(
li°_±r
 
ls
) {

31 
Àn
 = 0;

32 
ls
) {

33 
Àn
++;

34 
ls
 =Üs->
√xt
;

36  
Àn
;

37 
	}
}

40 
	$li°_Àn_˛ór
(
li°_±r
 
ls
)

42 
Àn
 = 0;

43 
ls
) {

44 
ls
->
d©a
 = 0;

45 
ls
 =Üs->
√xt
;

46 
Àn
++;

48  
Àn
;

49 
	}
}

51 
	$li°_sum_˛ór
(
li°_±r
 
ls
)

53 
sum
 = 0;

54 
ls
) {

55 
sum
 +
ls
->
d©a
;

56 
ls
->
d©a
 = 0;

57 
ls
 =Üs->
√xt
;

59  
sum
;

60 
	}
}

64 
	$li°_sum
(
li°_±r
 
ls
)

66 
sum
 = 0;

68 ; 
ls
;Ü†ls->
√xt
)

69 
sum
 +
ls
->
d©a
;

70  
sum
;

71 
	}
}

75 
	$li°_sum2
(
li°_±r
 
ls
)

77 
sum
 = 0;

78 
li°_±r
 
ﬁd
;

80 
ls
) {

81 
ﬁd
 = 
ls
;

82 
ls
 =Üs->
√xt
;

83 
sum
 +
ﬁd
->
d©a
;

85  
sum
;

86 
	}
}

89 
	$pùe_sum2
(
li°_±r
 
ls
)

91 
sum
 = 0;

92 
li°_±r
 
√xt
;

93 
ls
) {

94 
√xt
 = 
ls
->next;

95 
sum
 +
ls
->
d©a
;

96 
ls
 = 
√xt
;

98  
sum
;

99 
	}
}

101 
	$æi°_Àn
(
li°_±r
 
ls
)

103 i‡(!
ls
)

105  1+
	`æi°_Àn
(
ls
->
√xt
);

106 
	}
}

108 
	$æi°_sum
(
li°_±r
 
ls
)

110 i‡(!
ls
)

112  
ls
->
d©a
+
	`æi°_sum
÷s->
√xt
);

113 
	}
}

116 
	$li°_c›y
(
li°_±r
 
§c
,Üi°_±∏
de°
)

118 
§c
 && 
de°
) {

119 
de°
->
d©a
 = 
§c
->data;

120 
§c
 = src->
√xt
;

121 
de°
 = de°->
√xt
;

123 
	}
}

126 
	$∂i°_c›y
(
li°_±r
 
§c
,Üi°_±∏
de°
)

128 
li°_±r
 
o§c
 = 
§c
;

129 
li°_±r
 
ode°
 = 
de°
;

130 i‡(!
o§c
 || !
ode°
)

133 
ode°
 = 
de°
;

134 
de°
 = de°->
√xt
;

135 
o§c
 = 
§c
;

136 
§c
 = src->
√xt
;

137 
ode°
->
d©a
 = 
o§c
->data;

138 } 
§c
 && 
de°
);

139 
	}
}

142 
	$∂i°_c›y2
(
li°_±r
 
§c
,Üi°_±∏
de°
)

144 
li°_±r
 
n§c
, 
nde°
;

145 
§c
 && 
de°
) {

146 
n§c
 = 
§c
->
√xt
;

147 
nde°
 = 
de°
->
√xt
;

148 
de°
->
d©a
 = 
§c
->data;

149 
§c
 = 
n§c
;

150 
de°
 = 
nde°
;

152 
	}
}

154 
	$°©i⁄¨y_c›y
(
li°_±r
 
§c
,Üi°_±∏
de°
)

156 
i
;

157 
i
 = 0; i < 
ASIZE
; i++) {

158 
de°
->
d©a
 = 
§c
->data;

160 
	}
}

162 (*
	tli°_fun
)(
	tli°_±r
);

166 
	#TEST_COUNT
 8

	)

167 
li°_fun
 
ã°_fun
[
TEST_COUNT
] =

168 {
li°_Àn
, 
li°_sum
, 
li°_sum2
, 
pùe_sum2
, 
æi°_Àn
, 
æi°_sum
,

169 
li°_Àn_˛ór
, 
li°_sum_˛ór
};

170 * 
	gã°_des¸
[
TEST_COUNT
] =

180 
	gmyödex
 = 0;

182 
	$ã°
(
n
)

185 
li°_±r
 
⁄ext
 = 
maö_li°
[
n
-1].
√xt
;

186 
maö_li°
[
n
-1].
√xt
 = 
NULL
;

187 
ã°_fun
[
myödex
](
maö_li°
);

188 
maö_li°
[
n
-1].
√xt
 = 
⁄ext
;

189 
	}
}

193 
	$run_ã°
(
i
)

195 
˝e
;

196 
Àn
 = 
ASIZE
;

197 
	`mylök
(
Àn
);

198 
	`¥ötf
("Description: %s, f(%ld) = %ld, ",

199 
ã°_des¸
[
i
], 
Àn
, 
ã°_fun
[i](
maö_li°
));

200 
myödex
 = 
i
;

201 
˝e
 = 
	`föd_˝e
(
ã°
, 
ASIZE
);

203 
	`¥ötf
("CPE = %.2f\n", 
˝e
);

204 
	}
}

207 (*
	tli°2_fun
)(
	tli°_±r
,Üist_ptr);

209 
	#TEST2_COUNT
 4

	)

210 
li°2_fun
 
ã°2_fun
[
TEST2_COUNT
] =

211 { 
li°_c›y
, 
∂i°_c›y
, 
∂i°_c›y2
, 
°©i⁄¨y_c›y
 
	}
};

212 *
	gã°2_des¸
[
TEST2_COUNT
] =

216 
	$ã°2a
(
n
)

218 
li°_±r
 
⁄ext
 = 
maö_li°
[
n
-1].
√xt
;

219 
maö_li°
[
n
-1].
√xt
 = 
NULL
;

220 
ã°2_fun
[
myödex
](
maö_li°
,main_list);

221 
maö_li°
[
n
-1].
√xt
 = 
⁄ext
;

222 
	}
}

224 
	$ã°2b
(
n
)

226 
li°_±r
 
⁄ext
 = 
maö_li°
[
n
-1].
√xt
;

227 
maö_li°
[
n
-1].
√xt
 = 
NULL
;

228 
ã°2_fun
[
myödex
](
maö_li°
,maö_li°->
√xt
);

229 
maö_li°
[
n
-1].
√xt
 = 
⁄ext
;

230 
	}
}

232 
	$ã°2c
(
n
)

234 
li°_±r
 
⁄ext
 = 
maö_li°
[
n
-1].
√xt
;

235 
maö_li°
[
n
-1].
√xt
 = 
NULL
;

236 
ã°2_fun
[
myödex
](
maö_li°
->
√xt
,main_list);

237 
maö_li°
[
n
-1].
√xt
 = 
⁄ext
;

238 
	}
}

240 
	#CASE2_COUNT
 3

	)

242 (*
	tã°_fun2
)();

244 
ã°_fun2
 
ˇ£_fun
[
CASE2_COUNT
] =

245 { 
ã°2a
, 
ã°2b
, 
ã°2c
 
	}
};

247 *
	gˇ£2_des¸
[
CASE2_COUNT
] =

253 
	$run_ã°2
(
i
, 
c
)

255 
˝e
;

256 
Àn
 = 
ASIZE
;

257 
	`mylök
(
Àn
);

258 
	`¥ötf
("Description: %s, %s, ",

259 
ã°2_des¸
[
i
], 
ˇ£2_des¸
[
c
]);

260 
myödex
 = 
i
;

261 
˝e
 = 
	`föd_˝e
(
ˇ£_fun
[
c
], 
ASIZE
);

263 
	`¥ötf
("CPE = %.2f\n", 
˝e
);

264 
	}
}

266 
	$maö
()

268 
i
, 
c
;

269 
i
 = 0; i < 
TEST_COUNT
; i++)

270 
	`run_ã°
(
i
);

272 
i
 = 0; i < 
TEST2_COUNT
; i++)

273 
c
 = 0; c < 
CASE2_COUNT
; c++)

274 
	`run_ã°2
(
i
,
c
);

277 
	}
}

	@opt/lower-obsolete.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	~"˛ock.h
"

6 
	~"fcyc.h
"

8 
	#ABITS
 18

	)

9 
	#ASIZE
 (1 << 
ABITS
)

	)

12 
	#MAX_BENCHMARKS
 10

	)

14 (*
	tlowî_t
)(*);

16 
d©a
[
ASIZE
];

18 
	$£tup
(
Àn
)

20 
i
;

21 
i
 = 0; i < 
Àn
-1; i++)

22 
d©a
[
i
] = 'a' + i%26;

23 
d©a
[
Àn
-1] = '\0';

24 
	}
}

26 
lowî_t
 
	gcuºít_lf
;

28 
	$run
(*
junk
) {

29 
	`cuºít_lf
(
d©a
);

30 
	}
}

33 
	$run_ã°
(
lowî_t
 
lf
, 
Àn
)

35 
time
;

36 
çe
;

37 
cuºít_lf
 = 
lf
;

38 
	`£tup
(
Àn
);

39 
	`cuºít_lf
(
d©a
);

40 
time
 = 
	`fcyc
(
run
, 
NULL
Ë/ 
	`mhz
(0) * 1e-6;

41 
çe
 = 
time
 * 1e6 /(Ë
Àn
;

43 
	`¥ötf
("%d\t%f\t%f\n", 
Àn
, 
time
, 
çe
);

44 
	}
}

46 
	$quad_lowî
(*
s
)

48 
i
;

49 
i
 = 0; i < 
	`°æí
(
s
); i++)

50 i‡(
s
[
i
] >= 'A' && s[i] <= 'Z')

51 
s
[
i
] -= ('A' - 'a');

52 
	}
}

54 
	$lö_lowî
(*
s
)

56 
i
;

57 
Àn
 = 
	`°æí
(
s
);

58 
i
 = 0; i < 
Àn
; i++)

59 i‡(
s
[
i
] >= 'A' && s[i] <= 'Z')

60 
s
[
i
] -= ('A' - 'a');

61 
	}
}

64 
	$maö
()

66 
size
;

67 
	`¥ötf
("Linear: \n");

68 
	`¥ötf
("Length\tSeconds\tuSPE\n");

69 
size
 = 1; sizê<
ABITS
; size++) {

70 
	`run_ã°
(
lö_lowî
, 1<<
size
);

72 
	`¥ötf
("Quadratic:\n");

73 
	`¥ötf
("Length\tSeconds\tuSPE\n");

74 
size
 = 1; sizê<
ABITS
; size++) {

75 
	`run_ã°
(
quad_lowî
, 1<<
size
);

78 
	}
}

	@opt/lower.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	~"˛ock.h
"

6 
	~"fcyc.h
"

8 
	#LSIZE
 500000

	)

9 
	#LINCR
 20000

	)

11 
	#ESIZE
 (1<<20)

	)

12 
	#EMIN
 (1<<14)

	)

14 
	#ASIZE
 (
LSIZE
 < 
ESIZE
 ? ESIZE : LSIZE)

	)

17 
	#MAX_BENCHMARKS
 10

	)

19 
	gd©a
[
ASIZE
];

21 
	g˛ock_øã
 = 0.0;

23 
	$öô
()

25 
i
;

26 
i
 = 0; i < 
ASIZE
; i++)

27 
d©a
[
i
] = 'a' + i%26;

28 
	}
}

30 
	$£t_Àn
(
Àn
)

32 
d©a
[
Àn
] = '\0';

33 
	}
}

35 
	$un£t_Àn
(
Àn
)

37 
d©a
[
Àn
] = 'a' +Üen%26;

38 
	}
}

42 
	$lowî1
(*
s
)

44 
i
;

46 
i
 = 0; i < 
	`°æí
(
s
); i++)

47 i‡(
s
[
i
] >= 'A' && s[i] <= 'Z')

48 
s
[
i
] -= ('A' - 'a');

49 
	}
}

52 
	$lowî2
(*
s
)

54 
i
;

55 
Àn
 = 
	`°æí
(
s
);

57 
i
 = 0; i < 
Àn
; i++)

58 i‡(
s
[
i
] >= 'A' && s[i] <= 'Z')

59 
s
[
i
] -= ('A' - 'a');

60 
	}
}

64 
size_t
 
	$°æí
(c⁄° *
s
)

66 
Àngth
 = 0;

67 *
s
 != '\0') {

68 
s
++;

69 
Àngth
++;

71  
Àngth
;

72 
	}
}

75 
	$ã°_lowî1
(*
À≈
)

77 
Àn
 = *
À≈
;

78 
	`£t_Àn
(
Àn
);

79 
	`lowî1
(
d©a
);

80 
	`un£t_Àn
(
Àn
);

81 
	}
}

83 
	$ã°_lowî2
(*
À≈
)

85 
Àn
 = *
À≈
;

86 
	`£t_Àn
(
Àn
);

87 
	`lowî2
(
d©a
);

88 
	`un£t_Àn
(
Àn
);

89 
	}
}

92 
	$run_ã°
(
ã°_fun˘
 
fun
, 
Àn
)

94 
cycs
;

95 
time
;

97 
	`£t_fcyc_com≥nßã
(0);

98 
cycs
 = 
	`fcyc
(
fun
,&
Àn
);

99 
time
 = 
cycs
/(
˛ock_øã
*1e6);

100  
time
;

101 
	}
}

105 
	$löór
()

107 
size
;

108 
	`¥ötf
("Length\tlower1\tlower2\n");

109 
size
 = 
LINCR
; sizê<
LSIZE
; size+=LINCR) {

110 
	`¥ötf
("%ld", 
size
);

111 
	`¥ötf
("\t%f", 
	`run_ã°
(
ã°_lowî1
, 
size
));

112 
	`¥ötf
("\t%f\n", 
	`run_ã°
(
ã°_lowî2
, 
size
));

114 
	}
}

116 
	$expo
()

118 
size
;

119 
size
 = 
EMIN
; sizê<
ESIZE
; size += size)

120 
	`¥ötf
("& %ld ", 
size
);

121 
	`¥ötf
(" \\\\\n");

122 
size
 = 
EMIN
; sizê<
ESIZE
; size += size)

123 
	`¥ötf
("& %.2‡", 
	`run_ã°
(
ã°_lowî1
, 
size
));

124 
	`¥ötf
(" \\\\\n");

125 
size
 = 
EMIN
; sizê<
ESIZE
; size += size)

126 
	`¥ötf
("& %.4‡", 
	`run_ã°
(
ã°_lowî2
, 
size
));

127 
	`¥ötf
(" \\\\\n");

128 
	}
}

130 
	$maö
(
¨gc
, *
¨gv
[])

132 
	`öô
();

133 
˛ock_øã
 = 
	`mhz
(1);

134 i‡(
¨gc
 > 1)

135 
	`expo
();

137 
	`löór
();

139 
	}
}

	@opt/lpb-O1.c

1 
	~"comböe.h
"

5 
	gcomböe1_des¸
[] = "combine1: Maximum use of dataábstraction";

8 
	$comböe1
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

10 
i
;

12 *
de°
 = 
IDENT
;

13 
i
 = 0; i < 
	`vec_Àngth
(
v
); i++) {

14 
d©a_t
 
vÆ
;

15 
	`gë_vec_ñemít
(
v
, 
i
, &
vÆ
);

17 *
de°
 = *de° 
OP
 
vÆ
;

20 
	}
}

23 
	gcomböe2_des¸
[] = "combine2: Take vec_length() out ofÜoop";

26 
	$comböe2
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

28 
i
;

29 
Àngth
 = 
	`vec_Àngth
(
v
);

31 *
de°
 = 
IDENT
;

32 
i
 = 0; i < 
Àngth
; i++) {

33 
d©a_t
 
vÆ
;

34 
	`gë_vec_ñemít
(
v
, 
i
, &
vÆ
);

35 *
de°
 = *de° 
OP
 
vÆ
;

37 
	}
}

40 
	gcomböe3_des¸
[] = "combine3: ArrayÑeferenceÅo vector data";

43 
	$comböe3
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

45 
i
;

46 
Àngth
 = 
	`vec_Àngth
(
v
);

47 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

49 *
de°
 = 
IDENT
;

50 
i
 = 0; i < 
Àngth
; i++) {

51 *
de°
 = *de° 
OP
 
d©a
[
i
];

53 
	}
}

56 
	gcomböe3w_des¸
[] = "combine3w: Update *dest withinÜoop only with write";

59 
	$comböe3w
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

61 
i
;

62 
Àngth
 = 
	`vec_Àngth
(
v
);

63 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

64 
d©a_t
 
acc
 = 
IDENT
;

67 *
de°
 = 
acc
;

69 
i
 = 0; i < 
Àngth
; i++) {

70 
acc
 =ác¯
OP
 
d©a
[
i
];

71 *
de°
 = 
acc
;

73 
	}
}

76 
	gcomböe4_des¸
[] = "combine4: ArrayÑeference,áccumulate inÅemporary";

79 
	$comböe4
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

81 
i
;

82 
Àngth
 = 
	`vec_Àngth
(
v
);

83 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

84 
d©a_t
 
acc
 = 
IDENT
;

86 
i
 = 0; i < 
Àngth
; i++) {

87 
acc
 =ác¯
OP
 
d©a
[
i
];

89 *
de°
 = 
acc
;

90 
	}
}

93 
	gcomböe4b_des¸
[] = "combine4b: Include bonds check inÜoop";

96 
	$comböe4b
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

98 
i
;

99 
Àngth
 = 
	`vec_Àngth
(
v
);

100 
d©a_t
 
acc
 = 
IDENT
;

102 
i
 = 0; i < 
Àngth
; i++) {

103 i‡(
i
 >0 && i < 
v
->
Àn
) {

104 
acc
 =ác¯
OP
 
v
->
d©a
[
i
];

107 *
de°
 = 
acc
;

108 
	}
}

112 
	gcomböe4p_des¸
[] = "combine4p: PointerÑeference,áccumulate inÅemporary";

115 
	$comböe4p
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

117 
Àngth
 = 
	`vec_Àngth
(
v
);

118 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

119 
d©a_t
 *
díd
 = 
d©a
+
Àngth
;

120 
d©a_t
 
acc
 = 
IDENT
;

122 ; 
d©a
 < 
díd
; data++)

123 
acc
 =ác¯
OP
 *
d©a
;

124 *
de°
 = 
acc
;

125 
	}
}

129 
	gcomböe5_des¸
[] = "combine5: Array code, unrolled by 2";

132 
	$comböe5
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

134 
i
;

135 
Àngth
 = 
	`vec_Àngth
(
v
);

136 
limô
 = 
Àngth
-1;

137 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

138 
d©a_t
 
acc
 = 
IDENT
;

141 
i
 = 0; i < 
limô
; i+=2) {

143 
acc
 = (ac¯
OP
 
d©a
[
i
]) OP data[i+1];

148 ; 
i
 < 
Àngth
; i++) {

149 
acc
 =ác¯
OP
 
d©a
[
i
];

151 *
de°
 = 
acc
;

152 
	}
}

155 
	guƒﬁl3a_des¸
[] = "unroll3a: Array code, unrolled by 3";

156 
	$uƒﬁl3a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

158 
i
;

159 
Àngth
 = 
	`vec_Àngth
(
v
);

160 
limô
 = 
Àngth
-2;

161 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

162 
d©a_t
 
acc
 = 
IDENT
;

165 
i
 = 0; i < 
limô
; i+=3) {

166 
acc
 =ác¯
OP
 
d©a
[
i
];

167 
acc
 =ác¯
OP
 
d©a
[
i
+1];

168 
acc
 =ác¯
OP
 
d©a
[
i
+2];

172 ; 
i
 < 
Àngth
; i++) {

173 
acc
 =ác¯
OP
 
d©a
[
i
];

175 *
de°
 = 
acc
;

176 
	}
}

179 
	gcomböe5p_des¸
[] = "combine5p: Pointer code, unrolled by 2, forÜoop";

182 
	$comböe5p
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

184 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

185 
d©a_t
 *
díd
 = 
d©a
+
	`vec_Àngth
(
v
);

186 
d©a_t
 *
dlimô
 = 
díd
-1;

187 
d©a_t
 
acc
 = 
IDENT
;

190 ; 
d©a
 < 
dlimô
; data += 2) {

191 
acc
 =ác¯
OP
 
d©a
[0] OP data[1];

195 ; 
d©a
 < 
díd
; data++) {

196 
acc
 =ác¯
OP
 
d©a
[0];

198 *
de°
 = 
acc
;

199 
	}
}

202 
	guƒﬁl2aw_des¸
[] = "unroll2aw: Array code, unrolled by 2, whileÜoop";

203 
	$uƒﬁl2aw_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

205 
i
 = 0;

206 
Àngth
 = 
	`vec_Àngth
(
v
);

207 
limô
 = 
Àngth
-1;

208 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

209 
d©a_t
 
acc
 = 
IDENT
;

212 
i
 < 
limô
) {

213 
acc
 =ác¯
OP
 
d©a
[
i
];

214 
i
+= 2;

215 
acc
 =ác¯
OP
 
d©a
[
i
-1];

219 ; 
i
 < 
Àngth
; i++) {

220 
acc
 =ác¯
OP
 
d©a
[
i
];

222 *
de°
 = 
acc
;

223 
	}
}

226 
	guƒﬁl4a_des¸
[] = "unroll4a: Array code, unrolled by 4";

227 
	$uƒﬁl4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

229 
i
;

230 
Àngth
 = 
	`vec_Àngth
(
v
);

231 
limô
 = 
Àngth
-3;

232 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

233 
d©a_t
 
acc
 = 
IDENT
;

236 
i
 = 0; i < 
limô
; i+=4) {

237 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

238 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

242 ; 
i
 < 
Àngth
; i++) {

243 
acc
 =ác¯
OP
 
d©a
[
i
];

245 *
de°
 = 
acc
;

246 
	}
}

248 
	guƒﬁl5a_des¸
[] = "unroll5a: Array code, unrolled by 5";

251 
	$uƒﬁl5
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

254 
	$uƒﬁl5a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

258 
i
;

259 
Àngth
 = 
	`vec_Àngth
(
v
);

260 
limô
 = 
Àngth
-4;

261 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

262 
d©a_t
 
acc
 = 
IDENT
;

265 
i
 = 0; i < 
limô
; i+=5) {

266 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

267 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

268 
acc
 =ác¯
OP
 
d©a
[
i
+4];

272 ; 
i
 < 
Àngth
; i++) {

273 
acc
 =ác¯
OP
 
d©a
[
i
];

275 *
de°
 = 
acc
;

276 
	}
}

279 
	guƒﬁl6a_des¸
[] = "unroll6a: Array code, unrolled by 6";

280 
	$uƒﬁl6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

282 
i
;

283 
Àngth
 = 
	`vec_Àngth
(
v
);

284 
limô
 = 
Àngth
-5;

285 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

286 
d©a_t
 
acc
 = 
IDENT
;

289 
i
 = 0; i < 
limô
; i+=6) {

290 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

291 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

292 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

296 ; 
i
 < 
Àngth
; i++) {

297 
acc
 =ác¯
OP
 
d©a
[
i
];

299 *
de°
 = 
acc
;

300 
	}
}

302 
	guƒﬁl7a_des¸
[] = "unroll7a: Array code, unrolled by 7";

303 
	$uƒﬁl7a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

305 
i
;

306 
Àngth
 = 
	`vec_Àngth
(
v
);

307 
limô
 = 
Àngth
-6;

308 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

309 
d©a_t
 
acc
 = 
IDENT
;

312 
i
 = 0; i < 
limô
; i+=7) {

313 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

314 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

315 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

316 
acc
 =ác¯
OP
 
d©a
[
i
+6];

320 ; 
i
 < 
Àngth
; i++) {

321 
acc
 =ác¯
OP
 
d©a
[
i
];

323 *
de°
 = 
acc
;

324 
	}
}

327 
	guƒﬁl8a_des¸
[] = "unroll8a: Array code, unrolled by 8";

328 
	$uƒﬁl8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

330 
i
;

331 
Àngth
 = 
	`vec_Àngth
(
v
);

332 
limô
 = 
Àngth
-7;

333 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

334 
d©a_t
 
acc
 = 
IDENT
;

337 
i
 = 0; i < 
limô
; i+=8) {

338 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

339 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

340 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

341 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

345 ; 
i
 < 
Àngth
; i++) {

346 
acc
 =ác¯
OP
 
d©a
[
i
];

348 *
de°
 = 
acc
;

349 
	}
}

351 
	guƒﬁl9a_des¸
[] = "unroll9a: Array code, unrolled by 9";

352 
	$uƒﬁl9a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

354 
i
;

355 
Àngth
 = 
	`vec_Àngth
(
v
);

356 
limô
 = 
Àngth
-8;

357 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

358 
d©a_t
 
acc
 = 
IDENT
;

361 
i
 = 0; i < 
limô
; i+=9) {

362 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

363 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

364 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

365 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

366 
acc
 =ác¯
OP
 
d©a
[
i
+8];

370 ; 
i
 < 
Àngth
; i++) {

371 
acc
 =ác¯
OP
 
d©a
[
i
];

373 *
de°
 = 
acc
;

374 
	}
}

376 
	guƒﬁl10a_des¸
[] = "unroll10a: Array code, unrolled by 10";

377 
	$uƒﬁl10a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

379 
i
;

380 
Àngth
 = 
	`vec_Àngth
(
v
);

381 
limô
 = 
Àngth
-9;

382 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

383 
d©a_t
 
acc
 = 
IDENT
;

386 
i
 = 0; i < 
limô
; i+=10) {

387 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

388 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

389 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

390 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

391 
acc
 =ác¯
OP
 
d©a
[
i
+8] OP data[i+9];

395 ; 
i
 < 
Àngth
; i++) {

396 
acc
 =ác¯
OP
 
d©a
[
i
];

398 *
de°
 = 
acc
;

399 
	}
}

402 
	guƒﬁl16a_des¸
[] = "unroll16a: Array code, unrolled by 16";

403 
	$uƒﬁl16a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

405 
i
;

406 
Àngth
 = 
	`vec_Àngth
(
v
);

407 
limô
 = 
Àngth
-15;

408 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

409 
d©a_t
 
acc
 = 
IDENT
;

412 
i
 = 0; i < 
limô
; i+=16) {

413 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

414 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

415 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

416 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

417 
acc
 =ác¯
OP
 
d©a
[
i
+8] OP data[i+9];

418 
acc
 =ác¯
OP
 
d©a
[
i
+10] OP data[i+11];

419 
acc
 =ác¯
OP
 
d©a
[
i
+12] OP data[i+13];

420 
acc
 =ác¯
OP
 
d©a
[
i
+14] OP data[i+15];

424 ; 
i
 < 
Àngth
; i++) {

425 
acc
 =ác¯
OP
 
d©a
[
i
];

427 *
de°
 = 
acc
;

428 
	}
}

430 
	guƒﬁl2_des¸
[] = "unroll2: Pointer code, unrolled by 2";

431 
	$uƒﬁl2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

433 
Àngth
 = 
	`vec_Àngth
(
v
);

434 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

435 
ovî
 = 
Àngth
%2;

436 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

437 
d©a_t
 
acc
 = 
IDENT
;

439 
d©a
 < 
díd
) {

440 
acc
 =ác¯
OP
 
d©a
[0];

441 
acc
 =ác¯
OP
 
d©a
[1];

442 
d©a
 += 2;

444 
díd
 +
ovî
;

445 
d©a
 < 
díd
) {

446 
acc
 =ác¯
OP
 *
d©a
;

447 
d©a
 ++;

449 *
de°
 = 
acc
;

450 
	}
}

453 
	guƒﬁl3_des¸
[] = "unroll3: Pointer code, unrolled by 3";

454 
	$uƒﬁl3_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

456 
Àngth
 = 
	`vec_Àngth
(
v
);

457 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

458 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-2;

459 
d©a_t
 
acc
 = 
IDENT
;

461 
d©a
 < 
díd
) {

462 
acc
 =ác¯
OP
 
d©a
[0];

463 
acc
 =ác¯
OP
 
d©a
[1];

464 
acc
 =ác¯
OP
 
d©a
[2];

465 
d©a
 += 3;

467 
díd
 += 2;

468 
d©a
 < 
díd
) {

469 
acc
 =ác¯
OP
 *
d©a
;

470 
d©a
 ++;

472 *
de°
 = 
acc
;

473 
	}
}

476 
	guƒﬁl4_des¸
[] = "unroll4: Pointer code, unrolled by 4";

477 
	$uƒﬁl4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

479 
Àngth
 = 
	`vec_Àngth
(
v
);

480 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

481 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-3;

482 
d©a_t
 
acc
 = 
IDENT
;

484 
d©a
 < 
díd
) {

485 
acc
 =ác¯
OP
 
d©a
[0];

486 
acc
 =ác¯
OP
 
d©a
[1];

487 
acc
 =ác¯
OP
 
d©a
[2];

488 
acc
 =ác¯
OP
 
d©a
[3];

489 
d©a
 += 4;

491 
díd
 += 3;

492 
d©a
 < 
díd
) {

493 
acc
 =ác¯
OP
 *
d©a
;

494 
d©a
 ++;

496 *
de°
 = 
acc
;

497 
	}
}

499 
	guƒﬁl8_des¸
[] = "unroll8: Pointer code, unrolled by 8";

500 
	$uƒﬁl8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

502 
Àngth
 = 
	`vec_Àngth
(
v
);

503 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

504 
ovî
 = 
Àngth
%8;

505 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

506 
d©a_t
 
acc
 = 
IDENT
;

508 
d©a
 < 
díd
) {

509 
acc
 =ác¯
OP
 
d©a
[0];

510 
acc
 =ác¯
OP
 
d©a
[1];

511 
acc
 =ác¯
OP
 
d©a
[2];

512 
acc
 =ác¯
OP
 
d©a
[3];

513 
acc
 =ác¯
OP
 
d©a
[4];

514 
acc
 =ác¯
OP
 
d©a
[5];

515 
acc
 =ác¯
OP
 
d©a
[6];

516 
acc
 =ác¯
OP
 
d©a
[7];

517 
d©a
 += 8;

519 
díd
 +
ovî
;

520 
d©a
 < 
díd
) {

521 
acc
 =ác¯
OP
 *
d©a
;

522 
d©a
 ++;

524 *
de°
 = 
acc
;

525 
	}
}

527 
	guƒﬁl16_des¸
[] = "unroll16: Pointer code, unrolled by 16";

528 
	$uƒﬁl16_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

530 
Àngth
 = 
	`vec_Àngth
(
v
);

531 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

532 
ovî
 = 
Àngth
%16;

533 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

534 
d©a_t
 
acc
 = 
IDENT
;

536 
d©a
 < 
díd
) {

537 
acc
 =ác¯
OP
 
d©a
[0];

538 
acc
 =ác¯
OP
 
d©a
[1];

539 
acc
 =ác¯
OP
 
d©a
[2];

540 
acc
 =ác¯
OP
 
d©a
[3];

541 
acc
 =ác¯
OP
 
d©a
[4];

542 
acc
 =ác¯
OP
 
d©a
[5];

543 
acc
 =ác¯
OP
 
d©a
[6];

544 
acc
 =ác¯
OP
 
d©a
[7];

545 
acc
 =ác¯
OP
 
d©a
[8];

546 
acc
 =ác¯
OP
 
d©a
[9];

547 
acc
 =ác¯
OP
 
d©a
[10];

548 
acc
 =ác¯
OP
 
d©a
[11];

549 
acc
 =ác¯
OP
 
d©a
[12];

550 
acc
 =ác¯
OP
 
d©a
[13];

551 
acc
 =ác¯
OP
 
d©a
[14];

552 
acc
 =ác¯
OP
 
d©a
[15];

553 
d©a
 += 16;

555 
díd
 +
ovî
;

556 
d©a
 < 
díd
) {

557 
acc
 =ác¯
OP
 *
d©a
;

558 
d©a
 ++;

560 *
de°
 = 
acc
;

561 
	}
}

564 
	gcomböe6_des¸
[] = "combine6: Array code, unrolled by 2, Superscalar x2";

567 
	$comböe6
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

569 
i
;

570 
Àngth
 = 
	`vec_Àngth
(
v
);

571 
limô
 = 
Àngth
-1;

572 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

573 
d©a_t
 
acc0
 = 
IDENT
;

574 
d©a_t
 
acc1
 = 
IDENT
;

577 
i
 = 0; i < 
limô
; i+=2) {

578 
acc0
 =ácc0 
OP
 
d©a
[
i
];

579 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

583 ; 
i
 < 
Àngth
; i++) {

584 
acc0
 =ácc0 
OP
 
d©a
[
i
];

586 *
de°
 = 
acc0
 
OP
 
acc1
;

587 
	}
}

590 
	guƒﬁl4x2a_des¸
[] = "unroll4x2a: Array code, unrolled by 4, Superscalar x2";

591 
	$uƒﬁl4x2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

593 
i
;

594 
Àngth
 = 
	`vec_Àngth
(
v
);

595 
limô
 = 
Àngth
-3;

596 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

597 
d©a_t
 
acc0
 = 
IDENT
;

598 
d©a_t
 
acc1
 = 
IDENT
;

601 
i
 = 0; i < 
limô
; i+=4) {

602 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

603 
acc0
 =ácc0 
OP
 
d©a
[
i
+2]; 
acc1
 =ácc1 OP data[i+3];

607 ; 
i
 < 
Àngth
; i++) {

608 
acc0
 =ácc0 
OP
 
d©a
[
i
];

610 *
de°
 = 
acc0
 
OP
 
acc1
;

611 
	}
}

614 
	guƒﬁl8x2a_des¸
[] = "unroll8x2a: Array code, unrolled by 8, Superscalar x2";

615 
	$uƒﬁl8x2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

617 
i
;

618 
Àngth
 = 
	`vec_Àngth
(
v
);

619 
limô
 = 
Àngth
-7;

620 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

621 
d©a_t
 
acc0
 = 
IDENT
;

622 
d©a_t
 
acc1
 = 
IDENT
;

625 
i
 = 0; i < 
limô
; i+=8) {

626 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

627 
acc0
 =ácc0 
OP
 
d©a
[
i
+2]; 
acc1
 =ácc1 OP data[i+3];

628 
acc0
 =ácc0 
OP
 
d©a
[
i
+4]; 
acc1
 =ácc1 OP data[i+5];

629 
acc0
 =ácc0 
OP
 
d©a
[
i
+6]; 
acc1
 =ácc1 OP data[i+7];

633 ; 
i
 < 
Àngth
; i++) {

634 
acc0
 =ácc0 
OP
 
d©a
[
i
];

636 *
de°
 = 
acc0
 
OP
 
acc1
;

637 
	}
}

639 
	guƒﬁl3x3a_des¸
[] = "unroll3x3a: Array code, unrolled by 3, Superscalar x3";

640 
	$uƒﬁl3x3a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

642 
i
;

643 
Àngth
 = 
	`vec_Àngth
(
v
);

644 
limô
 = 
Àngth
-2;

645 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

646 
d©a_t
 
acc0
 = 
IDENT
;

647 
d©a_t
 
acc1
 = 
IDENT
;

648 
d©a_t
 
acc2
 = 
IDENT
;

651 
i
 = 0; i < 
limô
; i+=3) {

652 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

653 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

657 ; 
i
 < 
Àngth
; i++) {

658 
acc0
 =ácc0 
OP
 
d©a
[
i
];

660 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
;

661 
	}
}

664 
	guƒﬁl4x4a_des¸
[] = "unroll4x4a: Array code, unrolled by 4, Superscalar x4";

665 
	$uƒﬁl4x4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

667 
i
;

668 
Àngth
 = 
	`vec_Àngth
(
v
);

669 
limô
 = 
Àngth
-3;

670 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

671 
d©a_t
 
acc0
 = 
IDENT
;

672 
d©a_t
 
acc1
 = 
IDENT
;

673 
d©a_t
 
acc2
 = 
IDENT
;

674 
d©a_t
 
acc3
 = 
IDENT
;

677 
i
 = 0; i < 
limô
; i+=4) {

678 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

679 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

683 ; 
i
 < 
Àngth
; i++) {

684 
acc0
 =ácc0 
OP
 
d©a
[
i
];

686 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
);

688 
	}
}

690 
	guƒﬁl8x4a_des¸
[] = "unroll8x4a: Array code, unrolled by 8, Superscalar x4";

691 
	$uƒﬁl8x4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

693 
i
;

694 
Àngth
 = 
	`vec_Àngth
(
v
);

695 
limô
 = 
Àngth
-7;

696 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

697 
d©a_t
 
acc0
 = 
IDENT
;

698 
d©a_t
 
acc1
 = 
IDENT
;

699 
d©a_t
 
acc2
 = 
IDENT
;

700 
d©a_t
 
acc3
 = 
IDENT
;

703 
i
 = 0; i < 
limô
; i+=8) {

704 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

705 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

706 
acc0
 =ácc0 
OP
 
d©a
[
i
+4]; 
acc1
 =ácc1 OP data[i+5];

707 
acc2
 =ácc2 
OP
 
d©a
[
i
+6]; 
acc3
 =ácc3 OP data[i+7];

711 ; 
i
 < 
Àngth
; i++) {

712 
acc0
 =ácc0 
OP
 
d©a
[
i
];

714 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
 OP 
acc3
;

715 
	}
}

717 
	guƒﬁl12x6a_des¸
[] = "unroll2x6a: Array code, unrolled by 12, Superscalar x6";

718 
	$uƒﬁl12x6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

720 
i
;

721 
Àngth
 = 
	`vec_Àngth
(
v
);

722 
limô
 = 
Àngth
-11;

723 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

724 
d©a_t
 
acc0
 = 
IDENT
;

725 
d©a_t
 
acc1
 = 
IDENT
;

726 
d©a_t
 
acc2
 = 
IDENT
;

727 
d©a_t
 
acc3
 = 
IDENT
;

728 
d©a_t
 
acc4
 = 
IDENT
;

729 
d©a_t
 
acc5
 = 
IDENT
;

732 
i
 = 0; i < 
limô
; i+=12) {

733 
acc0
 =ácc0 
OP
 
d©a
[
i
];

734 
acc0
 =ácc0 
OP
 
d©a
[
i
+6];

735 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

736 
acc1
 =ácc1 
OP
 
d©a
[
i
+7];

737 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

738 
acc2
 =ácc2 
OP
 
d©a
[
i
+8];

739 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

740 
acc3
 =ácc3 
OP
 
d©a
[
i
+9];

741 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

742 
acc4
 =ácc4 
OP
 
d©a
[
i
+10];

743 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

744 
acc5
 =ácc5 
OP
 
d©a
[
i
+11];

748 ; 
i
 < 
Àngth
; i++) {

749 
acc0
 =ácc0 
OP
 
d©a
[
i
];

751 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
);

752 
	}
}

754 
	guƒﬁl12x12a_des¸
[] = "unroll12x12a: Array code, unrolled by 12, Superscalar x12";

755 
	$uƒﬁl12x12a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

757 
i
;

758 
Àngth
 = 
	`vec_Àngth
(
v
);

759 
limô
 = 
Àngth
-11;

760 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

761 
d©a_t
 
acc0
 = 
IDENT
;

762 
d©a_t
 
acc1
 = 
IDENT
;

763 
d©a_t
 
acc2
 = 
IDENT
;

764 
d©a_t
 
acc3
 = 
IDENT
;

765 
d©a_t
 
acc4
 = 
IDENT
;

766 
d©a_t
 
acc5
 = 
IDENT
;

767 
d©a_t
 
acc6
 = 
IDENT
;

768 
d©a_t
 
acc7
 = 
IDENT
;

769 
d©a_t
 
acc8
 = 
IDENT
;

770 
d©a_t
 
acc9
 = 
IDENT
;

771 
d©a_t
 
acc10
 = 
IDENT
;

772 
d©a_t
 
acc11

IDENT
;

775 
i
 = 0; i < 
limô
; i+=12) {

776 
acc0
 =ácc0 
OP
 
d©a
[
i
];

777 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

778 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

779 
acc7
 =ácc7 
OP
 
d©a
[
i
+7];

780 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

781 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

782 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

783 
acc9
 =ácc9 
OP
 
d©a
[
i
+9];

784 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

785 
acc10
 =ácc10 
OP
 
d©a
[
i
+10];

786 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

787 
acc11
 =ácc11 
OP
 
d©a
[
i
+11];

791 ; 
i
 < 
Àngth
; i++) {

792 
acc0
 =ácc0 
OP
 
d©a
[
i
];

794 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
)

795 
	`OP
 (
acc6
 
OP
 
acc7
ËOP (
acc8
 OP 
acc9
ËOP (
acc10
 OP 
acc11
);

796 
	}
}

798 
	guƒﬁl5x5a_des¸
[] = "unroll5x5a: Array code, unrolled by 5, Superscalar x5";

799 
	$uƒﬁl5x5a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

801 
i
;

802 
Àngth
 = 
	`vec_Àngth
(
v
);

803 
limô
 = 
Àngth
-4;

804 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

805 
d©a_t
 
acc0
 = 
IDENT
;

806 
d©a_t
 
acc1
 = 
IDENT
;

807 
d©a_t
 
acc2
 = 
IDENT
;

808 
d©a_t
 
acc3
 = 
IDENT
;

809 
d©a_t
 
acc4
 = 
IDENT
;

812 
i
 = 0; i < 
limô
; i+=5) {

813 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

814 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

815 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

819 ; 
i
 < 
Àngth
; i++) {

820 
acc0
 =ácc0 
OP
 
d©a
[
i
];

822 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
 OP 
acc4
);

823 
	}
}

825 
	guƒﬁl6x6a_des¸
[] = "unroll6x6a: Array code, unrolled by 6, Superscalar x6";

826 
	$uƒﬁl6x6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

828 
i
;

829 
Àngth
 = 
	`vec_Àngth
(
v
);

830 
limô
 = 
Àngth
-5;

831 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

832 
d©a_t
 
acc0
 = 
IDENT
;

833 
d©a_t
 
acc1
 = 
IDENT
;

834 
d©a_t
 
acc2
 = 
IDENT
;

835 
d©a_t
 
acc3
 = 
IDENT
;

836 
d©a_t
 
acc4
 = 
IDENT
;

837 
d©a_t
 
acc5
 = 
IDENT
;

840 
i
 = 0; i < 
limô
; i+=6) {

841 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

842 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

843 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

847 ; 
i
 < 
Àngth
; i++) {

848 
acc0
 =ácc0 
OP
 
d©a
[
i
];

850 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
);

851 
	}
}

853 
	guƒﬁl7x7a_des¸
[] = "unroll7x7a: Array code, unrolled by 7, Superscalar x7";

854 
	$uƒﬁl7x7a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

856 
i
;

857 
Àngth
 = 
	`vec_Àngth
(
v
);

858 
limô
 = 
Àngth
-6;

859 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

860 
d©a_t
 
acc0
 = 
IDENT
;

861 
d©a_t
 
acc1
 = 
IDENT
;

862 
d©a_t
 
acc2
 = 
IDENT
;

863 
d©a_t
 
acc3
 = 
IDENT
;

864 
d©a_t
 
acc4
 = 
IDENT
;

865 
d©a_t
 
acc5
 = 
IDENT
;

866 
d©a_t
 
acc6
 = 
IDENT
;

869 
i
 = 0; i < 
limô
; i+=7) {

870 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

871 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

872 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

873 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

877 ; 
i
 < 
Àngth
; i++) {

878 
acc0
 =ácc0 
OP
 
d©a
[
i
];

880 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP (
acc4
 OP 
acc5
 OP 
acc6
);

881 
	}
}

883 
	guƒﬁl8x8a_des¸
[] = "unroll8x8a: Array code, unrolled by 8, Superscalar x8";

884 
	$uƒﬁl8x8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

886 
i
;

887 
Àngth
 = 
	`vec_Àngth
(
v
);

888 
limô
 = 
Àngth
-7;

889 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

890 
d©a_t
 
acc0
 = 
IDENT
;

891 
d©a_t
 
acc1
 = 
IDENT
;

892 
d©a_t
 
acc2
 = 
IDENT
;

893 
d©a_t
 
acc3
 = 
IDENT
;

894 
d©a_t
 
acc4
 = 
IDENT
;

895 
d©a_t
 
acc5
 = 
IDENT
;

896 
d©a_t
 
acc6
 = 
IDENT
;

897 
d©a_t
 
acc7
 = 
IDENT
;

900 
i
 = 0; i < 
limô
; i+=8) {

901 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

902 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

903 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

904 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

908 ; 
i
 < 
Àngth
; i++) {

909 
acc0
 =ácc0 
OP
 
d©a
[
i
];

911 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP ((
acc4
 OP 
acc5
ËOP (
acc6
 OP 
acc7
));

912 
	}
}

914 
	guƒﬁl9x9a_des¸
[] = "unroll9x9a: Array code, unrolled by 9, Superscalar x9";

915 
	$uƒﬁl9x9a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

917 
i
;

918 
Àngth
 = 
	`vec_Àngth
(
v
);

919 
limô
 = 
Àngth
-8;

920 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

921 
d©a_t
 
acc0
 = 
IDENT
;

922 
d©a_t
 
acc1
 = 
IDENT
;

923 
d©a_t
 
acc2
 = 
IDENT
;

924 
d©a_t
 
acc3
 = 
IDENT
;

925 
d©a_t
 
acc4
 = 
IDENT
;

926 
d©a_t
 
acc5
 = 
IDENT
;

927 
d©a_t
 
acc6
 = 
IDENT
;

928 
d©a_t
 
acc7
 = 
IDENT
;

929 
d©a_t
 
acc8
 = 
IDENT
;

932 
i
 = 0; i < 
limô
; i+=9) {

933 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

934 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

935 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

936 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

937 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

941 ; 
i
 < 
Àngth
; i++) {

942 
acc0
 =ácc0 
OP
 
d©a
[
i
];

944 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP ((
acc4
 OP 
acc5
ËOP (
acc6
 OP 
acc7
ËOP 
acc8
);

945 
	}
}

947 
	guƒﬁl10x10a_des¸
[] = "unroll10x10a: Array code, unrolled by 10, Superscalar x10";

948 
	$uƒﬁl10x10a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

950 
i
;

951 
Àngth
 = 
	`vec_Àngth
(
v
);

952 
limô
 = 
Àngth
-9;

953 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

954 
d©a_t
 
acc0
 = 
IDENT
;

955 
d©a_t
 
acc1
 = 
IDENT
;

956 
d©a_t
 
acc2
 = 
IDENT
;

957 
d©a_t
 
acc3
 = 
IDENT
;

958 
d©a_t
 
acc4
 = 
IDENT
;

959 
d©a_t
 
acc5
 = 
IDENT
;

960 
d©a_t
 
acc6
 = 
IDENT
;

961 
d©a_t
 
acc7
 = 
IDENT
;

962 
d©a_t
 
acc8
 = 
IDENT
;

963 
d©a_t
 
acc9
 = 
IDENT
;

966 
i
 = 0; i < 
limô
; i+=10) {

967 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

968 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

969 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

970 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

971 
acc8
 =ácc8 
OP
 
d©a
[
i
+8]; 
acc9
 =ácc9 OP data[i+9];

975 ; 
i
 < 
Àngth
; i++) {

976 
acc0
 =ácc0 
OP
 
d©a
[
i
];

978 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)) OP

979 ((
acc4
 
OP
 
acc5
Ë
	`OP
 (
acc6
 OP 
acc7
)) OP

980 (
acc8
 
OP
 
acc9
);

981 
	}
}

983 
	guƒﬁlx2as_des¸
[] = "unrollx2as: Array code, Unroll x2, Superscalar x2,Çoninterleaved";

984 
	$uƒﬁlx2as_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

986 
i
;

987 
Àngth
 = 
	`vec_Àngth
(
v
);

988 
limô
 = 
Àngth
/2;

989 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

990 
d©a_t
 *
d©a2
 = 
d©a
+
limô
;

991 
d©a_t
 
acc0
 = 
IDENT
;

992 
d©a_t
 
acc1
 = 
IDENT
;

995 
i
 = 0; i < 
limô
; i++) {

996 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP 
d©a2
[i];

1000 
i
 = 
limô
*2; i < 
Àngth
; i++) {

1001 
acc1
 =ácc1 
OP
 
d©a
[
i
];

1003 *
de°
 = 
acc0
 
OP
 
acc1
;

1004 
	}
}

1006 
	guƒﬁl4x2as_des¸
[] = "unroll4x2as: Array code, Unroll x4, Superscalar x2,Çoninterleaved";

1007 
	$uƒﬁl4x2as_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1009 
i
;

1010 
Àngth
 = 
	`vec_Àngth
(
v
);

1011 
limô
 = 
Àngth
/2;

1012 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1013 
d©a_t
 *
d©a2
 = 
d©a
+
limô
;

1014 
d©a_t
 
acc0
 = 
IDENT
;

1015 
d©a_t
 
acc1
 = 
IDENT
;

1018 
i
 = 0; i < 
limô
; i++) {

1019 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP 
d©a2
[i];

1023 
i
 = 
limô
*2; i < 
Àngth
; i++) {

1024 
acc1
 =ácc1 
OP
 
d©a
[
i
];

1026 *
de°
 = 
acc0
 
OP
 
acc1
;

1027 
	}
}

1031 
	guƒﬁl8x2_des¸
[] = "unroll8x2: Pointer code, unrolled by 8, Superscalar x2";

1032 
	$uƒﬁl8x2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1034 
Àngth
 = 
	`vec_Àngth
(
v
);

1035 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1036 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1037 
d©a_t
 
acc0
 = 
IDENT
;

1038 
d©a_t
 
acc1
 = 
IDENT
;

1040 
d©a
 < 
díd
) {

1041 
acc0
 =ácc0 
OP
 
d©a
[0];

1042 
acc1
 =ácc1 
OP
 
d©a
[1];

1043 
acc0
 =ácc0 
OP
 
d©a
[2];

1044 
acc1
 =ácc1 
OP
 
d©a
[3];

1045 
acc0
 =ácc0 
OP
 
d©a
[4];

1046 
acc1
 =ácc1 
OP
 
d©a
[5];

1047 
acc0
 =ácc0 
OP
 
d©a
[6];

1048 
acc1
 =ácc1 
OP
 
d©a
[7];

1049 
d©a
 += 8;

1051 
díd
 += 7;

1052 
d©a
 < 
díd
) {

1053 
acc0
 =ácc0 
OP
 *
d©a
;

1054 
d©a
 ++;

1056 *
de°
 = 
acc0
 
OP
 
acc1
;

1057 
	}
}

1059 
	guƒﬁl9x3_des¸
[] = "unroll9x3: Pointer code, unrolled by 9, Superscalar x3";

1060 
	$uƒﬁl9x3_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1062 
Àngth
 = 
	`vec_Àngth
(
v
);

1063 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1064 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-8;

1065 
d©a_t
 
acc0
 = 
IDENT
;

1066 
d©a_t
 
acc1
 = 
IDENT
;

1067 
d©a_t
 
acc2
 = 
IDENT
;

1069 
d©a
 < 
díd
) {

1070 
acc0
 =ácc0 
OP
 
d©a
[0];

1071 
acc1
 =ácc1 
OP
 
d©a
[1];

1072 
acc2
 =ácc2 
OP
 
d©a
[2];

1073 
acc0
 =ácc0 
OP
 
d©a
[3];

1074 
acc1
 =ácc1 
OP
 
d©a
[4];

1075 
acc2
 =ácc2 
OP
 
d©a
[5];

1076 
acc0
 =ácc0 
OP
 
d©a
[6];

1077 
acc1
 =ácc1 
OP
 
d©a
[7];

1078 
acc2
 =ácc2 
OP
 
d©a
[8];

1079 
d©a
 += 9;

1081 
díd
 += 8;

1082 
d©a
 < 
díd
) {

1083 
acc0
 =ácc0 
OP
 *
d©a
;

1084 
d©a
 ++;

1086 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
;

1087 
	}
}

1090 
	guƒﬁl8x4_des¸
[] = "unroll8x4: Pointer code, unrolled by 8, Superscalar x4";

1091 
	$uƒﬁl8x4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1093 
Àngth
 = 
	`vec_Àngth
(
v
);

1094 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1095 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1096 
d©a_t
 
acc3
 = 
IDENT
;

1097 
d©a_t
 
acc0
 = 
IDENT
;

1098 
d©a_t
 
acc1
 = 
IDENT
;

1099 
d©a_t
 
acc2
 = 
IDENT
;

1101 
d©a
 < 
díd
) {

1102 
acc3
 =ácc3 
OP
 
d©a
[0];

1103 
acc0
 =ácc0 
OP
 
d©a
[1];

1104 
acc1
 =ácc1 
OP
 
d©a
[2];

1105 
acc2
 =ácc2 
OP
 
d©a
[3];

1106 
acc3
 =ácc3 
OP
 
d©a
[4];

1107 
acc0
 =ácc0 
OP
 
d©a
[5];

1108 
acc1
 =ácc1 
OP
 
d©a
[6];

1109 
acc2
 =ácc2 
OP
 
d©a
[7];

1110 
d©a
 += 8;

1112 
díd
 += 7;

1113 
d©a
 < 
díd
) {

1114 
acc3
 =ácc3 
OP
 *
d©a
;

1115 
d©a
 ++;

1117 *
de°
 = 
acc3
 
OP
 
acc0
 OP 
acc1
 OP 
acc2
;

1118 
	}
}

1120 
	guƒﬁl8x8_des¸
[] = "unroll8x8: Pointer code, unrolled by 8, Superscalar x8";

1121 
	$uƒﬁl8x8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1123 
Àngth
 = 
	`vec_Àngth
(
v
);

1124 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1125 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1126 
d©a_t
 
acc4
 = 
IDENT
;

1127 
d©a_t
 
acc5
 = 
IDENT
;

1128 
d©a_t
 
acc6
 = 
IDENT
;

1129 
d©a_t
 
acc7
 = 
IDENT
;

1130 
d©a_t
 
acc3
 = 
IDENT
;

1131 
d©a_t
 
acc0
 = 
IDENT
;

1132 
d©a_t
 
acc1
 = 
IDENT
;

1133 
d©a_t
 
acc2
 = 
IDENT
;

1135 
d©a
 < 
díd
) {

1136 
acc0
 =ácc0 
OP
 
d©a
[0];

1137 
acc1
 =ácc1 
OP
 
d©a
[1];

1138 
acc2
 =ácc2 
OP
 
d©a
[2];

1139 
acc3
 =ácc3 
OP
 
d©a
[3];

1140 
acc4
 =ácc4 
OP
 
d©a
[4];

1141 
acc6
 = 
acc5
 
OP
 
d©a
[5];

1142 
acc6
 =ácc6 
OP
 
d©a
[6];

1143 
acc7
 =ácc7 
OP
 
d©a
[7];

1144 
d©a
 += 8;

1146 
díd
 += 7;

1147 
d©a
 < 
díd
) {

1148 
acc0
 =ácc0 
OP
 *
d©a
;

1149 
d©a
 ++;

1151 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
 OP 
acc3
 OP 
acc4
 OP 
acc5
 OP 
acc6
 OP 
acc7
;

1152 
	}
}

1154 
	gcomböe7_des¸
[] = "combine7: Array code, unrolled by 2, differentássociativity";

1157 
	$comböe7
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1159 
i
;

1160 
Àngth
 = 
	`vec_Àngth
(
v
);

1161 
limô
 = 
Àngth
-1;

1162 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1163 
d©a_t
 
acc
 = 
IDENT
;

1166 
i
 = 0; i < 
limô
; i+=2) {

1168 
acc
 =ác¯
	`OP
 (
d©a
[
i
] 
OP
 data[i+1]);

1173 ; 
i
 < 
Àngth
; i++) {

1174 
acc
 =ác¯
OP
 
d©a
[
i
];

1176 *
de°
 = 
acc
;

1177 
	}
}

1180 
	guƒﬁl3Ø_des¸
[] = "unroll3aa: Array code, unrolled by 3, Different Associativity";

1181 
	$uƒﬁl3Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1183 
i
;

1184 
Àngth
 = 
	`vec_Àngth
(
v
);

1185 
limô
 = 
Àngth
-2;

1186 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1187 
d©a_t
 
acc
 = 
IDENT
;

1190 
i
 = 0; i < 
limô
; i+=3) {

1191 
acc
 =ác¯
	`OP
 (
d©a
[
i
] 
OP
 data[i+1] OP data[i+2]);

1195 ; 
i
 < 
Àngth
; i++) {

1196 
acc
 =ác¯
OP
 
d©a
[
i
];

1198 *
de°
 = 
acc
;

1199 
	}
}

1201 
	guƒﬁl4Ø_des¸
[] = "unroll4aa: Array code, unrolled by 4, Different Associativity";

1202 
	$uƒﬁl4Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1204 
i
;

1205 
Àngth
 = 
	`vec_Àngth
(
v
);

1206 
limô
 = 
Àngth
-3;

1207 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1208 
d©a_t
 
acc
 = 
IDENT
;

1211 
i
 = 0; i < 
limô
; i+=4) {

1212 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1213 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1214 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
);

1218 ; 
i
 < 
Àngth
; i++) {

1219 
acc
 =ác¯
OP
 
d©a
[
i
];

1221 *
de°
 = 
acc
;

1222 
	}
}

1224 
	guƒﬁl5Ø_des¸
[] = "unroll5aa: Array code, unrolled by 5, Different Associativity";

1225 
	$uƒﬁl5Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1227 
i
;

1228 
Àngth
 = 
	`vec_Àngth
(
v
);

1229 
limô
 = 
Àngth
-4;

1230 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1231 
d©a_t
 
acc
 = 
IDENT
;

1234 
i
 = 0; i < 
limô
; i+=5) {

1235 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1236 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1237 
d©a_t
 
t3
 = 
d©a
[
i
+4];

1238 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
 OP 
t3
);

1242 ; 
i
 < 
Àngth
; i++) {

1243 
acc
 =ác¯
OP
 
d©a
[
i
];

1245 *
de°
 = 
acc
;

1246 
	}
}

1248 
	guƒﬁl6Ø_des¸
[] = "unroll6aa: Array code, unrolled by 6, Different Associativity";

1249 
	$uƒﬁl6Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1251 
i
;

1252 
Àngth
 = 
	`vec_Àngth
(
v
);

1253 
limô
 = 
Àngth
-5;

1254 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1255 
d©a_t
 
acc
 = 
IDENT
;

1258 
i
 = 0; i < 
limô
; i+=6) {

1259 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1260 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1261 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1262 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
 OP 
t3
);

1266 ; 
i
 < 
Àngth
; i++) {

1267 
acc
 =ác¯
OP
 
d©a
[
i
];

1269 *
de°
 = 
acc
;

1270 
	}
}

1272 
	guƒﬁl7Ø_des¸
[] = "unroll7aa: Array code, unrolled by 7, Different Associativity";

1273 
	$uƒﬁl7Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1275 
i
;

1276 
Àngth
 = 
	`vec_Àngth
(
v
);

1277 
limô
 = 
Àngth
-6;

1278 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1279 
d©a_t
 
acc
 = 
IDENT
;

1282 
i
 = 0; i < 
limô
; i+=7) {

1283 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1284 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1285 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1286 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1287 
d©a_t
 
t4
 = 
d©a
[
i
+6];

1288 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1289 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1293 ; 
i
 < 
Àngth
; i++) {

1294 
acc
 =ác¯
OP
 
d©a
[
i
];

1297 *
de°
 = 
acc
;

1298 
	}
}

1300 
	guƒﬁl8Ø_des¸
[] = "unroll8aa: Array code, unrolled by 8, Different Associativity";

1301 
	$uƒﬁl8Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1303 
i
;

1304 
Àngth
 = 
	`vec_Àngth
(
v
);

1305 
limô
 = 
Àngth
-7;

1306 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1307 
d©a_t
 
acc
 = 
IDENT
;

1310 
i
 = 0; i < 
limô
; i+=8) {

1311 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1312 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1313 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1314 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1315 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1316 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1317 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1321 ; 
i
 < 
Àngth
; i++) {

1322 
acc
 =ác¯
OP
 
d©a
[
i
];

1325 *
de°
 = 
acc
;

1326 
	}
}

1328 
	guƒﬁl9Ø_des¸
[] = "unroll9aa: Array code, unrolled by 9, Different Associativity";

1329 
	$uƒﬁl9Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1331 
i
;

1332 
Àngth
 = 
	`vec_Àngth
(
v
);

1333 
limô
 = 
Àngth
-8;

1334 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1335 
d©a_t
 
acc
 = 
IDENT
;

1338 
i
 = 0; i < 
limô
; i+=9) {

1339 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1340 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1341 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1342 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1343 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1344 
d©a_t
 
t5
 = 
d©a
[
i
+8];

1345 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
 OP 
t5
;

1346 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1350 ; 
i
 < 
Àngth
; i++) {

1351 
acc
 =ác¯
OP
 
d©a
[
i
];

1354 *
de°
 = 
acc
;

1355 
	}
}

1357 
	guƒﬁl10Ø_des¸
[] = "unroll10aa: Array code, unrolled by 10, Different Associativity";

1358 
	$uƒﬁl10Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1360 
i
;

1361 
Àngth
 = 
	`vec_Àngth
(
v
);

1362 
limô
 = 
Àngth
-9;

1363 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1364 
d©a_t
 
acc
 = 
IDENT
;

1367 
i
 = 0; i < 
limô
; i+=10) {

1368 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1369 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1370 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1371 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1372 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1373 
d©a_t
 
t5
 = 
d©a
[
i
+8] 
OP
 data[i+9];

1374 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
 OP 
t5
;

1375 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1379 ; 
i
 < 
Àngth
; i++) {

1380 
acc
 =ác¯
OP
 
d©a
[
i
];

1383 *
de°
 = 
acc
;

1384 
	}
}

1387 
	guƒﬁl12Ø_des¸
[] = "unroll12aa: Array code, unrolled by 12, Different Associativity";

1388 
	$uƒﬁl12Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1390 
i
;

1391 
Àngth
 = 
	`vec_Àngth
(
v
);

1392 
limô
 = 
Àngth
-11;

1393 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1394 
d©a_t
 
acc
 = 
IDENT
;

1397 
i
 = 0; i < 
limô
; i+=12) {

1398 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1399 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1400 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1401 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1402 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1403 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1404 
d©a_t
 
t5
 = 
d©a
[
i
+8] 
OP
 data[i+9];

1405 
d©a_t
 
t6
 = 
d©a
[
i
+10] 
OP
 data[i+11];

1406 
d©a_t
 
u3
 = 
t5
 
OP
 
t6
;

1407 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
 OP 
u3
);

1411 ; 
i
 < 
Àngth
; i++) {

1412 
acc
 =ác¯
OP
 
d©a
[
i
];

1415 *
de°
 = 
acc
;

1416 
	}
}

1422 
	#VBYTES
 32

	)

1425 
	#VSIZE
 
VBYTES
/(
d©a_t
)

	)

1430 
d©a_t
 
	tvec_t
 
	t__©åibuã__
 ((
	tve˘‹_size
(
	tVBYTES
)));

1435 
vec_t
 
	mv
;

1436 
d©a_t
 
	md
[
VSIZE
];

1437 } 
	t∑ck_t
;

1440 
	gsimd_v1_des¸
[] = "simd_v1: SSE code, 1*VSIZE-wayÖarallelism";

1442 
	$simd_v1_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1444 
i
;

1445 
∑ck_t
 
x„r
;

1446 
vec_t
 
accum
;

1447 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1448 
˙t
 = 
	`vec_Àngth
(
v
);

1449 
d©a_t
 
ªsu…
 = 
IDENT
;

1452 
i
 = 0; i < 
VSIZE
; i++)

1453 
x„r
.
d
[
i
] = 
IDENT
;

1454 
accum
 = 
x„r
.
v
;

1458 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1459 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1460 
˙t
--;

1464 
˙t
 >
VSIZE
) {

1465 
vec_t
 
chunk
 = *((vec_à*Ë
d©a
);

1466 
accum
 =áccum 
OP
 
chunk
;

1467 
d©a
 +
VSIZE
;

1468 
˙t
 -
VSIZE
;

1472 
˙t
) {

1473 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1474 
˙t
--;

1478 
x„r
.
v
 = 
accum
;

1479 
i
 = 0; i < 
VSIZE
; i++)

1480 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1483 *
de°
 = 
ªsu…
;

1484 
	}
}

1488 
	gsimd_v2_des¸
[] = "simd_v2: SSE code, 2*VSIZE-wayÖarallelism";

1489 
	$simd_v2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1491 
i
;

1492 
∑ck_t
 
x„r
;

1493 
vec_t
 
accum0
, 
accum1
;

1494 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1495 
˙t
 = 
	`vec_Àngth
(
v
);

1496 
d©a_t
 
ªsu…
 = 
IDENT
;

1499 
i
 = 0; i < 
VSIZE
; i++)

1500 
x„r
.
d
[
i
] = 
IDENT
;

1501 
accum0
 = 
x„r
.
v
;

1502 
accum1
 = 
x„r
.
v
;

1504 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1505 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1506 
˙t
--;

1509 
˙t
 >2*
VSIZE
) {

1510 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1511 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1512 
accum0
 =áccum0 
OP
 
chunk0
;

1513 
accum1
 =áccum1 
OP
 
chunk1
;

1514 
d©a
 +2*
VSIZE
;

1515 
˙t
 -2*
VSIZE
;

1517 
˙t
) {

1518 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1519 
˙t
--;

1521 
x„r
.
v
 = 
accum0
 
OP
 
accum1
;

1522 
i
 = 0; i < 
VSIZE
; i++)

1523 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1524 *
de°
 = 
ªsu…
;

1525 
	}
}

1527 
	gsimd_v4_des¸
[] = "simd_v4: SSE code, 4*VSIZE-wayÖarallelism";

1528 
	$simd_v4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1530 
i
;

1531 
∑ck_t
 
x„r
;

1532 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1533 
˙t
 = 
	`vec_Àngth
(
v
);

1534 
d©a_t
 
ªsu…
 = 
IDENT
;

1537 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
;

1538 
i
 = 0; i < 
VSIZE
; i++)

1539 
x„r
.
d
[
i
] = 
IDENT
;

1540 
accum0
 = 
x„r
.
v
; 
accum1
 = xfer.v;

1541 
accum2
 = 
x„r
.
v
; 
accum3
 = xfer.v;

1543 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1544 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1545 
˙t
--;

1550 
˙t
 >4*
VSIZE
) {

1551 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1552 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1553 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1554 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1555 
accum0
 =áccum0 
OP
 
chunk0
;

1556 
accum1
 =áccum1 
OP
 
chunk1
;

1557 
accum2
 =áccum2 
OP
 
chunk2
;

1558 
accum3
 =áccum3 
OP
 
chunk3
;

1559 
d©a
 +4*
VSIZE
;

1560 
˙t
 -4*
VSIZE
;

1564 
˙t
) {

1565 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1566 
˙t
--;

1571 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1574 
i
 = 0; i < 
VSIZE
; i++)

1575 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1577 *
de°
 = 
ªsu…
;

1578 
	}
}

1580 
	gsimd_v8_des¸
[] = "simd_v8: SSE code, 8*VSIZE-wayÖarallelism";

1581 
	$simd_v8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1583 
i
;

1584 
∑ck_t
 
x„r
;

1585 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
, 
accum5
, 
accum6
, 
accum7
;

1586 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1587 
˙t
 = 
	`vec_Àngth
(
v
);

1588 
d©a_t
 
ªsu…
 = 
IDENT
;

1591 
i
 = 0; i < 
VSIZE
; i++)

1592 
x„r
.
d
[
i
] = 
IDENT
;

1593 
accum0
 = 
x„r
.
v
;

1594 
accum1
 = 
x„r
.
v
;

1595 
accum2
 = 
x„r
.
v
;

1596 
accum3
 = 
x„r
.
v
;

1597 
accum4
 = 
x„r
.
v
;

1598 
accum5
 = 
x„r
.
v
;

1599 
accum6
 = 
x„r
.
v
;

1600 
accum7
 = 
x„r
.
v
;

1602 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1603 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1604 
˙t
--;

1607 
˙t
 >8*
VSIZE
) {

1608 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1609 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1610 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1611 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1612 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1613 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1614 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1615 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1616 
accum0
 =áccum0 
OP
 
chunk0
;

1617 
accum1
 =áccum1 
OP
 
chunk1
;

1618 
accum2
 =áccum2 
OP
 
chunk2
;

1619 
accum3
 =áccum3 
OP
 
chunk3
;

1620 
accum4
 =áccum4 
OP
 
chunk4
;

1621 
accum5
 =áccum5 
OP
 
chunk5
;

1622 
accum6
 =áccum6 
OP
 
chunk6
;

1623 
accum7
 =áccum7 
OP
 
chunk7
;

1624 
d©a
 +8*
VSIZE
;

1625 
˙t
 -8*
VSIZE
;

1627 
˙t
) {

1628 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1629 
˙t
--;

1631 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1632 
x„r
.
v
 = x„r.v 
	`OP
 (
accum4
 
OP
 
accum5
ËOP (
accum6
 OP 
accum7
);

1633 
i
 = 0; i < 
VSIZE
; i++)

1634 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1635 *
de°
 = 
ªsu…
;

1636 
	}
}

1638 
	gsimd_v12_des¸
[] = "simd_v12: SSE code, 12*VSIZE-wayÖarallelism";

1639 
	$simd_v12_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1641 
i
;

1642 
∑ck_t
 
x„r
;

1643 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
, 
accum5
, 
accum6
, 
accum7
;

1644 
vec_t
 
accum8
, 
accum9
, 
accum10
, 
accum11
;

1645 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1646 
˙t
 = 
	`vec_Àngth
(
v
);

1647 
d©a_t
 
ªsu…
 = 
IDENT
;

1650 
i
 = 0; i < 
VSIZE
; i++)

1651 
x„r
.
d
[
i
] = 
IDENT
;

1652 
accum0
 = 
x„r
.
v
;

1653 
accum1
 = 
x„r
.
v
;

1654 
accum2
 = 
x„r
.
v
;

1655 
accum3
 = 
x„r
.
v
;

1656 
accum4
 = 
x„r
.
v
;

1657 
accum5
 = 
x„r
.
v
;

1658 
accum6
 = 
x„r
.
v
;

1659 
accum7
 = 
x„r
.
v
;

1660 
accum8
 = 
x„r
.
v
;

1661 
accum9
 = 
x„r
.
v
;

1662 
accum10
 = 
x„r
.
v
;

1663 
accum11
 = 
x„r
.
v
;

1664 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1665 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1666 
˙t
--;

1669 
˙t
 >12*
VSIZE
) {

1670 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1671 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1672 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1673 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1674 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1675 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1676 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1677 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1678 
vec_t
 
chunk8
 = *((vec_à*Ë(
d©a
+8*
VSIZE
));

1679 
vec_t
 
chunk9
 = *((vec_à*Ë(
d©a
+9*
VSIZE
));

1680 
vec_t
 
chunk10
 = *((vec_à*Ë(
d©a
+10*
VSIZE
));

1681 
vec_t
 
chunk11
 = *((vec_à*Ë(
d©a
+11*
VSIZE
));

1682 
accum0
 =áccum0 
OP
 
chunk0
;

1683 
accum1
 =áccum1 
OP
 
chunk1
;

1684 
accum2
 =áccum2 
OP
 
chunk2
;

1685 
accum3
 =áccum3 
OP
 
chunk3
;

1686 
accum4
 =áccum4 
OP
 
chunk4
;

1687 
accum5
 =áccum5 
OP
 
chunk5
;

1688 
accum6
 =áccum6 
OP
 
chunk6
;

1689 
accum7
 =áccum7 
OP
 
chunk7
;

1690 
accum8
 =áccum8 
OP
 
chunk8
;

1691 
accum9
 =áccum9 
OP
 
chunk9
;

1692 
accum10
 =áccum10 
OP
 
chunk10
;

1693 
accum11
 =áccum11 
OP
 
chunk11
;

1694 
d©a
 +12*
VSIZE
;

1695 
˙t
 -12*
VSIZE
;

1697 
˙t
) {

1698 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1699 
˙t
--;

1701 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1702 
x„r
.
v
 = x„r.v 
	`OP
 (
accum4
 
OP
 
accum5
ËOP (
accum6
 OP 
accum7
);

1703 
x„r
.
v
 = x„r.v 
	`OP
 (
accum8
 
OP
 
accum9
ËOP (
accum10
 OP 
accum11
);

1704 
i
 = 0; i < 
VSIZE
; i++)

1705 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1706 *
de°
 = 
ªsu…
;

1707 
	}
}

1710 
	gsimd_v2a_des¸
[] = "simd_v2a: SSE code, 2*VSIZE-wayÖarallelism,Ñeassociate";

1711 
	$simd_v2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1713 
i
;

1714 
∑ck_t
 
x„r
;

1715 
vec_t
 
accum
;

1716 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1717 
˙t
 = 
	`vec_Àngth
(
v
);

1718 
d©a_t
 
ªsu…
 = 
IDENT
;

1721 
i
 = 0; i < 
VSIZE
; i++)

1722 
x„r
.
d
[
i
] = 
IDENT
;

1723 
accum
 = 
x„r
.
v
;

1725 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1726 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1727 
˙t
--;

1730 
˙t
 >2*
VSIZE
) {

1731 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1732 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1733 
accum
 =áccum 
	`OP
 (
chunk0
 
OP
 
chunk1
);

1734 
d©a
 +2*
VSIZE
;

1735 
˙t
 -2*
VSIZE
;

1737 
˙t
) {

1738 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1739 
˙t
--;

1741 
x„r
.
v
 = 
accum
;

1742 
i
 = 0; i < 
VSIZE
; i++)

1743 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1744 *
de°
 = 
ªsu…
;

1745 
	}
}

1747 
	gsimd_v4a_des¸
[] = "simd_v4a: SSE code, 4*VSIZE-wayÖarallelism,Ñeassociate";

1748 
	$simd_v4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1750 
i
;

1751 
∑ck_t
 
x„r
;

1752 
vec_t
 
accum
;

1753 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1754 
˙t
 = 
	`vec_Àngth
(
v
);

1755 
d©a_t
 
ªsu…
 = 
IDENT
;

1758 
i
 = 0; i < 
VSIZE
; i++)

1759 
x„r
.
d
[
i
] = 
IDENT
;

1760 
accum
 = 
x„r
.
v
;

1762 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1763 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1764 
˙t
--;

1768 
˙t
 >4*
VSIZE
) {

1769 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1770 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1771 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1772 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1773 
accum
 =áccum 
OP


1774 ((
chunk0
 
OP
 
chunk1
Ë
	`OP
 (
chunk2
 OP 
chunk3
));

1775 
d©a
 +4*
VSIZE
;

1776 
˙t
 -4*
VSIZE
;

1780 
˙t
) {

1781 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1782 
˙t
--;

1784 
x„r
.
v
 = 
accum
;

1785 
i
 = 0; i < 
VSIZE
; i++)

1786 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1787 *
de°
 = 
ªsu…
;

1788 
	}
}

1790 
	gsimd_v8a_des¸
[] = "simd_v8a: SSE code, 8*VSIZE-wayÖarallelism,Ñeassociate";

1791 
	$simd_v8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1793 
i
;

1794 
∑ck_t
 
x„r
;

1795 
vec_t
 
accum
;

1796 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1797 
˙t
 = 
	`vec_Àngth
(
v
);

1798 
d©a_t
 
ªsu…
 = 
IDENT
;

1801 
i
 = 0; i < 
VSIZE
; i++)

1802 
x„r
.
d
[
i
] = 
IDENT
;

1803 
accum
 = 
x„r
.
v
;

1805 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1806 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1807 
˙t
--;

1810 
˙t
 >8*
VSIZE
) {

1811 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1812 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1813 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1814 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1815 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1816 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1817 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1818 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1819 
accum
 =áccum 
OP


1820 (((
chunk0
 
OP
 
chunk1
Ë
	`OP
 (
chunk2
 OP 
chunk3
))

1821 
OP


1822 ((
chunk4
 
OP
 
chunk5
Ë
	`OP
 (
chunk6
 OP 
chunk7
)));

1823 
d©a
 +8*
VSIZE
;

1824 
˙t
 -8*
VSIZE
;

1826 
˙t
) {

1827 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1828 
˙t
--;

1830 
x„r
.
v
 = 
accum
;

1831 
i
 = 0; i < 
VSIZE
; i++)

1832 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1833 *
de°
 = 
ªsu…
;

1834 
	}
}

1837 
	$ªgi°î_comböîs
()

1839 #i‚de‡
UNROLL_ONLY


1840 
	`add_comböî
(
comböe1
, comböe1, 
comböe1_des¸
);

1841 
	`add_comböî
(
comböe2
, 
comböe1
, 
comböe2_des¸
);

1842 
	`add_comböî
(
comböe3
, 
comböe1
, 
comböe3_des¸
);

1843 
	`add_comböî
(
comböe3w
, 
comböe1
, 
comböe3w_des¸
);

1845 
	`add_comböî
(
comböe4
, 
comböe1
,
comböe4_des¸
);

1846 #i‚de‡
UNROLL_ONLY


1847 
	`add_comböî
(
comböe4b
, 
comböe1
, 
comböe4b_des¸
);

1848 
	`add_comböî
(
comböe4p
, 
comböe1
, 
comböe4p_des¸
);

1850 
	`add_comböî
(
comböe5
, 
comböe1
, 
comböe5_des¸
);

1851 #i‚de‡
UNROLL_ONLY


1852 
	`add_comböî
(
comböe5p
, 
comböe1
, 
comböe5p_des¸
);

1853 
	`add_comböî
(
uƒﬁl2aw_comböe
, 
comböe1
, 
uƒﬁl2aw_des¸
);

1855 
	`add_comböî
(
uƒﬁl3a_comböe
, 
comböe1
, 
uƒﬁl3a_des¸
);

1856 
	`add_comböî
(
uƒﬁl4a_comböe
, 
comböe1
, 
uƒﬁl4a_des¸
);

1857 
	`add_comböî
(
uƒﬁl5a_comböe
, 
comböe1
, 
uƒﬁl5a_des¸
);

1858 
	`add_comböî
(
uƒﬁl6a_comböe
, 
comböe1
, 
uƒﬁl6a_des¸
);

1859 
	`add_comböî
(
uƒﬁl7a_comböe
, 
comböe1
, 
uƒﬁl7a_des¸
);

1860 
	`add_comböî
(
uƒﬁl8a_comböe
, 
comböe1
, 
uƒﬁl8a_des¸
);

1861 
	`add_comböî
(
uƒﬁl9a_comböe
, 
comböe1
, 
uƒﬁl9a_des¸
);

1862 
	`add_comböî
(
uƒﬁl10a_comböe
, 
comböe1
, 
uƒﬁl10a_des¸
);

1863 
	`add_comböî
(
uƒﬁl16a_comböe
, 
comböe1
, 
uƒﬁl16a_des¸
);

1864 #i‚de‡
UNROLL_ONLY


1865 
	`add_comböî
(
uƒﬁl2_comböe
, 
comböe1
, 
uƒﬁl2_des¸
);

1866 
	`add_comböî
(
uƒﬁl3_comböe
, 
comböe1
, 
uƒﬁl3_des¸
);

1867 
	`add_comböî
(
uƒﬁl4_comböe
, 
comböe1
, 
uƒﬁl4_des¸
);

1868 
	`add_comböî
(
uƒﬁl8_comböe
, 
comböe1
, 
uƒﬁl8_des¸
);

1869 
	`add_comböî
(
uƒﬁl16_comböe
, 
comböe1
, 
uƒﬁl16_des¸
);

1870 
	`add_comböî
(
comböe6
, 
comböe1
, 
comböe6_des¸
);

1871 
	`add_comböî
(
uƒﬁl4x2a_comböe
, 
comböe1
, 
uƒﬁl4x2a_des¸
);

1872 
	`add_comböî
(
uƒﬁl8x2a_comböe
, 
comböe1
, 
uƒﬁl8x2a_des¸
);

1873 
	`add_comböî
(
uƒﬁl3x3a_comböe
, 
comböe1
, 
uƒﬁl3x3a_des¸
);

1874 
	`add_comböî
(
uƒﬁl4x4a_comböe
, 
comböe1
, 
uƒﬁl4x4a_des¸
);

1875 
	`add_comböî
(
uƒﬁl5x5a_comböe
, 
comböe1
, 
uƒﬁl5x5a_des¸
);

1876 
	`add_comböî
(
uƒﬁl6x6a_comböe
, 
comböe1
, 
uƒﬁl6x6a_des¸
);

1877 
	`add_comböî
(
uƒﬁl7x7a_comböe
, 
comböe1
, 
uƒﬁl7x7a_des¸
);

1878 
	`add_comböî
(
uƒﬁl8x4a_comböe
, 
comböe1
, 
uƒﬁl8x4a_des¸
);

1879 
	`add_comböî
(
uƒﬁl8x8a_comböe
, 
comböe1
, 
uƒﬁl8x8a_des¸
);

1880 
	`add_comböî
(
uƒﬁl9x9a_comböe
, 
comböe1
, 
uƒﬁl9x9a_des¸
);

1881 
	`add_comböî
(
uƒﬁl10x10a_comböe
, 
comböe1
, 
uƒﬁl10x10a_des¸
);

1882 
	`add_comböî
(
uƒﬁl12x6a_comböe
, 
comböe1
, 
uƒﬁl12x6a_des¸
);

1883 
	`add_comböî
(
uƒﬁl12x12a_comböe
, 
comböe1
, 
uƒﬁl12x12a_des¸
);

1884 
	`add_comböî
(
uƒﬁl8x2_comböe
, 
comböe1
, 
uƒﬁl8x2_des¸
);

1885 
	`add_comböî
(
uƒﬁl8x4_comböe
, 
comböe1
, 
uƒﬁl8x4_des¸
);

1886 
	`add_comböî
(
uƒﬁl8x8_comböe
, 
comböe1
, 
uƒﬁl8x8_des¸
);

1887 
	`add_comböî
(
uƒﬁl9x3_comböe
, 
comböe1
, 
uƒﬁl9x3_des¸
);

1888 
	`add_comböî
(
uƒﬁlx2as_comböe
, 
comböe1
, 
uƒﬁlx2as_des¸
);

1889 
	`add_comböî
(
comböe7
, 
comböe1
, 
comböe7_des¸
);

1890 
	`add_comböî
(
uƒﬁl3Ø_comböe
, 
comböe1
, 
uƒﬁl3Ø_des¸
);

1891 
	`add_comböî
(
uƒﬁl4Ø_comböe
, 
comböe1
, 
uƒﬁl4Ø_des¸
);

1892 
	`add_comböî
(
uƒﬁl5Ø_comböe
, 
comböe1
, 
uƒﬁl5Ø_des¸
);

1893 
	`add_comböî
(
uƒﬁl6Ø_comböe
, 
comböe1
, 
uƒﬁl6Ø_des¸
);

1894 
	`add_comböî
(
uƒﬁl7Ø_comböe
, 
comböe1
, 
uƒﬁl7Ø_des¸
);

1895 
	`add_comböî
(
uƒﬁl8Ø_comböe
, 
comböe1
, 
uƒﬁl8Ø_des¸
);

1896 
	`add_comböî
(
uƒﬁl9Ø_comböe
, 
comböe1
, 
uƒﬁl9Ø_des¸
);

1897 
	`add_comböî
(
uƒﬁl10Ø_comböe
, 
comböe1
, 
uƒﬁl10Ø_des¸
);

1898 
	`add_comböî
(
uƒﬁl12Ø_comböe
, 
comböe1
, 
uƒﬁl12Ø_des¸
);

1899 
	`add_comböî
(
simd_v1_comböe
, 
comböe1
, 
simd_v1_des¸
);

1900 
	`add_comböî
(
simd_v2_comböe
, 
comböe1
, 
simd_v2_des¸
);

1901 
	`add_comböî
(
simd_v4_comböe
, 
comböe1
, 
simd_v4_des¸
);

1902 
	`add_comböî
(
simd_v8_comböe
, 
comböe1
, 
simd_v8_des¸
);

1903 
	`add_comböî
(
simd_v12_comböe
, 
comböe1
, 
simd_v12_des¸
);

1904 
	`add_comböî
(
simd_v2a_comböe
, 
comböe1
, 
simd_v2a_des¸
);

1905 
	`add_comböî
(
simd_v4a_comböe
, 
comböe1
, 
simd_v4a_des¸
);

1906 
	`add_comböî
(
simd_v8a_comböe
, 
comböe1
, 
simd_v8a_des¸
);

1907 
	`log_comböî
(
simd_v8a_comböe
, 0.16, 0.24);

1909 
	}
}

	@opt/lsb-O1.c

1 
	~"comböe.h
"

5 
	gcomböe1_des¸
[] = "combine1: Maximum use of dataábstraction";

8 
	$comböe1
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

10 
i
;

12 *
de°
 = 
IDENT
;

13 
i
 = 0; i < 
	`vec_Àngth
(
v
); i++) {

14 
d©a_t
 
vÆ
;

15 
	`gë_vec_ñemít
(
v
, 
i
, &
vÆ
);

17 *
de°
 = *de° 
OP
 
vÆ
;

20 
	}
}

23 
	gcomböe2_des¸
[] = "combine2: Take vec_length() out ofÜoop";

26 
	$comböe2
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

28 
i
;

29 
Àngth
 = 
	`vec_Àngth
(
v
);

31 *
de°
 = 
IDENT
;

32 
i
 = 0; i < 
Àngth
; i++) {

33 
d©a_t
 
vÆ
;

34 
	`gë_vec_ñemít
(
v
, 
i
, &
vÆ
);

35 *
de°
 = *de° 
OP
 
vÆ
;

37 
	}
}

40 
	gcomböe3_des¸
[] = "combine3: ArrayÑeferenceÅo vector data";

43 
	$comböe3
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

45 
i
;

46 
Àngth
 = 
	`vec_Àngth
(
v
);

47 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

49 *
de°
 = 
IDENT
;

50 
i
 = 0; i < 
Àngth
; i++) {

51 *
de°
 = *de° 
OP
 
d©a
[
i
];

53 
	}
}

56 
	gcomböe3w_des¸
[] = "combine3w: Update *dest withinÜoop only with write";

59 
	$comböe3w
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

61 
i
;

62 
Àngth
 = 
	`vec_Àngth
(
v
);

63 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

64 
d©a_t
 
acc
 = 
IDENT
;

67 *
de°
 = 
acc
;

69 
i
 = 0; i < 
Àngth
; i++) {

70 
acc
 =ác¯
OP
 
d©a
[
i
];

71 *
de°
 = 
acc
;

73 
	}
}

76 
	gcomböe4_des¸
[] = "combine4: ArrayÑeference,áccumulate inÅemporary";

79 
	$comböe4
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

81 
i
;

82 
Àngth
 = 
	`vec_Àngth
(
v
);

83 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

84 
d©a_t
 
acc
 = 
IDENT
;

86 
i
 = 0; i < 
Àngth
; i++) {

87 
acc
 =ác¯
OP
 
d©a
[
i
];

89 *
de°
 = 
acc
;

90 
	}
}

93 
	gcomböe4b_des¸
[] = "combine4b: Include bonds check inÜoop";

96 
	$comböe4b
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

98 
i
;

99 
Àngth
 = 
	`vec_Àngth
(
v
);

100 
d©a_t
 
acc
 = 
IDENT
;

102 
i
 = 0; i < 
Àngth
; i++) {

103 i‡(
i
 >0 && i < 
v
->
Àn
) {

104 
acc
 =ác¯
OP
 
v
->
d©a
[
i
];

107 *
de°
 = 
acc
;

108 
	}
}

112 
	gcomböe4p_des¸
[] = "combine4p: PointerÑeference,áccumulate inÅemporary";

115 
	$comböe4p
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

117 
Àngth
 = 
	`vec_Àngth
(
v
);

118 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

119 
d©a_t
 *
díd
 = 
d©a
+
Àngth
;

120 
d©a_t
 
acc
 = 
IDENT
;

122 ; 
d©a
 < 
díd
; data++)

123 
acc
 =ác¯
OP
 *
d©a
;

124 *
de°
 = 
acc
;

125 
	}
}

129 
	gcomböe5_des¸
[] = "combine5: Array code, unrolled by 2";

132 
	$comböe5
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

134 
i
;

135 
Àngth
 = 
	`vec_Àngth
(
v
);

136 
limô
 = 
Àngth
-1;

137 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

138 
d©a_t
 
acc
 = 
IDENT
;

141 
i
 = 0; i < 
limô
; i+=2) {

143 
acc
 = (ac¯
OP
 
d©a
[
i
]) OP data[i+1];

148 ; 
i
 < 
Àngth
; i++) {

149 
acc
 =ác¯
OP
 
d©a
[
i
];

151 *
de°
 = 
acc
;

152 
	}
}

155 
	guƒﬁl3a_des¸
[] = "unroll3a: Array code, unrolled by 3";

156 
	$uƒﬁl3a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

158 
i
;

159 
Àngth
 = 
	`vec_Àngth
(
v
);

160 
limô
 = 
Àngth
-2;

161 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

162 
d©a_t
 
acc
 = 
IDENT
;

165 
i
 = 0; i < 
limô
; i+=3) {

166 
acc
 =ác¯
OP
 
d©a
[
i
];

167 
acc
 =ác¯
OP
 
d©a
[
i
+1];

168 
acc
 =ác¯
OP
 
d©a
[
i
+2];

172 ; 
i
 < 
Àngth
; i++) {

173 
acc
 =ác¯
OP
 
d©a
[
i
];

175 *
de°
 = 
acc
;

176 
	}
}

179 
	gcomböe5p_des¸
[] = "combine5p: Pointer code, unrolled by 2, forÜoop";

182 
	$comböe5p
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

184 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

185 
d©a_t
 *
díd
 = 
d©a
+
	`vec_Àngth
(
v
);

186 
d©a_t
 *
dlimô
 = 
díd
-1;

187 
d©a_t
 
acc
 = 
IDENT
;

190 ; 
d©a
 < 
dlimô
; data += 2) {

191 
acc
 =ác¯
OP
 
d©a
[0] OP data[1];

195 ; 
d©a
 < 
díd
; data++) {

196 
acc
 =ác¯
OP
 
d©a
[0];

198 *
de°
 = 
acc
;

199 
	}
}

202 
	guƒﬁl2aw_des¸
[] = "unroll2aw: Array code, unrolled by 2, whileÜoop";

203 
	$uƒﬁl2aw_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

205 
i
 = 0;

206 
Àngth
 = 
	`vec_Àngth
(
v
);

207 
limô
 = 
Àngth
-1;

208 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

209 
d©a_t
 
acc
 = 
IDENT
;

212 
i
 < 
limô
) {

213 
acc
 =ác¯
OP
 
d©a
[
i
];

214 
i
+= 2;

215 
acc
 =ác¯
OP
 
d©a
[
i
-1];

219 ; 
i
 < 
Àngth
; i++) {

220 
acc
 =ác¯
OP
 
d©a
[
i
];

222 *
de°
 = 
acc
;

223 
	}
}

226 
	guƒﬁl4a_des¸
[] = "unroll4a: Array code, unrolled by 4";

227 
	$uƒﬁl4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

229 
i
;

230 
Àngth
 = 
	`vec_Àngth
(
v
);

231 
limô
 = 
Àngth
-3;

232 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

233 
d©a_t
 
acc
 = 
IDENT
;

236 
i
 = 0; i < 
limô
; i+=4) {

237 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

238 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

242 ; 
i
 < 
Àngth
; i++) {

243 
acc
 =ác¯
OP
 
d©a
[
i
];

245 *
de°
 = 
acc
;

246 
	}
}

248 
	guƒﬁl5a_des¸
[] = "unroll5a: Array code, unrolled by 5";

251 
	$uƒﬁl5
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

254 
	$uƒﬁl5a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

258 
i
;

259 
Àngth
 = 
	`vec_Àngth
(
v
);

260 
limô
 = 
Àngth
-4;

261 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

262 
d©a_t
 
acc
 = 
IDENT
;

265 
i
 = 0; i < 
limô
; i+=5) {

266 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

267 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

268 
acc
 =ác¯
OP
 
d©a
[
i
+4];

272 ; 
i
 < 
Àngth
; i++) {

273 
acc
 =ác¯
OP
 
d©a
[
i
];

275 *
de°
 = 
acc
;

276 
	}
}

279 
	guƒﬁl6a_des¸
[] = "unroll6a: Array code, unrolled by 6";

280 
	$uƒﬁl6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

282 
i
;

283 
Àngth
 = 
	`vec_Àngth
(
v
);

284 
limô
 = 
Àngth
-5;

285 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

286 
d©a_t
 
acc
 = 
IDENT
;

289 
i
 = 0; i < 
limô
; i+=6) {

290 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

291 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

292 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

296 ; 
i
 < 
Àngth
; i++) {

297 
acc
 =ác¯
OP
 
d©a
[
i
];

299 *
de°
 = 
acc
;

300 
	}
}

302 
	guƒﬁl7a_des¸
[] = "unroll7a: Array code, unrolled by 7";

303 
	$uƒﬁl7a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

305 
i
;

306 
Àngth
 = 
	`vec_Àngth
(
v
);

307 
limô
 = 
Àngth
-6;

308 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

309 
d©a_t
 
acc
 = 
IDENT
;

312 
i
 = 0; i < 
limô
; i+=7) {

313 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

314 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

315 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

316 
acc
 =ác¯
OP
 
d©a
[
i
+6];

320 ; 
i
 < 
Àngth
; i++) {

321 
acc
 =ác¯
OP
 
d©a
[
i
];

323 *
de°
 = 
acc
;

324 
	}
}

327 
	guƒﬁl8a_des¸
[] = "unroll8a: Array code, unrolled by 8";

328 
	$uƒﬁl8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

330 
i
;

331 
Àngth
 = 
	`vec_Àngth
(
v
);

332 
limô
 = 
Àngth
-7;

333 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

334 
d©a_t
 
acc
 = 
IDENT
;

337 
i
 = 0; i < 
limô
; i+=8) {

338 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

339 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

340 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

341 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

345 ; 
i
 < 
Àngth
; i++) {

346 
acc
 =ác¯
OP
 
d©a
[
i
];

348 *
de°
 = 
acc
;

349 
	}
}

351 
	guƒﬁl9a_des¸
[] = "unroll9a: Array code, unrolled by 9";

352 
	$uƒﬁl9a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

354 
i
;

355 
Àngth
 = 
	`vec_Àngth
(
v
);

356 
limô
 = 
Àngth
-8;

357 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

358 
d©a_t
 
acc
 = 
IDENT
;

361 
i
 = 0; i < 
limô
; i+=9) {

362 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

363 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

364 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

365 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

366 
acc
 =ác¯
OP
 
d©a
[
i
+8];

370 ; 
i
 < 
Àngth
; i++) {

371 
acc
 =ác¯
OP
 
d©a
[
i
];

373 *
de°
 = 
acc
;

374 
	}
}

376 
	guƒﬁl10a_des¸
[] = "unroll10a: Array code, unrolled by 10";

377 
	$uƒﬁl10a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

379 
i
;

380 
Àngth
 = 
	`vec_Àngth
(
v
);

381 
limô
 = 
Àngth
-9;

382 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

383 
d©a_t
 
acc
 = 
IDENT
;

386 
i
 = 0; i < 
limô
; i+=10) {

387 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

388 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

389 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

390 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

391 
acc
 =ác¯
OP
 
d©a
[
i
+8] OP data[i+9];

395 ; 
i
 < 
Àngth
; i++) {

396 
acc
 =ác¯
OP
 
d©a
[
i
];

398 *
de°
 = 
acc
;

399 
	}
}

402 
	guƒﬁl16a_des¸
[] = "unroll16a: Array code, unrolled by 16";

403 
	$uƒﬁl16a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

405 
i
;

406 
Àngth
 = 
	`vec_Àngth
(
v
);

407 
limô
 = 
Àngth
-15;

408 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

409 
d©a_t
 
acc
 = 
IDENT
;

412 
i
 = 0; i < 
limô
; i+=16) {

413 
acc
 =ác¯
OP
 
d©a
[
i
] OP data[i+1];

414 
acc
 =ác¯
OP
 
d©a
[
i
+2] OP data[i+3];

415 
acc
 =ác¯
OP
 
d©a
[
i
+4] OP data[i+5];

416 
acc
 =ác¯
OP
 
d©a
[
i
+6] OP data[i+7];

417 
acc
 =ác¯
OP
 
d©a
[
i
+8] OP data[i+9];

418 
acc
 =ác¯
OP
 
d©a
[
i
+10] OP data[i+11];

419 
acc
 =ác¯
OP
 
d©a
[
i
+12] OP data[i+13];

420 
acc
 =ác¯
OP
 
d©a
[
i
+14] OP data[i+15];

424 ; 
i
 < 
Àngth
; i++) {

425 
acc
 =ác¯
OP
 
d©a
[
i
];

427 *
de°
 = 
acc
;

428 
	}
}

430 
	guƒﬁl2_des¸
[] = "unroll2: Pointer code, unrolled by 2";

431 
	$uƒﬁl2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

433 
Àngth
 = 
	`vec_Àngth
(
v
);

434 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

435 
ovî
 = 
Àngth
%2;

436 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

437 
d©a_t
 
acc
 = 
IDENT
;

439 
d©a
 < 
díd
) {

440 
acc
 =ác¯
OP
 
d©a
[0];

441 
acc
 =ác¯
OP
 
d©a
[1];

442 
d©a
 += 2;

444 
díd
 +
ovî
;

445 
d©a
 < 
díd
) {

446 
acc
 =ác¯
OP
 *
d©a
;

447 
d©a
 ++;

449 *
de°
 = 
acc
;

450 
	}
}

453 
	guƒﬁl3_des¸
[] = "unroll3: Pointer code, unrolled by 3";

454 
	$uƒﬁl3_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

456 
Àngth
 = 
	`vec_Àngth
(
v
);

457 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

458 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-2;

459 
d©a_t
 
acc
 = 
IDENT
;

461 
d©a
 < 
díd
) {

462 
acc
 =ác¯
OP
 
d©a
[0];

463 
acc
 =ác¯
OP
 
d©a
[1];

464 
acc
 =ác¯
OP
 
d©a
[2];

465 
d©a
 += 3;

467 
díd
 += 2;

468 
d©a
 < 
díd
) {

469 
acc
 =ác¯
OP
 *
d©a
;

470 
d©a
 ++;

472 *
de°
 = 
acc
;

473 
	}
}

476 
	guƒﬁl4_des¸
[] = "unroll4: Pointer code, unrolled by 4";

477 
	$uƒﬁl4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

479 
Àngth
 = 
	`vec_Àngth
(
v
);

480 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

481 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-3;

482 
d©a_t
 
acc
 = 
IDENT
;

484 
d©a
 < 
díd
) {

485 
acc
 =ác¯
OP
 
d©a
[0];

486 
acc
 =ác¯
OP
 
d©a
[1];

487 
acc
 =ác¯
OP
 
d©a
[2];

488 
acc
 =ác¯
OP
 
d©a
[3];

489 
d©a
 += 4;

491 
díd
 += 3;

492 
d©a
 < 
díd
) {

493 
acc
 =ác¯
OP
 *
d©a
;

494 
d©a
 ++;

496 *
de°
 = 
acc
;

497 
	}
}

499 
	guƒﬁl8_des¸
[] = "unroll8: Pointer code, unrolled by 8";

500 
	$uƒﬁl8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

502 
Àngth
 = 
	`vec_Àngth
(
v
);

503 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

504 
ovî
 = 
Àngth
%8;

505 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

506 
d©a_t
 
acc
 = 
IDENT
;

508 
d©a
 < 
díd
) {

509 
acc
 =ác¯
OP
 
d©a
[0];

510 
acc
 =ác¯
OP
 
d©a
[1];

511 
acc
 =ác¯
OP
 
d©a
[2];

512 
acc
 =ác¯
OP
 
d©a
[3];

513 
acc
 =ác¯
OP
 
d©a
[4];

514 
acc
 =ác¯
OP
 
d©a
[5];

515 
acc
 =ác¯
OP
 
d©a
[6];

516 
acc
 =ác¯
OP
 
d©a
[7];

517 
d©a
 += 8;

519 
díd
 +
ovî
;

520 
d©a
 < 
díd
) {

521 
acc
 =ác¯
OP
 *
d©a
;

522 
d©a
 ++;

524 *
de°
 = 
acc
;

525 
	}
}

527 
	guƒﬁl16_des¸
[] = "unroll16: Pointer code, unrolled by 16";

528 
	$uƒﬁl16_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

530 
Àngth
 = 
	`vec_Àngth
(
v
);

531 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

532 
ovî
 = 
Àngth
%16;

533 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-
ovî
;

534 
d©a_t
 
acc
 = 
IDENT
;

536 
d©a
 < 
díd
) {

537 
acc
 =ác¯
OP
 
d©a
[0];

538 
acc
 =ác¯
OP
 
d©a
[1];

539 
acc
 =ác¯
OP
 
d©a
[2];

540 
acc
 =ác¯
OP
 
d©a
[3];

541 
acc
 =ác¯
OP
 
d©a
[4];

542 
acc
 =ác¯
OP
 
d©a
[5];

543 
acc
 =ác¯
OP
 
d©a
[6];

544 
acc
 =ác¯
OP
 
d©a
[7];

545 
acc
 =ác¯
OP
 
d©a
[8];

546 
acc
 =ác¯
OP
 
d©a
[9];

547 
acc
 =ác¯
OP
 
d©a
[10];

548 
acc
 =ác¯
OP
 
d©a
[11];

549 
acc
 =ác¯
OP
 
d©a
[12];

550 
acc
 =ác¯
OP
 
d©a
[13];

551 
acc
 =ác¯
OP
 
d©a
[14];

552 
acc
 =ác¯
OP
 
d©a
[15];

553 
d©a
 += 16;

555 
díd
 +
ovî
;

556 
d©a
 < 
díd
) {

557 
acc
 =ác¯
OP
 *
d©a
;

558 
d©a
 ++;

560 *
de°
 = 
acc
;

561 
	}
}

564 
	gcomböe6_des¸
[] = "combine6: Array code, unrolled by 2, Superscalar x2";

567 
	$comböe6
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

569 
i
;

570 
Àngth
 = 
	`vec_Àngth
(
v
);

571 
limô
 = 
Àngth
-1;

572 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

573 
d©a_t
 
acc0
 = 
IDENT
;

574 
d©a_t
 
acc1
 = 
IDENT
;

577 
i
 = 0; i < 
limô
; i+=2) {

578 
acc0
 =ácc0 
OP
 
d©a
[
i
];

579 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

583 ; 
i
 < 
Àngth
; i++) {

584 
acc0
 =ácc0 
OP
 
d©a
[
i
];

586 *
de°
 = 
acc0
 
OP
 
acc1
;

587 
	}
}

590 
	guƒﬁl4x2a_des¸
[] = "unroll4x2a: Array code, unrolled by 4, Superscalar x2";

591 
	$uƒﬁl4x2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

593 
i
;

594 
Àngth
 = 
	`vec_Àngth
(
v
);

595 
limô
 = 
Àngth
-3;

596 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

597 
d©a_t
 
acc0
 = 
IDENT
;

598 
d©a_t
 
acc1
 = 
IDENT
;

601 
i
 = 0; i < 
limô
; i+=4) {

602 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

603 
acc0
 =ácc0 
OP
 
d©a
[
i
+2]; 
acc1
 =ácc1 OP data[i+3];

607 ; 
i
 < 
Àngth
; i++) {

608 
acc0
 =ácc0 
OP
 
d©a
[
i
];

610 *
de°
 = 
acc0
 
OP
 
acc1
;

611 
	}
}

614 
	guƒﬁl8x2a_des¸
[] = "unroll8x2a: Array code, unrolled by 8, Superscalar x2";

615 
	$uƒﬁl8x2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

617 
i
;

618 
Àngth
 = 
	`vec_Àngth
(
v
);

619 
limô
 = 
Àngth
-7;

620 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

621 
d©a_t
 
acc0
 = 
IDENT
;

622 
d©a_t
 
acc1
 = 
IDENT
;

625 
i
 = 0; i < 
limô
; i+=8) {

626 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

627 
acc0
 =ácc0 
OP
 
d©a
[
i
+2]; 
acc1
 =ácc1 OP data[i+3];

628 
acc0
 =ácc0 
OP
 
d©a
[
i
+4]; 
acc1
 =ácc1 OP data[i+5];

629 
acc0
 =ácc0 
OP
 
d©a
[
i
+6]; 
acc1
 =ácc1 OP data[i+7];

633 ; 
i
 < 
Àngth
; i++) {

634 
acc0
 =ácc0 
OP
 
d©a
[
i
];

636 *
de°
 = 
acc0
 
OP
 
acc1
;

637 
	}
}

639 
	guƒﬁl3x3a_des¸
[] = "unroll3x3a: Array code, unrolled by 3, Superscalar x3";

640 
	$uƒﬁl3x3a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

642 
i
;

643 
Àngth
 = 
	`vec_Àngth
(
v
);

644 
limô
 = 
Àngth
-2;

645 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

646 
d©a_t
 
acc0
 = 
IDENT
;

647 
d©a_t
 
acc1
 = 
IDENT
;

648 
d©a_t
 
acc2
 = 
IDENT
;

651 
i
 = 0; i < 
limô
; i+=3) {

652 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

653 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

657 ; 
i
 < 
Àngth
; i++) {

658 
acc0
 =ácc0 
OP
 
d©a
[
i
];

660 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
;

661 
	}
}

664 
	guƒﬁl4x4a_des¸
[] = "unroll4x4a: Array code, unrolled by 4, Superscalar x4";

665 
	$uƒﬁl4x4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

667 
i
;

668 
Àngth
 = 
	`vec_Àngth
(
v
);

669 
limô
 = 
Àngth
-3;

670 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

671 
d©a_t
 
acc0
 = 
IDENT
;

672 
d©a_t
 
acc1
 = 
IDENT
;

673 
d©a_t
 
acc2
 = 
IDENT
;

674 
d©a_t
 
acc3
 = 
IDENT
;

677 
i
 = 0; i < 
limô
; i+=4) {

678 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

679 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

683 ; 
i
 < 
Àngth
; i++) {

684 
acc0
 =ácc0 
OP
 
d©a
[
i
];

686 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
);

688 
	}
}

690 
	guƒﬁl8x4a_des¸
[] = "unroll8x4a: Array code, unrolled by 8, Superscalar x4";

691 
	$uƒﬁl8x4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

693 
i
;

694 
Àngth
 = 
	`vec_Àngth
(
v
);

695 
limô
 = 
Àngth
-7;

696 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

697 
d©a_t
 
acc0
 = 
IDENT
;

698 
d©a_t
 
acc1
 = 
IDENT
;

699 
d©a_t
 
acc2
 = 
IDENT
;

700 
d©a_t
 
acc3
 = 
IDENT
;

703 
i
 = 0; i < 
limô
; i+=8) {

704 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

705 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

706 
acc0
 =ácc0 
OP
 
d©a
[
i
+4]; 
acc1
 =ácc1 OP data[i+5];

707 
acc2
 =ácc2 
OP
 
d©a
[
i
+6]; 
acc3
 =ácc3 OP data[i+7];

711 ; 
i
 < 
Àngth
; i++) {

712 
acc0
 =ácc0 
OP
 
d©a
[
i
];

714 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
 OP 
acc3
;

715 
	}
}

717 
	guƒﬁl12x6a_des¸
[] = "unroll2x6a: Array code, unrolled by 12, Superscalar x6";

718 
	$uƒﬁl12x6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

720 
i
;

721 
Àngth
 = 
	`vec_Àngth
(
v
);

722 
limô
 = 
Àngth
-11;

723 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

724 
d©a_t
 
acc0
 = 
IDENT
;

725 
d©a_t
 
acc1
 = 
IDENT
;

726 
d©a_t
 
acc2
 = 
IDENT
;

727 
d©a_t
 
acc3
 = 
IDENT
;

728 
d©a_t
 
acc4
 = 
IDENT
;

729 
d©a_t
 
acc5
 = 
IDENT
;

732 
i
 = 0; i < 
limô
; i+=12) {

733 
acc0
 =ácc0 
OP
 
d©a
[
i
];

734 
acc0
 =ácc0 
OP
 
d©a
[
i
+6];

735 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

736 
acc1
 =ácc1 
OP
 
d©a
[
i
+7];

737 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

738 
acc2
 =ácc2 
OP
 
d©a
[
i
+8];

739 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

740 
acc3
 =ácc3 
OP
 
d©a
[
i
+9];

741 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

742 
acc4
 =ácc4 
OP
 
d©a
[
i
+10];

743 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

744 
acc5
 =ácc5 
OP
 
d©a
[
i
+11];

748 ; 
i
 < 
Àngth
; i++) {

749 
acc0
 =ácc0 
OP
 
d©a
[
i
];

751 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
);

752 
	}
}

754 
	guƒﬁl12x12a_des¸
[] = "unroll12x12a: Array code, unrolled by 12, Superscalar x12";

755 
	$uƒﬁl12x12a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

757 
i
;

758 
Àngth
 = 
	`vec_Àngth
(
v
);

759 
limô
 = 
Àngth
-11;

760 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

761 
d©a_t
 
acc0
 = 
IDENT
;

762 
d©a_t
 
acc1
 = 
IDENT
;

763 
d©a_t
 
acc2
 = 
IDENT
;

764 
d©a_t
 
acc3
 = 
IDENT
;

765 
d©a_t
 
acc4
 = 
IDENT
;

766 
d©a_t
 
acc5
 = 
IDENT
;

767 
d©a_t
 
acc6
 = 
IDENT
;

768 
d©a_t
 
acc7
 = 
IDENT
;

769 
d©a_t
 
acc8
 = 
IDENT
;

770 
d©a_t
 
acc9
 = 
IDENT
;

771 
d©a_t
 
acc10
 = 
IDENT
;

772 
d©a_t
 
acc11

IDENT
;

775 
i
 = 0; i < 
limô
; i+=12) {

776 
acc0
 =ácc0 
OP
 
d©a
[
i
];

777 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

778 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

779 
acc7
 =ácc7 
OP
 
d©a
[
i
+7];

780 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

781 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

782 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

783 
acc9
 =ácc9 
OP
 
d©a
[
i
+9];

784 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

785 
acc10
 =ácc10 
OP
 
d©a
[
i
+10];

786 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

787 
acc11
 =ácc11 
OP
 
d©a
[
i
+11];

791 ; 
i
 < 
Àngth
; i++) {

792 
acc0
 =ácc0 
OP
 
d©a
[
i
];

794 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
)

795 
	`OP
 (
acc6
 
OP
 
acc7
ËOP (
acc8
 OP 
acc9
ËOP (
acc10
 OP 
acc11
);

796 
	}
}

798 
	guƒﬁl16x16a_des¸
[] = "unroll16x16a: Array code, unrolled by 16, Superscalar x16";

799 
	$uƒﬁl16x16a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

801 
i
;

802 
Àngth
 = 
	`vec_Àngth
(
v
);

803 
limô
 = 
Àngth
-15;

804 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

805 
d©a_t
 
acc0
 = 
IDENT
;

806 
d©a_t
 
acc1
 = 
IDENT
;

807 
d©a_t
 
acc2
 = 
IDENT
;

808 
d©a_t
 
acc3
 = 
IDENT
;

809 
d©a_t
 
acc4
 = 
IDENT
;

810 
d©a_t
 
acc5
 = 
IDENT
;

811 
d©a_t
 
acc6
 = 
IDENT
;

812 
d©a_t
 
acc7
 = 
IDENT
;

813 
d©a_t
 
acc8
 = 
IDENT
;

814 
d©a_t
 
acc9
 = 
IDENT
;

815 
d©a_t
 
acc10
 = 
IDENT
;

816 
d©a_t
 
acc11

IDENT
;

817 
d©a_t
 
acc12

IDENT
;

818 
d©a_t
 
acc13

IDENT
;

819 
d©a_t
 
acc14

IDENT
;

820 
d©a_t
 
acc15

IDENT
;

823 
i
 = 0; i < 
limô
; i+=16) {

824 
acc0
 =ácc0 
OP
 
d©a
[
i
];

825 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

826 
acc1
 =ácc1 
OP
 
d©a
[
i
+1];

827 
acc7
 =ácc7 
OP
 
d©a
[
i
+7];

828 
acc2
 =ácc2 
OP
 
d©a
[
i
+2];

829 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

830 
acc3
 =ácc3 
OP
 
d©a
[
i
+3];

831 
acc9
 =ácc9 
OP
 
d©a
[
i
+9];

832 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

833 
acc10
 =ácc10 
OP
 
d©a
[
i
+10];

834 
acc5
 =ácc5 
OP
 
d©a
[
i
+5];

835 
acc11
 =ácc11 
OP
 
d©a
[
i
+11];

836 
acc12
 =ácc12 
OP
 
d©a
[
i
+12];

837 
acc13
 =ácc13 
OP
 
d©a
[
i
+13];

838 
acc14
 =ácc14 
OP
 
d©a
[
i
+14];

839 
acc15
 =ácc15 
OP
 
d©a
[
i
+15];

843 ; 
i
 < 
Àngth
; i++) {

844 
acc0
 =ácc0 
OP
 
d©a
[
i
];

846 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
))

847 
	`OP
 ((
acc6
 
OP
 
acc7
ËOP (
acc8
 OP 
acc9
ËOP (
acc10
 OP 
acc11
))

848 
	`OP
 ((
acc12
 
OP
 
acc13
ËOP (
acc14
 OP 
acc15
));

849 
	}
}

852 
	guƒﬁl5x5a_des¸
[] = "unroll5x5a: Array code, unrolled by 5, Superscalar x5";

853 
	$uƒﬁl5x5a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

855 
i
;

856 
Àngth
 = 
	`vec_Àngth
(
v
);

857 
limô
 = 
Àngth
-4;

858 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

859 
d©a_t
 
acc0
 = 
IDENT
;

860 
d©a_t
 
acc1
 = 
IDENT
;

861 
d©a_t
 
acc2
 = 
IDENT
;

862 
d©a_t
 
acc3
 = 
IDENT
;

863 
d©a_t
 
acc4
 = 
IDENT
;

866 
i
 = 0; i < 
limô
; i+=5) {

867 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

868 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

869 
acc4
 =ácc4 
OP
 
d©a
[
i
+4];

873 ; 
i
 < 
Àngth
; i++) {

874 
acc0
 =ácc0 
OP
 
d©a
[
i
];

876 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
 OP 
acc4
);

877 
	}
}

879 
	guƒﬁl6x6a_des¸
[] = "unroll6x6a: Array code, unrolled by 6, Superscalar x6";

880 
	$uƒﬁl6x6a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

882 
i
;

883 
Àngth
 = 
	`vec_Àngth
(
v
);

884 
limô
 = 
Àngth
-5;

885 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

886 
d©a_t
 
acc0
 = 
IDENT
;

887 
d©a_t
 
acc1
 = 
IDENT
;

888 
d©a_t
 
acc2
 = 
IDENT
;

889 
d©a_t
 
acc3
 = 
IDENT
;

890 
d©a_t
 
acc4
 = 
IDENT
;

891 
d©a_t
 
acc5
 = 
IDENT
;

894 
i
 = 0; i < 
limô
; i+=6) {

895 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

896 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

897 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

901 ; 
i
 < 
Àngth
; i++) {

902 
acc0
 =ácc0 
OP
 
d©a
[
i
];

904 *
de°
 = (
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
ËOP (
acc4
 OP 
acc5
);

905 
	}
}

907 
	guƒﬁl7x7a_des¸
[] = "unroll7x7a: Array code, unrolled by 7, Superscalar x7";

908 
	$uƒﬁl7x7a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

910 
i
;

911 
Àngth
 = 
	`vec_Àngth
(
v
);

912 
limô
 = 
Àngth
-6;

913 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

914 
d©a_t
 
acc0
 = 
IDENT
;

915 
d©a_t
 
acc1
 = 
IDENT
;

916 
d©a_t
 
acc2
 = 
IDENT
;

917 
d©a_t
 
acc3
 = 
IDENT
;

918 
d©a_t
 
acc4
 = 
IDENT
;

919 
d©a_t
 
acc5
 = 
IDENT
;

920 
d©a_t
 
acc6
 = 
IDENT
;

923 
i
 = 0; i < 
limô
; i+=7) {

924 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

925 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

926 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

927 
acc6
 =ácc6 
OP
 
d©a
[
i
+6];

931 ; 
i
 < 
Àngth
; i++) {

932 
acc0
 =ácc0 
OP
 
d©a
[
i
];

934 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP (
acc4
 OP 
acc5
 OP 
acc6
);

935 
	}
}

937 
	guƒﬁl8x8a_des¸
[] = "unroll8x8a: Array code, unrolled by 8, Superscalar x8";

938 
	$uƒﬁl8x8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

940 
i
;

941 
Àngth
 = 
	`vec_Àngth
(
v
);

942 
limô
 = 
Àngth
-7;

943 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

944 
d©a_t
 
acc0
 = 
IDENT
;

945 
d©a_t
 
acc1
 = 
IDENT
;

946 
d©a_t
 
acc2
 = 
IDENT
;

947 
d©a_t
 
acc3
 = 
IDENT
;

948 
d©a_t
 
acc4
 = 
IDENT
;

949 
d©a_t
 
acc5
 = 
IDENT
;

950 
d©a_t
 
acc6
 = 
IDENT
;

951 
d©a_t
 
acc7
 = 
IDENT
;

954 
i
 = 0; i < 
limô
; i+=8) {

955 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

956 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

957 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

958 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

962 ; 
i
 < 
Àngth
; i++) {

963 
acc0
 =ácc0 
OP
 
d©a
[
i
];

965 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP ((
acc4
 OP 
acc5
ËOP (
acc6
 OP 
acc7
));

966 
	}
}

968 
	guƒﬁl9x9a_des¸
[] = "unroll9x9a: Array code, unrolled by 9, Superscalar x9";

969 
	$uƒﬁl9x9a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

971 
i
;

972 
Àngth
 = 
	`vec_Àngth
(
v
);

973 
limô
 = 
Àngth
-8;

974 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

975 
d©a_t
 
acc0
 = 
IDENT
;

976 
d©a_t
 
acc1
 = 
IDENT
;

977 
d©a_t
 
acc2
 = 
IDENT
;

978 
d©a_t
 
acc3
 = 
IDENT
;

979 
d©a_t
 
acc4
 = 
IDENT
;

980 
d©a_t
 
acc5
 = 
IDENT
;

981 
d©a_t
 
acc6
 = 
IDENT
;

982 
d©a_t
 
acc7
 = 
IDENT
;

983 
d©a_t
 
acc8
 = 
IDENT
;

986 
i
 = 0; i < 
limô
; i+=9) {

987 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

988 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

989 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

990 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

991 
acc8
 =ácc8 
OP
 
d©a
[
i
+8];

995 ; 
i
 < 
Àngth
; i++) {

996 
acc0
 =ácc0 
OP
 
d©a
[
i
];

998 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)ËOP ((
acc4
 OP 
acc5
ËOP (
acc6
 OP 
acc7
ËOP 
acc8
);

999 
	}
}

1001 
	guƒﬁl10x10a_des¸
[] = "unroll10x10a: Array code, unrolled by 10, Superscalar x10";

1002 
	$uƒﬁl10x10a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1004 
i
;

1005 
Àngth
 = 
	`vec_Àngth
(
v
);

1006 
limô
 = 
Àngth
-9;

1007 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1008 
d©a_t
 
acc0
 = 
IDENT
;

1009 
d©a_t
 
acc1
 = 
IDENT
;

1010 
d©a_t
 
acc2
 = 
IDENT
;

1011 
d©a_t
 
acc3
 = 
IDENT
;

1012 
d©a_t
 
acc4
 = 
IDENT
;

1013 
d©a_t
 
acc5
 = 
IDENT
;

1014 
d©a_t
 
acc6
 = 
IDENT
;

1015 
d©a_t
 
acc7
 = 
IDENT
;

1016 
d©a_t
 
acc8
 = 
IDENT
;

1017 
d©a_t
 
acc9
 = 
IDENT
;

1020 
i
 = 0; i < 
limô
; i+=10) {

1021 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP data[i+1];

1022 
acc2
 =ácc2 
OP
 
d©a
[
i
+2]; 
acc3
 =ácc3 OP data[i+3];

1023 
acc4
 =ácc4 
OP
 
d©a
[
i
+4]; 
acc5
 =ácc5 OP data[i+5];

1024 
acc6
 =ácc6 
OP
 
d©a
[
i
+6]; 
acc7
 =ácc7 OP data[i+7];

1025 
acc8
 =ácc8 
OP
 
d©a
[
i
+8]; 
acc9
 =ácc9 OP data[i+9];

1029 ; 
i
 < 
Àngth
; i++) {

1030 
acc0
 =ácc0 
OP
 
d©a
[
i
];

1032 *
de°
 = ((
acc0
 
OP
 
acc1
Ë
	`OP
 (
acc2
 OP 
acc3
)) OP

1033 ((
acc4
 
OP
 
acc5
Ë
	`OP
 (
acc6
 OP 
acc7
)) OP

1034 (
acc8
 
OP
 
acc9
);

1035 
	}
}

1037 
	guƒﬁlx2as_des¸
[] = "unrollx2as: Array code, Unroll x2, Superscalar x2,Çoninterleaved";

1038 
	$uƒﬁlx2as_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1040 
i
;

1041 
Àngth
 = 
	`vec_Àngth
(
v
);

1042 
limô
 = 
Àngth
/2;

1043 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1044 
d©a_t
 *
d©a2
 = 
d©a
+
limô
;

1045 
d©a_t
 
acc0
 = 
IDENT
;

1046 
d©a_t
 
acc1
 = 
IDENT
;

1049 
i
 = 0; i < 
limô
; i++) {

1050 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP 
d©a2
[i];

1054 
i
 = 
limô
*2; i < 
Àngth
; i++) {

1055 
acc1
 =ácc1 
OP
 
d©a
[
i
];

1057 *
de°
 = 
acc0
 
OP
 
acc1
;

1058 
	}
}

1060 
	guƒﬁl4x2as_des¸
[] = "unroll4x2as: Array code, Unroll x4, Superscalar x2,Çoninterleaved";

1061 
	$uƒﬁl4x2as_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1063 
i
;

1064 
Àngth
 = 
	`vec_Àngth
(
v
);

1065 
limô
 = 
Àngth
/2;

1066 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1067 
d©a_t
 *
d©a2
 = 
d©a
+
limô
;

1068 
d©a_t
 
acc0
 = 
IDENT
;

1069 
d©a_t
 
acc1
 = 
IDENT
;

1072 
i
 = 0; i < 
limô
; i++) {

1073 
acc0
 =ácc0 
OP
 
d©a
[
i
]; 
acc1
 =ácc1 OP 
d©a2
[i];

1077 
i
 = 
limô
*2; i < 
Àngth
; i++) {

1078 
acc1
 =ácc1 
OP
 
d©a
[
i
];

1080 *
de°
 = 
acc0
 
OP
 
acc1
;

1081 
	}
}

1085 
	guƒﬁl8x2_des¸
[] = "unroll8x2: Pointer code, unrolled by 8, Superscalar x2";

1086 
	$uƒﬁl8x2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1088 
Àngth
 = 
	`vec_Àngth
(
v
);

1089 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1090 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1091 
d©a_t
 
acc0
 = 
IDENT
;

1092 
d©a_t
 
acc1
 = 
IDENT
;

1094 
d©a
 < 
díd
) {

1095 
acc0
 =ácc0 
OP
 
d©a
[0];

1096 
acc1
 =ácc1 
OP
 
d©a
[1];

1097 
acc0
 =ácc0 
OP
 
d©a
[2];

1098 
acc1
 =ácc1 
OP
 
d©a
[3];

1099 
acc0
 =ácc0 
OP
 
d©a
[4];

1100 
acc1
 =ácc1 
OP
 
d©a
[5];

1101 
acc0
 =ácc0 
OP
 
d©a
[6];

1102 
acc1
 =ácc1 
OP
 
d©a
[7];

1103 
d©a
 += 8;

1105 
díd
 += 7;

1106 
d©a
 < 
díd
) {

1107 
acc0
 =ácc0 
OP
 *
d©a
;

1108 
d©a
 ++;

1110 *
de°
 = 
acc0
 
OP
 
acc1
;

1111 
	}
}

1113 
	guƒﬁl9x3_des¸
[] = "unroll9x3: Pointer code, unrolled by 9, Superscalar x3";

1114 
	$uƒﬁl9x3_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1116 
Àngth
 = 
	`vec_Àngth
(
v
);

1117 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1118 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-8;

1119 
d©a_t
 
acc0
 = 
IDENT
;

1120 
d©a_t
 
acc1
 = 
IDENT
;

1121 
d©a_t
 
acc2
 = 
IDENT
;

1123 
d©a
 < 
díd
) {

1124 
acc0
 =ácc0 
OP
 
d©a
[0];

1125 
acc1
 =ácc1 
OP
 
d©a
[1];

1126 
acc2
 =ácc2 
OP
 
d©a
[2];

1127 
acc0
 =ácc0 
OP
 
d©a
[3];

1128 
acc1
 =ácc1 
OP
 
d©a
[4];

1129 
acc2
 =ácc2 
OP
 
d©a
[5];

1130 
acc0
 =ácc0 
OP
 
d©a
[6];

1131 
acc1
 =ácc1 
OP
 
d©a
[7];

1132 
acc2
 =ácc2 
OP
 
d©a
[8];

1133 
d©a
 += 9;

1135 
díd
 += 8;

1136 
d©a
 < 
díd
) {

1137 
acc0
 =ácc0 
OP
 *
d©a
;

1138 
d©a
 ++;

1140 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
;

1141 
	}
}

1144 
	guƒﬁl8x4_des¸
[] = "unroll8x4: Pointer code, unrolled by 8, Superscalar x4";

1145 
	$uƒﬁl8x4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1147 
Àngth
 = 
	`vec_Àngth
(
v
);

1148 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1149 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1150 
d©a_t
 
acc3
 = 
IDENT
;

1151 
d©a_t
 
acc0
 = 
IDENT
;

1152 
d©a_t
 
acc1
 = 
IDENT
;

1153 
d©a_t
 
acc2
 = 
IDENT
;

1155 
d©a
 < 
díd
) {

1156 
acc3
 =ácc3 
OP
 
d©a
[0];

1157 
acc0
 =ácc0 
OP
 
d©a
[1];

1158 
acc1
 =ácc1 
OP
 
d©a
[2];

1159 
acc2
 =ácc2 
OP
 
d©a
[3];

1160 
acc3
 =ácc3 
OP
 
d©a
[4];

1161 
acc0
 =ácc0 
OP
 
d©a
[5];

1162 
acc1
 =ácc1 
OP
 
d©a
[6];

1163 
acc2
 =ácc2 
OP
 
d©a
[7];

1164 
d©a
 += 8;

1166 
díd
 += 7;

1167 
d©a
 < 
díd
) {

1168 
acc3
 =ácc3 
OP
 *
d©a
;

1169 
d©a
 ++;

1171 *
de°
 = 
acc3
 
OP
 
acc0
 OP 
acc1
 OP 
acc2
;

1172 
	}
}

1174 
	guƒﬁl8x8_des¸
[] = "unroll8x8: Pointer code, unrolled by 8, Superscalar x8";

1175 
	$uƒﬁl8x8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1177 
Àngth
 = 
	`vec_Àngth
(
v
);

1178 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1179 
d©a_t
 *
díd
 = 
d©a
+
Àngth
-7;

1180 
d©a_t
 
acc4
 = 
IDENT
;

1181 
d©a_t
 
acc5
 = 
IDENT
;

1182 
d©a_t
 
acc6
 = 
IDENT
;

1183 
d©a_t
 
acc7
 = 
IDENT
;

1184 
d©a_t
 
acc3
 = 
IDENT
;

1185 
d©a_t
 
acc0
 = 
IDENT
;

1186 
d©a_t
 
acc1
 = 
IDENT
;

1187 
d©a_t
 
acc2
 = 
IDENT
;

1189 
d©a
 < 
díd
) {

1190 
acc0
 =ácc0 
OP
 
d©a
[0];

1191 
acc1
 =ácc1 
OP
 
d©a
[1];

1192 
acc2
 =ácc2 
OP
 
d©a
[2];

1193 
acc3
 =ácc3 
OP
 
d©a
[3];

1194 
acc4
 =ácc4 
OP
 
d©a
[4];

1195 
acc6
 = 
acc5
 
OP
 
d©a
[5];

1196 
acc6
 =ácc6 
OP
 
d©a
[6];

1197 
acc7
 =ácc7 
OP
 
d©a
[7];

1198 
d©a
 += 8;

1200 
díd
 += 7;

1201 
d©a
 < 
díd
) {

1202 
acc0
 =ácc0 
OP
 *
d©a
;

1203 
d©a
 ++;

1205 *
de°
 = 
acc0
 
OP
 
acc1
 OP 
acc2
 OP 
acc3
 OP 
acc4
 OP 
acc5
 OP 
acc6
 OP 
acc7
;

1206 
	}
}

1208 
	gcomböe7_des¸
[] = "combine7: Array code, unrolled by 2, differentássociativity";

1211 
	$comböe7
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1213 
i
;

1214 
Àngth
 = 
	`vec_Àngth
(
v
);

1215 
limô
 = 
Àngth
-1;

1216 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1217 
d©a_t
 
acc
 = 
IDENT
;

1220 
i
 = 0; i < 
limô
; i+=2) {

1222 
acc
 =ác¯
	`OP
 (
d©a
[
i
] 
OP
 data[i+1]);

1227 ; 
i
 < 
Àngth
; i++) {

1228 
acc
 =ác¯
OP
 
d©a
[
i
];

1230 *
de°
 = 
acc
;

1231 
	}
}

1234 
	guƒﬁl3Ø_des¸
[] = "unroll3aa: Array code, unrolled by 3, Different Associativity";

1235 
	$uƒﬁl3Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1237 
i
;

1238 
Àngth
 = 
	`vec_Àngth
(
v
);

1239 
limô
 = 
Àngth
-2;

1240 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1241 
d©a_t
 
acc
 = 
IDENT
;

1244 
i
 = 0; i < 
limô
; i+=3) {

1245 
acc
 =ác¯
	`OP
 (
d©a
[
i
] 
OP
 data[i+1] OP data[i+2]);

1249 ; 
i
 < 
Àngth
; i++) {

1250 
acc
 =ác¯
OP
 
d©a
[
i
];

1252 *
de°
 = 
acc
;

1253 
	}
}

1255 
	guƒﬁl4Ø_des¸
[] = "unroll4aa: Array code, unrolled by 4, Different Associativity";

1256 
	$uƒﬁl4Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1258 
i
;

1259 
Àngth
 = 
	`vec_Àngth
(
v
);

1260 
limô
 = 
Àngth
-3;

1261 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1262 
d©a_t
 
acc
 = 
IDENT
;

1265 
i
 = 0; i < 
limô
; i+=4) {

1266 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1267 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1268 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
);

1272 ; 
i
 < 
Àngth
; i++) {

1273 
acc
 =ác¯
OP
 
d©a
[
i
];

1275 *
de°
 = 
acc
;

1276 
	}
}

1278 
	guƒﬁl5Ø_des¸
[] = "unroll5aa: Array code, unrolled by 5, Different Associativity";

1279 
	$uƒﬁl5Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1281 
i
;

1282 
Àngth
 = 
	`vec_Àngth
(
v
);

1283 
limô
 = 
Àngth
-4;

1284 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1285 
d©a_t
 
acc
 = 
IDENT
;

1288 
i
 = 0; i < 
limô
; i+=5) {

1289 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1290 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1291 
d©a_t
 
t3
 = 
d©a
[
i
+4];

1292 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
 OP 
t3
);

1296 ; 
i
 < 
Àngth
; i++) {

1297 
acc
 =ác¯
OP
 
d©a
[
i
];

1299 *
de°
 = 
acc
;

1300 
	}
}

1302 
	guƒﬁl6Ø_des¸
[] = "unroll6aa: Array code, unrolled by 6, Different Associativity";

1303 
	$uƒﬁl6Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1305 
i
;

1306 
Àngth
 = 
	`vec_Àngth
(
v
);

1307 
limô
 = 
Àngth
-5;

1308 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1309 
d©a_t
 
acc
 = 
IDENT
;

1312 
i
 = 0; i < 
limô
; i+=6) {

1313 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1314 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1315 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1316 
acc
 =ác¯
	`OP
 (
t1
 
OP
 
t2
 OP 
t3
);

1320 ; 
i
 < 
Àngth
; i++) {

1321 
acc
 =ác¯
OP
 
d©a
[
i
];

1323 *
de°
 = 
acc
;

1324 
	}
}

1326 
	guƒﬁl7Ø_des¸
[] = "unroll7aa: Array code, unrolled by 7, Different Associativity";

1327 
	$uƒﬁl7Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1329 
i
;

1330 
Àngth
 = 
	`vec_Àngth
(
v
);

1331 
limô
 = 
Àngth
-6;

1332 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1333 
d©a_t
 
acc
 = 
IDENT
;

1336 
i
 = 0; i < 
limô
; i+=7) {

1337 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1338 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1339 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1340 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1341 
d©a_t
 
t4
 = 
d©a
[
i
+6];

1342 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1343 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1347 ; 
i
 < 
Àngth
; i++) {

1348 
acc
 =ác¯
OP
 
d©a
[
i
];

1351 *
de°
 = 
acc
;

1352 
	}
}

1354 
	guƒﬁl8Ø_des¸
[] = "unroll8aa: Array code, unrolled by 8, Different Associativity";

1355 
	$uƒﬁl8Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1357 
i
;

1358 
Àngth
 = 
	`vec_Àngth
(
v
);

1359 
limô
 = 
Àngth
-7;

1360 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1361 
d©a_t
 
acc
 = 
IDENT
;

1364 
i
 = 0; i < 
limô
; i+=8) {

1365 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1366 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1367 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1368 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1369 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1370 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1371 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1375 ; 
i
 < 
Àngth
; i++) {

1376 
acc
 =ác¯
OP
 
d©a
[
i
];

1379 *
de°
 = 
acc
;

1380 
	}
}

1382 
	guƒﬁl9Ø_des¸
[] = "unroll9aa: Array code, unrolled by 9, Different Associativity";

1383 
	$uƒﬁl9Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1385 
i
;

1386 
Àngth
 = 
	`vec_Àngth
(
v
);

1387 
limô
 = 
Àngth
-8;

1388 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1389 
d©a_t
 
acc
 = 
IDENT
;

1392 
i
 = 0; i < 
limô
; i+=9) {

1393 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1394 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1395 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1396 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1397 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1398 
d©a_t
 
t5
 = 
d©a
[
i
+8];

1399 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
 OP 
t5
;

1400 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1404 ; 
i
 < 
Àngth
; i++) {

1405 
acc
 =ác¯
OP
 
d©a
[
i
];

1408 *
de°
 = 
acc
;

1409 
	}
}

1411 
	guƒﬁl10Ø_des¸
[] = "unroll10aa: Array code, unrolled by 10, Different Associativity";

1412 
	$uƒﬁl10Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1414 
i
;

1415 
Àngth
 = 
	`vec_Àngth
(
v
);

1416 
limô
 = 
Àngth
-9;

1417 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1418 
d©a_t
 
acc
 = 
IDENT
;

1421 
i
 = 0; i < 
limô
; i+=10) {

1422 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1423 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1424 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1425 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1426 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1427 
d©a_t
 
t5
 = 
d©a
[
i
+8] 
OP
 data[i+9];

1428 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
 OP 
t5
;

1429 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
);

1433 ; 
i
 < 
Àngth
; i++) {

1434 
acc
 =ác¯
OP
 
d©a
[
i
];

1437 *
de°
 = 
acc
;

1438 
	}
}

1441 
	guƒﬁl12Ø_des¸
[] = "unroll12aa: Array code, unrolled by 12, Different Associativity";

1442 
	$uƒﬁl12Ø_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1444 
i
;

1445 
Àngth
 = 
	`vec_Àngth
(
v
);

1446 
limô
 = 
Àngth
-11;

1447 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1448 
d©a_t
 
acc
 = 
IDENT
;

1451 
i
 = 0; i < 
limô
; i+=12) {

1452 
d©a_t
 
t1
 = 
d©a
[
i
] 
OP
 data[i+1];

1453 
d©a_t
 
t2
 = 
d©a
[
i
+2] 
OP
 data[i+3];

1454 
d©a_t
 
u1
 = 
t1
 
OP
 
t2
;

1455 
d©a_t
 
t3
 = 
d©a
[
i
+4] 
OP
 data[i+5];

1456 
d©a_t
 
t4
 = 
d©a
[
i
+6] 
OP
 data[i+7];

1457 
d©a_t
 
u2
 = 
t3
 
OP
 
t4
;

1458 
d©a_t
 
t5
 = 
d©a
[
i
+8] 
OP
 data[i+9];

1459 
d©a_t
 
t6
 = 
d©a
[
i
+10] 
OP
 data[i+11];

1460 
d©a_t
 
u3
 = 
t5
 
OP
 
t6
;

1461 
acc
 =ác¯
	`OP
 (
u1
 
OP
 
u2
 OP 
u3
);

1465 ; 
i
 < 
Àngth
; i++) {

1466 
acc
 =ác¯
OP
 
d©a
[
i
];

1469 *
de°
 = 
acc
;

1470 
	}
}

1476 
	#VBYTES
 32

	)

1479 
	#VSIZE
 
VBYTES
/(
d©a_t
)

	)

1484 
d©a_t
 
	tvec_t
 
	t__©åibuã__
 ((
	tve˘‹_size
(
	tVBYTES
)));

1489 
vec_t
 
	mv
;

1490 
d©a_t
 
	md
[
VSIZE
];

1491 } 
	t∑ck_t
;

1494 
	gsimd_v1_des¸
[] = "simd_v1: SSE code, 1*VSIZE-wayÖarallelism";

1496 
	$simd_v1_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1498 
i
;

1499 
∑ck_t
 
x„r
;

1500 
vec_t
 
accum
;

1501 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1502 
˙t
 = 
	`vec_Àngth
(
v
);

1503 
d©a_t
 
ªsu…
 = 
IDENT
;

1506 
i
 = 0; i < 
VSIZE
; i++)

1507 
x„r
.
d
[
i
] = 
IDENT
;

1508 
accum
 = 
x„r
.
v
;

1512 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1513 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1514 
˙t
--;

1518 
˙t
 >
VSIZE
) {

1519 
vec_t
 
chunk
 = *((vec_à*Ë
d©a
);

1520 
accum
 =áccum 
OP
 
chunk
;

1521 
d©a
 +
VSIZE
;

1522 
˙t
 -
VSIZE
;

1526 
˙t
) {

1527 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1528 
˙t
--;

1532 
x„r
.
v
 = 
accum
;

1533 
i
 = 0; i < 
VSIZE
; i++)

1534 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1537 *
de°
 = 
ªsu…
;

1538 
	}
}

1542 
	gsimd_v2_des¸
[] = "simd_v2: SSE code, 2*VSIZE-wayÖarallelism";

1543 
	$simd_v2_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1545 
i
;

1546 
∑ck_t
 
x„r
;

1547 
vec_t
 
accum0
, 
accum1
;

1548 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1549 
˙t
 = 
	`vec_Àngth
(
v
);

1550 
d©a_t
 
ªsu…
 = 
IDENT
;

1553 
i
 = 0; i < 
VSIZE
; i++)

1554 
x„r
.
d
[
i
] = 
IDENT
;

1555 
accum0
 = 
x„r
.
v
;

1556 
accum1
 = 
x„r
.
v
;

1558 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1559 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1560 
˙t
--;

1563 
˙t
 >2*
VSIZE
) {

1564 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1565 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1566 
accum0
 =áccum0 
OP
 
chunk0
;

1567 
accum1
 =áccum1 
OP
 
chunk1
;

1568 
d©a
 +2*
VSIZE
;

1569 
˙t
 -2*
VSIZE
;

1571 
˙t
) {

1572 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1573 
˙t
--;

1575 
x„r
.
v
 = 
accum0
 
OP
 
accum1
;

1576 
i
 = 0; i < 
VSIZE
; i++)

1577 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1578 *
de°
 = 
ªsu…
;

1579 
	}
}

1581 
	gsimd_v4_des¸
[] = "simd_v4: SSE code, 4*VSIZE-wayÖarallelism";

1582 
	$simd_v4_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1584 
i
;

1585 
∑ck_t
 
x„r
;

1586 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1587 
˙t
 = 
	`vec_Àngth
(
v
);

1588 
d©a_t
 
ªsu…
 = 
IDENT
;

1591 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
;

1592 
i
 = 0; i < 
VSIZE
; i++)

1593 
x„r
.
d
[
i
] = 
IDENT
;

1594 
accum0
 = 
x„r
.
v
; 
accum1
 = xfer.v;

1595 
accum2
 = 
x„r
.
v
; 
accum3
 = xfer.v;

1597 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1598 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1599 
˙t
--;

1604 
˙t
 >4*
VSIZE
) {

1605 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1606 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1607 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1608 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1609 
accum0
 =áccum0 
OP
 
chunk0
;

1610 
accum1
 =áccum1 
OP
 
chunk1
;

1611 
accum2
 =áccum2 
OP
 
chunk2
;

1612 
accum3
 =áccum3 
OP
 
chunk3
;

1613 
d©a
 +4*
VSIZE
;

1614 
˙t
 -4*
VSIZE
;

1618 
˙t
) {

1619 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1620 
˙t
--;

1625 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1628 
i
 = 0; i < 
VSIZE
; i++)

1629 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1631 *
de°
 = 
ªsu…
;

1632 
	}
}

1634 
	gsimd_v8_des¸
[] = "simd_v8: SSE code, 8*VSIZE-wayÖarallelism";

1635 
	$simd_v8_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1637 
i
;

1638 
∑ck_t
 
x„r
;

1639 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
, 
accum5
, 
accum6
, 
accum7
;

1640 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1641 
˙t
 = 
	`vec_Àngth
(
v
);

1642 
d©a_t
 
ªsu…
 = 
IDENT
;

1645 
i
 = 0; i < 
VSIZE
; i++)

1646 
x„r
.
d
[
i
] = 
IDENT
;

1647 
accum0
 = 
x„r
.
v
;

1648 
accum1
 = 
x„r
.
v
;

1649 
accum2
 = 
x„r
.
v
;

1650 
accum3
 = 
x„r
.
v
;

1651 
accum4
 = 
x„r
.
v
;

1652 
accum5
 = 
x„r
.
v
;

1653 
accum6
 = 
x„r
.
v
;

1654 
accum7
 = 
x„r
.
v
;

1656 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1657 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1658 
˙t
--;

1661 
˙t
 >8*
VSIZE
) {

1662 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1663 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1664 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1665 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1666 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1667 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1668 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1669 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1670 
accum0
 =áccum0 
OP
 
chunk0
;

1671 
accum1
 =áccum1 
OP
 
chunk1
;

1672 
accum2
 =áccum2 
OP
 
chunk2
;

1673 
accum3
 =áccum3 
OP
 
chunk3
;

1674 
accum4
 =áccum4 
OP
 
chunk4
;

1675 
accum5
 =áccum5 
OP
 
chunk5
;

1676 
accum6
 =áccum6 
OP
 
chunk6
;

1677 
accum7
 =áccum7 
OP
 
chunk7
;

1678 
d©a
 +8*
VSIZE
;

1679 
˙t
 -8*
VSIZE
;

1681 
˙t
) {

1682 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1683 
˙t
--;

1685 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1686 
x„r
.
v
 = x„r.v 
	`OP
 (
accum4
 
OP
 
accum5
ËOP (
accum6
 OP 
accum7
);

1687 
i
 = 0; i < 
VSIZE
; i++)

1688 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1689 *
de°
 = 
ªsu…
;

1690 
	}
}

1692 
	gsimd_v10_des¸
[] = "simd_v10: SSE code, 10*VSIZE-wayÖarallelism";

1693 
	$simd_v10_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1695 
i
;

1696 
∑ck_t
 
x„r
;

1697 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
, 
accum5
, 
accum6
, 
accum7
, 
accum8
, 
accum9
;

1698 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1699 
˙t
 = 
	`vec_Àngth
(
v
);

1700 
d©a_t
 
ªsu…
 = 
IDENT
;

1703 
i
 = 0; i < 
VSIZE
; i++)

1704 
x„r
.
d
[
i
] = 
IDENT
;

1705 
accum0
 = 
x„r
.
v
;

1706 
accum1
 = 
x„r
.
v
;

1707 
accum2
 = 
x„r
.
v
;

1708 
accum3
 = 
x„r
.
v
;

1709 
accum4
 = 
x„r
.
v
;

1710 
accum5
 = 
x„r
.
v
;

1711 
accum6
 = 
x„r
.
v
;

1712 
accum7
 = 
x„r
.
v
;

1713 
accum8
 = 
x„r
.
v
;

1714 
accum9
 = 
x„r
.
v
;

1716 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1717 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1718 
˙t
--;

1721 
˙t
 >10*
VSIZE
) {

1722 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1723 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1724 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1725 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1726 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1727 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1728 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1729 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1730 
vec_t
 
chunk8
 = *((vec_à*Ë(
d©a
+8*
VSIZE
));

1731 
vec_t
 
chunk9
 = *((vec_à*Ë(
d©a
+9*
VSIZE
));

1732 
accum0
 =áccum0 
OP
 
chunk0
;

1733 
accum1
 =áccum1 
OP
 
chunk1
;

1734 
accum2
 =áccum2 
OP
 
chunk2
;

1735 
accum3
 =áccum3 
OP
 
chunk3
;

1736 
accum4
 =áccum4 
OP
 
chunk4
;

1737 
accum5
 =áccum5 
OP
 
chunk5
;

1738 
accum6
 =áccum6 
OP
 
chunk6
;

1739 
accum7
 =áccum7 
OP
 
chunk7
;

1740 
accum8
 =áccum8 
OP
 
chunk8
;

1741 
accum9
 =áccum9 
OP
 
chunk9
;

1742 
d©a
 +10*
VSIZE
;

1743 
˙t
 -10*
VSIZE
;

1745 
˙t
) {

1746 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1747 
˙t
--;

1749 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1750 
x„r
.
v
 = x„r.v 
	`OP
 (
accum4
 
OP
 
accum5
ËOP (
accum6
 OP 
accum7
);

1751 
x„r
.
v
 = x„r.v 
	`OP
 (
accum8
 
OP
 
accum9
);

1752 
i
 = 0; i < 
VSIZE
; i++)

1753 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1754 *
de°
 = 
ªsu…
;

1755 
	}
}

1757 
	gsimd_v12_des¸
[] = "simd_v12: SSE code, 12*VSIZE-wayÖarallelism";

1758 
	$simd_v12_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1760 
i
;

1761 
∑ck_t
 
x„r
;

1762 
vec_t
 
accum0
, 
accum1
, 
accum2
, 
accum3
, 
accum4
, 
accum5
, 
accum6
, 
accum7
;

1763 
vec_t
 
accum8
, 
accum9
, 
accum10
, 
accum11
;

1764 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1765 
˙t
 = 
	`vec_Àngth
(
v
);

1766 
d©a_t
 
ªsu…
 = 
IDENT
;

1769 
i
 = 0; i < 
VSIZE
; i++)

1770 
x„r
.
d
[
i
] = 
IDENT
;

1771 
accum0
 = 
x„r
.
v
;

1772 
accum1
 = 
x„r
.
v
;

1773 
accum2
 = 
x„r
.
v
;

1774 
accum3
 = 
x„r
.
v
;

1775 
accum4
 = 
x„r
.
v
;

1776 
accum5
 = 
x„r
.
v
;

1777 
accum6
 = 
x„r
.
v
;

1778 
accum7
 = 
x„r
.
v
;

1779 
accum8
 = 
x„r
.
v
;

1780 
accum9
 = 
x„r
.
v
;

1781 
accum10
 = 
x„r
.
v
;

1782 
accum11
 = 
x„r
.
v
;

1783 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1784 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1785 
˙t
--;

1788 
˙t
 >12*
VSIZE
) {

1789 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1790 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1791 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1792 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1793 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1794 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1795 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1796 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1797 
vec_t
 
chunk8
 = *((vec_à*Ë(
d©a
+8*
VSIZE
));

1798 
vec_t
 
chunk9
 = *((vec_à*Ë(
d©a
+9*
VSIZE
));

1799 
vec_t
 
chunk10
 = *((vec_à*Ë(
d©a
+10*
VSIZE
));

1800 
vec_t
 
chunk11
 = *((vec_à*Ë(
d©a
+11*
VSIZE
));

1801 
accum0
 =áccum0 
OP
 
chunk0
;

1802 
accum1
 =áccum1 
OP
 
chunk1
;

1803 
accum2
 =áccum2 
OP
 
chunk2
;

1804 
accum3
 =áccum3 
OP
 
chunk3
;

1805 
accum4
 =áccum4 
OP
 
chunk4
;

1806 
accum5
 =áccum5 
OP
 
chunk5
;

1807 
accum6
 =áccum6 
OP
 
chunk6
;

1808 
accum7
 =áccum7 
OP
 
chunk7
;

1809 
accum8
 =áccum8 
OP
 
chunk8
;

1810 
accum9
 =áccum9 
OP
 
chunk9
;

1811 
accum10
 =áccum10 
OP
 
chunk10
;

1812 
accum11
 =áccum11 
OP
 
chunk11
;

1813 
d©a
 +12*
VSIZE
;

1814 
˙t
 -12*
VSIZE
;

1816 
˙t
) {

1817 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1818 
˙t
--;

1820 
x„r
.
v
 = (
accum0
 
OP
 
accum1
Ë
	`OP
 (
accum2
 OP 
accum3
);

1821 
x„r
.
v
 = x„r.v 
	`OP
 (
accum4
 
OP
 
accum5
ËOP (
accum6
 OP 
accum7
);

1822 
x„r
.
v
 = x„r.v 
	`OP
 (
accum8
 
OP
 
accum9
ËOP (
accum10
 OP 
accum11
);

1823 
i
 = 0; i < 
VSIZE
; i++)

1824 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1825 *
de°
 = 
ªsu…
;

1826 
	}
}

1829 
	gsimd_v2a_des¸
[] = "simd_v2a: SSE code, 2*VSIZE-wayÖarallelism,Ñeassociate";

1830 
	$simd_v2a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1832 
i
;

1833 
∑ck_t
 
x„r
;

1834 
vec_t
 
accum
;

1835 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1836 
˙t
 = 
	`vec_Àngth
(
v
);

1837 
d©a_t
 
ªsu…
 = 
IDENT
;

1840 
i
 = 0; i < 
VSIZE
; i++)

1841 
x„r
.
d
[
i
] = 
IDENT
;

1842 
accum
 = 
x„r
.
v
;

1844 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1845 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1846 
˙t
--;

1849 
˙t
 >2*
VSIZE
) {

1850 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1851 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1852 
accum
 =áccum 
	`OP
 (
chunk0
 
OP
 
chunk1
);

1853 
d©a
 +2*
VSIZE
;

1854 
˙t
 -2*
VSIZE
;

1856 
˙t
) {

1857 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1858 
˙t
--;

1860 
x„r
.
v
 = 
accum
;

1861 
i
 = 0; i < 
VSIZE
; i++)

1862 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1863 *
de°
 = 
ªsu…
;

1864 
	}
}

1866 
	gsimd_v4a_des¸
[] = "simd_v4a: SSE code, 4*VSIZE-wayÖarallelism,Ñeassociate";

1867 
	$simd_v4a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1869 
i
;

1870 
∑ck_t
 
x„r
;

1871 
vec_t
 
accum
;

1872 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1873 
˙t
 = 
	`vec_Àngth
(
v
);

1874 
d©a_t
 
ªsu…
 = 
IDENT
;

1877 
i
 = 0; i < 
VSIZE
; i++)

1878 
x„r
.
d
[
i
] = 
IDENT
;

1879 
accum
 = 
x„r
.
v
;

1881 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1882 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1883 
˙t
--;

1887 
˙t
 >4*
VSIZE
) {

1888 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1889 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1890 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1891 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1892 
accum
 =áccum 
OP


1893 ((
chunk0
 
OP
 
chunk1
Ë
	`OP
 (
chunk2
 OP 
chunk3
));

1894 
d©a
 +4*
VSIZE
;

1895 
˙t
 -4*
VSIZE
;

1899 
˙t
) {

1900 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1901 
˙t
--;

1903 
x„r
.
v
 = 
accum
;

1904 
i
 = 0; i < 
VSIZE
; i++)

1905 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1906 *
de°
 = 
ªsu…
;

1907 
	}
}

1909 
	gsimd_v8a_des¸
[] = "simd_v8a: SSE code, 8*VSIZE-wayÖarallelism,Ñeassociate";

1910 
	$simd_v8a_comböe
(
vec_±r
 
v
, 
d©a_t
 *
de°
)

1912 
i
;

1913 
∑ck_t
 
x„r
;

1914 
vec_t
 
accum
;

1915 
d©a_t
 *
d©a
 = 
	`gë_vec_°¨t
(
v
);

1916 
˙t
 = 
	`vec_Àngth
(
v
);

1917 
d©a_t
 
ªsu…
 = 
IDENT
;

1920 
i
 = 0; i < 
VSIZE
; i++)

1921 
x„r
.
d
[
i
] = 
IDENT
;

1922 
accum
 = 
x„r
.
v
;

1924 ((Ë
d©a
Ë% 
VBYTES
 && 
˙t
) {

1925 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1926 
˙t
--;

1929 
˙t
 >8*
VSIZE
) {

1930 
vec_t
 
chunk0
 = *((vec_à*Ë
d©a
);

1931 
vec_t
 
chunk1
 = *((vec_à*Ë(
d©a
+
VSIZE
));

1932 
vec_t
 
chunk2
 = *((vec_à*Ë(
d©a
+2*
VSIZE
));

1933 
vec_t
 
chunk3
 = *((vec_à*Ë(
d©a
+3*
VSIZE
));

1934 
vec_t
 
chunk4
 = *((vec_à*Ë(
d©a
+4*
VSIZE
));

1935 
vec_t
 
chunk5
 = *((vec_à*Ë(
d©a
+5*
VSIZE
));

1936 
vec_t
 
chunk6
 = *((vec_à*Ë(
d©a
+6*
VSIZE
));

1937 
vec_t
 
chunk7
 = *((vec_à*Ë(
d©a
+7*
VSIZE
));

1938 
accum
 =áccum 
OP


1939 (((
chunk0
 
OP
 
chunk1
Ë
	`OP
 (
chunk2
 OP 
chunk3
))

1940 
OP


1941 ((
chunk4
 
OP
 
chunk5
Ë
	`OP
 (
chunk6
 OP 
chunk7
)));

1942 
d©a
 +8*
VSIZE
;

1943 
˙t
 -8*
VSIZE
;

1945 
˙t
) {

1946 
ªsu…
 =Ñesu… 
OP
 *
d©a
++;

1947 
˙t
--;

1949 
x„r
.
v
 = 
accum
;

1950 
i
 = 0; i < 
VSIZE
; i++)

1951 
ªsu…
 =Ñesu… 
OP
 
x„r
.
d
[
i
];

1952 *
de°
 = 
ªsu…
;

1953 
	}
}

1956 
	$ªgi°î_comböîs
()

1958 #i‚de‡
UNROLL_ONLY


1959 
	`add_comböî
(
comböe1
, comböe1, 
comböe1_des¸
);

1960 
	`add_comböî
(
comböe2
, 
comböe1
, 
comböe2_des¸
);

1961 
	`add_comböî
(
comböe3
, 
comböe1
, 
comböe3_des¸
);

1962 
	`add_comböî
(
comböe3w
, 
comböe1
, 
comböe3w_des¸
);

1964 
	`add_comböî
(
comböe4
, 
comböe1
,
comböe4_des¸
);

1965 #i‚de‡
UNROLL_ONLY


1966 
	`add_comböî
(
comböe4b
, 
comböe1
, 
comböe4b_des¸
);

1967 
	`add_comböî
(
comböe4p
, 
comböe1
, 
comböe4p_des¸
);

1969 
	`add_comböî
(
comböe5
, 
comböe1
, 
comböe5_des¸
);

1970 #i‚de‡
UNROLL_ONLY


1971 
	`add_comböî
(
comböe5p
, 
comböe1
, 
comböe5p_des¸
);

1972 
	`add_comböî
(
uƒﬁl2aw_comböe
, 
comböe1
, 
uƒﬁl2aw_des¸
);

1974 
	`add_comböî
(
uƒﬁl3a_comböe
, 
comböe1
, 
uƒﬁl3a_des¸
);

1975 
	`add_comböî
(
uƒﬁl4a_comböe
, 
comböe1
, 
uƒﬁl4a_des¸
);

1976 
	`add_comböî
(
uƒﬁl5a_comböe
, 
comböe1
, 
uƒﬁl5a_des¸
);

1977 
	`add_comböî
(
uƒﬁl6a_comböe
, 
comböe1
, 
uƒﬁl6a_des¸
);

1978 
	`add_comböî
(
uƒﬁl7a_comböe
, 
comböe1
, 
uƒﬁl7a_des¸
);

1979 
	`add_comböî
(
uƒﬁl8a_comböe
, 
comböe1
, 
uƒﬁl8a_des¸
);

1980 
	`add_comböî
(
uƒﬁl9a_comböe
, 
comböe1
, 
uƒﬁl9a_des¸
);

1981 
	`add_comböî
(
uƒﬁl10a_comböe
, 
comböe1
, 
uƒﬁl10a_des¸
);

1982 
	`add_comböî
(
uƒﬁl16a_comböe
, 
comböe1
, 
uƒﬁl16a_des¸
);

1983 #i‚de‡
UNROLL_ONLY


1984 
	`add_comböî
(
uƒﬁl2_comböe
, 
comböe1
, 
uƒﬁl2_des¸
);

1985 
	`add_comböî
(
uƒﬁl3_comböe
, 
comböe1
, 
uƒﬁl3_des¸
);

1986 
	`add_comböî
(
uƒﬁl4_comböe
, 
comböe1
, 
uƒﬁl4_des¸
);

1987 
	`add_comböî
(
uƒﬁl8_comböe
, 
comböe1
, 
uƒﬁl8_des¸
);

1988 
	`add_comböî
(
uƒﬁl16_comböe
, 
comböe1
, 
uƒﬁl16_des¸
);

1989 
	`add_comböî
(
comböe6
, 
comböe1
, 
comböe6_des¸
);

1990 
	`add_comböî
(
uƒﬁl4x2a_comböe
, 
comböe1
, 
uƒﬁl4x2a_des¸
);

1991 
	`add_comböî
(
uƒﬁl8x2a_comböe
, 
comböe1
, 
uƒﬁl8x2a_des¸
);

1992 
	`add_comböî
(
uƒﬁl3x3a_comböe
, 
comböe1
, 
uƒﬁl3x3a_des¸
);

1993 
	`add_comböî
(
uƒﬁl4x4a_comböe
, 
comböe1
, 
uƒﬁl4x4a_des¸
);

1994 
	`add_comböî
(
uƒﬁl5x5a_comböe
, 
comböe1
, 
uƒﬁl5x5a_des¸
);

1995 
	`add_comböî
(
uƒﬁl6x6a_comböe
, 
comböe1
, 
uƒﬁl6x6a_des¸
);

1996 
	`add_comböî
(
uƒﬁl7x7a_comböe
, 
comböe1
, 
uƒﬁl7x7a_des¸
);

1997 
	`add_comböî
(
uƒﬁl8x4a_comböe
, 
comböe1
, 
uƒﬁl8x4a_des¸
);

1998 
	`add_comböî
(
uƒﬁl8x8a_comböe
, 
comböe1
, 
uƒﬁl8x8a_des¸
);

1999 
	`add_comböî
(
uƒﬁl9x9a_comböe
, 
comböe1
, 
uƒﬁl9x9a_des¸
);

2000 
	`add_comböî
(
uƒﬁl10x10a_comböe
, 
comböe1
, 
uƒﬁl10x10a_des¸
);

2001 
	`add_comböî
(
uƒﬁl12x6a_comböe
, 
comböe1
, 
uƒﬁl12x6a_des¸
);

2002 
	`add_comböî
(
uƒﬁl12x12a_comböe
, 
comböe1
, 
uƒﬁl12x12a_des¸
);

2003 
	`add_comböî
(
uƒﬁl16x16a_comböe
, 
comböe1
, 
uƒﬁl16x16a_des¸
);

2004 
	`add_comböî
(
uƒﬁl8x2_comböe
, 
comböe1
, 
uƒﬁl8x2_des¸
);

2005 
	`add_comböî
(
uƒﬁl8x4_comböe
, 
comböe1
, 
uƒﬁl8x4_des¸
);

2006 
	`add_comböî
(
uƒﬁl8x8_comböe
, 
comböe1
, 
uƒﬁl8x8_des¸
);

2007 
	`add_comböî
(
uƒﬁl9x3_comböe
, 
comböe1
, 
uƒﬁl9x3_des¸
);

2008 
	`add_comböî
(
uƒﬁlx2as_comböe
, 
comböe1
, 
uƒﬁlx2as_des¸
);

2009 
	`add_comböî
(
comböe7
, 
comböe1
, 
comböe7_des¸
);

2010 
	`add_comböî
(
uƒﬁl3Ø_comböe
, 
comböe1
, 
uƒﬁl3Ø_des¸
);

2011 
	`add_comböî
(
uƒﬁl4Ø_comböe
, 
comböe1
, 
uƒﬁl4Ø_des¸
);

2012 
	`add_comböî
(
uƒﬁl5Ø_comböe
, 
comböe1
, 
uƒﬁl5Ø_des¸
);

2013 
	`add_comböî
(
uƒﬁl6Ø_comböe
, 
comböe1
, 
uƒﬁl6Ø_des¸
);

2014 
	`add_comböî
(
uƒﬁl7Ø_comböe
, 
comböe1
, 
uƒﬁl7Ø_des¸
);

2015 
	`add_comböî
(
uƒﬁl8Ø_comböe
, 
comböe1
, 
uƒﬁl8Ø_des¸
);

2016 
	`add_comböî
(
uƒﬁl9Ø_comböe
, 
comböe1
, 
uƒﬁl9Ø_des¸
);

2017 
	`add_comböî
(
uƒﬁl10Ø_comböe
, 
comböe1
, 
uƒﬁl10Ø_des¸
);

2018 
	`add_comböî
(
uƒﬁl12Ø_comböe
, 
comböe1
, 
uƒﬁl12Ø_des¸
);

2019 
	`add_comböî
(
simd_v1_comböe
, 
comböe1
, 
simd_v1_des¸
);

2020 
	`add_comböî
(
simd_v2_comböe
, 
comböe1
, 
simd_v2_des¸
);

2021 
	`add_comböî
(
simd_v4_comböe
, 
comböe1
, 
simd_v4_des¸
);

2022 
	`add_comböî
(
simd_v8_comböe
, 
comböe1
, 
simd_v8_des¸
);

2023 
	`add_comböî
(
simd_v10_comböe
, 
comböe1
, 
simd_v10_des¸
);

2024 
	`add_comböî
(
simd_v12_comböe
, 
comböe1
, 
simd_v12_des¸
);

2025 
	`add_comböî
(
simd_v2a_comböe
, 
comböe1
, 
simd_v2a_des¸
);

2026 
	`add_comböî
(
simd_v4a_comböe
, 
comböe1
, 
simd_v4a_des¸
);

2027 
	`add_comböî
(
simd_v8a_comböe
, 
comböe1
, 
simd_v8a_des¸
);

2028 
	`log_comböî
(
simd_v8a_comböe
, 0.16, 0.24);

2030 
	}
}

	@opt/mem.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~"fcyc.h
"

6 
	#MAXELE
 10000

	)

8 
ELE
 *
	tli°_±r
;

10 
	sELE
 {

11 
	mvÆ
;

12 
li°_±r
 
	m√xt
;

13 } 
	tli°_ªc
;

15 
li°_ªc
 
	gblock_Æloc
[
MAXELE
];

17 
	$sum_li°
(
li°_±r
 
Œ
)

19 
sum
 = 0;

20 
Œ
) {

21 
sum
 +
Œ
->
vÆ
;

22 
Œ
 =Ül->
√xt
;

24  
sum
;

25 
	}
}

27 
li°_±r
 
	gdy«mic_hód
 = 
NULL
;

28 
li°_±r
 
	g°©ic_hód
 = 
NULL
;

30 
	$öô
(
√À
) {

31 
i
;

32 
i
 = 0; i < 
√À
; i++) {

34 
li°_±r
 
ñe
 = 
	`mÆloc
((
li°_ªc
));

35 
ñe
->
vÆ
 = 
i
;

36 
ñe
->
√xt
 = 
dy«mic_hód
;

37 
dy«mic_hód
 = 
ñe
;

39 
ñe
 = &
block_Æloc
[
i
];

40 
ñe
->
vÆ
 = 
i
;

41 
ñe
->
√xt
 = 
°©ic_hód
;

42 
°©ic_hód
 = 
ñe
;

44 
	}
}

46 
	$ã°_li°
(
öfo
[]) {

47 *
ªsu…p
 = &
öfo
[0];

48 
u£_°©ic
 = 
öfo
[1];

49 
li°_±r
 
hód
 = 
u£_°©ic
 ? 
°©ic_hód
 : 
dy«mic_hód
;

50 *
ªsu…p
 = 
	`sum_li°
(
hód
);

51 
	}
}

53 
	$maö
(
¨gc
, *
¨gv
[]) {

54 
öfo
[2];

55 
ex≥˘ed
;

56 
vîsi⁄
;

57 *
v«me
[2] = {"dynamic", "static"};

58 
time
, 
çe
;

59 
√À
 = 
MAXELE
;

60 i‡(
¨gc
 > 1)

61 
√À
 = 
	`©oi
(
¨gv
[1]);

62 
ex≥˘ed
 = 
√À
*(nele-1)/2;

63 
	`öô
(
√À
);

64 
vîsi⁄
 = 0; version <= 1; version++) {

65 
sum
;

66 
öfo
[0] = 0;

67 
öfo
[1] = 
vîsi⁄
;

68 
	`ã°_li°
(
öfo
);

69 
sum
 = 
öfo
[0];

70 
time
 = 
	`fcyc
(
ã°_li°
, 
öfo
);

71 
çe
 = 
time
/
√À
;

72 
	`¥ötf
("N = %ld, Allocation: %s,Éxpected=%ld, got=%ld,Åpe=%.2f\n",

73 
√À
, 
v«me
[
vîsi⁄
], 
ex≥˘ed
, 
sum
, 
çe
);

76 
	}
}

	@opt/merge.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<gë›t.h
>

5 
	~"˛ock.h
"

8 
	$mîge
(
§c1
[], 
§c2
[], 
de°
[], 
n
) {

9 
i1
 = 0;

10 
i2
 = 0;

11 
id
 = 0;

12 
i1
 < 
n
 && 
i2
 <Ç) {

13 i‡(
§c1
[
i1
] < 
§c2
[
i2
])

14 
de°
[
id
++] = 
§c1
[
i1
++];

16 
de°
[
id
++] = 
§c2
[
i2
++];

18 
i1
 < 
n
)

19 
de°
[
id
++] = 
§c1
[
i1
++];

20 
i2
 < 
n
)

21 
de°
[
id
++] = 
§c2
[
i2
++];

22 
	}
}

25 
	$mîge2
(
§c1
[], 
§c2
[], 
de°
[], 
n
) {

26 
i1
 = 0;

27 
i2
 = 0;

28 
id
 = 0;

30 
i1
 < 
n
 && 
i2
 <Ç) {

31 
v1
 = 
§c1
[
i1
];

32 
v2
 = 
§c2
[
i2
];

33 
èke1
 = 
v1
 < 
v2
;

34 
de°
[
id
++] = 
èke1
 ? 
v1
 : 
v2
;

35 
i1
 +
èke1
;

36 
i2
 +(1-
èke1
);

39 
i1
 < 
n
)

40 
de°
[
id
++] = 
§c1
[
i1
++];

41 
i2
 < 
n
)

42 
de°
[
id
++] = 
§c2
[
i2
++];

43 
	}
}

45 
	#LEN
 8192

	)

46 
	ga1
[
LEN
], 
	ga2
[LEN], 
	gd
[2*LEN];

47 
	gb1
[
LEN
], 
	gb2
[LEN];

49 
	$show
(*
œbñ
, 
a
[], 
n
) {

50 
i
;

51 
	`¥ötf
("%s: ", 
œbñ
);

52 
i
 = 0; i < 
n
; i++)

53 
	`¥ötf
("%ld ", 
a
[
i
]);

54 
	`¥ötf
("\n");

55 
	}
}

56 
	$öô
(
£ed
) {

58 
id
, 
i1
, 
i2
;

59 
	`§™dom
(
£ed
);

60 
id
 = 0; id < 2*
LEN
; id++)

61 
d
[
id
] = id;

62 
i1
 = 0; 
i2
 = 0; 
id
 = 0;

63 
èke1
 = 0;

64 
i1
 < 
LEN
 && 
i2
 < LEN) {

65 i‡(
£ed
 == 0)

66 
èke1
 = 1-take1;

68 
èke1
 = 
	`øndom
() & 0x1;

69 i‡(
èke1
) {

70 
a1
[
i1
] = 
b1
[i1] = 
d
[
id
++];

71 
i1
++;

73 
a2
[
i2
] = 
b2
[i2] = 
d
[
id
++];

74 
i2
++;

77 
i1
 < 
LEN
) {

78 
a1
[
i1
] = 
b1
[i1] = 
d
[
id
++];

79 
i1
++;

81 
i2
 < 
LEN
) {

82 
a2
[
i2
] = 
b2
[i2] = 
d
[
id
++];

83 
i2
++;

85 
	}
}

87 
	$run
(
Àn
, 
åüls
, 
£ed
) {

88 
t1
, 
t2
;

89 
t
;

90 
t
 = 0;Å < 
åüls
;Å++) {

91 
	`öô
(
£ed
);

92 i‡(
t
 == 0) {

93 i‡(
Àn
 <= 10) {

94 
	`show
("a1", 
a1
, 
Àn
);

95 
	`show
("a2", 
a2
, 
Àn
);

98 
	`°¨t_cou¡î
();

99 
	`mîge
(
a1
, 
a2
, 
d
, 
Àn
);

100 i‡(
t
 =0 && 
Àn
 <= 10)

101 
	`show
("d1", 
d
, 2*
Àn
);

102 
t1
 = 
	`gë_cou¡î
();

103 
	`°¨t_cou¡î
();

104 
	`mîge2
(
b1
, 
b2
, 
d
, 
Àn
);

105 
t2
 = 
	`gë_cou¡î
();

106 i‡(
t
 =0 && 
Àn
 <= 10) {

107 
	`show
("d2", 
d
, 2*
Àn
);

109 
	`¥ötf
("%ld\t%.2f\t%.2f\n", 
Àn
, 
t1
/(2*Àn), 
t2
/(2*len));

111 
	}
}

113 
	$maö
(
¨gc
, *
¨gv
[]) {

114 
Àn
 = 
LEN
;

115 
åüls
 = 5;

116 
£ed
 = 1;

117 i‡(
¨gc
 > 1)

118 
Àn
 = 
	`©oi
(
¨gv
[1]);

119 i‡(
¨gc
 > 2)

120 
åüls
 = 
	`©oi
(
¨gv
[2]);

121 i‡(
¨gc
 > 3)

122 
£ed
 = 
	`©oi
(
¨gv
[3]);

123 
	`run
(
Àn
, 
åüls
, 
£ed
);

125 
	}
}

	@opt/opt-meas.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"˝e.h
"

11 
	$≠rod
(
a
[], 
n
)

13 
i
;

14 
x
, 
y
, 
z
;

15 
r
 = 1;

16 
i
 = 0; i < 
n
-2; i+= 3) {

17 
x
 = 
a
[
i
]; 
y
 =á[i+1]; 
z
 =á[i+2];

18 
r
 =Ñ * 
x
 * 
y
 * 
z
;

20 ; 
i
 < 
n
; i++)

21 
r
 *
a
[
i
];

22  
r
;

23 
	}
}

26 
	$≠rod1
(
a
[], 
n
)

28 
i
;

29 
x
, 
y
, 
z
;

30 
r
 = 1;

31 
i
 = 0; i < 
n
; i+= 3) {

32 
x
 = 
a
[
i
]; 
y
 =á[i+1]; 
z
 =á[i+2];

34 
r
 = (‘ * 
x
Ë* 
y
Ë* 
z
;

37 ; 
i
 < 
n
; i++)

38 
r
 *
a
[
i
];

39  
r
;

40 
	}
}

42 
	$≠rod2
(
a
[], 
n
)

44 
i
;

45 
x
, 
y
, 
z
;

46 
r
 = 1;

47 
i
 = 0; i < 
n
; i+= 3) {

48 
x
 = 
a
[
i
]; 
y
 =á[i+1]; 
z
 =á[i+2];

50 
r
 = (∏* (
x
 * 
y
)Ë* 
z
;

53 ; 
i
 < 
n
; i++)

54 
r
 *
a
[
i
];

55  
r
;

56 
	}
}

58 
	$≠rod3
(
a
[], 
n
)

60 
i
;

61 
x
, 
y
, 
z
;

62 
r
 = 1;

63 
i
 = 0; i < 
n
; i+= 3) {

64 
x
 = 
a
[
i
]; 
y
 =á[i+1]; 
z
 =á[i+2];

66 
r
 =Ñ * ((
x
 * 
y
Ë* 
z
);

69 ; 
i
 < 
n
; i++)

70 
r
 *
a
[
i
];

71  
r
;

72 
	}
}

74 
	$≠rod4
(
a
[], 
n
)

76 
i
;

77 
x
, 
y
, 
z
;

78 
r
 = 1;

79 
i
 = 0; i < 
n
; i+= 3) {

80 
x
 = 
a
[
i
]; 
y
 =á[i+1]; 
z
 =á[i+2];

82 
r
 =Ñ * (
x
 * (
y
 * 
z
));

85 ; 
i
 < 
n
; i++)

86 
r
 *
a
[
i
];

87  
r
;

88 
	}
}

90 
	$≠rod5
(
a
[], 
n
)

92 
i
;

93 
x
, 
y
, 
z
;

94 
r
 = 1;

95 
i
 = 0; i < 
n
; i+= 3) {

96 
x
 = 
a
[
i
]; 
y
 =á[i+1]; 
z
 =á[i+2];

98 
r
 = (∏* 
x
Ë* (
y
 * 
z
);

101 ; 
i
 < 
n
; i++)

102 
r
 *
a
[
i
];

103  
r
;

104 
	}
}

106 vﬁ©ûê
	gsök
 = 0;

108 
	#SIZE
 1024

	)

109 
	ga
[
SIZE
];

111 
	$t1
(
n
)

113 
sök
 = 
	`≠rod1
(
a
, 
n
);

114 
	}
}

116 
	$t2
(
n
)

118 
sök
 = 
	`≠rod2
(
a
, 
n
);

119 
	}
}

121 
	$t3
(
n
)

123 
sök
 = 
	`≠rod3
(
a
, 
n
);

124 
	}
}

126 
	$t4
(
n
)

128 
sök
 = 
	`≠rod4
(
a
, 
n
);

129 
	}
}

131 
	$t5
(
n
)

133 
sök
 = 
	`≠rod5
(
a
, 
n
);

134 
	}
}

136 
	$maö
() {

137 
	`¥ötf
("A1 CPE = %.2f\n", 
	`föd_˝e
(
t1
, 
SIZE
));

138 
	`¥ötf
("A2 CPE = %.2f\n", 
	`föd_˝e
(
t2
, 
SIZE
));

139 
	`¥ötf
("A3 CPE = %.2f\n", 
	`föd_˝e
(
t3
, 
SIZE
));

140 
	`¥ötf
("A4 CPE = %.2f\n", 
	`föd_˝e
(
t4
, 
SIZE
));

141 
	`¥ötf
("A5 CPE = %.2f\n", 
	`föd_˝e
(
t5
, 
SIZE
));

143 
	}
}

	@opt/options.c

7 
	~<°dlib.h
>

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	~"›ti⁄s.h
"

13 íum {
	mINT_OPTION
, 
	mDOUBLE_OPTION
, 
	mSTRING_OPTION
} 
	t›ti⁄_t
;

16 *
	m«me
;

17 
›ti⁄_t
 
	mty≥
;

19 *
	mi
;

20 *
	md
;

21 **
	ms
;

22 } 
	mvÆp
;

23 } 
	t›ti⁄_íåy
;

25 
	#MAX_OPTION
 100

	)

26 
›ti⁄_íåy
 
	g›ti⁄s
[
MAX_OPTION
];

28 
	g›ti⁄_cou¡
 = 0;

31 
	$m©ch_Àngth
(*
s
, *
t
)

33 
ªsu…
 = 0;

34 *
s
 =*
t
) {

35 
ªsu…
 ++;

36 i‡(*
s
 == '\0')

38 
s
++; 
t
++;

40  
ªsu…
;

41 
	}
}

43 
	$ußge
(*
¥og
)

45 
j
;

46 
	`Ârötf
(
°dîr
, "Ußge: %s", 
¥og
);

47 
j
 = 0; j < 
›ti⁄_cou¡
; j++) {

48 
›ti⁄s
[
j
].
ty≥
) {

49 
INT_OPTION
:

50 
	`Ârötf
(
°dîr
, " [-%†(%d)]", 
›ti⁄s
[
j
].
«me
, *(›ti⁄s[j].
vÆp
.
i
));

52 
DOUBLE_OPTION
:

53 
	`Ârötf
(
°dîr
, " [-%†(%.2f)]", 
›ti⁄s
[
j
].
«me
, *(›ti⁄s[j].
vÆp
.
d
));

55 
STRING_OPTION
:

56 
	`Ârötf
(
°dîr
, " [-%†(%s)]", 
›ti⁄s
[
j
].
«me
, *(›ti⁄s[j].
vÆp
.
s
));

60 
	`Ârötf
(
°dîr
, "\n");

61 
	`exô
(1);

62 
	}
}

65 
	$föd_›ti⁄
(*
¥og
, *
«me
)

67 
soÁr
 = -1;

68 
soÁr_Àngth
 = 0;

69 
i
;

70 
ambiguous
 = 0;

71 
i
 = 0; i < 
›ti⁄_cou¡
; i++) {

72 
Àngth
 = 
	`m©ch_Àngth
(
›ti⁄s
[
i
].
«me
,Çame);

73 i‡(
Àngth
 > 
soÁr_Àngth
) {

74 
soÁr
 = 
i
;

75 
soÁr_Àngth
 = 
Àngth
;

76 
ambiguous
 = 0;

77 } i‡(
Àngth
 > 0 &&Üígth =
soÁr_Àngth
) {

78 
ambiguous
 = 1;

81 i‡(
soÁr_Àngth
 == 0) {

82 
	`Ârötf
(
°dîr
, "Nÿm©ch foundÅÿ›ti⁄ '%s'\n", 
«me
);

83 
	`ußge
(
¥og
);

84 } i‡(
ambiguous
) {

85 
	`Ârötf
(
°dîr
, "Ambiguou†›ti⁄: '%s'\n", 
«me
);

86 
	`ußge
(
¥og
);

88  
soÁr
;

89 
	}
}

92 
	$add_öt_›ti⁄
(*
«me
, *
v¨
)

94 
›ti⁄s
[
›ti⁄_cou¡
].
«me
 =Çame;

95 
›ti⁄s
[
›ti⁄_cou¡
].
ty≥
 = 
INT_OPTION
;

96 
›ti⁄s
[
›ti⁄_cou¡
].
vÆp
.
i
 = 
v¨
;

97 
›ti⁄_cou¡
++;

98 
	}
}

100 
	$add_doubÀ_›ti⁄
(*
«me
, *
v¨
)

102 
›ti⁄s
[
›ti⁄_cou¡
].
«me
 =Çame;

103 
›ti⁄s
[
›ti⁄_cou¡
].
ty≥
 = 
DOUBLE_OPTION
;

104 
›ti⁄s
[
›ti⁄_cou¡
].
vÆp
.
d
 = 
v¨
;

105 
›ti⁄_cou¡
++;

106 
	}
}

108 
	$add_°rög_›ti⁄
(*
«me
, **
v¨
)

110 
›ti⁄s
[
›ti⁄_cou¡
].
«me
 =Çame;

111 
›ti⁄s
[
›ti⁄_cou¡
].
ty≥
 = 
STRING_OPTION
;

112 
›ti⁄s
[
›ti⁄_cou¡
].
vÆp
.
s
 = 
v¨
;

113 
›ti⁄_cou¡
++;

114 
	}
}

116 
	$∑r£_›ti⁄s
(
¨gc
, *
¨gv
[], *
Ÿhî¨gs
[])

118 
i
, 
j
;

119 
ocou¡
 = 0;

120 
f
;

121 *
¥og
 = 
¨gv
[0];

122 
i
 = 1; i < 
¨gc
; i++) {

124 i‡(*
¨gv
[
i
] != '-') {

126 i‡(
Ÿhî¨gs
)

127 
Ÿhî¨gs
[
ocou¡
] = 
¨gv
[
i
];

128 
ocou¡
++;

131 
j
 = 
	`föd_›ti⁄
(
¥og
, 
¨gv
[
i
]+1);

132 
i
++;

133 i‡(
i
 >
¨gc
) {

134 
	`Ârötf
(
°dîr
, "Missög vÆuêf‹ o±i⁄ %s\n", 
›ti⁄s
[
j
].
«me
);

135 
	`ußge
(
¥og
);

137 
›ti⁄s
[
j
].
ty≥
) {

138 
INT_OPTION
:

139 i‡(
	`ssˇnf
(
¨gv
[
i
], "%d", 
›ti⁄s
[
j
].
vÆp
.i) != 1) {

140 
	`Ârötf
(
°dîr
, "C™'à∑r£árgumíà'%s'á†öãgî\n", 
¨gv
[
i
]);

141 
	`ußge
(
¥og
);

144 
DOUBLE_OPTION
:

145 i‡(
	`ssˇnf
(
¨gv
[
i
], "%f", &
f
) != 1) {

146 
	`Ârötf
(
°dîr
, "C™'à∑r£árgumíà'%s'á†doubÀ\n", 
¨gv
[
i
]);

147 
	`ußge
(
¥og
);

149 *
›ti⁄s
[
j
].
vÆp
.
d
 = 
f
;

151 
STRING_OPTION
:

152 *(
›ti⁄s
[
j
].
vÆp
.
s
Ë
¨gv
[
i
];

155 
	`Ârötf
(
°dîr
,

156 "I¡î«»îr‹. D⁄'àknow o±i⁄Åy≥ %d\n", 
›ti⁄s
[
j
].
ty≥
);

157 
	`exô
(1);

160  
ocou¡
;

161 
	}
}

164 *
	$°rßve
(*
s
)

166 *
ªsu…
 = (*Ë
	`mÆloc
(
	`°æí
(
s
)+1);

167 
	`°r˝y
 (
ªsu…
, 
s
);

168  
ªsu…
;

169 
	}
}

171 
	$∑r£_›ti⁄_fûe
(*
¥og
, 
FILE
 *
›ti⁄_fûe
)

173 
j
;

174 
f
;

175 
«me
[50], 
vÆ
[50];

176 
	`fsˇnf
(
›ti⁄_fûe
, "%†%s", 
«me
, 
vÆ
) == 2) {

177 i‡(
«me
[0] != '-') {

178 
	`Ârötf
(
°dîr
, "Nìd '-' bef‹ê›ti⁄ '%s'\n", 
«me
);

179 
	`ußge
(
¥og
);

181 
j
 = 
	`föd_›ti⁄
(
¥og
, 
«me
+1);

182 
›ti⁄s
[
j
].
ty≥
) {

183 
INT_OPTION
:

184 i‡(
	`ssˇnf
(
vÆ
, "%d", 
›ti⁄s
[
j
].
vÆp
.
i
) != 1) {

185 
	`Ârötf
(
°dîr
, "C™'à∑r£árgumíà'%s'á†öãgî\n", 
vÆ
);

186 
	`ußge
(
¥og
);

189 
DOUBLE_OPTION
:

190 i‡(
	`ssˇnf
(
vÆ
, "%f", &
f
) != 1) {

191 
	`Ârötf
(
°dîr
, "C™'à∑r£árgumíà'%s'á†doubÀ\n", 
vÆ
);

192 
	`ußge
(
¥og
);

194 *
›ti⁄s
[
j
].
vÆp
.
d
 = 
f
;

196 
STRING_OPTION
:

197 *(
›ti⁄s
[
j
].
vÆp
.
s
Ë
	`°rßve
(
vÆ
);

200 
	`Ârötf
(
°dîr
,

201 "I¡î«»îr‹. D⁄'àknow o±i⁄Åy≥ %d\n", 
›ti⁄s
[
j
].
ty≥
);

202 
	`exô
(1);

205 
	}
}

207 
	$show_›ti⁄s
(
FILE
 *
outfûe
)

209 
i
;

210 
i
 = 0; i < 
›ti⁄_cou¡
; i++) {

211 
›ti⁄s
[
i
].
ty≥
) {

212 
INT_OPTION
:

213 
	`Ârötf
(
outfûe
, "%s\t%d\n", 
›ti⁄s
[
i
].
«me
, *(›ti⁄s[i].
vÆp
.i));

215 
DOUBLE_OPTION
:

216 
	`Ârötf
(
outfûe
, "%s\t%f\n", 
›ti⁄s
[
i
].
«me
, *(›ti⁄s[i].
vÆp
.
d
));

218 
STRING_OPTION
:

219 i‡(*
›ti⁄s
[
i
].
vÆp
.
s
)

220 
	`Ârötf
(
outfûe
, "%s\t%s\n", 
›ti⁄s
[
i
].
«me
, *(›ti⁄s[i].
vÆp
.
s
));

224 
	}
}

	@opt/options.h

9 
add_öt_›ti⁄
(*
«me
, *
v¨
);

10 
add_doubÀ_›ti⁄
(*
«me
, *
v¨
);

11 
add_°rög_›ti⁄
(*
«me
, **
v¨
);

14 
ußge
(*
¥og
);

21 
∑r£_›ti⁄s
(
¨gc
, *
¨gv
[], *
Ÿhî¨gs
[]);

24 
∑r£_›ti⁄_fûe
(*
¥og
, 
FILE
 *
›ti⁄_fûe
);

27 
show_›ti⁄s
(
FILE
 *
outfûe
);

	@opt/overhead.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"˛ock.h
"

6 vﬁ©ûê
	gsök
 = 0;

8 
	$ovîhód
() {

9 
	`°¨t_cou¡î
();

11  
	`gë_cou¡î
();

13 
	}
}

15 
	$run
(
˙t
) {

16 
i
;

17 
i
 = 0; i < 
˙t
; i++) {

18 
t
 = 
	`ovîhód
();

19 
	`¥ötf
("%.0‡cy˛es\n", 
t
);

21 
	}
}

23 
	$maö
 (
¨gc
, *
¨gv
[]) {

24 
˙t
 = 10;

25 i‡(
¨gc
 > 1)

26 
˙t
 = 
	`©oi
(
¨gv
[1]);

27 
	`run
(
˙t
);

29 
	}
}

	@opt/simd_eg.c

1 
	td©a_t
;

4 
	#VBYTES
 16

	)

7 
	#VSIZE
 
VBYTES
/(
d©a_t
)

	)

10 
d©a_t
 
	tvec_t
 
	t__©åibuã__
 ((
	tve˘‹_size
(
	tVBYTES
)));

14 
d©a_t
 
	$ö√rv
(
vec_t
 
av
, vec_à
bv
) {

15 
i
;

16 
vec_t
 
pv
 = 
av
 * 
bv
;

17 
d©a_t
 
ªsu…
 = 0;

18 
i
 = 0; i < 
VSIZE
; i++)

19 
ªsu…
 +
pv
[
i
];

20  
ªsu…
;

21 
	}
}

	@opt/simd_eq.c

1 
	td©a_t
;

4 
	#VBYTES
 16

	)

7 
	#VSIZE
 
VBYTES
/(
d©a_t
)

	)

10 
d©a_t
 
	tvec_t
 
	t__©åibuã__
 ((
	tve˘‹_size
(
	tVBYTES
)));

13 
vec_t
 
	mv
;

14 
d©a_t
 
	md
[
VSIZE
];

15 } 
	t∑ck_t
;

19 
d©a_t
 
	$ö√rv
(
vec_t
 
av
, vec_à
bv
) {

20 
vec_t
 
¥od
 = 
av
 * 
bv
;

21 
∑ck_t
 
x„r
;

22 
i
;

23 
d©a_t
 
ªsu…
 = 0;

24 
x„r
.
v
 = 
¥od
;

25 
i
 = 0; i < 
VSIZE
; i++)

26 
ªsu…
 +
x„r
.
d
[
i
];

27  
ªsu…
;

28 
	}
}

	@opt/swap.c

3 
	$sw≠
(*
xp
, *
yp
)

5 *
xp
 = *x∞+ *
yp
;

6 *
yp
 = *
xp
 - *yp;

7 *
xp
 = *x∞- *
yp
;

8 
	}
}

14 
	$sw≠_Æüs
(*
xp
, *
yp
)

17 *
xp
 = *xp + *xp;

18 *
xp
 = *xp - *xp;

19 *
xp
 = *xp - *xp;

21 
	}
}

	@opt/test_cpe.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"˝e.h
"

6 
	#ERRLIM
 10

	)

7 
	#MAXCNT
 (1 << 18)

	)

8 
	gd©a
[3*
MAXCNT
];

9 *
	ga
, *
	gb
, *
	gc
, *
	gp
;

11 
	$£tup
(
Àn
)

13 
a
 = 
d©a
;

14 
b
 = 
a
+
Àn
;

15 
c
 = 
b
+
Àn
;

16 
p
 = 
b
;

17 
	}
}

21 
	$psum1
(
a
[], 
p
[], 
n
)

23 
i
;

24 
p
[0] = 
a
[0];

25 
i
 = 1; i < 
n
; i++)

26 
p
[
i
] =Ö[i-1] + 
a
[i];

27 
	}
}

29 
	$psum2
(
a
[], 
p
[], 
n
)

31 
i
;

32 
p
[0] = 
a
[0];

33 
i
 = 1; i < 
n
-1; i+=2) {

34 
mid_vÆ
 = 
p
[
i
-1] + 
a
[i];

35 
p
[
i
] = 
mid_vÆ
;

36 
p
[
i
+1] = 
mid_vÆ
 + 
a
[i+1];

39 i‡(
i
 < 
n
)

40 
p
[
i
] =Ö[i-1] + 
a
[i];

41 
	}
}

45 
	$psum1a
(
a
[], 
p
[], 
n
)

47 
i
;

49 
œ°_vÆ
, 
vÆ
;

50 
œ°_vÆ
 = 
p
[0] = 
a
[0];

51 
i
 = 1; i < 
n
; i++) {

52 
vÆ
 = 
œ°_vÆ
 + 
a
[
i
];

53 
p
[
i
] = 
vÆ
;

54 
œ°_vÆ
 = 
vÆ
;

56 
	}
}

59 
	$çsum1
(
˙t
)

61 
	`psum1
(
a
, 
p
, (Ë
˙t
);

62 
	}
}

64 
	$çsum2
(
˙t
)

66 
	`psum2
(
a
, 
p
, (Ë
˙t
);

67 
	}
}

69 
	$çsum1a
(
˙t
)

71 
	`psum1a
(
a
, 
p
, (Ë
˙t
);

72 
	}
}

75 
	$check
(
ñem_fun_t
 
çsumX
, 
˙t
) {

76 
i
;

77 
îr˙t
 = 0;

78 
i
 = 0; i < 
˙t
; i++) {

79 
a
[
i
] = (Ë(
	`øndom
() % 1000);

81 
p
 = 
b
;

82 
	`çsum1
(
˙t
);

83 
p
 = 
c
;

84 
	`çsumX
(
˙t
);

85 
i
 = 0; i < 
˙t
; i++) {

86 i‡(
b
[
i
] !
c
[i]) {

87 
	`¥ötf
("Ref: i = %ld, b[i-1] = %.0f,á[i] = %.0f, b[i] = %.0f. Got b[i-1] = %.0f, b[i] = %.0f\n",

88 
i
, 
c
[i-1], 
a
[i], c[i], 
b
[i-1], b[i]);

89 
îr˙t
++;

90 i‡(
îr˙t
 > 
ERRLIM
) {

91 
	`¥ötf
("Too manyÉrrors. Exiting\n");

92 
	`exô
(1);

96 
	}
}

98 
	$ußge
(*
«me
)

100 
	`¥ötf
("Ußge: %†[-q] [-u] [-a][-r] [-»CNT] [-¿REPS] [-†SAMPLES] [-b BIAS] [-k SEED]\n", 
«me
);

101 
	`¥ötf
("\t-q\tQuiet mode\n");

102 
	`¥ötf
("\t-u\tUse unrolled code\n");

103 
	`¥ötf
("\t-a\tUseálternate code\n");

104 
	`¥ötf
("\t-r\tUseÑandom sampling\n");

105 
	`¥ötf
("\t-lÜen\tSet vectorÜength\n");

106 
	`¥ötf
("\t-nÑeps\tSetÇumber ofÑepetitions\n");

107 
	`¥ötf
("\t-s samples\tSetÇumber of samples\n");

108 
	`¥ötf
("\t-b bias\tSet bias (between 0 & 1.0) determining sample value\n");

109 
	`¥ötf
("\t-k seed\tSet seed forÑng\n");

110 
	`exô
(0);

111 
	}
}

113 
	$maö
(
¨gc
, *
¨gv
[])

115 
ñem_fun_t
 
f
 = 
çsum1
;

116 
˙t
 = 1024;

117 
i
;

118 
ßm∂es
 = 8;

119 
büs
 = 0.0;

120 
ªps
 = 1;

121 
£ed
 = 31415;

122 
vîbo£
 = 2;

123 
ßm∂e_t
 
smëhod
 = 
UNI_SAMPLE
;

124 
i
 = 1; i < 
¨gc
; i++) {

125 i‡(*
¨gv
[
i
] == '-')

126 
¨gv
[
i
][1]) {

128 
f
 = 
çsum2
;

131 
f
 = 
çsum1a
;

134 
smëhod
 = 
RAN_SAMPLE
;

137 
vîbo£
 = 0;

140 
i
++;

141 i‡(
i
 >
¨gc
)

142 
	`ußge
(
¨gv
[0]);

143 
˙t
 = 
	`©oi
(
¨gv
[
i
]);

144 i‡(
˙t
 <0 || c¡ > 
MAXCNT
)

145 
	`ußge
(
¨gv
[0]);

148 
i
++;

149 i‡(
i
 >
¨gc
)

150 
	`ußge
(
¨gv
[0]);

151 
ªps
 = 
	`©oi
(
¨gv
[
i
]);

152 i‡(
ªps
 < 0)

153 
	`ußge
(
¨gv
[0]);

156 
i
++;

157 i‡(
i
 >
¨gc
)

158 
	`ußge
(
¨gv
[0]);

159 
£ed
 = 
	`©oi
(
¨gv
[
i
]);

162 
i
++;

163 i‡(
i
 >
¨gc
)

164 
	`ußge
(
¨gv
[0]);

165 
büs
 = 
	`©of
(
¨gv
[
i
]);

166 i‡(
büs
 < 0 || bias > 1.0)

167 
	`ußge
(
¨gv
[0]);

170 
i
++;

171 i‡(
i
 >
¨gc
)

172 
	`ußge
(
¨gv
[0]);

173 
ßm∂es
 = 
	`©oi
(
¨gv
[
i
]);

174 i‡(
ßm∂es
 <= 0)

175 
	`ußge
(
¨gv
[0]);

178 
	`ußge
(
¨gv
[0]);

182 
	`£tup
(
˙t
);

183 i‡(
f
 !
çsum1
)

184 
	`check
(
f
, 
˙t
);

185 i‡(
ßm∂es
 == 1) {

186 
t
 = 
	`mósuª_fun˘i⁄
(
f
, 
˙t
);

187 
	`¥ötf
("Cycles = %.2f, CPE = %.2f\n",

188 
t
,Å/
˙t
);

190 
˝e_fuŒ
, 
˝e_def
;

191 
ªps
--) {

192 
	`§™dom
(
£ed
);

193 
˝e_fuŒ
 = 
	`föd_˝e_fuŒ
(
f
, 
˙t
, 
ßm∂es
, 
°dout
, 
smëhod
, 
büs
, 
vîbo£
);

194 
	`¥ötf
("FuŒ c≥ = %.2f\n", 
˝e_fuŒ
);

196 
˝e_def
 = 
	`föd_˝e
(
f
, 
˙t
);

197 
	`¥ötf
("DeÁu… c≥ = %.2f\n", 
˝e_def
);

200 
	}
}

	@opt/test_mhz.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"˛ock.h
"

5 
	#NVALS
 10

	)

7 
	$maö
(
¨gc
, *
¨gv
[]) {

8 
n
 = 1;

9 
cvÆs
[
NVALS
];

10 
c˙ts
[
NVALS
];

11 
nvÆ
 = 0;

12 i‡(
¨gc
 > 1) {

13 
n
 = 
	`©oi
(
¨gv
[1]);

15 
i
, 
j
;

16 
i
 = 0; i < 
n
; i++) {

17 
c
 = 
	`mhz
(1) / 1000.0;

18 
found
 = 0;

19 
j
 = 0; !
found
 && j < 
nvÆ
; j++) {

20 i‡(
found
 = (
c
 =
cvÆs
[
j
]))

21 
c˙ts
[
j
]++;

23 i‡(!
found
) {

24 
cvÆs
[
nvÆ
] = 
c
;

25 
c˙ts
[
nvÆ
++] = 1;

27 
°ime
 = 
	`øndom
() & 0x7;

28 
	`¥ötf
("SÀïög f‹ %d sec⁄ds\n", 
°ime
);

29 
	`¶ìp
(
°ime
);

31 i‡(
nvÆ
 == 1) {

32 
	`¥ötf
("SèbÀ clockÑ©ê%.2f\n", 
cvÆs
[0]);

34 
	`¥ötf
("Multiple clockÑates measured:");

35 
j
 = 0; j < 
nvÆ
; j++) {

36 
	`¥ötf
(" %.2‡(%dÅimes)", 
cvÆs
[
j
], 
c˙ts
[j]);

38 
	`¥ötf
("\n");

41 
	}
}

	@opt/timing.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<uni°d.h
>

	@opt/twiddle.c

3 
	$twiddÀ1
(*
xp
, *
yp
)

5 *
xp
 +*
yp
;

6 *
xp
 +*
yp
;

7 
	}
}

9 
	$twiddÀ2
(*
xp
, *
yp
)

11 *
xp
 +2* *
yp
;

12 
	}
}

15 
	$twiddÀ1x
(*
xp
)

18 *
xp
 += *xp;

19 *
xp
 += *xp;

21 
	}
}

23 
	$twiddÀ2x
(*
xp
)

26 *
xp
 += 2* *xp;

28 
	}
}

30 
	$mu…ùoöãrs
(*
p
, *
q
)

32 
x
, 
y
;

33 
t1
;

35 
x
 = 1000; 
y
 = 3000;

36 *
q
 = 
y
;

37 *
p
 = 
x
;

38 
t1
 = *
q
;

40 *
q
 +
t1
;

41 
	}
}

	@opt/vec.c

1 
	~<°dlib.h
>

2 
	~"comböe.h
"

6 
vec_±r
 
	$√w_vec
(
Àn
)

9 
vec_±r
 
ªsu…
 = (vec_±rË
	`mÆloc
((
vec_ªc
));

10 
d©a_t
 *
d©a
 = 
NULL
;

11 i‡(!
ªsu…
)

12  
NULL
;

13 
ªsu…
->
Àn
 =Üen;

16 
ªsu…
->
Æloˇãd_Àn
 = 
Àn
;

19 i‡(
Àn
 > 0) {

20 
d©a
 = (
d©a_t
 *)
	`ˇŒoc
(
Àn
, (data_t));

21 i‡(!
d©a
) {

22 
	`‰ì
((*Ë
ªsu…
);

23  
NULL
;

27 
ªsu…
->
d©a
 = data;

28  
ªsu…
;

29 
	}
}

32 
	$‰ì_vec
(
vec_±r
 
v
) {

33 i‡(
v
->
d©a
)

34 
	`‰ì
(
v
->
d©a
);

35 
	`‰ì
(
v
);

36 
	}
}

42 
	$gë_vec_ñemít
(
vec_±r
 
v
, 
ödex
, 
d©a_t
 *
de°
)

44 i‡(
ödex
 < 0 || index >
v
->
Àn
)

46 *
de°
 = 
v
->
d©a
[
ödex
];

48 
	}
}

51 
	$vec_Àngth
(
vec_±r
 
v
)

53  
v
->
Àn
;

54 
	}
}

59 
d©a_t
 *
	$gë_vec_°¨t
(
vec_±r
 
v
)

61  
v
->
d©a
;

62 
	}
}

70 
	$£t_vec_ñemít
(
vec_±r
 
v
, 
ödex
, 
d©a_t
 
vÆ
)

72 i‡(
ödex
 < 0 || index >
v
->
Àn
)

74 
v
->
d©a
[
ödex
] = 
vÆ
;

76 
	}
}

80 
	$£t_vec_Àngth
(
vec_±r
 
v
, 
√wÀn
)

82 i‡(
√wÀn
 > 
v
->
Æloˇãd_Àn
) {

83 
	`‰ì
(
v
->
d©a
);

84 
v
->
d©a
 = 
	`ˇŒoc
(
√wÀn
, (
d©a_t
));

85 
v
->
Æloˇãd_Àn
 = 
√wÀn
;

87 
v
->
Àn
 = 
√wÀn
;

88 
	}
}

	@opt/vec.h

4 
	mÀn
;

5 
d©a_t
 *
	md©a
;

7 
	mÆloˇãd_Àn
;

9 } 
	tvec_ªc
, *
	tvec_±r
;

13 
vec_±r
 
√w_vec
(
Àn
);

16 
‰ì_vec
(
vec_±r
 
v
);

22 
gë_vec_ñemít
(
vec_±r
 
v
, 
ödex
, 
d©a_t
 *
de°
);

25 
	#GET_VEC_ELEMENT
(
v
,
ödex
,
de°
) \

26 !((
ödex
Ë< 0 || (ödexË>(
v
)->
Àn
) && \

27 *(
de°
Ë(
v
)->
d©a
[(
ödex
)], 1;

	)

30 
d©a_t
 *
gë_vec_°¨t
(
vec_±r
 
v
);

37 
£t_vec_ñemít
(
vec_±r
 
v
, 
ödex
, 
d©a_t
 
vÆ
);

40 
vec_Àngth
(
vec_±r
 
v
);

43 
£t_vec_Àngth
(
vec_±r
 
v
, 
√wÀn
);

	@perf/cf.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

4 
__gë_˛ock‰eq
();

6 
	$maö
() {

7 
f
 = 
	`__gë_˛ock‰eq
();

8 
	`¥ötf
("%ld\n", 
f
);

10 
	}
}

	@perf/clock-rate-test.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

5 vﬁ©ûê
	gö¸
 = 1;

6 vﬁ©ûê
	gvÆ
 = 0;

10 
	#STEP_CNT
 (1<<30)

	)

12 
	$bu∫_˝u
() {

13 
i
;

14 
vÆ
 = 0;

15 
ö¸
 = 
	`øndom
() & 0x7;

16 
i
 = 0; i < 
STEP_CNT
; i++)

17 
vÆ
 *
ö¸
;

18 
	}
}

21 
	#MAXBUF
 512

	)

23 
	$gë_mhz
() {

24 
buf
[
MAXBUF
];

25 
˝u_mhz
 = 0.0;

26 
FILE
 *
Â
 = 
	`f›í
("/proc/cpuinfo", "r");

28 i‡(!
Â
) {

29 
	`Ârötf
(
°dîr
, "Can't open /proc/cpuinfoÅo get clock information\n");

30  
˝u_mhz
;

32 
	`fgës
(
buf
, 
MAXBUF
, 
Â
)) {

33 i‡(
	`°r°r
(
buf
, "cpu MHz")) {

34 
	`ssˇnf
(
buf
, "˝u MHz\t: %lf", &
˝u_mhz
);

38 
	`f˛o£
(
Â
);

39 i‡(
˝u_mhz
 == 0.0) {

40 
	`Ârötf
(
°dîr
, "Can't open /proc/cpuinfoÅo get clock information\n");

42  
˝u_mhz
;

43 
	}
}

45 
time•ec
 
	gœ°_time
;

47 
	$maö
(
¨gc
, *
¨gv
[]) {

48 
nmós
 = 100;

49 i‡(
¨gc
 > 1)

50 
nmós
 = 
	`©oi
(
¨gv
[1]);

51 
i
;

52 
max_mhz
 = 0.0;

53 
i
 = 0; i < 
nmós
; i++) {

54 
mhz
 = 
	`gë_mhz
();

55 i‡(
mhz
 > 
max_mhz
)

56 
max_mhz
 = 
mhz
;

57 
	`¥ötf
("%d\t%.2f\t%.2f\n", 
i
, 
mhz
, 
max_mhz
);

58 
	`bu∫_˝u
();

61 
	}
}

	@perf/clock-v2.c

8 
	~<°dio.h
>

9 
	~<°dlib.h
>

10 
	~<°rög.h
>

11 
	~<time.h
>

12 
	~"˛ock.h
"

14 
	#CLOCK_VERSION
 
CLOCK_REALTIME


	)

16 
	ggvîbo£
 = 1;

19 
	g˝u_ghz
 = 0.0;

22 
	#MAXBUF
 512

	)

25 vﬁ©ûê
	gö¸
 = 1;

26 vﬁ©ûê
	gvÆ
 = 0;

30 
	#STEP_CNT
 (1<<30)

	)

32 
	$bu∫_˝u
() {

33 
i
;

34 
vÆ
 = 0;

35 
ö¸
 = 
	`øndom
() & 0x7;

36 
i
 = 0; i < 
STEP_CNT
; i++)

37 
vÆ
 *
ö¸
;

38 
	}
}

40 
	$c‹e_mhz
(
vîbo£
) {

41 
buf
[
MAXBUF
];

42 
FILE
 *
Â
 = 
	`f›í
("/proc/cpuinfo", "r");

43 
˝u_ghz
 = 0.0;

45 i‡(!
Â
) {

46 
	`Ârötf
(
°dîr
, "Can't open /proc/cpuinfoÅo get clock information\n");

47 
˝u_ghz
 = 1.0;

48  
˝u_ghz
 * 1000.0;

50 
	`fgës
(
buf
, 
MAXBUF
, 
Â
)) {

51 i‡(
	`°r°r
(
buf
, "cpu MHz")) {

52 
˝u_mhz
 = 0.0;

53 
	`ssˇnf
(
buf
, "˝u MHz\t: %lf", &
˝u_mhz
);

54 
˝u_ghz
 = 
˝u_mhz
 / 1000.0;

58 
	`f˛o£
(
Â
);

59 i‡(
˝u_ghz
 == 0.0) {

60 
	`Ârötf
(
°dîr
, "Can't open /proc/cpuinfoÅo get clock information\n");

61 
˝u_ghz
 = 1.0;

62  
˝u_ghz
 * 1000.0;

64 i‡(
vîbo£
) {

65 
	`¥ötf
("Pro˚ss‹ Clock R©ê~%.4‡GHz (exåa˘ed from fûe)\n", 
˝u_ghz
);

67  
˝u_ghz
 * 1000;

68 
	}
}

75 
	$mhz
(
vîbo£
) {

76 
maxvÆ
 = 0.0;

78 
vÆ
 = 
	`c‹e_mhz
(
vîbo£
);

80 
vÆ
 !
maxvÆ
) {

81 
	`bu∫_˝u
();

82 i‡(
vÆ
 > 
maxvÆ
)

83 
maxvÆ
 = 
vÆ
;

84 
vÆ
 = 
	`c‹e_mhz
(
vîbo£
);

86  
vÆ
;

87 
	}
}

90 
time•ec
 
	gœ°_time
;

92 
	$°¨t_cou¡î
()

94 i‡(
˝u_ghz
 == 0.0) {

95 
	`mhz
(
gvîbo£
);

97 i‡(
	`˛ock_gëtime
(
CLOCK_VERSION
, &
œ°_time
) != 0) {

98 
	`Ârötf
(
°dîr
, "Couldn't getÅime\n");

99 
	`exô
(1);

101 
	}
}

103 
	$gë_cou¡î
()

105 
time•ec
 
√w_time
;

106 
dñè_n£cs
 = 0.0;

107 i‡(
	`˛ock_gëtime
(
CLOCK_VERSION
, &
√w_time
) != 0) {

108 
	`Ârötf
(
°dîr
, "Couldn't getÅime\n");

109 
	`exô
(1);

111 
dñè_n£cs
 = 1e9 * (
√w_time
.
tv_£c
 - 
œ°_time
.tv_£cË+ (√w_time.
tv_n£c
 -Üast_time.tv_nsec);

112  
dñè_n£cs
 * 
˝u_ghz
;

113 
	}
}

115 
	$mhz_fuŒ
(
vîbo£
, 
¶ì±ime
) {

116  
	`mhz
(
vîbo£
);

117 
	}
}

119 
	$°¨t_comp_cou¡î
()

121 
	`°¨t_cou¡î
();

122 
	}
}

124 
	$gë_comp_cou¡î
()

126  
	`gë_cou¡î
();

127 
	}
}

	@perf/clock.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<uni°d.h
>

4 
	~<sys/times.h
>

5 
	~"˛ock.h
"

13 
	gcyc_hi
 = 0;

14 
	gcyc_lo
 = 0;

19 
	$ac˚ss_cou¡î
(*
hi
, *
lo
)

21 
	`asm
("rdtsc; movl %%edx,%0; movl %%eax,%1"

22 : "Ù" (*
hi
), "Ù" (*
lo
)

25 
	}
}

28 
	$°¨t_cou¡î
()

30 
	`ac˚ss_cou¡î
(&
cyc_hi
, &
cyc_lo
);

31 
	}
}

34 
	$gë_cou¡î
()

36 
ncyc_hi
, 
ncyc_lo
;

37 
hi
, 
lo
, 
b‹row
;

38 
ªsu…
;

41 
	`ac˚ss_cou¡î
(&
ncyc_hi
, &
ncyc_lo
);

44 
lo
 = 
ncyc_lo
 - 
cyc_lo
;

45 
b‹row
 = 
cyc_lo
 > 
ncyc_lo
;

46 
hi
 = 
ncyc_hi
 - 
cyc_hi
 - 
b‹row
;

47 
ªsu…
 = (Ë
hi
 * (1 << 30Ë* 4 + 
lo
;

48  
ªsu…
;

49 
	}
}

52 
	$ovhd
()

55 
i
;

56 
ªsu…
;

58 
i
 = 0; i < 2; i++) {

59 
	`°¨t_cou¡î
();

60 
ªsu…
 = 
	`gë_cou¡î
();

62  
ªsu…
;

63 
	}
}

68 
	$mhz_fuŒ
(
vîbo£
, 
¶ì±ime
)

70 
øã
;

72 
	`°¨t_cou¡î
();

73 
	`¶ìp
(
¶ì±ime
);

74 
øã
 = 
	`gë_cou¡î
(Ë/ (1e6*
¶ì±ime
);

75 i‡(
vîbo£
)

76 
	`¥ötf
("Pro˚ss‹ clockÑ©ê~%.1‡MHz\n", 
øã
);

77  
øã
;

78 
	}
}

82 
	$mhz
(
vîbo£
)

84  
	`mhz_fuŒ
(
vîbo£
, 2);

85 
	}
}

89 
	gcyc_≥r_tick
 = 0.0;

91 
	#NEVENT
 100

	)

92 
	#THRESHOLD
 1000

	)

93 
	#RECORDTHRESH
 3000

	)

96 
	$ˇŒibøã
(
vîbo£
)

98 
ﬁdt
;

99 
tms
 
t
;

100 
˛ock_t
 
ﬁdc
;

101 
e
 = 0;

103 
	`times
(&
t
);

104 
ﬁdc
 = 
t
.
tms_utime
;

105 
	`°¨t_cou¡î
();

106 
ﬁdt
 = 
	`gë_cou¡î
();

107 
e
 <
NEVENT
) {

108 
√wt
 = 
	`gë_cou¡î
();

110 i‡(
√wt
-
ﬁdt
 >
THRESHOLD
) {

111 
˛ock_t
 
√wc
;

112 
	`times
(&
t
);

113 
√wc
 = 
t
.
tms_utime
;

114 i‡(
√wc
 > 
ﬁdc
) {

115 
˝t
 = (
√wt
-
ﬁdt
)/(
√wc
-
ﬁdc
);

116 i‡((
cyc_≥r_tick
 =0.0 || cyc_≥r_tick > 
˝t
Ë&& c± > 
RECORDTHRESH
)

117 
cyc_≥r_tick
 = 
˝t
;

123 
e
++;

124 
ﬁdc
 = 
√wc
;

126 
ﬁdt
 = 
√wt
;

129 i‡(
vîbo£
)

130 
	`¥ötf
("Sëtög cyc_≥r_tickÅÿ%f\n", 
cyc_≥r_tick
);

131 
	}
}

133 
˛ock_t
 
	g°¨t_tick
 = 0;

135 
	$°¨t_comp_cou¡î
()

137 
tms
 
t
;

139 i‡(
cyc_≥r_tick
 == 0.0)

140 
	`ˇŒibøã
(1);

141 
	`times
(&
t
);

142 
°¨t_tick
 = 
t
.
tms_utime
;

143 
	`°¨t_cou¡î
();

144 
	}
}

146 
	$gë_comp_cou¡î
()

148 
time
 = 
	`gë_cou¡î
();

149 
˘ime
;

150 
tms
 
t
;

151 
˛ock_t
 
ticks
;

153 
	`times
(&
t
);

154 
ticks
 = 
t
.
tms_utime
 - 
°¨t_tick
;

155 
˘ime
 = 
time
 - 
ticks
*
cyc_≥r_tick
;

160  
˘ime
;

161 
	}
}

	@perf/clock.h

4 
°¨t_cou¡î
();

7 
gë_cou¡î
();

11 
ovhd
();

14 
mhz
(
vîbo£
);

17 
mhz_fuŒ
(
vîbo£
, 
¶ì±ime
);

21 
°¨t_comp_cou¡î
();

23 
gë_comp_cou¡î
();

	@perf/load.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<uni°d.h
>

4 
	~<sys/ty≥s.h
>

5 
	~<sys/waô.h
>

6 
	~<sys/sig«l.h
>

7 
	~"lﬂd.h
"

10 
	#PLIMIT
 100

	)

12 
pid_t
 
	gchûd_id
[
PLIMIT
];

13 
	gchûd_cou¡
 = 0;

16 
	gsök
;

20 
	$˝u_run
()

22 
i
 = 1;

23 
sök
 = 1;

25 
sök
 *
i
++;

26 
	}
}

30 
	#CSIZE
 (1<<12)

	)

31 
	#CSTRIDE
 8

	)

32 
	$ˇche_run
()

34 
i
;

35 *
d©a
 = 
	`ˇŒoc
(
CSIZE
, ());

38 
i
 = 0; i < 
CSIZE
; i +
CSTRIDE
)

39 
d©a
[
i
] = i;

41 
sök
 = 0;

42 
i
 = 0; i < 
CSIZE
; i +
CSTRIDE
)

43 
sök
 +
d©a
[
i
];

45 
	}
}

49 
	#MSIZE
 (1<<18)

	)

50 
	#MSTRIDE
 8

	)

51 
	$mem_run
()

53 
i
;

54 *
d©a
 = 
	`ˇŒoc
(
MSIZE
, ());

57 
i
 = 0; i < 
MSIZE
; i +
MSTRIDE
)

58 
d©a
[
i
] = i;

60 
sök
 = 0;

61 
i
 = 0; i < 
MSIZE
; i +
MSTRIDE
)

62 
sök
 +
d©a
[
i
];

64 
	}
}

66 
	$add_lﬂd
(
cou¡
, 
lﬂd_t
 
lﬂd_ty≥
) {

67 
i
;

68 i‡(
cou¡
 == 0)

70 
i
 = 0; i < 
cou¡
; i++) {

71 
pid_t
 
id
;

72 i‡(
i
+1 =
PLIMIT
) {

73 
	`Ârötf
(
°dîr
, "Can't create moreÅhan %d childÖrocesses\n",

74 
PLIMIT
);

75 
	`exô
(1);

77 
id
 = 
	`f‹k
();

78 i‡(
id
) {

80 
chûd_id
[
chûd_cou¡
++] = 
id
;

83 
lﬂd_ty≥
) {

84 
CPU_LOAD
:

85 
	`˝u_run
();

87 
CACHE_LOAD
:

88 
	`ˇche_run
();

90 
MEM_LOAD
:

91 
	`mem_run
();

94 
	`Ârötf
(
°dîr
, "Unknow¿LﬂdÅy≥ %d\n", 
lﬂd_ty≥
);

95 
	`exô
(1);

97 
	`exô
(0);

100 
	`¶ìp
(1);

101 
	}
}

105 
	$kûl_lﬂds
() {

106 
chûd_cou¡
 > 0) {

107 
°©us
;

108 
	`kûl
(
chûd_id
[--
chûd_cou¡
], 9);

109 
	`waô
(&
°©us
);

111 
	}
}

	@perf/load.h

3 íum {
	mCPU_LOAD
, 
	mCACHE_LOAD
, 
	mMEM_LOAD
} 
	tlﬂd_t
;

6 
add_lﬂd
(
cou¡
, 
lﬂd_t
 
lﬂd_ty≥
);

9 
kûl_lﬂds
();

	@perf/options.c

7 
	~<°dlib.h
>

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	~"›ti⁄s.h
"

13 íum {
	mINT_OPTION
, 
	mDOUBLE_OPTION
, 
	mSTRING_OPTION
} 
	t›ti⁄_t
;

16 *
	m«me
;

17 
›ti⁄_t
 
	mty≥
;

19 *
	mi
;

20 *
	md
;

21 **
	ms
;

22 } 
	mvÆp
;

23 } 
	t›ti⁄_íåy
;

25 
	#MAX_OPTION
 100

	)

26 
›ti⁄_íåy
 
	g›ti⁄s
[
MAX_OPTION
];

28 
	g›ti⁄_cou¡
 = 0;

31 
	$m©ch_Àngth
(*
s
, *
t
)

33 
ªsu…
 = 0;

34 *
s
 =*
t
) {

35 
ªsu…
 ++;

36 i‡(*
s
 == '\0')

38 
s
++; 
t
++;

40  
ªsu…
;

41 
	}
}

43 
	$ußge
(*
¥og
)

45 
j
;

46 
	`Ârötf
(
°dîr
, "Ußge: %s", 
¥og
);

47 
j
 = 0; j < 
›ti⁄_cou¡
; j++) {

48 
›ti⁄s
[
j
].
ty≥
) {

49 
INT_OPTION
:

50 
	`Ârötf
(
°dîr
, " [-%†(%d)]", 
›ti⁄s
[
j
].
«me
, *(›ti⁄s[j].
vÆp
.
i
));

52 
DOUBLE_OPTION
:

53 
	`Ârötf
(
°dîr
, " [-%†(%.2f)]", 
›ti⁄s
[
j
].
«me
, *(›ti⁄s[j].
vÆp
.
d
));

55 
STRING_OPTION
:

56 
	`Ârötf
(
°dîr
, " [-%†(%s)]", 
›ti⁄s
[
j
].
«me
, *(›ti⁄s[j].
vÆp
.
s
));

60 
	`Ârötf
(
°dîr
, "\n");

61 
	`exô
(1);

62 
	}
}

65 
	$föd_›ti⁄
(*
¥og
, *
«me
)

67 
soÁr
 = -1;

68 
soÁr_Àngth
 = 0;

69 
i
;

70 
ambiguous
 = 0;

71 
i
 = 0; i < 
›ti⁄_cou¡
; i++) {

72 
Àngth
 = 
	`m©ch_Àngth
(
›ti⁄s
[
i
].
«me
,Çame);

73 i‡(
Àngth
 > 
soÁr_Àngth
) {

74 
soÁr
 = 
i
;

75 
soÁr_Àngth
 = 
Àngth
;

76 
ambiguous
 = 0;

77 } i‡(
Àngth
 > 0 &&Üígth =
soÁr_Àngth
) {

78 
ambiguous
 = 1;

81 i‡(
soÁr_Àngth
 == 0) {

82 
	`Ârötf
(
°dîr
, "Nÿm©ch foundÅÿ›ti⁄ '%s'\n", 
«me
);

83 
	`ußge
(
¥og
);

84 } i‡(
ambiguous
) {

85 
	`Ârötf
(
°dîr
, "Ambiguou†›ti⁄: '%s'\n", 
«me
);

86 
	`ußge
(
¥og
);

88  
soÁr
;

89 
	}
}

92 
	$add_öt_›ti⁄
(*
«me
, *
v¨
)

94 
›ti⁄s
[
›ti⁄_cou¡
].
«me
 =Çame;

95 
›ti⁄s
[
›ti⁄_cou¡
].
ty≥
 = 
INT_OPTION
;

96 
›ti⁄s
[
›ti⁄_cou¡
].
vÆp
.
i
 = 
v¨
;

97 
›ti⁄_cou¡
++;

98 
	}
}

100 
	$add_doubÀ_›ti⁄
(*
«me
, *
v¨
)

102 
›ti⁄s
[
›ti⁄_cou¡
].
«me
 =Çame;

103 
›ti⁄s
[
›ti⁄_cou¡
].
ty≥
 = 
DOUBLE_OPTION
;

104 
›ti⁄s
[
›ti⁄_cou¡
].
vÆp
.
d
 = 
v¨
;

105 
›ti⁄_cou¡
++;

106 
	}
}

108 
	$add_°rög_›ti⁄
(*
«me
, **
v¨
)

110 
›ti⁄s
[
›ti⁄_cou¡
].
«me
 =Çame;

111 
›ti⁄s
[
›ti⁄_cou¡
].
ty≥
 = 
STRING_OPTION
;

112 
›ti⁄s
[
›ti⁄_cou¡
].
vÆp
.
s
 = 
v¨
;

113 
›ti⁄_cou¡
++;

114 
	}
}

116 
	$∑r£_›ti⁄s
(
¨gc
, *
¨gv
[], *
Ÿhî¨gs
[])

118 
i
, 
j
;

119 
ocou¡
 = 0;

120 
f
;

121 *
¥og
 = 
¨gv
[0];

122 
i
 = 1; i < 
¨gc
; i++) {

124 i‡(*
¨gv
[
i
] != '-') {

126 i‡(
Ÿhî¨gs
)

127 
Ÿhî¨gs
[
ocou¡
] = 
¨gv
[
i
];

128 
ocou¡
++;

131 
j
 = 
	`föd_›ti⁄
(
¥og
, 
¨gv
[
i
]+1);

132 
i
++;

133 i‡(
i
 >
¨gc
) {

134 
	`Ârötf
(
°dîr
, "Missög vÆuêf‹ o±i⁄ %s\n", 
›ti⁄s
[
j
].
«me
);

135 
	`ußge
(
¥og
);

137 
›ti⁄s
[
j
].
ty≥
) {

138 
INT_OPTION
:

139 i‡(
	`ssˇnf
(
¨gv
[
i
], "%d", 
›ti⁄s
[
j
].
vÆp
.i) != 1) {

140 
	`Ârötf
(
°dîr
, "C™'à∑r£árgumíà'%s'á†öãgî\n", 
¨gv
[
i
]);

141 
	`ußge
(
¥og
);

144 
DOUBLE_OPTION
:

145 i‡(
	`ssˇnf
(
¨gv
[
i
], "%f", &
f
) != 1) {

146 
	`Ârötf
(
°dîr
, "C™'à∑r£árgumíà'%s'á†doubÀ\n", 
¨gv
[
i
]);

147 
	`ußge
(
¥og
);

149 *
›ti⁄s
[
j
].
vÆp
.
d
 = 
f
;

151 
STRING_OPTION
:

152 *(
›ti⁄s
[
j
].
vÆp
.
s
Ë
¨gv
[
i
];

155 
	`Ârötf
(
°dîr
,

156 "I¡î«»îr‹. D⁄'àknow o±i⁄Åy≥ %d\n", 
›ti⁄s
[
j
].
ty≥
);

157 
	`exô
(1);

160  
ocou¡
;

161 
	}
}

164 *
	$°rßve
(*
s
)

166 *
ªsu…
 = (*Ë
	`mÆloc
(
	`°æí
(
s
)+1);

167 
	`°r˝y
 (
ªsu…
, 
s
);

168  
ªsu…
;

169 
	}
}

171 
	$∑r£_›ti⁄_fûe
(*
¥og
, 
FILE
 *
›ti⁄_fûe
)

173 
j
;

174 
f
;

175 
«me
[50], 
vÆ
[50];

176 
	`fsˇnf
(
›ti⁄_fûe
, "%†%s", 
«me
, 
vÆ
) == 2) {

177 i‡(
«me
[0] != '-') {

178 
	`Ârötf
(
°dîr
, "Nìd '-' bef‹ê›ti⁄ '%s'\n", 
«me
);

179 
	`ußge
(
¥og
);

181 
j
 = 
	`föd_›ti⁄
(
¥og
, 
«me
+1);

182 
›ti⁄s
[
j
].
ty≥
) {

183 
INT_OPTION
:

184 i‡(
	`ssˇnf
(
vÆ
, "%d", 
›ti⁄s
[
j
].
vÆp
.
i
) != 1) {

185 
	`Ârötf
(
°dîr
, "C™'à∑r£árgumíà'%s'á†öãgî\n", 
vÆ
);

186 
	`ußge
(
¥og
);

189 
DOUBLE_OPTION
:

190 i‡(
	`ssˇnf
(
vÆ
, "%f", &
f
) != 1) {

191 
	`Ârötf
(
°dîr
, "C™'à∑r£árgumíà'%s'á†doubÀ\n", 
vÆ
);

192 
	`ußge
(
¥og
);

194 *
›ti⁄s
[
j
].
vÆp
.
d
 = 
f
;

196 
STRING_OPTION
:

197 *(
›ti⁄s
[
j
].
vÆp
.
s
Ë
	`°rßve
(
vÆ
);

200 
	`Ârötf
(
°dîr
,

201 "I¡î«»îr‹. D⁄'àknow o±i⁄Åy≥ %d\n", 
›ti⁄s
[
j
].
ty≥
);

202 
	`exô
(1);

205 
	}
}

207 
	$show_›ti⁄s
(
FILE
 *
outfûe
)

209 
i
;

210 
i
 = 0; i < 
›ti⁄_cou¡
; i++) {

211 
›ti⁄s
[
i
].
ty≥
) {

212 
INT_OPTION
:

213 
	`Ârötf
(
outfûe
, "%s\t%d\n", 
›ti⁄s
[
i
].
«me
, *(›ti⁄s[i].
vÆp
.i));

215 
DOUBLE_OPTION
:

216 
	`Ârötf
(
outfûe
, "%s\t%f\n", 
›ti⁄s
[
i
].
«me
, *(›ti⁄s[i].
vÆp
.
d
));

218 
STRING_OPTION
:

219 i‡(*
›ti⁄s
[
i
].
vÆp
.
s
)

220 
	`Ârötf
(
outfûe
, "%s\t%s\n", 
›ti⁄s
[
i
].
«me
, *(›ti⁄s[i].
vÆp
.
s
));

224 
	}
}

	@perf/options.h

9 
add_öt_›ti⁄
(*
«me
, *
v¨
);

10 
add_doubÀ_›ti⁄
(*
«me
, *
v¨
);

11 
add_°rög_›ti⁄
(*
«me
, **
v¨
);

14 
ußge
(*
¥og
);

21 
∑r£_›ti⁄s
(
¨gc
, *
¨gv
[], *
Ÿhî¨gs
[]);

24 
∑r£_›ti⁄_fûe
(*
¥og
, 
FILE
 *
›ti⁄_fûe
);

27 
show_›ti⁄s
(
FILE
 *
outfûe
);

	@perf/osevent.c

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~<uni°d.h
>

8 
	~"˛ock.h
"

9 
	~"›ti⁄s.h
"

10 
	~"lﬂd.h
"

13 
	#MAXEVENT
 1000

	)

16 
	gt°¨t
[
MAXEVENT
];

17 
	gãnd
[
MAXEVENT
];

20 
	$acquúe
(
√vít
, 
thªshﬁd
)

22 
ﬁdt
;

23 
e
 = 0;

24 
	`°¨t_cou¡î
();

25 
ﬁdt
 = 
	`gë_cou¡î
();

26 
e
 < 
√vít
) {

27 
√wt
 = 
	`gë_cou¡î
();

28 i‡(
√wt
-
ﬁdt
 >
thªshﬁd
) {

29 
t°¨t
[
e
] = 
ﬁdt
;

30 
ãnd
[
e
] = 
√wt
;

31 
e
++;

33 
ﬁdt
 = 
√wt
;

35 
	}
}

37 
	gMhz
 = 0.0;

38 
	$cyc2ms
(
c
)

40 i‡(
Mhz
 == 0)

41 
Mhz
 = 
	`mhz
(1);

42  
c
/(
Mhz
*1e3);

43 
	}
}

45 
	#NMIN
(
x
,
y
Ë{i‡((x)>(y)Ë(x)=(y);}

	)

46 
	#NMAX
(
x
,
y
Ë{i‡((x)<(y)Ë(x)=(y);}

	)

49 
	$è˘ive
(
i
)

51 i‡(
i
 == 0)

52  
t°¨t
[
i
];

54  
t°¨t
[
i
]-
ãnd
[i-1];

55 
	}
}

58 
	$töa˘ive
(
i
)

60  
ãnd
[
i
]-
t°¨t
[i];

61 
	}
}

64 
	$ªp‹t
(
√vít
)

66 
e
;

67 
tŸ_a˘ivëime
 = 0.0;

68 
mö_a˘ivëime
 = 1e20;

69 
max_a˘ivëime
 = 0;

70 
tŸ_öa˘ivëime
 = 0.0;

71 
mö_öa˘ivëime
 = 1e20;

72 
max_öa˘ivëime
 = 0;

73 
a°¨t
 = 0.0;

74 
e
 = 0;É < 
√vít
;É++) {

76 
©
 = 
	`è˘ive
(
e
);

77 
ô
 = 
	`töa˘ive
(
e
);

79 
tŸ_a˘ivëime
 +
©
;

80 
	`NMIN
(
mö_a˘ivëime
,
©
);

81 
	`NMAX
(
max_a˘ivëime
,
©
);

83 
tŸ_öa˘ivëime
 +
ô
;

84 
	`NMIN
(
mö_öa˘ivëime
,
ô
);

85 
	`NMAX
(
max_öa˘ivëime
,
ô
);

87 
	`¥ötf
("A%d \tTime %.0f \t(%.2f ms), \tDuration %8.0f \t(%f ms)\n",

88 
e
, 
a°¨t
, 
	`cyc2ms
◊°¨t), 
©
, cyc2ms(at));

90 
a°¨t
 = 
ãnd
[
e
];

92 
	`¥ötf
("I%d \tTime %.0f \t(%.2f ms), \tDuration %8.0f \t(%f ms)\n",

93 
e
, 
t°¨t
[e], 
	`cyc2ms
—°¨t[e]), 
ô
, cyc2ms(it));

94 
	`fÊush
(
°dout
);

97 
	`¥ötf
("InactiveÖeriodsÑequired %f/%.2f milliseconds (%.3f%% ofÅotal)\n",

98 
	`cyc2ms
(
tŸ_öa˘ivëime
), cyc2ms(
ãnd
[
√vít
-1]),

99 100*
tŸ_öa˘ivëime
/
ãnd
[
√vít
-1]);

101 
	`¥ötf
("AÅimes: min=%.0f (%.3f ms),ávg=%.0f (%.3f ms), max=%.0f (%.3f ms)\n",

102 
mö_a˘ivëime
, 
	`cyc2ms
(min_activetime),

103 (
tŸ_a˘ivëime
/
√vít
), 
	`cyc2ms
(tot_activetime/nevent),

104 
max_a˘ivëime
, 
	`cyc2ms
(max_activetime));

106 
	`¥ötf
("IÅimes: min=%.0f (%.3f ms),ávg=%.0f (%.3f ms), max=%.0f (%.3f ms)\n",

107 
mö_öa˘ivëime
, 
	`cyc2ms
(min_inactivetime),

108 (
tŸ_öa˘ivëime
/
√vít
), 
	`cyc2ms
(tot_inactivetime/nevent),

109 
max_öa˘ivëime
, 
	`cyc2ms
(max_inactivetime));

110 
	}
}

112 
	$maö
(
¨gc
, *
¨gv
[])

114 
√vít
 = 100;

115 
thªshﬁd
 = 1000;

116 
lﬂd
 = 0;

117 
‰eq
 = 0;

118 
¶ì±ime
 = 0;

119 
	`add_öt_›ti⁄
("√vít", &
√vít
);

120 
	`add_öt_›ti⁄
("thªshﬁd", &
thªshﬁd
);

121 
	`add_öt_›ti⁄
("lﬂd", &
lﬂd
);

122 
	`add_öt_›ti⁄
("‰equícy", &
‰eq
);

123 
	`add_öt_›ti⁄
("¶ìp", &
¶ì±ime
);

124 
	`∑r£_›ti⁄s
(
¨gc
, 
¨gv
, 
NULL
);

125 
	`show_›ti⁄s
(
°dout
);

126 if(
‰eq
 > 0)

127 
Mhz
 = 
‰eq
;

128 
	`add_lﬂd
(
lﬂd
, 
CPU_LOAD
);

129 i‡(
¶ì±ime
)

130 
	`¶ìp
(
¶ì±ime
);

131 
	`acquúe
(
√vít
, 
thªshﬁd
);

132 
	`kûl_lﬂds
();

134 
	`ªp‹t
(
√vít
);

136 
	}
}

	@src/clock.c

9 
	#USE_POSIX
 0

	)

13 
	~<°dio.h
>

14 
	~<°dlib.h
>

15 
	~<°rög.h
>

16 #ifde‡
USE_POSIX


17 
	~<time.h
>

19 
	~"˛ock.h
"

21 
	ggvîbo£
 = 1;

24 
	g˝u_ghz
 = 0.0;

27 
	#MAXBUF
 512

	)

30 
	$c‹e_mhz
(
vîbo£
) {

31 
buf
[
MAXBUF
];

32 
FILE
 *
Â
 = 
	`f›í
("/proc/cpuinfo", "r");

33 
˝u_ghz
 = 0.0;

35 i‡(!
Â
) {

36 
	`Ârötf
(
°dîr
, "Can't open /proc/cpuinfoÅo get clock information\n");

37 
˝u_ghz
 = 1.0;

38  
˝u_ghz
 * 1000.0;

40 
	`fgës
(
buf
, 
MAXBUF
, 
Â
)) {

41 i‡(
	`°r°r
(
buf
, "cpu MHz")) {

42 
˝u_mhz
 = 0.0;

43 
	`ssˇnf
(
buf
, "˝u MHz\t: %lf", &
˝u_mhz
);

44 
˝u_ghz
 = 
˝u_mhz
 / 1000.0;

48 
	`f˛o£
(
Â
);

49 i‡(
˝u_ghz
 == 0.0) {

50 
	`Ârötf
(
°dîr
, "Can't open /proc/cpuinfoÅo get clock information\n");

51 
˝u_ghz
 = 1.0;

52  
˝u_ghz
 * 1000.0;

54 i‡(
vîbo£
) {

55 
	`¥ötf
("Pro˚ss‹ Clock R©ê~%.4‡GHz (exåa˘ed from fûe)\n", 
˝u_ghz
);

57  
˝u_ghz
 * 1000;

58 
	}
}

60 
	$mhz
(
vîbo£
) {

61 
vÆ
 = 
	`c‹e_mhz
(
vîbo£
);

62  
vÆ
;

63 
	}
}

65 #ifde‡
USE_POSIX


67 
time•ec
 
	gœ°_time
;

70 
	#CLKT
 
CLOCK_THREAD_CPUTIME_ID


	)

72 
	$°¨t_cou¡î
()

74 i‡(
˝u_ghz
 == 0.0)

75 
	`mhz
(
gvîbo£
);

76 i‡(
	`˛ock_gëtime
(
CLKT
, &
œ°_time
) != 0) {

77 
	`Ârötf
(
°dîr
, "Couldn't getÅime\n");

78 
	`exô
(1);

80 
	}
}

82 
	$gë_cou¡î
()

84 
time•ec
 
√w_time
;

85 
dñè_n£cs
 = 0.0;

86 i‡(
	`˛ock_gëtime
(
CLKT
, &
√w_time
) != 0) {

87 
	`Ârötf
(
°dîr
, "Couldn't getÅime\n");

88 
	`exô
(1);

90 
dñè_n£cs
 = 1e9 * (
√w_time
.
tv_£c
 - 
œ°_time
.tv_£cË+ (√w_time.
tv_n£c
 -Üast_time.tv_nsec);

91  
dñè_n£cs
 * 
˝u_ghz
;

92 
	}
}

99 
	gcyc_hi
 = 0;

100 
	gcyc_lo
 = 0;

104 
	$ac˚ss_cou¡î
(*
hi
, *
lo
)

106 
	`asm
("rdtsc; movl %%edx,%0; movl %%eax,%1"

107 : "Ù" (*
hi
), "Ù" (*
lo
)

110 
	}
}

114 
	$°¨t_cou¡î
()

116 
	`ac˚ss_cou¡î
(&
cyc_hi
, &
cyc_lo
);

117 
	}
}

120 
	$gë_cou¡î
()

122 
ncyc_hi
, 
ncyc_lo
;

123 
hi
, 
lo
, 
b‹row
;

124 
ªsu…
;

127 
	`ac˚ss_cou¡î
(&
ncyc_hi
, &
ncyc_lo
);

130 
lo
 = 
ncyc_lo
 - 
cyc_lo
;

131 
b‹row
 = 
cyc_lo
 > 
ncyc_lo
;

132 
hi
 = 
ncyc_hi
 - 
cyc_hi
 - 
b‹row
;

133 
ªsu…
 = (Ë
hi
 * (1 << 30Ë* 4 + 
lo
;

134  
ªsu…
;

135 
	}
}

	@src/cpe.c

2 
	~<°dlib.h
>

3 
	~<°dio.h
>

4 
	~"fcyc.h
"

5 
	~"˝e.h
"

6 
	~"lsqu¨e.h
"

7 
	~"˛ock.h
"

13 
	$mósuª_fun˘i⁄
(
ñem_fun_t
 
f
, 
˙t
)

17 
ã°_fun˘
 
tf
 = (ã°_fun˘Ë
f
;

18  
	`fcyc
(
tf
, (*Ë(Ë
˙t
);

19 
	}
}

21 
	#MAXCNT
 100

	)

23 
	#LIM
 (1<<30)

	)

26 #ifde‡
USE_UNI


27 
	#UNROLL
 32

	)

29 
	#UNROLL
 1

	)

32 
	$gë_˙t
(
ödex
, 
ßm∂es
,

33 
max˙t
, 
ßm∂e_t
 
smëhod
, 
büs
)

35 
mö˙t
 = (Ë(
büs
*
max˙t
);

36 
weight
;

37 
vÆ
;

38 
smëhod
) {

39 
UNI_SAMPLE
:

40 
weight
 = (Ë
ödex
/(
ßm∂es
 - 1);

42 
RAN_SAMPLE
:

43 
weight
 = (Ë(
	`øndom
(Ë% 
LIM
) / () (LIM-1);

46 
	`Ârötf
(
°dîr
, "Undeföed sam∂ög mëhod %d\n", 
smëhod
);

47 
	`exô
(1);

49 
vÆ
 = 
mö˙t
 + 
weight
*(
max˙t
-mincnt);

50  
UNROLL
 * (
vÆ
/UNROLL);

51 
	}
}

53 
	#SEED
 31415

	)

60 
	$föd_˝e_fuŒ
(
ñem_fun_t
 
f
, 
max˙t
, 
ßm∂es
, 
FILE
 *
d©a_fûe
,

61 
ßm∂e_t
 
smëhod
, 
büs
, 
vîbo£
)

63 
i
;

64 
˙t
;

65 
˝e
;

66 
ovîhód
 = 0;

67 *
˙t_vÆ
 = 
	`ˇŒoc
(
ßm∂es
, ());

68 *
cy˛e_vÆ
 = 
	`ˇŒoc
(
ßm∂es
, ());

71 
	`§™dom
(
SEED
);

72 
i
 = 0; i < 
ßm∂es
; i++) {

73 
˙t
 = 
	`gë_˙t
(
i
, 
ßm∂es
, 
max˙t
, 
smëhod
, 
büs
);

74 
˙t_vÆ
[
i
] = 
˙t
;

75 
cy˛e_vÆ
[
i
] = 
	`mósuª_fun˘i⁄
(
f
, 
˙t
);

76 i‡(
cy˛e_vÆ
[
i
] < 1.0) {

77 
	`Ârötf
(
°dîr
, "GŸ %.2‡cy˛e†f‹ cou¡ %ld\n", 
cy˛e_vÆ
[
i
], 
˙t
);

81 
˝e
 = 
	`ls_¶›e
(
˙t_vÆ
, 
cy˛e_vÆ
, 
ßm∂es
);

82 i‡(
d©a_fûe
)

83 
ovîhód
 = 
	`ls_öãr˚±
(
˙t_vÆ
, 
cy˛e_vÆ
, 
ßm∂es
);

84 i‡(
d©a_fûe
 && 
vîbo£
 > 1) {

86 
	`Ârötf
(
d©a_fûe
, "Cnt\t0");

87 
i
 = 0; i < 
ßm∂es
; i++)

88 
	`Ârötf
(
d©a_fûe
, "\t%.0f", 
˙t_vÆ
[
i
]);

89 
	`Ârötf
(
d©a_fûe
, "\n");

91 
	`Ârötf
(
d©a_fûe
, "Cycs.\t");

92 
i
 = 0; i < 
ßm∂es
; i++)

93 
	`Ârötf
(
d©a_fûe
, "\t%.2f", 
cy˛e_vÆ
[
i
]);

94 
	`Ârötf
(
d©a_fûe
, "\n");

96 
	`Ârötf
(
d©a_fûe
, "I¡îp.\t%.2f", 
ovîhód
);

97 
i
 = 0; i < 
ßm∂es
; i++)

98 
	`Ârötf
(
d©a_fûe
, "\t%.2f", 
˝e
*
˙t_vÆ
[
i
]+
ovîhód
);

99 
	`Ârötf
(
d©a_fûe
, "\n");

101 i‡(
d©a_fûe
 && 
vîbo£
) {

103 
	`Ârötf
(
d©a_fûe
, "cpe\t%.2f\tovhd\t%.2f\tavgerr\t\%.3f\tmaxerr\t\%.3f\n",

104 
˝e
, 
ovîhód
,

105 
	`ls_îr‹
(
˙t_vÆ
, 
cy˛e_vÆ
, 
ßm∂es
, 
LS_AVG
),

106 
	`ls_îr‹
(
˙t_vÆ
, 
cy˛e_vÆ
, 
ßm∂es
, 
LS_MAX
));

108 
	`‰ì
(
˙t_vÆ
);

109 
	`‰ì
(
cy˛e_vÆ
);

110  
˝e
;

111 
	}
}

114 
	$föd_˝e
(
ñem_fun_t
 
f
, 
max˙t
)

116  
	`föd_˝e_fuŒ
(
f
, 
max˙t
, 100, 
°dout
, 
RAN_SAMPLE
, 0.3, 0);

117 
	}
}

	@src/csapp.c

22 
	~"cßµ.h
"

29 
	$unix_îr‹
(*
msg
)

31 
	`Ârötf
(
°dîr
, "%s: %s\n", 
msg
, 
	`°ªº‹
(
î∫o
));

32 
	`exô
(0);

33 
	}
}

36 
	$posix_îr‹
(
code
, *
msg
)

38 
	`Ârötf
(
°dîr
, "%s: %s\n", 
msg
, 
	`°ªº‹
(
code
));

39 
	`exô
(0);

40 
	}
}

42 
	$gai_îr‹
(
code
, *
msg
)

44 
	`Ârötf
(
°dîr
, "%s: %s\n", 
msg
, 
	`gai_°ªº‹
(
code
));

45 
	`exô
(0);

46 
	}
}

48 
	$≠p_îr‹
(*
msg
)

50 
	`Ârötf
(
°dîr
, "%s\n", 
msg
);

51 
	`exô
(0);

52 
	}
}

55 
	$dns_îr‹
(*
msg
)

57 
	`Ârötf
(
°dîr
, "%s\n", 
msg
);

58 
	`exô
(0);

59 
	}
}

67 
pid_t
 
	$F‹k
()

69 
pid_t
 
pid
;

71 i‡((
pid
 = 
	`f‹k
()) < 0)

72 
	`unix_îr‹
("ForkÉrror");

73  
pid
;

74 
	}
}

77 
	$Execve
(c⁄° *
fûíame
, *c⁄° 
¨gv
[], *c⁄° 
ívp
[])

79 i‡(
	`execve
(
fûíame
, 
¨gv
, 
ívp
) < 0)

80 
	`unix_îr‹
("ExecveÉrror");

81 
	}
}

84 
pid_t
 
	$Waô
(*
°©us
)

86 
pid_t
 
pid
;

88 i‡((
pid
 = 
	`waô
(
°©us
)) < 0)

89 
	`unix_îr‹
("WaitÉrror");

90  
pid
;

91 
	}
}

94 
pid_t
 
	$Waôpid
(
pid_t
 
pid
, *
ùå
, 
›ti⁄s
)

96 
pid_t
 
ªçid
;

98 i‡((
ªçid
 = 
	`waôpid
(
pid
, 
ùå
, 
›ti⁄s
)) < 0)

99 
	`unix_îr‹
("WaitpidÉrror");

100 (
ªçid
);

101 
	}
}

104 
	$Kûl
(
pid_t
 
pid
, 
signum
)

106 
rc
;

108 i‡((
rc
 = 
	`kûl
(
pid
, 
signum
)) < 0)

109 
	`unix_îr‹
("KillÉrror");

110 
	}
}

113 
	$Pau£
()

115 ()
	`∑u£
();

117 
	}
}

119 
	$SÀï
(
£cs
)

121 
rc
;

123 i‡((
rc
 = 
	`¶ìp
(
£cs
)) < 0)

124 
	`unix_îr‹
("SleepÉrror");

125  
rc
;

126 
	}
}

128 
	$Aœrm
(
£c⁄ds
) {

129  
	`Æ¨m
(
£c⁄ds
);

130 
	}
}

132 
	$Sëpgid
(
pid_t
 
pid
,Öid_à
pgid
) {

133 
rc
;

135 i‡((
rc
 = 
	`£çgid
(
pid
, 
pgid
)) < 0)

136 
	`unix_îr‹
("SetpgidÉrror");

138 
	}
}

140 
pid_t
 
	$GëpgΩ
() {

141  
	`gëpgΩ
();

142 
	}
}

149 
h™dÀr_t
 *
	$Sig«l
(
signum
, 
h™dÀr_t
 *
h™dÀr
)

151 
siga˘i⁄
 
a˘i⁄
, 
ﬁd_a˘i⁄
;

153 
a˘i⁄
.
ß_h™dÀr
 = 
h™dÀr
;

154 
	`sigem±y£t
(&
a˘i⁄
.
ß_mask
);

155 
a˘i⁄
.
ß_Êags
 = 
SA_RESTART
;

157 i‡(
	`siga˘i⁄
(
signum
, &
a˘i⁄
, &
ﬁd_a˘i⁄
) < 0)

158 
	`unix_îr‹
("SignalÉrror");

159  (
ﬁd_a˘i⁄
.
ß_h™dÀr
);

160 
	}
}

163 
	$Sig¥ocmask
(
how
, c⁄° 
sig£t_t
 *
£t
, sig£t_à*
ﬁd£t
)

165 i‡(
	`sig¥ocmask
(
how
, 
£t
, 
ﬁd£t
) < 0)

166 
	`unix_îr‹
("SigprocmaskÉrror");

168 
	}
}

170 
	$Sigem±y£t
(
sig£t_t
 *
£t
)

172 i‡(
	`sigem±y£t
(
£t
) < 0)

173 
	`unix_îr‹
("SigemptysetÉrror");

175 
	}
}

177 
	$Sigfûl£t
(
sig£t_t
 *
£t
)

179 i‡(
	`sigfûl£t
(
£t
) < 0)

180 
	`unix_îr‹
("SigfillsetÉrror");

182 
	}
}

184 
	$Sigadd£t
(
sig£t_t
 *
£t
, 
signum
)

186 i‡(
	`sigadd£t
(
£t
, 
signum
) < 0)

187 
	`unix_îr‹
("SigaddsetÉrror");

189 
	}
}

191 
	$Sigdñ£t
(
sig£t_t
 *
£t
, 
signum
)

193 i‡(
	`sigdñ£t
(
£t
, 
signum
) < 0)

194 
	`unix_îr‹
("SigdelsetÉrror");

196 
	}
}

198 
	$Sigismembî
(c⁄° 
sig£t_t
 *
£t
, 
signum
)

200 
rc
;

201 i‡((
rc
 = 
	`sigismembî
(
£t
, 
signum
)) < 0)

202 
	`unix_îr‹
("SigismemberÉrror");

203  
rc
;

204 
	}
}

206 
	$Sigsu•íd
(c⁄° 
sig£t_t
 *
£t
)

208 
rc
 = 
	`sigsu•íd
(
£t
);

209 i‡(
î∫o
 !
EINTR
)

210 
	`unix_îr‹
("SigsuspendÉrror");

211  
rc
;

212 
	}
}

223 
	$sio_ªvî£
(
s
[])

225 
c
, 
i
, 
j
;

227 
i
 = 0, 
j
 = 
	`°æí
(
s
)-1; i < j; i++, j--) {

228 
c
 = 
s
[
i
];

229 
s
[
i
] = s[
j
];

230 
s
[
j
] = 
c
;

232 
	}
}

235 
	$sio_…ﬂ
(
v
, 
s
[], 
b
)

237 
c
, 
i
 = 0;

240 
s
[
i
++] = ((
c
 = (
v
 % 
b
)) < 10) ? c + '0' : c - 10 + 'a';

241 } (
v
 /
b
) > 0);

242 
s
[
i
] = '\0';

243 
	`sio_ªvî£
(
s
);

244 
	}
}

247 
size_t
 
	$sio_°æí
(
s
[])

249 
i
 = 0;

251 
s
[
i
] != '\0')

252 ++
i
;

253  
i
;

254 
	}
}

260 
ssize_t
 
	$sio_puts
(
s
[])

262  
	`wrôe
(
STDOUT_FILENO
, 
s
, 
	`sio_°æí
(s));

263 
	}
}

265 
ssize_t
 
	$sio_pué
(
v
)

267 
s
[128];

269 
	`sio_…ﬂ
(
v
, 
s
, 10);

270  
	`sio_puts
(
s
);

271 
	}
}

273 
	$sio_îr‹
(
s
[])

275 
	`sio_puts
(
s
);

276 
	`_exô
(1);

277 
	}
}

283 
ssize_t
 
	$Sio_pué
(
v
)

285 
ssize_t
 
n
;

287 i‡((
n
 = 
	`sio_pué
(
v
)) < 0)

288 
	`sio_îr‹
("Sio_putlÉrror");

289  
n
;

290 
	}
}

292 
ssize_t
 
	$Sio_puts
(
s
[])

294 
ssize_t
 
n
;

296 i‡((
n
 = 
	`sio_puts
(
s
)) < 0)

297 
	`sio_îr‹
("Sio_putsÉrror");

298  
n
;

299 
	}
}

301 
	$Sio_îr‹
(
s
[])

303 
	`sio_îr‹
(
s
);

304 
	}
}

310 
	$O≥n
(c⁄° *
∑th«me
, 
Êags
, 
mode_t
 
mode
)

312 
rc
;

314 i‡((
rc
 = 
	`›í
(
∑th«me
, 
Êags
, 
mode
)) < 0)

315 
	`unix_îr‹
("OpenÉrror");

316  
rc
;

317 
	}
}

319 
ssize_t
 
	$Ród
(
fd
, *
buf
, 
size_t
 
cou¡
)

321 
ssize_t
 
rc
;

323 i‡((
rc
 = 
	`ªad
(
fd
, 
buf
, 
cou¡
)) < 0)

324 
	`unix_îr‹
("ReadÉrror");

325  
rc
;

326 
	}
}

328 
ssize_t
 
	$Wrôe
(
fd
, c⁄° *
buf
, 
size_t
 
cou¡
)

330 
ssize_t
 
rc
;

332 i‡((
rc
 = 
	`wrôe
(
fd
, 
buf
, 
cou¡
)) < 0)

333 
	`unix_îr‹
("WriteÉrror");

334  
rc
;

335 
	}
}

337 
off_t
 
	$L£ek
(
fûdes
, 
off_t
 
off£t
, 
whí˚
)

339 
off_t
 
rc
;

341 i‡((
rc
 = 
	`l£ek
(
fûdes
, 
off£t
, 
whí˚
)) < 0)

342 
	`unix_îr‹
("LseekÉrror");

343  
rc
;

344 
	}
}

346 
	$Clo£
(
fd
)

348 
rc
;

350 i‡((
rc
 = 
	`˛o£
(
fd
)) < 0)

351 
	`unix_îr‹
("CloseÉrror");

352 
	}
}

354 
	$Sñe˘
(
n
, 
fd_£t
 *
ªadfds
, fd_£à*
wrôefds
,

355 
fd_£t
 *
ex˚±fds
, 
timevÆ
 *
timeout
)

357 
rc
;

359 i‡((
rc
 = 
	`£À˘
(
n
, 
ªadfds
, 
wrôefds
, 
ex˚±fds
, 
timeout
)) < 0)

360 
	`unix_îr‹
("SelectÉrror");

361  
rc
;

362 
	}
}

364 
	$Dup2
(
fd1
, 
fd2
)

366 
rc
;

368 i‡((
rc
 = 
	`dup2
(
fd1
, 
fd2
)) < 0)

369 
	`unix_îr‹
("Dup2Érror");

370  
rc
;

371 
	}
}

373 
	$Sèt
(c⁄° *
fûíame
, 
°©
 *
buf
)

375 i‡(
	`°©
(
fûíame
, 
buf
) < 0)

376 
	`unix_îr‹
("StatÉrror");

377 
	}
}

379 
	$F°©
(
fd
, 
°©
 *
buf
)

381 i‡(
	`f°©
(
fd
, 
buf
) < 0)

382 
	`unix_îr‹
("FstatÉrror");

383 
	}
}

389 
DIR
 *
	$O≥ndú
(c⁄° *
«me
)

391 
DIR
 *
dúp
 = 
	`›ídú
(
«me
);

393 i‡(!
dúp
)

394 
	`unix_îr‹
("opendirÉrror");

395  
dúp
;

396 
	}
}

398 
dúít
 *
	$Róddú
(
DIR
 *
dúp
)

400 
dúít
 *
dï
;

402 
î∫o
 = 0;

403 
dï
 = 
	`ªaddú
(
dúp
);

404 i‡((
dï
 =
NULL
Ë&& (
î∫o
 != 0))

405 
	`unix_îr‹
("readdirÉrror");

406  
dï
;

407 
	}
}

409 
	$Clo£dú
(
DIR
 *
dúp
)

411 
rc
;

413 i‡((
rc
 = 
	`˛o£dú
(
dúp
)) < 0)

414 
	`unix_îr‹
("closedirÉrror");

415  
rc
;

416 
	}
}

421 *
	$Mm≠
(*
addr
, 
size_t
 
Àn
, 
¥Ÿ
, 
Êags
, 
fd
, 
off_t
 
off£t
)

423 *
±r
;

425 i‡((
±r
 = 
	`mm≠
(
addr
, 
Àn
, 
¥Ÿ
, 
Êags
, 
fd
, 
off£t
)) == ((*) -1))

426 
	`unix_îr‹
("mmapÉrror");

427 (
±r
);

428 
	}
}

430 
	$Munm≠
(*
°¨t
, 
size_t
 
Àngth
)

432 i‡(
	`munm≠
(
°¨t
, 
Àngth
) < 0)

433 
	`unix_îr‹
("munmapÉrror");

434 
	}
}

440 *
	$MÆloc
(
size_t
 
size
)

442 *
p
;

444 i‡((
p
 = 
	`mÆloc
(
size
)Ë=
NULL
)

445 
	`unix_îr‹
("MallocÉrror");

446  
p
;

447 
	}
}

449 *
	$RóŒoc
(*
±r
, 
size_t
 
size
)

451 *
p
;

453 i‡((
p
 = 
	`ªÆloc
(
±r
, 
size
)Ë=
NULL
)

454 
	`unix_îr‹
("ReallocÉrror");

455  
p
;

456 
	}
}

458 *
	$CÆloc
(
size_t
 
nmemb
, size_à
size
)

460 *
p
;

462 i‡((
p
 = 
	`ˇŒoc
(
nmemb
, 
size
)Ë=
NULL
)

463 
	`unix_îr‹
("CallocÉrror");

464  
p
;

465 
	}
}

467 
	$Fªe
(*
±r
)

469 
	`‰ì
(
±r
);

470 
	}
}

475 
	$F˛o£
(
FILE
 *
Â
)

477 i‡(
	`f˛o£
(
Â
) != 0)

478 
	`unix_îr‹
("FcloseÉrror");

479 
	}
}

481 
FILE
 *
	$Fd›í
(
fd
, c⁄° *
ty≥
)

483 
FILE
 *
Â
;

485 i‡((
Â
 = 
	`fd›í
(
fd
, 
ty≥
)Ë=
NULL
)

486 
	`unix_îr‹
("FdopenÉrror");

488  
Â
;

489 
	}
}

491 *
	$Fgës
(*
±r
, 
n
, 
FILE
 *
°ªam
)

493 *
Ωå
;

495 i‡(((
Ωå
 = 
	`fgës
(
±r
, 
n
, 
°ªam
)Ë=
NULL
Ë&& 
	`„º‹
(stream))

496 
	`≠p_îr‹
("FgetsÉrror");

498  
Ωå
;

499 
	}
}

501 
FILE
 *
	$F›í
(c⁄° *
fûíame
, c⁄° *
mode
)

503 
FILE
 *
Â
;

505 i‡((
Â
 = 
	`f›í
(
fûíame
, 
mode
)Ë=
NULL
)

506 
	`unix_îr‹
("FopenÉrror");

508  
Â
;

509 
	}
}

511 
	$Fputs
(c⁄° *
±r
, 
FILE
 *
°ªam
)

513 i‡(
	`Âuts
(
±r
, 
°ªam
Ë=
EOF
)

514 
	`unix_îr‹
("FputsÉrror");

515 
	}
}

517 
size_t
 
	$Fªad
(*
±r
, 
size_t
 
size
, size_à
nmemb
, 
FILE
 *
°ªam
)

519 
size_t
 
n
;

521 i‡(((
n
 = 
	`‰ód
(
±r
, 
size
, 
nmemb
, 
°ªam
)Ë<ÇmembË&& 
	`„º‹
(stream))

522 
	`unix_îr‹
("FreadÉrror");

523  
n
;

524 
	}
}

526 
	$Fwrôe
(c⁄° *
±r
, 
size_t
 
size
, size_à
nmemb
, 
FILE
 *
°ªam
)

528 i‡(
	`fwrôe
(
±r
, 
size
, 
nmemb
, 
°ªam
) <Çmemb)

529 
	`unix_îr‹
("FwriteÉrror");

530 
	}
}

537 
	$Sockë
(
domaö
, 
ty≥
, 
¥Ÿocﬁ
)

539 
rc
;

541 i‡((
rc
 = 
	`sockë
(
domaö
, 
ty≥
, 
¥Ÿocﬁ
)) < 0)

542 
	`unix_îr‹
("SocketÉrror");

543  
rc
;

544 
	}
}

546 
	$Sësock›t
(
s
, 
Àvñ
, 
›äame
, c⁄° *
›tvÆ
, 
›éí
)

548 
rc
;

550 i‡((
rc
 = 
	`£tsock›t
(
s
, 
Àvñ
, 
›äame
, 
›tvÆ
, 
›éí
)) < 0)

551 
	`unix_îr‹
("SetsockoptÉrror");

552 
	}
}

554 
	$Böd
(
sockfd
, 
sockaddr
 *
my_addr
, 
addæí
)

556 
rc
;

558 i‡((
rc
 = 
	`böd
(
sockfd
, 
my_addr
, 
addæí
)) < 0)

559 
	`unix_îr‹
("BindÉrror");

560 
	}
}

562 
	$Li°í
(
s
, 
backlog
)

564 
rc
;

566 i‡((
rc
 = 
	`li°í
(
s
, 
backlog
)) < 0)

567 
	`unix_îr‹
("ListenÉrror");

568 
	}
}

570 
	$Ac˚±
(
s
, 
sockaddr
 *
addr
, 
sockÀn_t
 *
addæí
)

572 
rc
;

574 i‡((
rc
 = 
	`ac˚±
(
s
, 
addr
, 
addæí
)) < 0)

575 
	`unix_îr‹
("AcceptÉrror");

576  
rc
;

577 
	}
}

579 
	$C⁄√˘
(
sockfd
, 
sockaddr
 *
£rv_addr
, 
addæí
)

581 
rc
;

583 i‡((
rc
 = 
	`c⁄√˘
(
sockfd
, 
£rv_addr
, 
addæí
)) < 0)

584 
	`unix_îr‹
("ConnectÉrror");

585 
	}
}

591 
	$Gëaddröfo
(c⁄° *
node
, c⁄° *
£rvi˚
,

592 c⁄° 
addröfo
 *
höts
, addröfÿ**
ªs
)

594 
rc
;

596 i‡((
rc
 = 
	`gëaddröfo
(
node
, 
£rvi˚
, 
höts
, 
ªs
)) != 0)

597 
	`gai_îr‹
(
rc
, "GetaddrinfoÉrror");

598 
	}
}

601 
	$Gë«meöfo
(c⁄° 
sockaddr
 *
ß
, 
sockÀn_t
 
ßÀn
, *
ho°
,

602 
size_t
 
ho°Àn
, *
£rv
, size_à
£rvÀn
, 
Êags
)

604 
rc
;

606 i‡((
rc
 = 
	`gë«meöfo
(
ß
, 
ßÀn
, 
ho°
, 
ho°Àn
, 
£rv
,

607 
£rvÀn
, 
Êags
)) != 0)

608 
	`gai_îr‹
(
rc
, "GetnameinfoÉrror");

609 
	}
}

611 
	$Fªóddröfo
(
addröfo
 *
ªs
)

613 
	`‰ìaddröfo
(
ªs
);

614 
	}
}

616 
	$I√t_¡›
(
af
, c⁄° *
§c
, *
d°
, 
sockÀn_t
 
size
)

618 i‡(!
	`öë_¡›
(
af
, 
§c
, 
d°
, 
size
))

619 
	`unix_îr‹
("Inet_ntopÉrror");

620 
	}
}

622 
	$I√t_±⁄
(
af
, c⁄° *
§c
, *
d°
)

624 
rc
;

626 
rc
 = 
	`öë_±⁄
(
af
, 
§c
, 
d°
);

627 i‡(
rc
 == 0)

628 
	`≠p_îr‹
("inet_ptonÉrror: invalid dotted-decimaláddress");

629 i‡(
rc
 < 0)

630 
	`unix_îr‹
("Inet_ptonÉrror");

631 
	}
}

641 
ho°ít
 *
	$Gëho°by«me
(c⁄° *
«me
)

643 
ho°ít
 *
p
;

645 i‡((
p
 = 
	`gëho°by«me
(
«me
)Ë=
NULL
)

646 
	`dns_îr‹
("GethostbynameÉrror");

647  
p
;

648 
	}
}

651 
ho°ít
 *
	$Gëho°byaddr
(c⁄° *
addr
, 
Àn
, 
ty≥
)

653 
ho°ít
 *
p
;

655 i‡((
p
 = 
	`gëho°byaddr
(
addr
, 
Àn
, 
ty≥
)Ë=
NULL
)

656 
	`dns_îr‹
("GethostbyaddrÉrror");

657  
p
;

658 
	}
}

664 
	$Pthªad_¸óã
(
±hªad_t
 *
tidp
, 
±hªad_©å_t
 *
©åp
,

665 * (*
routöe
)(*), *
¨gp
)

667 
rc
;

669 i‡((
rc
 = 
	`±hªad_¸óã
(
tidp
, 
©åp
, 
routöe
, 
¨gp
)) != 0)

670 
	`posix_îr‹
(
rc
, "Pthread_createÉrror");

671 
	}
}

673 
	$Pthªad_ˇn˚l
(
±hªad_t
 
tid
) {

674 
rc
;

676 i‡((
rc
 = 
	`±hªad_ˇn˚l
(
tid
)) != 0)

677 
	`posix_îr‹
(
rc
, "Pthread_cancelÉrror");

678 
	}
}

680 
	$Pthªad_joö
(
±hªad_t
 
tid
, **
thªad_ªtu∫
) {

681 
rc
;

683 i‡((
rc
 = 
	`±hªad_joö
(
tid
, 
thªad_ªtu∫
)) != 0)

684 
	`posix_îr‹
(
rc
, "Pthread_joinÉrror");

685 
	}
}

688 
	$Pthªad_dëach
(
±hªad_t
 
tid
) {

689 
rc
;

691 i‡((
rc
 = 
	`±hªad_dëach
(
tid
)) != 0)

692 
	`posix_îr‹
(
rc
, "Pthread_detachÉrror");

693 
	}
}

696 
	$Pthªad_exô
(*
ªtvÆ
) {

697 
	`±hªad_exô
(
ªtvÆ
);

698 
	}
}

700 
±hªad_t
 
	$Pthªad_£lf
() {

701  
	`±hªad_£lf
();

702 
	}
}

704 
	$Pthªad_⁄˚
(
±hªad_⁄˚_t
 *
⁄˚_c⁄åﬁ
, (*
öô_fun˘i⁄
)()) {

705 
	`±hªad_⁄˚
(
⁄˚_c⁄åﬁ
, 
öô_fun˘i⁄
);

706 
	}
}

712 
	$Sem_öô
(
£m_t
 *
£m
, 
psh¨ed
, 
vÆue
)

714 i‡(
	`£m_öô
(
£m
, 
psh¨ed
, 
vÆue
) < 0)

715 
	`unix_îr‹
("Sem_initÉrror");

716 
	}
}

718 
	$P
(
£m_t
 *
£m
)

720 i‡(
	`£m_waô
(
£m
) < 0)

721 
	`unix_îr‹
("PÉrror");

722 
	}
}

724 
	$V
(
£m_t
 *
£m
)

726 i‡(
	`£m_po°
(
£m
) < 0)

727 
	`unix_îr‹
("VÉrror");

728 
	}
}

738 
ssize_t
 
	$rio_ªadn
(
fd
, *
u§buf
, 
size_t
 
n
)

740 
size_t
 
∆e·
 = 
n
;

741 
ssize_t
 
ƒód
;

742 *
buÂ
 = 
u§buf
;

744 
∆e·
 > 0) {

745 i‡((
ƒód
 = 
	`ªad
(
fd
, 
buÂ
, 
∆e·
)) < 0) {

746 i‡(
î∫o
 =
EINTR
)

747 
ƒód
 = 0;

751 i‡(
ƒód
 == 0)

753 
∆e·
 -
ƒód
;

754 
buÂ
 +
ƒód
;

756  (
n
 - 
∆e·
);

757 
	}
}

764 
ssize_t
 
	$rio_wrôí
(
fd
, *
u§buf
, 
size_t
 
n
)

766 
size_t
 
∆e·
 = 
n
;

767 
ssize_t
 
nwrôãn
;

768 *
buÂ
 = 
u§buf
;

770 
∆e·
 > 0) {

771 i‡((
nwrôãn
 = 
	`wrôe
(
fd
, 
buÂ
, 
∆e·
)) <= 0) {

772 i‡(
î∫o
 =
EINTR
)

773 
nwrôãn
 = 0;

777 
∆e·
 -
nwrôãn
;

778 
buÂ
 +
nwrôãn
;

780  
n
;

781 
	}
}

794 
ssize_t
 
	$rio_ªad
(
rio_t
 *
Ω
, *
u§buf
, 
size_t
 
n
)

796 
˙t
;

798 
Ω
->
rio_˙t
 <= 0) {

799 
Ω
->
rio_˙t
 = 
	`ªad
‘p->
rio_fd
,Ñp->
rio_buf
,

800 (
Ω
->
rio_buf
));

801 i‡(
Ω
->
rio_˙t
 < 0) {

802 i‡(
î∫o
 !
EINTR
)

805 i‡(
Ω
->
rio_˙t
 == 0)

808 
Ω
->
rio_buÂå
 =Ñp->
rio_buf
;

812 
˙t
 = 
n
;

813 i‡(
Ω
->
rio_˙t
 < 
n
)

814 
˙t
 = 
Ω
->
rio_˙t
;

815 
	`mem˝y
(
u§buf
, 
Ω
->
rio_buÂå
, 
˙t
);

816 
Ω
->
rio_buÂå
 +
˙t
;

817 
Ω
->
rio_˙t
 -
˙t
;

818  
˙t
;

819 
	}
}

826 
	$rio_ªadöôb
(
rio_t
 *
Ω
, 
fd
)

828 
Ω
->
rio_fd
 = 
fd
;

829 
Ω
->
rio_˙t
 = 0;

830 
Ω
->
rio_buÂå
 =Ñp->
rio_buf
;

831 
	}
}

838 
ssize_t
 
	$rio_ªadnb
(
rio_t
 *
Ω
, *
u§buf
, 
size_t
 
n
)

840 
size_t
 
∆e·
 = 
n
;

841 
ssize_t
 
ƒód
;

842 *
buÂ
 = 
u§buf
;

844 
∆e·
 > 0) {

845 i‡((
ƒód
 = 
	`rio_ªad
(
Ω
, 
buÂ
, 
∆e·
)) < 0)

847 i‡(
ƒód
 == 0)

849 
∆e·
 -
ƒód
;

850 
buÂ
 +
ƒód
;

852  (
n
 - 
∆e·
);

853 
	}
}

860 
ssize_t
 
	$rio_ªadlöeb
(
rio_t
 *
Ω
, *
u§buf
, 
size_t
 
maxÀn
)

862 
n
, 
rc
;

863 
c
, *
buÂ
 = 
u§buf
;

865 
n
 = 1;Ç < 
maxÀn
;Ç++) {

866 i‡((
rc
 = 
	`rio_ªad
(
Ω
, &
c
, 1)) == 1) {

867 *
buÂ
++ = 
c
;

868 i‡(
c
 == '\n') {

869 
n
++;

872 } i‡(
rc
 == 0) {

873 i‡(
n
 == 1)

880 *
buÂ
 = 0;

881  
n
-1;

882 
	}
}

888 
ssize_t
 
	$Rio_ªadn
(
fd
, *
±r
, 
size_t
 
nbyãs
)

890 
ssize_t
 
n
;

892 i‡((
n
 = 
	`rio_ªadn
(
fd
, 
±r
, 
nbyãs
)) < 0)

893 
	`unix_îr‹
("Rio_readnÉrror");

894  
n
;

895 
	}
}

897 
	$Rio_wrôí
(
fd
, *
u§buf
, 
size_t
 
n
)

899 i‡(
	`rio_wrôí
(
fd
, 
u§buf
, 
n
) !=Ç)

900 
	`unix_îr‹
("Rio_writenÉrror");

901 
	}
}

903 
	$Rio_ªadöôb
(
rio_t
 *
Ω
, 
fd
)

905 
	`rio_ªadöôb
(
Ω
, 
fd
);

906 
	}
}

908 
ssize_t
 
	$Rio_ªadnb
(
rio_t
 *
Ω
, *
u§buf
, 
size_t
 
n
)

910 
ssize_t
 
rc
;

912 i‡((
rc
 = 
	`rio_ªadnb
(
Ω
, 
u§buf
, 
n
)) < 0)

913 
	`unix_îr‹
("Rio_readnbÉrror");

914  
rc
;

915 
	}
}

917 
ssize_t
 
	$Rio_ªadlöeb
(
rio_t
 *
Ω
, *
u§buf
, 
size_t
 
maxÀn
)

919 
ssize_t
 
rc
;

921 i‡((
rc
 = 
	`rio_ªadlöeb
(
Ω
, 
u§buf
, 
maxÀn
)) < 0)

922 
	`unix_îr‹
("Rio_readlinebÉrror");

923  
rc
;

924 
	}
}

939 
	$›í_˛õ¡fd
(*
ho°«me
, *
p‹t
) {

940 
˛õ¡fd
, 
rc
;

941 
addröfo
 
höts
, *
li°p
, *
p
;

944 
	`mem£t
(&
höts
, 0, (
addröfo
));

945 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

946 
höts
.
ai_Êags
 = 
AI_NUMERICSERV
;

947 
höts
.
ai_Êags
 |
AI_ADDRCONFIG
;

948 i‡((
rc
 = 
	`gëaddröfo
(
ho°«me
, 
p‹t
, &
höts
, &
li°p
)) != 0) {

949 
	`Ârötf
(
°dîr
, "gëaddröfÿÁûed (%s:%s): %s\n", 
ho°«me
, 
p‹t
, 
	`gai_°ªº‹
(
rc
));

954 
p
 = 
li°p
;Ö;Ö =Ö->
ai_√xt
) {

956 i‡((
˛õ¡fd
 = 
	`sockë
(
p
->
ai_Ámûy
,Ö->
ai_sockty≥
,Ö->
ai_¥Ÿocﬁ
)) < 0)

960 i‡(
	`c⁄√˘
(
˛õ¡fd
, 
p
->
ai_addr
,Ö->
ai_addæí
) != -1)

962 i‡(
	`˛o£
(
˛õ¡fd
) < 0) {

963 
	`Ârötf
(
°dîr
, "›í_˛õ¡fd: clo£ faûed: %s\n", 
	`°ªº‹
(
î∫o
));

969 
	`‰ìaddröfo
(
li°p
);

970 i‡(!
p
)

973  
˛õ¡fd
;

974 
	}
}

986 
	$›í_li°ífd
(*
p‹t
)

988 
addröfo
 
höts
, *
li°p
, *
p
;

989 
li°ífd
, 
rc
, 
›tvÆ
=1;

992 
	`mem£t
(&
höts
, 0, (
addröfo
));

993 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

994 
höts
.
ai_Êags
 = 
AI_PASSIVE
 | 
AI_ADDRCONFIG
;

995 
höts
.
ai_Êags
 |
AI_NUMERICSERV
;

996 i‡((
rc
 = 
	`gëaddröfo
(
NULL
, 
p‹t
, &
höts
, &
li°p
)) != 0) {

997 
	`Ârötf
(
°dîr
, "gëaddröfÿÁûed (p‹à%s): %s\n", 
p‹t
, 
	`gai_°ªº‹
(
rc
));

1002 
p
 = 
li°p
;Ö;Ö =Ö->
ai_√xt
) {

1004 i‡((
li°ífd
 = 
	`sockë
(
p
->
ai_Ámûy
,Ö->
ai_sockty≥
,Ö->
ai_¥Ÿocﬁ
)) < 0)

1008 
	`£tsock›t
(
li°ífd
, 
SOL_SOCKET
, 
SO_REUSEADDR
,

1009 (c⁄° *)&
›tvÆ
 , ());

1012 i‡(
	`böd
(
li°ífd
, 
p
->
ai_addr
,Ö->
ai_addæí
) == 0)

1014 i‡(
	`˛o£
(
li°ífd
) < 0) {

1015 
	`Ârötf
(
°dîr
, "›í_li°ífd clo£ faûed: %s\n", 
	`°ªº‹
(
î∫o
));

1022 
	`‰ìaddröfo
(
li°p
);

1023 i‡(!
p
)

1027 i‡(
	`li°í
(
li°ífd
, 
LISTENQ
) < 0) {

1028 
	`˛o£
(
li°ífd
);

1031  
li°ífd
;

1032 
	}
}

1038 
	$O≥n_˛õ¡fd
(*
ho°«me
, *
p‹t
)

1040 
rc
;

1042 i‡((
rc
 = 
	`›í_˛õ¡fd
(
ho°«me
, 
p‹t
)) < 0)

1043 
	`unix_îr‹
("Open_clientfdÉrror");

1044  
rc
;

1045 
	}
}

1047 
	$O≥n_li°ífd
(*
p‹t
)

1049 
rc
;

1051 i‡((
rc
 = 
	`›í_li°ífd
(
p‹t
)) < 0)

1052 
	`unix_îr‹
("Open_listenfdÉrror");

1053  
rc
;

1054 
	}
}

	@src/fcyc.c

2 
	~<°dlib.h
>

3 
	~<sys/times.h
>

4 
	~<°dio.h
>

6 
	~"˛ock.h
"

7 
	~"fcyc.h
"

9 
	#K
 3

	)

10 
	#MAXSAMPLES
 20

	)

11 
	#EPSILON
 0.01

	)

12 
	#COMPENSATE
 0

	)

13 
	#CLEAR_CACHE
 0

	)

14 
	#CACHE_BYTES
 (1<<19)

	)

15 
	#CACHE_BLOCK
 32

	)

17 
	gkbe°
 = 
K
;

18 
	gcom≥nßã
 = 
COMPENSATE
;

19 
	g˛ór_ˇche
 = 
CLEAR_CACHE
;

20 
	gmaxßm∂es
 = 
MAXSAMPLES
;

21 
	gïsû⁄
 = 
EPSILON
;

22 
	gˇche_byãs
 = 
CACHE_BYTES
;

23 
	gˇche_block
 = 
CACHE_BLOCK
;

25 *
	gˇche_buf
 = 
NULL
;

27 *
	gvÆues
 = 
NULL
;

28 
	gßm∂ecou¡
 = 0;

30 
	#KEEP_VALS
 0

	)

31 
	#KEEP_SAMPLES
 0

	)

33 #i‡
KEEP_SAMPLES


34 *
	gßm∂es
 = 
NULL
;

38 
	$öô_ßm∂î
()

40 i‡(
vÆues
)

41 
	`‰ì
(
vÆues
);

42 
vÆues
 = 
	`ˇŒoc
(
kbe°
, ());

43 #i‡
KEEP_SAMPLES


44 i‡(
ßm∂es
)

45 
	`‰ì
(
ßm∂es
);

47 
ßm∂es
 = 
	`ˇŒoc
(
maxßm∂es
+
kbe°
, ());

49 
ßm∂ecou¡
 = 0;

50 
	}
}

53 
	$add_ßm∂e
(
vÆ
)

55 
pos
 = 0;

56 i‡(
ßm∂ecou¡
 < 
kbe°
) {

57 
pos
 = 
ßm∂ecou¡
;

58 
vÆues
[
pos
] = 
vÆ
;

59 } i‡(
vÆ
 < 
vÆues
[
kbe°
-1]) {

60 
pos
 = 
kbe°
-1;

61 
vÆues
[
pos
] = 
vÆ
;

63 #i‡
KEEP_SAMPLES


64 
ßm∂es
[
ßm∂ecou¡
] = 
vÆ
;

66 
ßm∂ecou¡
++;

68 
pos
 > 0 && 
vÆues
[pos-1] > values[pos]) {

69 
ãmp
 = 
vÆues
[
pos
-1];

70 
vÆues
[
pos
-1] = values[pos];

71 
vÆues
[
pos
] = 
ãmp
;

72 
pos
--;

74 
	}
}

77 
	$has_c⁄vîged
()

80 (
ßm∂ecou¡
 >
kbe°
) &&

81 ((1 + 
ïsû⁄
)*
vÆues
[0] >vÆues[
kbe°
-1]);

82 
	}
}

87 vﬁ©ûê
	gsök
 = 0;

89 
	$˛ór
()

91 
x
 = 
sök
;

92 *
˝å
, *
˚nd
;

93 
ö¸
 = 
ˇche_block
/();

94 i‡(!
ˇche_buf
) {

95 
ˇche_buf
 = 
	`mÆloc
(
ˇche_byãs
);

96 i‡(!
ˇche_buf
) {

97 
	`Ârötf
(
°dîr
, "FatalÉrror. MallocÑeturnedÇull whenÅryingÅo clear cache\n");

98 
	`exô
(1);

101 
˝å
 = (*Ë
ˇche_buf
;

102 
˚nd
 = 
˝å
 + 
ˇche_byãs
/();

103 
˝å
 < 
˚nd
) {

104 
x
 +*
˝å
;

105 
˝å
 +
ö¸
;

107 
sök
 = 
x
;

108 
	}
}

110 
	$fcyc
(
ã°_fun˘
 
f
, *
∑øms
)

112 
ªsu…
;

113 
	`öô_ßm∂î
();

114 i‡(
com≥nßã
) {

116 
cyc
;

117 i‡(
˛ór_ˇche
)

118 
	`˛ór
();

119 
	`°¨t_cou¡î
();

120 
	`f
(
∑øms
);

121 
cyc
 = 
	`gë_cou¡î
();

122 i‡(
cyc
 > 0.0)

123 
	`add_ßm∂e
(
cyc
);

124 } !
	`has_c⁄vîged
(Ë&& 
ßm∂ecou¡
 < 
maxßm∂es
);

127 
cyc
;

128 i‡(
˛ór_ˇche
)

129 
	`˛ór
();

130 
	`°¨t_cou¡î
();

131 
	`f
(
∑øms
);

132 
cyc
 = 
	`gë_cou¡î
();

133 i‡(
cyc
 > 0.0)

134 
	`add_ßm∂e
(
cyc
);

135 } !
	`has_c⁄vîged
(Ë&& 
ßm∂ecou¡
 < 
maxßm∂es
);

137 #ifde‡
DEBUG


139 
i
;

140 
	`¥ötf
(" %ld smÆÀ° vÆues: [", 
kbe°
);

141 
i
 = 0; i < 
kbe°
; i++)

142 
	`¥ötf
("%.0f%s", 
vÆues
[
i
], i==
kbe°
-1 ? "]\n" : ", ");

145 
ªsu…
 = 
vÆues
[0];

146 #i‡!
KEEP_VALS


147 
	`‰ì
(
vÆues
);

148 
vÆues
 = 
NULL
;

150  
ªsu…
;

151 
	}
}

161 
	$£t_fcyc_˛ór_ˇche
(
˛ór
)

163 
˛ór_ˇche
 = 
˛ór
;

164 
	}
}

169 
	$£t_fcyc_ˇche_sizì
(
byãs
)

171 i‡(
byãs
 !
ˇche_byãs
) {

172 
ˇche_byãs
 = 
byãs
;

173 i‡(
ˇche_buf
) {

174 
	`‰ì
(
ˇche_buf
);

175 
ˇche_buf
 = 
NULL
;

178 
	}
}

183 
	$£t_fcyc_ˇche_block
(
byãs
) {

184 
ˇche_block
 = 
byãs
;

185 
	}
}

191 
	$£t_fcyc_com≥nßã
(
com≥nßã_¨g
)

193 
com≥nßã
 = 
com≥nßã_¨g
;

194 
	}
}

199 
	$£t_fcyc_k
(
k
)

201 
kbe°
 = 
k
;

202 
	}
}

208 
	$£t_fcyc_maxßm∂es
(
maxßm∂es_¨g
)

210 
maxßm∂es
 = 
maxßm∂es_¨g
;

211 
	}
}

216 
	$£t_fcyc_ïsû⁄
(
ïsû⁄_¨g
)

218 
ïsû⁄
 = 
ïsû⁄_¨g
;

219 
	}
}

	@src/lsquare.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~"lsqu¨e.h
"

7 
	msum_x
;

8 
	msum_y
;

9 
	msum_xx
;

10 
	msum_xy
;

11 } 
	tls_°©_t
;

14 
	$ls_°©s
(*
xvÆ
, *
yvÆ
, 
˙t
, 
ls_°©_t
 *
°©p
)

16 
i
;

17 
°©p
->
sum_x
 = 0.0;

18 
°©p
->
sum_y
 = 0.0;

19 
°©p
->
sum_xx
 = 0.0;

20 
°©p
->
sum_xy
 = 0.0;

21 
i
 = 0; i < 
˙t
; i++) {

22 
x
 = 
xvÆ
[
i
];

23 
y
 = 
yvÆ
[
i
];

24 
°©p
->
sum_x
 +
x
;

25 
°©p
->
sum_y
 +
y
;

26 
°©p
->
sum_xx
 +
x
 * x;

27 
°©p
->
sum_xy
 +
x
 * 
y
;

29 
	}
}

31 
	$ls_¶›e
(*
xvÆ
, *
yvÆ
, 
˙t
)

33 
¶›e
;

34 
ls_°©_t
 
°©
;

35 
	`ls_°©s
(
xvÆ
, 
yvÆ
, 
˙t
, &
°©
);

36 
¶›e
 = (
˙t
 * 
°©
.
sum_xy
 - sèt.
sum_x
 * sèt.
sum_y
)/

37 (
˙t
 * 
°©
.
sum_xx
 - sèt.
sum_x
*stat.sum_x);

38  
¶›e
;

39 
	}
}

41 
	$ls_öãr˚±
(*
xvÆ
, *
yvÆ
, 
˙t
)

43 
öãr˚±
;

44 
ls_°©_t
 
°©
;

45 
	`ls_°©s
(
xvÆ
, 
yvÆ
, 
˙t
, &
°©
);

46 
öãr˚±
 = (
°©
.
sum_xx
 * sèt.
sum_y
 - sèt.
sum_xy
 * sèt.
sum_x
)/

47 (
˙t
 * 
°©
.
sum_xx
 - sèt.
sum_x
*stat.sum_x);

48  
öãr˚±
;

49 
	}
}

51 
	$ªl_îr
(
x
, 
y
, 
¶›e
, 
öãr˚±
)

53 
¥ed_y
 = 
¶›e
*
x
 + 
öãr˚±
;

54 
off£t
 = 
y
 - 
¥ed_y
;

55 i‡(
off£t
 < 0)

56 
off£t
 = -offset;

57 i‡(
¥ed_y
 == 0)

58  
off£t
;

59  
off£t
/
¥ed_y
;

60 
	}
}

62 
	$ls_îr‹
(*
xvÆ
, *
yvÆ
, 
˙t
, 
ls_îr_t
 
ëy≥
)

64 
¶›e
;

65 
öãr˚±
;

66 
ls_°©_t
 
°©
;

67 
i
;

68 
num
, 
díom
;

69 
	`ls_°©s
(
xvÆ
, 
yvÆ
, 
˙t
, &
°©
);

70 
¶›e
 = (
˙t
 * 
°©
.
sum_xy
 - sèt.
sum_x
 * sèt.
sum_y
)/

71 (
˙t
 * 
°©
.
sum_xx
 - sèt.
sum_x
*stat.sum_x);

72 
öãr˚±
 = (
°©
.
sum_xx
 * sèt.
sum_y
 - sèt.
sum_xy
 * sèt.
sum_x
)/

73 (
˙t
 * 
°©
.
sum_xx
 - sèt.
sum_x
*stat.sum_x);

74 
num
 = 
díom
 = 0;

75 
i
 = 0; i < 
˙t
; i++) {

76 
e
 = 
	`ªl_îr
(
xvÆ
[
i
], 
yvÆ
[i], 
¶›e
, 
öãr˚±
);

77 
ëy≥
) {

78 
LS_AVG
:

79 
num
 +
e
;

80 
díom
++;

82 
LS_MAX
:

83 i‡(
num
 < 
e
)

84 
num
 = 
e
;

85 
díom
 = 1;

88 
	`Ârötf
(
°dîr
, "InvÆidÉº‹Åy≥: %d\n", 
ëy≥
);

89 
	`exô
(1);

93  
num
/
díom
;

94 
	}
}

	@vm/dynamicsize.c

2 
	~"cßµ.h
"

4 
	$maö
()

6 *
¨øy
, 
i
, 
n
;

8 
	`sˇnf
("%d", &
n
);

9 
¨øy
 = (*)
	`MÆloc
(
n
 * ());

10 
i
 = 0; i < 
n
; i++)

11 
	`sˇnf
("%d", &
¨øy
[
i
]);

12 
	`‰ì
(
¨øy
);

13 
	`exô
(0);

14 
	}
}

	@vm/fragments.c

1 
	~"cßµ.h
"

3 
	$hópify
(**
böhóp
, 
size
, 
pos
)

5 
	}
}

7 
	$misc
()

9 *
buÂ
;

10 
size
=0;

13 
	`Execve
("a.out", 
NULL
, NULL);

18 
buÂ
 = 
	`Mm≠
(
NULL
, 
size
, 
PROT_READ
, 
MAP_PRIVATE
|
MAP_ANON
, 0, 0);

20 
	}
}

23 
	$g¨bage
()

25 *
p
 = (*)
	`MÆloc
(15213);

28 
	}
}

34 *
	$m©vec
(**
A
, *
x
, 
n
)

36 
i
, 
j
;

38 *
y
 = (*)
	`MÆloc
(
n
 * ());

40 
i
 = 0; i < 
n
; i++)

41 
j
 = 0; j < 
n
; j++)

42 
y
[
i
] +
A
[i][
j
] * 
x
[j];

43  
y
;

44 
	}
}

48 
	$bufovîÊow
()

50 
buf
[64];

52 
	`gës
(
buf
);

54 
	}
}

59 **
	$makeAºay1
(
n
, 
m
)

61 
i
;

62 **
A
 = (**)
	`MÆloc
(
n
 * ());

64 
i
 = 0; i < 
n
; i++)

65 
A
[
i
] = (*)
	`MÆloc
(
m
 * ());

66  
A
;

67 
	}
}

72 **
	$makeAºay2
(
n
, 
m
)

74 
i
;

75 **
A
 = (**)
	`MÆloc
(
n
 * (*));

77 
i
 = 0; i <
n
; i++)

78 
A
[
i
] = (*)
	`MÆloc
(
m
 * ());

79  
A
;

80 
	}
}

85 *
	$böhópDñëe
(**
böhóp
, *
size
)

87 *
∑ckë
 = 
böhóp
[0];

89 
böhóp
[0] = böhóp[*
size
 - 1];

90 *
size
--;

91 
	`hópify
(
böhóp
, *
size
, 0);

92 (
∑ckë
);

93 
	}
}

97 *
	$£¨ch
(*
p
, 
vÆ
)

99 *
p
 && *∞!
vÆ
)

100 
p
 += ();

101  
p
;

102 
	}
}

106 *
	$°ackªf
 ()

108 
vÆ
;

110  &
vÆ
;

111 
	}
}

116 *
	$hó¥ef
(
n
, 
m
)

118 
i
;

119 *
x
, *
y
;

121 
x
 = (*)
	`MÆloc
(
n
 * ());

125 
	`‰ì
(
x
);

127 
y
 = (*)
	`MÆloc
(
m
 * ());

128 
i
 = 0; i < 
m
; i++)

129 
y
[
i
] = 
x
[i]++;

131  
y
;

132 
	}
}

136 
	$Àak
(
n
)

138 *
x
 = (*)
	`MÆloc
(
n
 * ());

141 
	}
}

	@vm/malloc/clock.c

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<°rög.h
>

12 
	~<uni°d.h
>

13 
	~<sys/times.h
>

14 
	~"˛ock.h
"

25 #i‡
deföed
(
__i386__
Ë|| deföed(
__x86_64__
)

33 
	gcyc_hi
 = 0;

34 
	gcyc_lo
 = 0;

39 
	$ac˚ss_cou¡î
(*
hi
, *
lo
)

41 
	`asm
("rdtsc; movl %%edx,%0; movl %%eax,%1"

42 : "Ù" (*
hi
), "Ù" (*
lo
)

45 
	}
}

48 
	$°¨t_cou¡î
()

50 
	`ac˚ss_cou¡î
(&
cyc_hi
, &
cyc_lo
);

51 
	}
}

54 
	$gë_cou¡î
()

56 
ncyc_hi
, 
ncyc_lo
;

57 
hi
, 
lo
, 
b‹row
;

58 
ªsu…
;

61 
	`ac˚ss_cou¡î
(&
ncyc_hi
, &
ncyc_lo
);

64 
lo
 = 
ncyc_lo
 - 
cyc_lo
;

65 
b‹row
 = 
lo
 > 
ncyc_lo
;

66 
hi
 = 
ncyc_hi
 - 
cyc_hi
 - 
b‹row
;

67 
ªsu…
 = (Ë
hi
 * (1 << 30Ë* 4 + 
lo
;

68 i‡(
ªsu…
 < 0) {

69 
	`Ârötf
(
°dîr
, "Eº‹: cou¡îÑëu∫†√g vÆue: %.0f\n", 
ªsu…
);

71  
ªsu…
;

72 
	}
}

75 #ñi‡
deföed
(
__Æpha
)

82 
	gcyc_hi
 = 0;

83 
	gcyc_lo
 = 0;

102 
	gcou¡îRoutöe
[] =

110 (*
cou¡î
)()(*)
cou¡îRoutöe
;

113 
	$°¨t_cou¡î
()

116 
cyc_hi
 = 0;

117 
cyc_lo
 = 
	`cou¡î
();

118 
	}
}

120 
	$gë_cou¡î
()

122 
ncyc_hi
, 
ncyc_lo
;

123 
hi
, 
lo
, 
b‹row
;

124 
ªsu…
;

125 
ncyc_lo
 = 
	`cou¡î
();

126 
ncyc_hi
 = 0;

127 
lo
 = 
ncyc_lo
 - 
cyc_lo
;

128 
b‹row
 = 
lo
 > 
ncyc_lo
;

129 
hi
 = 
ncyc_hi
 - 
cyc_hi
 - 
b‹row
;

130 
ªsu…
 = (Ë
hi
 * (1 << 30Ë* 4 + 
lo
;

131 i‡(
ªsu…
 < 0) {

132 
	`Ârötf
(
°dîr
, "Eº‹: Cy˛êcou¡îÑëu∫ögÇeg©ivêvÆue: %.0f\n", 
ªsu…
);

134  
ªsu…
;

135 
	}
}

147 
	$°¨t_cou¡î
()

149 
	`¥ötf
("ERROR: YouáreÅryingÅo useá start_counterÑoutine in clock.c\n");

150 
	`¥ötf
("that hasÇot been implemented yet onÅhisÖlatform.\n");

151 
	`¥ötf
("Please chooseánotherÅimingÖackage in config.h.\n");

152 
	`exô
(1);

153 
	}
}

155 
	$gë_cou¡î
()

157 
	`¥ötf
("ERROR: YouáreÅryingÅo useá get_counterÑoutine in clock.c\n");

158 
	`¥ötf
("that hasÇot been implemented yet onÅhisÖlatform.\n");

159 
	`¥ötf
("Please chooseánotherÅimingÖackage in config.h.\n");

160 
	`exô
(1);

161 
	}
}

170 
	$ovhd
()

173 
i
;

174 
ªsu…
;

176 
i
 = 0; i < 2; i++) {

177 
	`°¨t_cou¡î
();

178 
ªsu…
 = 
	`gë_cou¡î
();

180  
ªsu…
;

181 
	}
}

185 
	$mhz_fuŒ
(
vîbo£
, 
¶ì±ime
)

187 
buf
[2048];

189 
FILE
 *
Â
 = 
	`f›í
("/proc/cpuinfo", "r");

190 
mhz
 = 0.0;

192 
	`fgës
(
buf
, 2048, 
Â
)) {

193 i‡(
	`°r°r
(
buf
, "cpu MHz")) {

194 
	`ssˇnf
(
buf
, "˝u MHz\t: %lf", &
mhz
);

198 
	`f˛o£
(
Â
);

199 i‡(
vîbo£
)

200 
	`¥ötf
("Pro˚ss‹ clockÑ©ê~%.1‡MHz\n", 
mhz
);

201  
mhz
;

204 
øã
;

206 
	`°¨t_cou¡î
();

207 
	`¶ìp
(
¶ì±ime
);

208 
øã
 = 
	`gë_cou¡î
(Ë/ (1e6*
¶ì±ime
);

209 i‡(
vîbo£
)

210 
	`¥ötf
("Pro˚ss‹ clockÑ©ê~%.1‡MHz\n", 
øã
);

211  
øã
;

213 
	}
}

217 
	$mhz
(
vîbo£
)

219  
	`mhz_fuŒ
(
vîbo£
, 2);

220 
	}
}

224 
	gcyc_≥r_tick
 = 0.0;

226 
	#NEVENT
 100

	)

227 
	#THRESHOLD
 1000

	)

228 
	#RECORDTHRESH
 3000

	)

231 
	$ˇŒibøã
(
vîbo£
)

233 
ﬁdt
;

234 
tms
 
t
;

235 
˛ock_t
 
ﬁdc
;

236 
e
 = 0;

238 
	`times
(&
t
);

239 
ﬁdc
 = 
t
.
tms_utime
;

240 
	`°¨t_cou¡î
();

241 
ﬁdt
 = 
	`gë_cou¡î
();

242 
e
 <
NEVENT
) {

243 
√wt
 = 
	`gë_cou¡î
();

245 i‡(
√wt
-
ﬁdt
 >
THRESHOLD
) {

246 
˛ock_t
 
√wc
;

247 
	`times
(&
t
);

248 
√wc
 = 
t
.
tms_utime
;

249 i‡(
√wc
 > 
ﬁdc
) {

250 
˝t
 = (
√wt
-
ﬁdt
)/(
√wc
-
ﬁdc
);

251 i‡((
cyc_≥r_tick
 =0.0 || cyc_≥r_tick > 
˝t
Ë&& c± > 
RECORDTHRESH
)

252 
cyc_≥r_tick
 = 
˝t
;

258 
e
++;

259 
ﬁdc
 = 
√wc
;

261 
ﬁdt
 = 
√wt
;

264 i‡(
vîbo£
)

265 
	`¥ötf
("Sëtög cyc_≥r_tickÅÿ%f\n", 
cyc_≥r_tick
);

266 
	}
}

268 
˛ock_t
 
	g°¨t_tick
 = 0;

270 
	$°¨t_comp_cou¡î
()

272 
tms
 
t
;

274 i‡(
cyc_≥r_tick
 == 0.0)

275 
	`ˇŒibøã
(0);

276 
	`times
(&
t
);

277 
°¨t_tick
 = 
t
.
tms_utime
;

278 
	`°¨t_cou¡î
();

279 
	}
}

281 
	$gë_comp_cou¡î
()

283 
time
 = 
	`gë_cou¡î
();

284 
˘ime
;

285 
tms
 
t
;

286 
˛ock_t
 
ticks
;

288 
	`times
(&
t
);

289 
ticks
 = 
t
.
tms_utime
 - 
°¨t_tick
;

290 
˘ime
 = 
time
 - 
ticks
*
cyc_≥r_tick
;

295  
˘ime
;

296 
	}
}

	@vm/malloc/clock.h

4 
°¨t_cou¡î
();

7 
gë_cou¡î
();

10 
ovhd
();

13 
mhz
(
vîbo£
);

16 
mhz_fuŒ
(
vîbo£
, 
¶ì±ime
);

20 
°¨t_comp_cou¡î
();

22 
gë_comp_cou¡î
();

	@vm/malloc/config.h

1 #i‚de‡
__CONFIG_H_


2 
	#__CONFIG_H_


	)

17 
	#SERVERHOST
 "ch¨.cm˛.cs"

	)

18 
	#SERVERPORT
 15213

	)

19 
	#COURSE
 "15213-f06"

	)

20 
	#LAB
 "mÆlo˛ab"

	)

26 
	#TRACEDIR
 "./åa˚s/"

	)

36 
	#DEFAULT_TRACEFILES
 \

49 "xãrm.ªp"

	)

55 
	#MAX_SPEED
 15000E3

	)

61 
	#MAX_SPACE
 0.93

	)

68 
	#UTIL_WEIGHT
 .60

	)

73 
	#ALIGNMENT
 8

	)

78 
	#MAX_HEAP
 (20*(1<<20)Ë

	)

83 
	#USE_FCYC
 1

	)

84 
	#USE_ITIMER
 0

	)

85 
	#USE_GETTOD
 0

	)

	@vm/malloc/driverhdrs.h

5 
	#LAB
 "mÆlo˛ab"

	)

6 
	#SERVER_NAME
 "autﬁab.cs.cmu.edu"

	)

7 
	#SERVER_PORT
 80

	)

8 
	#COURSE_NAME
 "15213-f06"

	)

9 
	#AUTOGRADE_TIMEOUT
 360

	)

	@vm/malloc/driverlib.c

11 
	~<°dio.h
>

12 
	~<°dlib.h
>

13 
	~<°rög.h
>

14 
	~<uni°d.h
>

15 
	~<î∫o.h
>

16 
	~<sys/ty≥s.h
>

17 
	~<sys/sockë.h
>

18 
	~<√tdb.h
>

19 
	~<√töë/ö.h
>

20 
	~<sig«l.h
>

22 
	~"drivîhdrs.h
"

23 
	~"drivîlib.h
"

33 
	$sigÆrm_h™dÀr
(
sig
) {

34 
	`Ârötf
(
°dîr
, "ProgømÅimed ouàa·î %d sec⁄ds\n", 
AUTOGRADE_TIMEOUT
);

35 
	`exô
(1);

36 
	}
}

41 
sockaddr
 
	tSA
;

42 
	$rio_ªadöôb
(
rio_t
 *
Ω
, 
fd
)

44 
Ω
->
rio_fd
 = 
fd
;

45 
Ω
->
rio_˙t
 = 0;

46 
Ω
->
rio_buÂå
 =Ñp->
rio_buf
;

47 
	}
}

58 
ssize_t
 
	$rio_ªad
(
rio_t
 *
Ω
, *
u§buf
, 
size_t
 
n
)

60 
˙t
;

62 
Ω
->
rio_˙t
 <= 0) {

63 
Ω
->
rio_˙t
 = 
	`ªad
‘p->
rio_fd
,Ñp->
rio_buf
,

64 (
Ω
->
rio_buf
));

65 i‡(
Ω
->
rio_˙t
 < 0) {

66 i‡(
î∫o
 !
EINTR
)

69 i‡(
Ω
->
rio_˙t
 == 0)

72 
Ω
->
rio_buÂå
 =Ñp->
rio_buf
;

76 
˙t
 = 
n
;

77 i‡(
Ω
->
rio_˙t
 < 
n
)

78 
˙t
 = 
Ω
->
rio_˙t
;

79 
	`mem˝y
(
u§buf
, 
Ω
->
rio_buÂå
, 
˙t
);

80 
Ω
->
rio_buÂå
 +
˙t
;

81 
Ω
->
rio_˙t
 -
˙t
;

82  
˙t
;

83 
	}
}

88 
ssize_t
 
	$rio_ªadlöeb
(
rio_t
 *
Ω
, *
u§buf
, 
size_t
 
maxÀn
)

90 
n
, 
rc
;

91 
c
, *
buÂ
 = 
u§buf
;

93 
n
 = 1;Ç < 
maxÀn
;Ç++) {

94 i‡((
rc
 = 
	`rio_ªad
(
Ω
, &
c
, 1)) == 1) {

95 *
buÂ
++ = 
c
;

96 i‡(
c
 == '\n')

98 } i‡(
rc
 == 0) {

99 i‡(
n
 == 1)

106 *
buÂ
 = 0;

107  
n
;

108 
	}
}

113 
ssize_t
 
	$rio_wrôí
(
fd
, *
u§buf
, 
size_t
 
n
)

115 
size_t
 
∆e·
 = 
n
;

116 
ssize_t
 
nwrôãn
;

117 *
buÂ
 = 
u§buf
;

119 
∆e·
 > 0) {

120 i‡((
nwrôãn
 = 
	`wrôe
(
fd
, 
buÂ
, 
∆e·
)) <= 0) {

121 i‡(
î∫o
 =
EINTR
)

122 
nwrôãn
 = 0;

126 
∆e·
 -
nwrôãn
;

127 
buÂ
 +
nwrôãn
;

129  
n
;

130 
	}
}

136 
	$uæícode
(*
§c
, *
d°
)

138 
Àn
 = 
	`°æí
((*)
§c
);

139 
buf
[8];

141  ; 
Àn
--; 
§c
++) {

142 i‡((*
§c
 == '*') || (*src == '-') ||

143 (*
§c
== '.') || (*src == '_') ||

144 (('0' <*
§c
) && (*src <= '9')) ||

145 (('A' <*
§c
) && (*src <= 'Z')) ||

146 (('a' <*
§c
) && (*src <= 'z'))) {

147 *
d°
++ = *
§c
;

149 i‡(*
§c
 == ' ') {

150 *
d°
++ = '+';

160 i‡(((*
§c
 > 31) && (*src < 128)) ||

161 (*
§c
 == '\t')) {

162 
	`•rötf
(
buf
, "%%%02X", *
§c
);

163 *
d°
++ = 
buf
[0];

164 *
d°
++ = 
buf
[1];

165 *
d°
++ = 
buf
[2];

173 
	}
}

179 
	$submôr
(*
ho°«me
,

180 
p‹t
,

181 *
cour£
,

182 *
u£rid
,

183 *
œb
,

184 *
ªsu…
,

185 *
°©us_msg
)

187 
˛õ¡fd
;

188 
ho°ít
 *
hp
;

189 
sockaddr_ö
 
£rvîaddr
;

191 
size_t
 
ªsu…_size
;

192 
size_t
 
ªq_size
;

193 
rio_t
 
rio
;

195 
buf
[
SUBMITR_MAXBUF
];

196 
íc_ªsu…
[
SUBMITR_MAXBUF
];

198 
vîsi⁄
[
SUBMITR_MAXBUF
];

199 
îrcode
=0;

200 
îrmsg
[
SUBMITR_MAXBUF
];

203 i‡((
˛õ¡fd
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0)) < 0) {

204 
	`°r˝y
(
°©us_msg
, "Error: Client unableÅo create socket");

209 i‡((
hp
 = 
	`gëho°by«me
(
ho°«me
)Ë=
NULL
) {

210 
	`°r˝y
(
°©us_msg
, "Error: DNS is unableÅoÑesolve Autolab serveráddress");

211 
	`˛o£
(
˛õ¡fd
);

214 
	`bzîo
((*Ë&
£rvîaddr
, (serveraddr));

215 
£rvîaddr
.
sö_Ámûy
 = 
AF_INET
;

216 
	`bc›y
((*)
hp
->
h_addr
,

217 (*)&
£rvîaddr
.
sö_addr
.
s_addr
, 
hp
->
h_Àngth
);

218 
£rvîaddr
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

221 i‡(
	`c⁄√˘
(
˛õ¡fd
, (
SA
 *Ë&
£rvîaddr
, (serveraddr)) < 0) {

222 
	`°r˝y
(
°©us_msg
, "Error: UnableÅo connectÅoÅhe Autolab server");

223 
	`˛o£
(
˛õ¡fd
);

234 
ªsu…_size
 = 
	`°æí
(
ªsu…
);

235 
ªq_size
 = 
	`°æí
(
cour£
Ë+ såÀn(
u£rid
) +

236 
	`°æí
(
œb
Ë+ 3*
ªsu…_size
 + 128;

237 i‡(
ªq_size
 > 
SUBMITR_MAXBUF
) {

238 
	`°r˝y
(
°©us_msg
, "Error: Result stringÅooÜarge. Increase SUBMITR_MAXBUF");

239 
	`˛o£
(
˛õ¡fd
);

244 
	`bzîo
((*)
íc_ªsu…
, 
SUBMITR_MAXBUF
);

245 i‡(
	`uæícode
((*)
ªsu…
, (*)
íc_ªsu…
) < 0) {

246 
	`°r˝y
(
°©us_msg
, "Error: Result string containsán illegal or unprintable character.");

247 
	`˛o£
(
˛õ¡fd
);

252 
	`•rötf
(
buf
, "GET /%s/submôr.∂/?u£rid=%s&œb=%s&ªsu…=%s&submô=submô HTTP/1.0\r\n\r\n", 
cour£
, 
u£rid
, 
œb
, 
íc_ªsu…
);

255 i‡(
	`rio_wrôí
(
˛õ¡fd
, 
buf
, 
	`°æí
(buf)) < 0) {

256 
	`°r˝y
(
°©us_msg
, "Error: Client unableÅo writeÅoÅhe Autolab server");

257 
	`˛o£
(
˛õ¡fd
);

262 
	`rio_ªadöôb
(&
rio
, 
˛õ¡fd
);

263 i‡(
	`rio_ªadlöeb
(&
rio
, 
buf
, 
SUBMITR_MAXBUF
) <= 0) {

264 
	`°r˝y
(
°©us_msg
, "Error: Client unableÅoÑead first header from Autolab server");

265 
	`˛o£
(
˛õ¡fd
);

268 
	`ssˇnf
(
buf
, "%†%d %[a-zA-z ]", 
vîsi⁄
, &
îrcode
, 
îrmsg
);

269 i‡(
îrcode
 != 200) {

270 
	`•rötf
(
°©us_msg
, "Error: HTTPÑequest failed withÉrror %d: %s",

271 
îrcode
, 
îrmsg
);

272 
	`˛o£
(
˛õ¡fd
);

277 
	`°rcmp
(
buf
, "\r\n")) {

278 i‡(
	`rio_ªadlöeb
(&
rio
, 
buf
, 
SUBMITR_MAXBUF
) <= 0) {

279 
	`°r˝y
(
°©us_msg
, "Error: Client unableÅoÑead headers from Autolab server");

280 
	`˛o£
(
˛õ¡fd
);

286 i‡(
	`rio_ªadlöeb
(&
rio
, 
buf
, 
SUBMITR_MAXBUF
) <= 0) {

287 
	`°r˝y
(
°©us_msg
, "Error: Client unableÅoÑead status message from Autolab server");

288 
	`˛o£
(
˛õ¡fd
);

293 
	`°r˝y
(
°©us_msg
, 
buf
);

294 
	`˛o£
(
˛õ¡fd
);

296 i‡(!
	`°rcmp
(
°©us_msg
, "OK"))

300 
	}
}

312 
	$öô_timeout
(
timeout
) {

313 i‡(
timeout
 == 0) {

316 i‡(
timeout
 < 0) {

317 
timeout
 = 
AUTOGRADE_TIMEOUT
;

319 
	`sig«l
(
SIGALRM
, 
sigÆrm_h™dÀr
);

320 
	`Æ¨m
(
timeout
);

321 
	}
}

326 
	$öô_drivî
(*
°©us_msg
)

328 
˛õ¡fd
;

329 
ho°ít
 *
hp
;

330 
sockaddr_ö
 
£rvîaddr
;

332 *
ho°«me
 = 
SERVER_NAME
;

333 
p‹t
 = 
SERVER_PORT
;

336 
	`sig«l
(
SIGPIPE
, 
SIG_IGN
);

337 
	`sig«l
(
SIGPOLL
, 
SIG_IGN
);

338 
	`sig«l
(
SIGPOLL
, 
SIG_IGN
);

345 i‡((
˛õ¡fd
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0)) < 0) {

346 
	`°r˝y
(
°©us_msg
, "Error: Client unableÅo create socket");

351 i‡((
hp
 = 
	`gëho°by«me
(
ho°«me
)Ë=
NULL
) {

352 
	`°r˝y
(
°©us_msg
, "Error: DNS is unableÅoÑesolve serveráddress");

353 
	`˛o£
(
˛õ¡fd
);

356 
	`bzîo
((*Ë&
£rvîaddr
, (serveraddr));

357 
£rvîaddr
.
sö_Ámûy
 = 
AF_INET
;

358 
	`bc›y
((*)
hp
->
h_addr
,

359 (*)&
£rvîaddr
.
sö_addr
.
s_addr
, 
hp
->
h_Àngth
);

360 
£rvîaddr
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

363 i‡(
	`c⁄√˘
(
˛õ¡fd
, (
SA
 *Ë&
£rvîaddr
, (serveraddr)) < 0) {

364 
	`°r˝y
(
°©us_msg
, "Error: UnableÅo connectÅo server");

365 
	`˛o£
(
˛õ¡fd
);

370 
	`˛o£
(
˛õ¡fd
);

371 
	`°r˝y
(
°©us_msg
, "OK");

373 
	}
}

379 
	$drivî_po°
(*
u£rid
, *
ªsu…
, 
autogøded
, *
°©us_msg
)

381 
°©us
;

384 i‡(
autogøded
) {

385 
	`¥ötf
("\nAUTORESULT_STRING=%s\n", 
ªsu…
);

386 
	`°r˝y
(
°©us_msg
, "OK");

394 i‡(
u£rid
 && 
	`°rcmp
(userid, "")) {

395 
°©us
 = 
	`submôr
(
SERVER_NAME
,

396 
SERVER_PORT
,

397 
COURSE_NAME
,

398 
u£rid
,

399 
LAB
,

400 
ªsu…
,

401 
°©us_msg
);

402  
°©us
;

406 
	`°r˝y
(
°©us_msg
, "OK");

408 
	}
}

	@vm/malloc/driverlib.h

11 #i‚de‡
__DRIVERLIB_H__


12 
	#__DRIVERLIB_H__


	)

17 
	#SUBMITR_MAXBUF
 8192

	)

22 
	#RIO_BUFSIZE
 8192

	)

24 
	mrio_fd
;

25 
	mrio_˙t
;

26 *
	mrio_buÂå
;

27 
	mrio_buf
[
RIO_BUFSIZE
];

28 } 
	trio_t
;

35 
öô_timeout
(
timeout
);

38 
öô_drivî
(*
°©us_msg
);

41 
drivî_po°
(*
u£rid
,

42 *
ªsu…
,

43 
autogøded
,

44 *
°©us_msg
);

	@vm/malloc/fcyc.c

10 
	~<°dlib.h
>

11 
	~<sys/times.h
>

12 
	~<°dio.h
>

14 
	~"fcyc.h
"

15 
	~"˛ock.h
"

18 
	#K
 3

	)

19 
	#MAXSAMPLES
 20

	)

20 
	#EPSILON
 0.01

	)

21 
	#COMPENSATE
 0

	)

22 
	#CLEAR_CACHE
 0

	)

23 
	#CACHE_BYTES
 (1<<19Ë

	)

24 
	#CACHE_BLOCK
 32

	)

26 
	gkbe°
 = 
K
;

27 
	gmaxßm∂es
 = 
MAXSAMPLES
;

28 
	gïsû⁄
 = 
EPSILON
;

29 
	gcom≥nßã
 = 
COMPENSATE
;

30 
	g˛ór_ˇche
 = 
CLEAR_CACHE
;

31 
	gˇche_byãs
 = 
CACHE_BYTES
;

32 
	gˇche_block
 = 
CACHE_BLOCK
;

34 *
	gˇche_buf
 = 
NULL
;

36 *
	gvÆues
 = 
NULL
;

37 
	gßm∂ecou¡
 = 0;

40 
	#KEEP_VALS
 0

	)

41 
	#KEEP_SAMPLES
 0

	)

43 #i‡
KEEP_SAMPLES


44 *
	gßm∂es
 = 
NULL
;

50 
	$öô_ßm∂î
()

52 i‡(
vÆues
)

53 
	`‰ì
(
vÆues
);

54 
vÆues
 = 
	`ˇŒoc
(
kbe°
, ());

55 #i‡
KEEP_SAMPLES


56 i‡(
ßm∂es
)

57 
	`‰ì
(
ßm∂es
);

59 
ßm∂es
 = 
	`ˇŒoc
(
maxßm∂es
+
kbe°
, ());

61 
ßm∂ecou¡
 = 0;

62 
	}
}

67 
	$add_ßm∂e
(
vÆ
)

69 
pos
 = 0;

70 i‡(
ßm∂ecou¡
 < 
kbe°
) {

71 
pos
 = 
ßm∂ecou¡
;

72 
vÆues
[
pos
] = 
vÆ
;

73 } i‡(
vÆ
 < 
vÆues
[
kbe°
-1]) {

74 
pos
 = 
kbe°
-1;

75 
vÆues
[
pos
] = 
vÆ
;

77 #i‡
KEEP_SAMPLES


78 
ßm∂es
[
ßm∂ecou¡
] = 
vÆ
;

80 
ßm∂ecou¡
++;

82 
pos
 > 0 && 
vÆues
[pos-1] > values[pos]) {

83 
ãmp
 = 
vÆues
[
pos
-1];

84 
vÆues
[
pos
-1] = values[pos];

85 
vÆues
[
pos
] = 
ãmp
;

86 
pos
--;

88 
	}
}

93 
	$has_c⁄vîged
()

96 (
ßm∂ecou¡
 >
kbe°
) &&

97 ((1 + 
ïsû⁄
)*
vÆues
[0] >vÆues[
kbe°
-1]);

98 
	}
}

103 vﬁ©ûê
	gsök
 = 0;

105 
	$˛ór
()

107 
x
 = 
sök
;

108 *
˝å
, *
˚nd
;

109 
ö¸
 = 
ˇche_block
/();

110 i‡(!
ˇche_buf
) {

111 
ˇche_buf
 = 
	`mÆloc
(
ˇche_byãs
);

112 i‡(!
ˇche_buf
) {

113 
	`Ârötf
(
°dîr
, "FatalÉrror. MallocÑeturnedÇull whenÅryingÅo clear cache\n");

114 
	`exô
(1);

117 
˝å
 = (*Ë
ˇche_buf
;

118 
˚nd
 = 
˝å
 + 
ˇche_byãs
/();

119 
˝å
 < 
˚nd
) {

120 
x
 +*
˝å
;

121 
˝å
 +
ö¸
;

123 
sök
 = 
x
;

124 
	}
}

129 
	$fcyc
(
ã°_fun˘
 
f
, *
¨gp
)

131 
ªsu…
;

132 
	`öô_ßm∂î
();

133 i‡(
com≥nßã
) {

135 
cyc
;

136 i‡(
˛ór_ˇche
)

137 
	`˛ór
();

138 
	`°¨t_comp_cou¡î
();

139 
	`f
(
¨gp
);

140 
cyc
 = 
	`gë_comp_cou¡î
();

141 
	`add_ßm∂e
(
cyc
);

142 } !
	`has_c⁄vîged
(Ë&& 
ßm∂ecou¡
 < 
maxßm∂es
);

145 
cyc
;

146 i‡(
˛ór_ˇche
)

147 
	`˛ór
();

148 
	`°¨t_cou¡î
();

149 
	`f
(
¨gp
);

150 
cyc
 = 
	`gë_cou¡î
();

151 
	`add_ßm∂e
(
cyc
);

152 } !
	`has_c⁄vîged
(Ë&& 
ßm∂ecou¡
 < 
maxßm∂es
);

154 #ifde‡
DEBUG


156 
i
;

157 
	`¥ötf
(" %d smÆÀ° vÆues: [", 
kbe°
);

158 
i
 = 0; i < 
kbe°
; i++)

159 
	`¥ötf
("%.0f%s", 
vÆues
[
i
], i==
kbe°
-1 ? "]\n" : ", ");

162 
ªsu…
 = 
vÆues
[0];

163 #i‡!
KEEP_VALS


164 
	`‰ì
(
vÆues
);

165 
vÆues
 = 
NULL
;

167  
ªsu…
;

168 
	}
}

180 
	$£t_fcyc_˛ór_ˇche
(
˛ór
)

182 
˛ór_ˇche
 = 
˛ór
;

183 
	}
}

189 
	$£t_fcyc_ˇche_size
(
byãs
)

191 i‡(
byãs
 !
ˇche_byãs
) {

192 
ˇche_byãs
 = 
byãs
;

193 i‡(
ˇche_buf
) {

194 
	`‰ì
(
ˇche_buf
);

195 
ˇche_buf
 = 
NULL
;

198 
	}
}

204 
	$£t_fcyc_ˇche_block
(
byãs
) {

205 
ˇche_block
 = 
byãs
;

206 
	}
}

214 
	$£t_fcyc_com≥nßã
(
com≥nßã_¨g
)

216 
com≥nßã
 = 
com≥nßã_¨g
;

217 
	}
}

223 
	$£t_fcyc_k
(
k
)

225 
kbe°
 = 
k
;

226 
	}
}

234 
	$£t_fcyc_maxßm∂es
(
maxßm∂es_¨g
)

236 
maxßm∂es
 = 
maxßm∂es_¨g
;

237 
	}
}

243 
	$£t_fcyc_ïsû⁄
(
ïsû⁄_¨g
)

245 
ïsû⁄
 = 
ïsû⁄_¨g
;

246 
	}
}

	@vm/malloc/fcyc.h

11 (*
	tã°_fun˘
)(*);

14 
	`fcyc
(
ã°_fun˘
 
f
, * 
¨gp
);

25 
	`£t_fcyc_˛ór_ˇche
(
˛ór
);

31 
	`£t_fcyc_ˇche_size
(
byãs
);

37 
	`£t_fcyc_ˇche_block
(
byãs
);

44 
	`£t_fcyc_com≥nßã
(
com≥nßã_¨g
);

50 
	`£t_fcyc_k
(
k
);

58 
	`£t_fcyc_maxßm∂es
(
maxßm∂es_¨g
);

64 
	`£t_fcyc_ïsû⁄
(
ïsû⁄_¨g
);

	@vm/malloc/fsecs.c

4 
	~<°dio.h
>

5 
	~"f£cs.h
"

6 
	~"fcyc.h
"

7 
	~"˛ock.h
"

8 
	~"·imî.h
"

9 
	~"c⁄fig.h
"

11 
	gMhz
;

13 
vîbo£
;

18 
	$öô_f£cs
()

20 
Mhz
 = 0;

22 #i‡
USE_FCYC


23 i‡(
vîbo£
)

24 
	`¥ötf
("MeasuringÖerformance withá cycle counter.\n");

27 
	`£t_fcyc_maxßm∂es
(20);

28 
	`£t_fcyc_˛ór_ˇche
(1);

29 
	`£t_fcyc_com≥nßã
(1);

30 
	`£t_fcyc_ïsû⁄
(0.01);

31 
	`£t_fcyc_k
(3);

32 
Mhz
 = 
	`mhz
(
vîbo£
 > 0);

33 #ñi‡
USE_ITIMER


34 i‡(
vîbo£
)

35 
	`¥ötf
("MeasuringÖerformance withÅhe intervalÅimer.\n");

36 #ñi‡
USE_GETTOD


37 i‡(
vîbo£
)

38 
	`¥ötf
("MeasuringÖerformance with gettimeofday().\n");

40 
	}
}

45 
	$f£cs
(
f£cs_ã°_fun˘
 
f
, *
¨gp
)

47 #i‡
USE_FCYC


48 
cy˛es
 = 
	`fcyc
(
f
, 
¨gp
);

49  
cy˛es
/(
Mhz
*1e6);

50 #ñi‡
USE_ITIMER


51  
	`·imî_ôimî
(
f
, 
¨gp
, 10);

52 #ñi‡
USE_GETTOD


53  
	`·imî_gëtod
(
f
, 
¨gp
, 10);

55 
	}
}

	@vm/malloc/fsecs.h

1 (*
	tf£cs_ã°_fun˘
)(*);

3 
	`öô_f£cs
();

4 
	`f£cs
(
f£cs_ã°_fun˘
 
f
, *
¨gp
);

	@vm/malloc/ftimer.c

11 
	~<°dio.h
>

12 
	~<sys/time.h
>

13 
	~"·imî.h
"

16 
öô_ëime
();

17 
gë_ëime
();

23 
	$·imî_ôimî
(
·imî_ã°_fun˘
 
f
, *
¨gp
, 
n
)

25 
°¨t
, 
tmós
;

26 
i
;

28 
	`öô_ëime
();

29 
°¨t
 = 
	`gë_ëime
();

30 
i
 = 0; i < 
n
; i++)

31 
	`f
(
¨gp
);

32 
tmós
 = 
	`gë_ëime
(Ë- 
°¨t
;

33  
tmós
 / 
n
;

34 
	}
}

40 
	$·imî_gëtod
(
·imî_ã°_fun˘
 
f
, *
¨gp
, 
n
)

42 
i
;

43 
timevÆ
 
°v
, 
ëv
;

44 
diff
;

46 
	`gëtimeofday
(&
°v
, 
NULL
);

47 
i
 = 0; i < 
n
; i++)

48 
	`f
(
¨gp
);

49 
	`gëtimeofday
(&
ëv
,
NULL
);

50 
diff
 = 1E3*(
ëv
.
tv_£c
 - 
°v
.tv_£cË+ 1E-3*”tv.
tv_u£c
-stv.tv_usec);

51 
diff
 /
n
;

52  (1E-3*
diff
);

53 
	}
}

61 
	#MAX_ETIME
 86400

	)

64 
ôimîvÆ
 
	gfú°_u
;

65 
ôimîvÆ
 
	gfú°_r
;

66 
ôimîvÆ
 
	gfú°_p
;

69 
	$öô_ëime
()

71 
fú°_u
.
ô_öãrvÆ
.
tv_£c
 = 0;

72 
fú°_u
.
ô_öãrvÆ
.
tv_u£c
 = 0;

73 
fú°_u
.
ô_vÆue
.
tv_£c
 = 
MAX_ETIME
;

74 
fú°_u
.
ô_vÆue
.
tv_u£c
 = 0;

75 
	`£tôimî
(
ITIMER_VIRTUAL
, &
fú°_u
, 
NULL
);

77 
fú°_r
.
ô_öãrvÆ
.
tv_£c
 = 0;

78 
fú°_r
.
ô_öãrvÆ
.
tv_u£c
 = 0;

79 
fú°_r
.
ô_vÆue
.
tv_£c
 = 
MAX_ETIME
;

80 
fú°_r
.
ô_vÆue
.
tv_u£c
 = 0;

81 
	`£tôimî
(
ITIMER_REAL
, &
fú°_r
, 
NULL
);

83 
fú°_p
.
ô_öãrvÆ
.
tv_£c
 = 0;

84 
fú°_p
.
ô_öãrvÆ
.
tv_u£c
 = 0;

85 
fú°_p
.
ô_vÆue
.
tv_£c
 = 
MAX_ETIME
;

86 
fú°_p
.
ô_vÆue
.
tv_u£c
 = 0;

87 
	`£tôimî
(
ITIMER_PROF
, &
fú°_p
, 
NULL
);

88 
	}
}

91 
	$gë_ëime
() {

92 
ôimîvÆ
 
v_cuº
;

93 
ôimîvÆ
 
r_cuº
;

94 
ôimîvÆ
 
p_cuº
;

96 
	`gëôimî
(
ITIMER_VIRTUAL
, &
v_cuº
);

97 
	`gëôimî
(
ITIMER_REAL
,&
r_cuº
);

98 
	`gëôimî
(
ITIMER_PROF
,&
p_cuº
);

100  (Ë((
fú°_p
.
ô_vÆue
.
tv_£c
 - 
r_cuº
.it_value.tv_sec) +

101 (
fú°_p
.
ô_vÆue
.
tv_u£c
 - 
r_cuº
.it_value.tv_usec)*1e-6);

102 
	}
}

	@vm/malloc/ftimer.h

4 (*
	t·imî_ã°_fun˘
)(*);

8 
	`·imî_ôimî
(
·imî_ã°_fun˘
 
f
, *
¨gp
, 
n
);

13 
	`·imî_gëtod
(
·imî_ã°_fun˘
 
f
, *
¨gp
, 
n
);

	@vm/malloc/mdriver.c

10 
	~<as£π.h
>

11 
	~<î∫o.h
>

12 
	~<Êﬂt.h
>

13 
	~<£tjmp.h
>

14 
	~<sig«l.h
>

15 
	~<°d¨g.h
>

16 
	~<°dio.h
>

17 
	~<°dlib.h
>

18 
	~<°rög.h
>

19 
	~<time.h
>

20 
	~<uni°d.h
>

22 #i‚de‡
__GCC__


23 
	#__©åibuã__
(
¨gs
)

	)

26 
	~"mm.h
"

27 
	~"memlib.h
"

28 
	~"f£cs.h
"

29 
	~"c⁄fig.h
"

30 
	~"drivîlib.h
"

37 
	#MAXLINE
 1024

	)

38 
	#HDRLINES
 4

	)

39 
	#LINENUM
(
i
Ë(i+5Ë

	)

42 
	#IS_ALIGNED
(
p
Ë(((()’)Ë% 
ALIGNMENT
Ë=0)

	)

56 
	sønge_t
 {

57 *
	mlo
;

58 *
	mhi
;

59 
ønge_t
 *
	m√xt
;

60 
	mödex
;

61 } 
	tønge_t
;

65 íum { 
	mALLOC
, 
	mFREE
, 
	mREALLOC
 } 
	mty≥
;

66 
	mödex
;

67 
size_t
 
	msize
;

68 } 
	tåa˚›_t
;

72 
	mfûíame
[
MAXLINE
];

73 
	mign‹e_ønges
;

74 
	mnum_ids
;

75 
	mnum_›s
;

76 
	mweight
;

77 
åa˚›_t
 *
	m›s
;

78 **
	mblocks
;

79 
size_t
 *
	mblock_sizes
;

80 *
	mblock_ønd_ba£
;

81 } 
	tåa˚_t
;

89 
åa˚_t
 *
	måa˚
;

90 
ønge_t
 *
	mønges
;

91 } 
	t•ìd_t
;

96 
	mfûíame
[
MAXLINE
];

97 
	mweight
;

98 
	m›s
;

101 
	mvÆid
;

102 
	m£cs
;

105 
	mutû
;

108 } 
	t°©s_t
;

119 
	#RANDOM_DATA_LEN
 (1<<16)

	)

120 
	tøndöt_t
;

121 c⁄° 
	gøndöt_t_«me
[] = "byte";

122 
øndöt_t
 
	gøndom_d©a
[
RANDOM_DATA_LEN
];

129 íum { 
	mDBG_NONE
, 
	mDBG_CHEAP
, 
	mDBG_EXPENSIVE
 } 
	gdebug_mode
 = 
DBG_CHEAP
;

131 
	gvîbo£
 = 1;

132 
	gîr‹s
 = 0;

133 
	g⁄ëime_Êag
 = 0;

136 
	g£t_timeout
 = 0;

140 
	gåa˚dú
[
MAXLINE
] = 
TRACEDIR
;

143 *
	gdeÁu…_åa˚fûes
[] = {

144 
DEFAULT_TRACEFILES
, 
NULL


147 
	g°©us_msg
[
SUBMITR_MAXBUF
];

148 
	gaut‹esu…
[
SUBMITR_MAXBUF
];

155 
add_ønge
(
ønge_t
 **
ønges
, *
lo
, 
size
,

156 c⁄° 
åa˚_t
 *
åa˚
, 
›num
, 
ödex
);

157 
ªmove_ønge
(
ønge_t
 **
ønges
, *
lo
);

158 
˛ór_ønges
(
ønge_t
 **
ønges
);

161 
öô_øndom_d©a
();

162 
check_ödex
(c⁄° 
åa˚_t
 *
åa˚
, 
›num
, 
ödex
);

163 
øndomize_block
(
åa˚_t
 *
åa˚
, 
ödex
);

166 
åa˚_t
 *
ªad_åa˚
(
°©s_t
 *
°©s
, c⁄° *
åa˚dú
,

167 c⁄° *
fûíame
);

168 
ªöô_åa˚
(
åa˚_t
 *
åa˚
);

169 
‰ì_åa˚
(
åa˚_t
 *
åa˚
);

172 
evÆ_libc_vÆid
(
åa˚_t
 *
åa˚
);

173 
evÆ_libc_•ìd
(*
±r
);

177 
evÆ_mm_vÆid
(
åa˚_t
 *
åa˚
, 
ønge_t
 **
ønges
);

178 
evÆ_mm_utû
(
åa˚_t
 *
åa˚
, 
åa˚num
);

179 
evÆ_mm_•ìd
(*
±r
);

182 
¥öåesu…s
(
n
, 
°©s_t
 *
°©s
);

183 
ußge
();

184 
	$mÆloc_îr‹
(c⁄° 
åa˚_t
 *
åa˚
, 
›num
, c⁄° *
fmt
, ...)

185 
	`__©åibuã__
((
	`f‹m©
(
¥ötf
, 3,4)));

186 
	$unix_îr‹
(c⁄° *
fmt
, ...)

187 
	`__©åibuã__
((
	`f‹m©
(
¥ötf
, 1,2), 
n‹ëu∫
));

188 
	$≠p_îr‹
(c⁄° *
fmt
, ...)

189 
	`__©åibuã__
((
	`f‹m©
(
¥ötf
, 1,2), 
n‹ëu∫
));

191 
sigjmp_buf
 
timeout_jmpbuf
;

192 
	`timeout_h™dÀr
(
sig
 
	`__©åibuã__
((
unu£d
))) {

193 
	`Ârötf
(
°dîr
, "ThêdrivîÅimed ouàa·î %d secs\n", 
£t_timeout
);

194 
îr‹s
 = 1;

195 
	`l⁄gjmp
(
timeout_jmpbuf
, 1);

196 
	}
}

200 
	$run_ã°s
(
num_åa˚fûes
, c⁄° *
åa˚dú
,

201 **
åa˚fûes
,

202 
°©s_t
 *
mm_°©s
, 
ønge_t
 *
ønges
, 
•ìd_t
 *
•ìd_∑øms
) {

203 vﬁ©ûê
i
;

204 vﬁ©ûê
timed_out
 = 0;

206 
i
=0; i < 
num_åa˚fûes
; i++) {

208 if(
	`£tjmp
(
timeout_jmpbuf
) != 0) {

209 
timed_out
 = 1;

212 
åa˚_t
 *
åa˚
;

213 
åa˚
 = 
	`ªad_åa˚
(&
mm_°©s
[
i
], 
åa˚dú
, 
åa˚fûes
[i]);

214 
	`°r˝y
(
mm_°©s
[
i
].
fûíame
, 
åa˚
->filename);

215 
mm_°©s
[
i
].
›s
 = 
åa˚
->
num_›s
;

216 if(
timed_out
) {

217 
mm_°©s
[
i
].
vÆid
 = 0;

219 i‡(
vîbo£
 > 1)

220 
	`¥ötf
("Checking mm_malloc for correctness, ");

221 
mm_°©s
[
i
].
vÆid
 = 
	`evÆ_mm_vÆid
(
åa˚
, &
ønges
);

223 i‡(
⁄ëime_Êag
) {

224 
	`‰ì_åa˚
(
åa˚
);

228 i‡(
mm_°©s
[
i
].
vÆid
) {

229 i‡(
vîbo£
 > 1)

230 
	`¥ötf
("efficiency, ");

231 
mm_°©s
[
i
].
utû
 = 
	`evÆ_mm_utû
(
åa˚
, i);

232 
•ìd_∑øms
->
åa˚
 =Årace;

233 
•ìd_∑øms
->
ønges
 =Ñanges;

234 i‡(
vîbo£
 > 1)

235 
	`¥ötf
("andÖerformance.\n");

236 
mm_°©s
[
i
].
£cs
 = 
	`f£cs
(
evÆ_mm_•ìd
, 
•ìd_∑øms
);

238 
	`‰ì_åa˚
(
åa˚
);

240 
	}
}

245 
	$maö
(
¨gc
, **
¨gv
)

247 
i
;

248 
c
;

249 **
åa˚fûes
 = 
NULL
;

250 
num_åa˚fûes
 = 0;

252 
ønge_t
 *
ønges
 = 
NULL
;

253 
°©s_t
 *
libc_°©s
 = 
NULL
;

254 
°©s_t
 *
mm_°©s
 = 
NULL
;

255 
•ìd_t
 
•ìd_∑øms
;

257 
run_libc
 = 0;

258 
autogødî
 = 0;

261 
£cs
, 
›s
, 
utû
, 
avg_mm_utû
, 
avg_mm_throughput
 = 0, 
p1
, 
p2
, 
≥rfödex
;

262 
weight
 = 0;

263 
numc‹ª˘
;

266 
	`£tbuf
(
°dout
, 0);

267 
	`£tbuf
(
°dîr
, 0);

272 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "d:f:c:s:t:v:hVAlD")Ë!
EOF
) {

273 
c
) {

276 
autogødî
 = 1;

280 
num_åa˚fûes
 = 1;

281 i‡((
åa˚fûes
 = 
	`ªÆloc
—ø˚fûes, 2 * (*))Ë=
NULL
)

282 
	`unix_îr‹
("ERROR:Ñealloc failed in main");

283 
	`°r˝y
(
åa˚dú
, "./");

284 
åa˚fûes
[0] = 
	`°rdup
(
›èrg
);

285 
åa˚fûes
[1] = 
NULL
;

289 
num_åa˚fûes
 = 1;

290 
⁄ëime_Êag
 = 1;

291 i‡((
åa˚fûes
 = 
	`ªÆloc
—ø˚fûes, 2 * (*))Ë=
NULL
)

292 
	`unix_îr‹
("ERROR:Ñealloc failed in main");

293 
	`°r˝y
(
åa˚dú
, "./");

294 
åa˚fûes
[0] = 
	`°rdup
(
›èrg
);

295 
åa˚fûes
[1] = 
NULL
;

299 i‡(
num_åa˚fûes
 == 1)

301 
	`°r˝y
(
åa˚dú
, 
›èrg
);

302 i‡(
åa˚dú
[
	`°æí
(tracedir)-1] != '/')

303 
	`°rˇt
(
åa˚dú
, "/");

307 
run_libc
 = 1;

311 
vîbo£
 += 1;

315 
vîbo£
 = 
	`©oi
(
›èrg
);

319 
debug_mode
 = 
	`©oi
(
›èrg
);

323 
debug_mode
 = 
DBG_EXPENSIVE
;

327 
£t_timeout
 = 
	`©oi
(
›èrg
);

331 
	`ußge
();

332 
	`exô
(0);

335 
	`ußge
();

336 
	`exô
(1);

340 i‡(
åa˚fûes
 =
NULL
) {

341 
åa˚fûes
 = 
deÁu…_åa˚fûes
;

342 
num_åa˚fûes
 = (
deÁu…_åa˚fûes
) / (*) - 1;

343 
	`¥ötf
("Usög deÁu…Åø˚fûe†ö %s\n", 
åa˚dú
);

346 if(
debug_mode
 !
DBG_NONE
) {

347 
	`öô_øndom_d©a
();

351 
	`öô_f£cs
();

354 i‡(
£t_timeout
) {

355 
	`öô_timeout
(
£t_timeout
);

356 
	`sig«l
(
SIGALRM
, 
timeout_h™dÀr
);

362 i‡(
run_libc
) {

363 i‡(
vîbo£
 > 1)

364 
	`¥ötf
("\nTestingÜibc malloc\n");

367 
libc_°©s
 = (
°©s_t
 *)
	`ˇŒoc
(
num_åa˚fûes
, (stats_t));

368 i‡(
libc_°©s
 =
NULL
)

369 
	`unix_îr‹
("libc_stats calloc in main failed");

372 
i
=0; i < 
num_åa˚fûes
; i++) {

373 
åa˚_t
 *
åa˚
 = 
	`ªad_åa˚
(&
libc_°©s
[
i
], 
åa˚dú
, 
åa˚fûes
[i]);

375 i‡(
vîbo£
 > 1)

376 
	`¥ötf
("CheckingÜibc malloc for correctness, ");

377 
libc_°©s
[
i
].
vÆid
 = 
	`evÆ_libc_vÆid
(
åa˚
);

378 i‡(
libc_°©s
[
i
].
vÆid
) {

379 
•ìd_∑øms
.
åa˚
 =Årace;

380 i‡(
vîbo£
 > 1)

381 
	`¥ötf
("andÖerformance.\n");

382 
libc_°©s
[
i
].
£cs
 = 
	`f£cs
(
evÆ_libc_•ìd
, &
•ìd_∑øms
);

384 
	`‰ì_åa˚
(
åa˚
);

388 i‡(
vîbo£
) {

389 
	`¥ötf
("\nResults forÜibc malloc:\n");

390 
	`¥öåesu…s
(
num_åa˚fûes
, 
libc_°©s
);

397 i‡(
vîbo£
 > 1)

398 
	`¥ötf
("\nTesting mm malloc\n");

401 
mm_°©s
 = (
°©s_t
 *)
	`ˇŒoc
(
num_åa˚fûes
, (stats_t));

402 i‡(
mm_°©s
 =
NULL
)

403 
	`unix_îr‹
("mm_stats calloc in main failed");

406 
	`mem_öô
();

408 
	`run_ã°s
(
num_åa˚fûes
, 
åa˚dú
, 
åa˚fûes
, 
mm_°©s
,

409 
ønges
, &
•ìd_∑øms
);

413 i‡(
vîbo£
) {

414 i‡(
⁄ëime_Êag
) {

415 
	`¥ötf
("\n\nc‹ª˘√s†check föished, byÑu¬ögÅø˚fûê\"%s\".\n", 
åa˚fûes
[
num_åa˚fûes
-1]);

416 i‡(
mm_°©s
[
num_åa˚fûes
-1].
vÆid
) {

417 
	`¥ötf
(" => correct.\n\n");

419 
	`¥ötf
(" => incorrect.\n\n");

422 
	`¥ötf
("\nResults for mm malloc:\n");

423 
	`¥öåesu…s
(
num_åa˚fûes
, 
mm_°©s
);

424 
	`¥ötf
("\n");

431 
£cs
 = 0;

432 
›s
 = 0;

433 
utû
 = 0;

434 
numc‹ª˘
 = 0;

435 
i
=0; i < 
num_åa˚fûes
; i++) {

436 
£cs
 +
mm_°©s
[
i
].£c†* mm_°©s[i].
weight
;

437 
›s
 +
mm_°©s
[
i
].›†* mm_°©s[i].
weight
;

438 
utû
 +
mm_°©s
[
i
].utû * mm_°©s[i].
weight
;

439 
weight
 +
mm_°©s
[
i
].weight;

440 i‡(
mm_°©s
[
i
].
vÆid
)

441 
numc‹ª˘
++;

443 if(
weight
 == 0)

444 
avg_mm_utû
 = 0;

446 
avg_mm_utû
 = 
utû
/
weight
;

451 i‡(
îr‹s
 == 0) {

452 if(
weight
 == 0) {

453 
avg_mm_throughput
 = 0;

456 
avg_mm_throughput
 = (
£cs
 =0Ë? 0 : 
›s
/secs;

458 i‡(
avg_mm_utû
 > 
MAX_SPACE
) {

459 
p1
 = (Ë
UTIL_WEIGHT
;

462 
p1
 = ((Ë
UTIL_WEIGHT
) *

463 (
avg_mm_utû
/
MAX_SPACE
);

466 i‡(
avg_mm_throughput
 > 
MAX_SPEED
) {

467 
p2
 = ()(1.0 - 
UTIL_WEIGHT
);

470 
p2
 = ((Ë(1.0 - 
UTIL_WEIGHT
)) *

471 (
avg_mm_throughput
/
MAX_SPEED
);

474 
≥rfödex
 = (
p1
 + 
p2
)*100.0;

475 
	`¥ötf
("Perf index = %.0f (util) + %.0f (thru) = %.0f/100\n",

476 
p1
*100,

477 
p2
*100,

478 
≥rfödex
);

482 
≥rfödex
 = 0.0;

483 
	`¥ötf
("Tîmö©ed wôh %dÉº‹s\n", 
îr‹s
);

486 i‡(
autogødî
) {

487 
	`¥ötf
("c‹ª˘:%d\n", 
numc‹ª˘
);

488 
	`¥ötf
("≥rfidx:%.0f\n", 
≥rfödex
);

492 
	`•rötf
(
aut‹esu…
, "%d:%.0f:%.0f:%.0f",

493 
numc‹ª˘
, ()
≥rfödex
,

494 
avg_mm_throughput
/1000.0, 
avg_mm_utû
*100);

495 
	`drivî_po°
(
NULL
, 
aut‹esu…
, 
autogødî
, 
°©us_msg
);

497 
	`exô
(0);

498 
	}
}

513 
	$add_ønge
(
ønge_t
 **
ønges
, *
lo
, 
size
,

514 c⁄° 
åa˚_t
 *
åa˚
, 
›num
, 
ödex
)

516 *
hi
 = 
lo
 + 
size
 - 1;

517 
ønge_t
 *
p
;

519 
	`as£π
(
size
 > 0);

522 i‡(!
	`IS_ALIGNED
(
lo
)) {

523 
	`mÆloc_îr‹
(
åa˚
, 
›num
,

524 "Paylﬂdáddªs†(%pËnŸálig√dÅÿ%d byãs", 
lo
, 
ALIGNMENT
);

529 i‡((
lo
 < (*)
	`mem_hóp_lo
()Ë|| (lÿ> (*)
	`mem_hóp_hi
()) ||

530 (
hi
 < (*)
	`mem_hóp_lo
()Ë|| (hò> (*)
	`mem_hóp_hi
())) {

531 
	`mÆloc_îr‹
(
åa˚
, 
›num
,

533 
lo
, 
hi
, 
	`mem_hóp_lo
(), 
	`mem_hóp_hi
());

539 if(
åa˚
->
ign‹e_ønges
 || 
debug_mode
 =
DBG_NONE
)  1;

543 
p
 = *
ønges
;Ö !
NULL
;Ö =Ö->
√xt
) {

544 i‡((
lo
 >
p
->lÿ&&Üÿ<p-> 
hi
) ||

545 (
hi
 >
p
->
lo
 && hi <=Ö->hi)) {

546 
	`mÆloc_îr‹
(
åa˚
, 
›num
,

548 
lo
, 
hi
, 
p
->lo,Ö->hi);

557 i‡((
p
 = (
ønge_t
 *)
	`mÆloc
(‘™ge_t))Ë=
NULL
)

558 
	`unix_îr‹
("mallocÉrror inádd_range");

559 
p
->
√xt
 = *
ønges
;

560 
p
->
lo
 =Üo;

561 
p
->
hi
 = hi;

562 
p
->
ödex
 = index;

563 *
ønges
 = 
p
;

566 
	}
}

571 
	$ªmove_ønge
(
ønge_t
 **
ønges
, *
lo
)

573 
ønge_t
 *
p
;

574 
ønge_t
 **
¥evµ
 = 
ønges
;

576 
p
 = *
ønges
;Ö !
NULL
;Ö =Ö->
√xt
) {

577 i‡(
p
->
lo
 ==Üo) {

578 *
¥evµ
 = 
p
->
√xt
;

579 
	`‰ì
(
p
);

582 
¥evµ
 = &(
p
->
√xt
);

584 
	}
}

589 
	$˛ór_ønges
(
ønge_t
 **
ønges
)

591 
ønge_t
 *
p
;

592 
ønge_t
 *
≤ext
;

594 
p
 = *
ønges
;Ö !
NULL
;Ö = 
≤ext
) {

595 
≤ext
 = 
p
->
√xt
;

596 
	`‰ì
(
p
);

598 *
ønges
 = 
NULL
;

599 
	}
}

606 
	$öô_øndom_d©a
() {

607 
Àn
;

609 if(
debug_mode
 =
DBG_NONE
) ;

611 
Àn
 = 0;Üí < 
RANDOM_DATA_LEN
; ++len) {

612 
øndom_d©a
[
Àn
] = 
	`øndom
();

614 
	}
}

616 
	$øndomize_block
(
åa˚_t
 *
åa˚s
, 
ödex
) {

617 
size_t
 
size
;

618 
size_t
 
i
;

619 
øndöt_t
 *
block
;

620 
ba£
;

622 if(
debug_mode
 =
DBG_NONE
) ;

624 
åa˚s
->
block_ønd_ba£
[
ödex
] = 
	`øndom
();

626 
block
 = (
øndöt_t
*)
åa˚s
->
blocks
[
ödex
];

627 
size
 = 
åa˚s
->
block_sizes
[
ödex
] / (*
block
);

628 
ba£
 = 
åa˚s
->
block_ønd_ba£
[
ödex
];

630 
i
 = 0; i < 
size
; i++) {

631 
block
[
i
] = 
øndom_d©a
[(
ba£
 + iË% 
RANDOM_DATA_LEN
];

633 
	}
}

635 
	$check_ödex
(c⁄° 
åa˚_t
 *
åa˚
, 
›num
, 
ödex
) {

636 
size_t
 
size
;

637 
size_t
 
i
;

638 
øndöt_t
 *
block
;

639 
ba£
;

640 
ng¨bÀd
 = 0;

641 
fú°g¨bÀd
 = -1;

643 if(
ödex
 < 0) ;

644 if(
debug_mode
 =
DBG_NONE
) ;

646 
block
 = (
øndöt_t
*)
åa˚
->
blocks
[
ödex
];

647 
size
 = 
åa˚
->
block_sizes
[
ödex
] / (*
block
);

648 
ba£
 = 
åa˚
->
block_ønd_ba£
[
ödex
];

650 
i
 = 0; i < 
size
; i++) {

651 if(
block
[
i
] !
øndom_d©a
[(
ba£
 + iË% 
RANDOM_DATA_LEN
]) {

652 if(
fú°g¨bÀd
 =-1Ëfú°g¨bÀd = 
i
;

653 
ng¨bÀd
++;

656 if(
ng¨bÀd
 != 0) {

657 
	`mÆloc_îr‹
(
åa˚
, 
›num
, "block %d has %d garbled %s%s, "

658 "°¨tögáàbyã %d", 
ödex
, 
ng¨bÀd
, 
øndöt_t_«me
,

659 
ng¨bÀd
 > 1 ? "s" : "", (
øndöt_t
Ë* 
fú°g¨bÀd
);

661 
	}
}

670 
åa˚_t
 *
	$ªad_åa˚
(
°©s_t
 *
°©s
, c⁄° *
åa˚dú
,

671 c⁄° *
fûíame
)

673 
FILE
 *
åa˚fûe
;

674 
åa˚_t
 *
åa˚
;

675 
ty≥
[
MAXLINE
];

676 
ödex
, 
size
;

677 
max_ödex
 = 0;

678 
›_ödex
;

680 i‡(
vîbo£
 > 1)

681 
	`¥ötf
("RódögÅø˚fûe: %s\n", 
fûíame
);

684 i‡((
åa˚
 = (
åa˚_t
 *Ë
	`mÆloc
(—ø˚_t))Ë=
NULL
)

685 
	`unix_îr‹
("malloc 1 failed inÑead_trace");

688 
	`°r˝y
(
åa˚
->
fûíame
, 
åa˚dú
);

689 
	`°rˇt
(
åa˚
->
fûíame
, filename);

690 i‡((
åa˚fûe
 = 
	`f›í
(
åa˚
->
fûíame
, "r")Ë=
NULL
) {

691 
	`unix_îr‹
("CouldÇŸ o≥¿%†öÑód_åa˚", 
åa˚
->
fûíame
);

693 
	`fsˇnf
(
åa˚fûe
, "%d", &
åa˚
->
weight
);

694 
	`fsˇnf
(
åa˚fûe
, "%d", &
åa˚
->
num_ids
);

695 
	`fsˇnf
(
åa˚fûe
, "%d", &
åa˚
->
num_›s
);

696 
	`fsˇnf
(
åa˚fûe
, "%d", &
åa˚
->
ign‹e_ønges
);

698 if(
åa˚
->
weight
 != 0 &&Årace->weight != 1) {

699 
	`≠p_îr‹
("%s: weighàˇ¿⁄ly bêzîÿ‹ o√", 
åa˚
->
fûíame
);

701 if(
åa˚
->
ign‹e_ønges
 != 0 &&Årace->ignore_ranges != 1) {

702 
	`≠p_îr‹
("%s: ign‹e-ønge†ˇ¿⁄ly bêzîÿ‹ o√", 
åa˚
->
fûíame
);

706 i‡((
åa˚
->
›s
 =

707 (
åa˚›_t
 *)
	`mÆloc
(
åa˚
->
num_›s
 * —ø˚›_t))Ë=
NULL
)

708 
	`unix_îr‹
("malloc 2 failed inÑead_trace");

711 i‡((
åa˚
->
blocks
 =

712 (**)
	`ˇŒoc
(
åa˚
->
num_ids
, (*))Ë=
NULL
)

713 
	`unix_îr‹
("malloc 3 failed inÑead_trace");

716 i‡((
åa˚
->
block_sizes
 =

717 (
size_t
 *)
	`ˇŒoc
(
åa˚
->
num_ids
, (size_t))Ë=
NULL
)

718 
	`unix_îr‹
("malloc 4 failed inÑead_trace");

721 i‡((
åa˚
->
block_ønd_ba£
 =

722 
	`ˇŒoc
(
åa˚
->
num_ids
, (*åa˚->
block_ønd_ba£
))Ë=
NULL
)

723 
	`unix_îr‹
("malloc 5 failed inÑead_trace");

727 
ödex
 = 0;

728 
›_ödex
 = 0;

729 
	`fsˇnf
(
åa˚fûe
, "%s", 
ty≥
Ë!
EOF
) {

730 
ty≥
[0]) {

732 
	`fsˇnf
(
åa˚fûe
, "%u %u", &
ödex
, &
size
);

733 
åa˚
->
›s
[
›_ödex
].
ty≥
 = 
ALLOC
;

734 
åa˚
->
›s
[
›_ödex
].
ödex
 = index;

735 
åa˚
->
›s
[
›_ödex
].
size
 = size;

736 
max_ödex
 = (
ödex
 > max_index) ? index : max_index;

739 
	`fsˇnf
(
åa˚fûe
, "%u %u", &
ödex
, &
size
);

740 
åa˚
->
›s
[
›_ödex
].
ty≥
 = 
REALLOC
;

741 
åa˚
->
›s
[
›_ödex
].
ödex
 = index;

742 
åa˚
->
›s
[
›_ödex
].
size
 = size;

743 
max_ödex
 = (
ödex
 > max_index) ? index : max_index;

746 
	`fsˇnf
(
åa˚fûe
, "%ud", &
ödex
);

747 
åa˚
->
›s
[
›_ödex
].
ty≥
 = 
FREE
;

748 
åa˚
->
›s
[
›_ödex
].
ödex
 = index;

751 
	`≠p_îr‹
("BogusÅype character (%c) inÅracefile %s\n",

752 
ty≥
[0], 
åa˚
->
fûíame
);

754 
›_ödex
++;

755 if(
›_ödex
 =
åa˚
->
num_›s
) ;

757 
	`f˛o£
(
åa˚fûe
);

758 
	`as£π
(
max_ödex
 =
åa˚
->
num_ids
 - 1);

759 
	`as£π
(
åa˚
->
num_›s
 =
›_ödex
);

762 
	`°r˝y
(
°©s
->
fûíame
, 
åa˚
->filename);

763 
°©s
->
weight
 = 
åa˚
->weight;

764 
°©s
->
›s
 = 
åa˚
->
num_›s
;

766  
åa˚
;

767 
	}
}

772 
	$ªöô_åa˚
(
åa˚_t
 *
åa˚
)

774 
	`mem£t
(
åa˚
->
blocks
, 0,Åø˚->
num_ids
 * (*trace->blocks));

775 
	`mem£t
(
åa˚
->
block_sizes
, 0,Åø˚->
num_ids
 * (*trace->block_sizes));

777 
	}
}

783 
	$‰ì_åa˚
(
åa˚_t
 *
åa˚
)

785 
	`‰ì
(
åa˚
->
›s
);

786 
	`‰ì
(
åa˚
->
blocks
);

787 
	`‰ì
(
åa˚
->
block_sizes
);

788 
	`‰ì
(
åa˚
->
block_ønd_ba£
);

789 
	`‰ì
(
åa˚
);

790 
	}
}

800 
	$evÆ_mm_vÆid
(
åa˚_t
 *
åa˚
, 
ønge_t
 **
ønges
)

802 
i
;

803 
ödex
;

804 
size_t
 
size
;

805 *
√wp
;

806 *
ﬁdp
;

807 *
p
;

810 
	`mem_ª£t_brk
();

811 
	`˛ór_ønges
(
ønges
);

812 
	`ªöô_åa˚
(
åa˚
);

815 i‡(
	`mm_öô
() < 0) {

816 
	`mÆloc_îr‹
(
åa˚
, 0, "mm_init failed.");

821 
i
 = 0; i < 
åa˚
->
num_›s
; i++) {

822 
ödex
 = 
åa˚
->
›s
[
i
].index;

823 
size
 = 
åa˚
->
›s
[
i
].size;

825 if(
debug_mode
 =
DBG_EXPENSIVE
) {

826 
ønge_t
 *
r
;

829 
	`mm_checkhóp
(
vîbo£
);

832 
r
 = *
ønges
;

833 
r
) {

834 
	`check_ödex
(
åa˚
, 
i
, 
r
->
ödex
);

835 
r
 =Ñ->
√xt
;

839 
åa˚
->
›s
[
i
].
ty≥
) {

841 
ALLOC
:

844 i‡((
p
 = 
	`mm_mÆloc
(
size
)Ë=
NULL
) {

845 
	`mÆloc_îr‹
(
åa˚
, 
i
, "mm_malloc failed.");

854 i‡(
	`add_ønge
(
ønges
, 
p
, 
size
, 
åa˚
, 
i
, 
ödex
) == 0)

858 
åa˚
->
blocks
[
ödex
] = 
p
;

859 
åa˚
->
block_sizes
[
ödex
] = 
size
;

862 
	`øndomize_block
(
åa˚
, 
ödex
);

865 
REALLOC
:

866 
	`check_ödex
(
åa˚
, 
i
, 
ödex
);

869 
ﬁdp
 = 
åa˚
->
blocks
[
ödex
];

870 
√wp
 = 
	`mm_ªÆloc
(
ﬁdp
, 
size
);

871 if–(
√wp
 =
NULL
Ë&& (
size
 != 0) ) {

872 
	`mÆloc_îr‹
(
åa˚
, 
i
, "mm_realloc failed.");

875 if–(
√wp
 !
NULL
Ë&& (
size
 == 0) ) {

876 
	`mÆloc_îr‹
(
åa˚
, 
i
, "mm_realloc with size 0Ñeturned "

883 
	`ªmove_ønge
(
ønges
, 
ﬁdp
);

886 i‡(
size
 > 0) {

887 if(
	`add_ønge
(
ønges
, 
√wp
, 
size
, 
åa˚
, 
i
, 
ödex
) == 0)

894 
åa˚
->
blocks
[
ödex
] = 
√wp
;

895 if(
size
 < 
åa˚
->
block_sizes
[
ödex
]) {

896 
åa˚
->
block_sizes
[
ödex
] = 
size
;

898 
	`check_ödex
(
åa˚
, 
i
, 
ödex
);

899 
åa˚
->
block_sizes
[
ödex
] = 
size
;

902 
	`øndomize_block
(
åa˚
, 
ödex
);

905 
FREE
:

906 
	`check_ödex
(
åa˚
, 
i
, 
ödex
);

909 if(
ödex
 == -1) {

910 
p
 = 0;

912 
p
 = 
åa˚
->
blocks
[
ödex
];

913 
	`ªmove_ønge
(
ønges
, 
p
);

915 
	`mm_‰ì
(
p
);

919 
	`≠p_îr‹
("NonexistentÑequestÅype inÉval_mm_valid");

926 
	}
}

940 
	$evÆ_mm_utû
(
åa˚_t
 *
åa˚
, 
åa˚num
)

942 
i
;

943 
ödex
;

944 
size
, 
√wsize
, 
ﬁdsize
;

945 
max_tŸÆ_size
 = 0;

946 
tŸÆ_size
 = 0;

947 *
p
;

948 *
√wp
, *
ﬁdp
;

950 
	`ªöô_åa˚
(
åa˚
);

953 
	`mem_ª£t_brk
();

954 i‡(
	`mm_öô
() < 0)

955 
	`≠p_îr‹
("åa˚ %d: mm_öô faûed i¿evÆ_mm_utû", 
åa˚num
);

957 
i
 = 0; i < 
åa˚
->
num_›s
; i++) {

958 
åa˚
->
›s
[
i
].
ty≥
) {

960 
ALLOC
:

961 
ödex
 = 
åa˚
->
›s
[
i
].index;

962 
size
 = 
åa˚
->
›s
[
i
].size;

964 i‡((
p
 = 
	`mm_mÆloc
(
size
)Ë=
NULL
) {

965 
	`≠p_îr‹
("trace %d: mm_malloc failed inÉval_mm_util",

966 
åa˚num
);

970 
åa˚
->
blocks
[
ödex
] = 
p
;

971 
åa˚
->
block_sizes
[
ödex
] = 
size
;

973 
tŸÆ_size
 +
size
;

976 
REALLOC
:

977 
ödex
 = 
åa˚
->
›s
[
i
].index;

978 
√wsize
 = 
åa˚
->
›s
[
i
].
size
;

979 
ﬁdsize
 = 
åa˚
->
block_sizes
[
ödex
];

981 
ﬁdp
 = 
åa˚
->
blocks
[
ödex
];

982 i‡((
√wp
 = 
	`mm_ªÆloc
(
ﬁdp
,
√wsize
)Ë=
NULL
 &&Çewsize != 0) {

983 
	`≠p_îr‹
("trace %d: mm_realloc failed inÉval_mm_util",

984 
åa˚num
);

988 
åa˚
->
blocks
[
ödex
] = 
√wp
;

989 
åa˚
->
block_sizes
[
ödex
] = 
√wsize
;

991 
tŸÆ_size
 +(
√wsize
 - 
ﬁdsize
);

994 
FREE
:

995 
ödex
 = 
åa˚
->
›s
[
i
].index;

996 if(
ödex
 < 0) {

997 
size
 = 0;

998 
p
 = 0;

1000 
size
 = 
åa˚
->
block_sizes
[
ödex
];

1001 
p
 = 
åa˚
->
blocks
[
ödex
];

1004 
	`mm_‰ì
(
p
);

1006 
tŸÆ_size
 -
size
;

1010 
	`≠p_îr‹
("trace %d: NonexistentÑequestÅype inÉval_mm_util",

1011 
åa˚num
);

1015 
max_tŸÆ_size
 = (
tŸÆ_size
 > max_total_size) ?

1016 
tŸÆ_size
 : 
max_tŸÆ_size
;

1020 i‡(
vîbo£
 > 1) {

1021 
	`¥ötf
("max_tŸÆ_sizê%f\n", ()
max_tŸÆ_size
);

1022 
	`¥ötf
("mem_hópsizê%f\n", ()
	`mem_hópsize
());

1025  (()
max_tŸÆ_size
 / ()
	`mem_hópsize
());

1026 
	}
}

1033 
	$evÆ_mm_•ìd
(*
±r
)

1035 
i
, 
ödex
, 
size
, 
√wsize
;

1036 *
p
, *
√wp
, *
ﬁdp
, *
block
;

1037 
åa˚_t
 *
åa˚
 = ((
•ìd_t
 *)
±r
)->trace;

1038 
	`ªöô_åa˚
(
åa˚
);

1041 
	`mem_ª£t_brk
();

1042 i‡(
	`mm_öô
() < 0)

1043 
	`≠p_îr‹
("mm_init failed inÉval_mm_speed");

1046 
i
 = 0; i < 
åa˚
->
num_›s
; i++)

1047 
åa˚
->
›s
[
i
].
ty≥
) {

1049 
ALLOC
:

1050 
ödex
 = 
åa˚
->
›s
[
i
].index;

1051 
size
 = 
åa˚
->
›s
[
i
].size;

1052 i‡((
p
 = 
	`mm_mÆloc
(
size
)Ë=
NULL
)

1053 
	`≠p_îr‹
("mm_mallocÉrror inÉval_mm_speed");

1054 
åa˚
->
blocks
[
ödex
] = 
p
;

1057 
REALLOC
:

1058 
ödex
 = 
åa˚
->
›s
[
i
].index;

1059 
√wsize
 = 
åa˚
->
›s
[
i
].
size
;

1060 
ﬁdp
 = 
åa˚
->
blocks
[
ödex
];

1061 i‡((
√wp
 = 
	`mm_ªÆloc
(
ﬁdp
,
√wsize
)Ë=
NULL
 &&Çewsize != 0)

1062 
	`≠p_îr‹
("mm_reallocÉrror inÉval_mm_speed");

1063 
åa˚
->
blocks
[
ödex
] = 
√wp
;

1066 
FREE
:

1067 
ödex
 = 
åa˚
->
›s
[
i
].index;

1068 if(
ödex
 < 0) {

1069 
block
 = 0;

1071 
block
 = 
åa˚
->
blocks
[
ödex
];

1073 
	`mm_‰ì
(
block
);

1077 
	`≠p_îr‹
("NonexistentÑequestÅype inÉval_mm_speed");

1079 
	}
}

1087 
	$evÆ_libc_vÆid
(
åa˚_t
 *
åa˚
)

1089 
i
, 
√wsize
;

1090 *
p
, *
√wp
, *
ﬁdp
;

1092 
	`ªöô_åa˚
(
åa˚
);

1094 
i
 = 0; i < 
åa˚
->
num_›s
; i++) {

1095 
åa˚
->
›s
[
i
].
ty≥
) {

1097 
ALLOC
:

1098 i‡((
p
 = 
	`mÆloc
(
åa˚
->
›s
[
i
].
size
)Ë=
NULL
) {

1099 
	`mÆloc_îr‹
(
åa˚
, 
i
, "libc malloc failed");

1100 
	`unix_îr‹
("System message");

1102 
åa˚
->
blocks
[åa˚->
›s
[
i
].
ödex
] = 
p
;

1105 
REALLOC
:

1106 
√wsize
 = 
åa˚
->
›s
[
i
].
size
;

1107 
ﬁdp
 = 
åa˚
->
blocks
[åa˚->
›s
[
i
].
ödex
];

1108 i‡((
√wp
 = 
	`ªÆloc
(
ﬁdp
, 
√wsize
)Ë=
NULL
 &&Çewsize != 0) {

1109 
	`mÆloc_îr‹
(
åa˚
, 
i
, "libcÑealloc failed");

1110 
	`unix_îr‹
("System message");

1112 
åa˚
->
blocks
[åa˚->
›s
[
i
].
ödex
] = 
√wp
;

1115 
FREE
:

1116 if(
åa˚
->
›s
[
i
].
ödex
 >= 0) {

1117 
	`‰ì
(
åa˚
->
blocks
[åa˚->
›s
[
i
].
ödex
]);

1119 
	`‰ì
(0);

1124 
	`≠p_îr‹
("invalid operationÅype inÉval_libc_valid");

1129 
	}
}

1136 
	$evÆ_libc_•ìd
(*
±r
)

1138 
i
;

1139 
ödex
, 
size
, 
√wsize
;

1140 *
p
, *
√wp
, *
ﬁdp
, *
block
;

1141 
åa˚_t
 *
åa˚
 = ((
•ìd_t
 *)
±r
)->trace;

1143 
	`ªöô_åa˚
(
åa˚
);

1145 
i
 = 0; i < 
åa˚
->
num_›s
; i++) {

1146 
åa˚
->
›s
[
i
].
ty≥
) {

1147 
ALLOC
:

1148 
ödex
 = 
åa˚
->
›s
[
i
].index;

1149 
size
 = 
åa˚
->
›s
[
i
].size;

1150 i‡((
p
 = 
	`mÆloc
(
size
)Ë=
NULL
)

1151 
	`unix_îr‹
("malloc failed inÉval_libc_speed");

1152 
åa˚
->
blocks
[
ödex
] = 
p
;

1155 
REALLOC
:

1156 
ödex
 = 
åa˚
->
›s
[
i
].index;

1157 
√wsize
 = 
åa˚
->
›s
[
i
].
size
;

1158 
ﬁdp
 = 
åa˚
->
blocks
[
ödex
];

1159 i‡((
√wp
 = 
	`ªÆloc
(
ﬁdp
, 
√wsize
)Ë=
NULL
 &&Çewsize != 0)

1160 
	`unix_îr‹
("realloc failed inÉval_libc_speed\n");

1162 
åa˚
->
blocks
[
ödex
] = 
√wp
;

1165 
FREE
:

1166 
ödex
 = 
åa˚
->
›s
[
i
].index;

1167 if(
ödex
 >= 0) {

1168 
block
 = 
åa˚
->
blocks
[
ödex
];

1169 
	`‰ì
(
block
);

1171 
	`‰ì
(0);

1176 
	}
}

1186 
	$¥öåesu…s
(
n
, 
°©s_t
 *
°©s
)

1188 
i
;

1190 
sum£cs
 = 0;

1191 
sum›s
 = 0;

1192 
sumutû
 = 0;

1193 
sumweight
 = 0;

1196 
	`¥ötf
(" %6s%6s %5s%8s%9s %s\n",

1198 
i
=0; i < 
n
; i++) {

1199 i‡(
°©s
[
i
].
vÆid
) {

1200 
	`¥ötf
("%2s%4s %5.0f%%%8.0f%10.6f%6.0f %s\n",

1201 
°©s
[
i
].
weight
 != 0 ? "*" : "",

1203 
°©s
[
i
].
utû
*100.0,

1204 
°©s
[
i
].
›s
,

1205 
°©s
[
i
].
£cs
,

1206 (
°©s
[
i
].
›s
/1e3)/°©s[i].
£cs
,

1207 
°©s
[
i
].
fûíame
);

1208 
sumweight
 +
°©s
[
i
].
weight
;

1209 
sum£cs
 +
°©s
[
i
].
£cs
 * sèts[i].
weight
;

1210 
sum›s
 +
°©s
[
i
].
›s
 * sèts[i].
weight
;

1211 
sumutû
 +
°©s
[
i
].
utû
 * sèts[i].
weight
;

1214 
	`¥ötf
("%2s%4s %6s%8s%9s%6s %s\n",

1215 
°©s
[
i
].
weight
 != 0 ? "*" : "",

1221 
°©s
[
i
].
fûíame
);

1226 i‡(
îr‹s
 == 0) {

1227 if(
sumweight
 == 0) sumweight = 1;

1229 
	`¥ötf
("%2d %5.0f%%%8.0f%10.6f%6.0f\n",

1230 
sumweight
,

1231 (
sumutû
/()
sumweight
)*100.0,

1232 
sum›s
,

1233 
sum£cs
,

1234 (
sum£cs
==0.0Ë? 0 : (
sum›s
/1e3)/sumsecs);

1237 
	`¥ötf
(" %8s%10s%6s\n",

1243 
	}
}

1248 
	$≠p_îr‹
(c⁄° *
fmt
, ...) {

1249 
va_li°
 
≠
;

1250 
	`va_°¨t
(
≠
, 
fmt
);

1251 
	`v¥ötf
(
fmt
, 
≠
);

1252 
	`va_íd
(
≠
);

1253 
	`exô
(1);

1254 
	}
}

1259 
	$unix_îr‹
(c⁄° *
fmt
, ...) {

1260 
va_li°
 
≠
;

1261 
	`va_°¨t
(
≠
, 
fmt
);

1262 
	`v¥ötf
(
fmt
, 
≠
);

1263 
	`¥ötf
(": %s\n", 
	`°ªº‹
(
î∫o
));

1264 
	`va_íd
(
≠
);

1265 
	`exô
(1);

1266 
	}
}

1271 
	$mÆloc_îr‹
(c⁄° 
åa˚_t
 *
åa˚
, 
›num
, c⁄° *
fmt
, ...)

1273 
va_li°
 
≠
;

1274 
	`va_°¨t
(
≠
, 
fmt
);

1276 
îr‹s
++;

1278 
	`¥ötf
("ERROR [åa˚ %s,Üöê%d]: ", 
åa˚
->
fûíame
, 
	`LINENUM
(
›num
));

1279 
	`v¥ötf
(
fmt
, 
≠
);

1280 
	`putch¨
('\n');

1282 
	`va_íd
(
≠
);

1283 
	}
}

1288 
	$ußge
()

1290 
	`Ârötf
(
°dîr
, "Usage: mdriver [-hlVdD] [-f <file>]\n");

1291 
	`Ârötf
(
°dîr
, "Options\n");

1292 
	`Ârötf
(
°dîr
, "\t-d <i> Debug: 0 off; 1 default; 2Üots.\n");

1293 
	`Ârötf
(
°dîr
, "\t-D EquivalentÅo -d2.\n");

1294 
	`Ârötf
(
°dîr
, "\t-c <file> RunÅrace file <file> once, check for correctness only.\n");

1295 
	`Ârötf
(
°dîr
, "\t-t <dir> DirectoryÅo find defaultÅraces.\n");

1296 
	`Ârötf
(
°dîr
, "\t-h PrintÅhis message.\n");

1297 
	`Ârötf
(
°dîr
, "\t-l RunÜibc mallocás well.\n");

1298 
	`Ârötf
(
°dîr
, "\t-V Print diagnosticsásÉachÅrace isÑun.\n");

1299 
	`Ârötf
(
°dîr
, "\t-v <i> Set verbosityÜevelÅo <i> (default 1)\n");

1300 
	`Ârötf
(
°dîr
, "\t-s <s> Timeoutáfter s secs (defaultÇoÅimeout)\n");

1301 
	`Ârötf
(
°dîr
, "\t-f <file> Use <file>ásÅheÅrace file.\n");

1302 
	}
}

	@vm/malloc/memlib.c

7 
	~<°dio.h
>

8 
	~<°dlib.h
>

9 
	~<as£π.h
>

10 
	~<uni°d.h
>

11 
	~<sys/mm™.h
>

12 
	~<°rög.h
>

13 
	~<î∫o.h
>

15 
	~"cßµ.h
"

16 
	~"memlib.h
"

18 
	#MAX_HEAP
 (20*(1<<20)Ë

	)

23 *
	gmem_hóp
;

24 *
	gmem_brk
;

25 *
	gmem_max_addr
;

30 
	$mem_öô
()

32 
mem_hóp
 = (*)
	`MÆloc
(
MAX_HEAP
);

33 
mem_brk
 = (*)
mem_hóp
;

34 
mem_max_addr
 = (*)(
mem_hóp
 + 
MAX_HEAP
);

35 
	}
}

42 *
	$mem_sbrk
(
ö¸
)

44 *
ﬁd_brk
 = 
mem_brk
;

46 i‡–(
ö¸
 < 0Ë|| ((
mem_brk
 + in¸Ë> 
mem_max_addr
)) {

47 
î∫o
 = 
ENOMEM
;

48 
	`Ârötf
(
°dîr
, "ERROR: mem_sbrk failed. Ran out of memory...\n");

51 
mem_brk
 +
ö¸
;

52  (*)
ﬁd_brk
;

53 
	}
}

59 
	$mem_deöô
()

61 
	}
}

66 
	$mem_ª£t_brk
()

68 
mem_brk
 = (*)
mem_hóp
;

69 
	}
}

74 *
	$mem_hóp_lo
()

76  (*)
mem_hóp
;

77 
	}
}

82 *
	$mem_hóp_hi
()

84  (*)(
mem_brk
 - 1);

85 
	}
}

90 
size_t
 
	$mem_hópsize
()

92  (
size_t
)((*)
mem_brk
 - (*)
mem_hóp
);

93 
	}
}

98 
size_t
 
	$mem_∑gesize
()

100  (
size_t
)
	`gë∑gesize
();

101 
	}
}

	@vm/malloc/memlib.h

2 
	~<uni°d.h
>

4 
mem_öô
();

5 *
mem_sbrk
(
ö¸
);

7 
mem_deöô
();

8 
mem_ª£t_brk
();

9 *
mem_hóp_lo
();

10 *
mem_hóp_hi
();

11 
size_t
 
mem_hópsize
();

12 
size_t
 
mem_∑gesize
();

	@vm/malloc/mm.c

7 
	~<°dio.h
>

8 
	~<°rög.h
>

9 
	~<°dlib.h
>

11 
	~"mm.h
"

12 
	~"memlib.h
"

17 
	#NEXT_FITx


	)

21 
	#WSIZE
 4

22 
	#DSIZE
 8

	)

23 
	#CHUNKSIZE
 (1<<12)

24 

	)

25 
	#MAX
(
x
, 
y
Ë((xË> (y)? (xË: (y))

	)

28 
	#PACK
(
size
, 
Æloc
) ((size) | (alloc))

29 

	)

31 
	#GET
(
p
) (*(*)(p))

32 
	#PUT
(
p
, 
vÆ
) (*(*)(p) = (val))

33 

	)

35 
	#GET_SIZE
(
p
Ë(
	`GET
(p) & ~0x7)

36 
	#GET_ALLOC
(
p
Ë(
	`GET
(p) & 0x1)

37 

	)

39 
	#HDRP
(
bp
Ë((*)(bpË- 
WSIZE
)

40 
	#FTRP
(
bp
Ë((*)(bpË+ 
	`GET_SIZE
(
	`HDRP
(bp)Ë- 
DSIZE
)

41 

	)

43 
	#NEXT_BLKP
(
bp
Ë((*)(bpË+ 
	`GET_SIZE
(((*)(bpË- 
WSIZE
)))

44 
	#PREV_BLKP
(
bp
Ë((*)(bpË- 
	`GET_SIZE
(((*)(bpË- 
DSIZE
)))

45 

	)

48 *
	ghóp_li°p
 = 0;

49 #ifde‡
NEXT_FIT


50 *
	grovî
;

54 *
exãnd_hóp
(
size_t
 
w‹ds
);

55 
∂a˚
(*
bp
, 
size_t
 
asize
);

56 *
föd_fô
(
size_t
 
asize
);

57 *
cﬂÀs˚
(*
bp
);

58 
¥ötblock
(*
bp
);

59 
checkhóp
(
vîbo£
);

60 
checkblock
(*
bp
);

66 
	$mm_öô
()

69 i‡((
hóp_li°p
 = 
	`mem_sbrk
(4*
WSIZE
)) == (*)-1)

71 
	`PUT
(
hóp_li°p
, 0);

72 
	`PUT
(
hóp_li°p
 + (1*
WSIZE
), 
	`PACK
(
DSIZE
, 1));

73 
	`PUT
(
hóp_li°p
 + (2*
WSIZE
), 
	`PACK
(
DSIZE
, 1));

74 
	`PUT
(
hóp_li°p
 + (3*
WSIZE
), 
	`PACK
(0, 1));

75 
hóp_li°p
 +(2*
WSIZE
);

78 #ifde‡
NEXT_FIT


79 
rovî
 = 
hóp_li°p
;

84 i‡(
	`exãnd_hóp
(
CHUNKSIZE
/
WSIZE
Ë=
NULL
)

87 
	}
}

94 *
	$mm_mÆloc
(
size_t
 
size
)

96 
size_t
 
asize
;

97 
size_t
 
exãndsize
;

98 *
bp
;

101 i‡(
hóp_li°p
 == 0){

102 
	`mm_öô
();

106 i‡(
size
 == 0)

107  
NULL
;

110 i‡(
size
 <
DSIZE
)

111 
asize
 = 2*
DSIZE
;

113 
asize
 = 
DSIZE
 * ((
size
 + (DSIZE) + (DSIZE-1)) / DSIZE);

116 i‡((
bp
 = 
	`föd_fô
(
asize
)Ë!
NULL
) {

117 
	`∂a˚
(
bp
, 
asize
);

118  
bp
;

122 
exãndsize
 = 
	`MAX
(
asize
,
CHUNKSIZE
);

123 i‡((
bp
 = 
	`exãnd_hóp
(
exãndsize
/
WSIZE
)Ë=
NULL
)

124  
NULL
;

125 
	`∂a˚
(
bp
, 
asize
);

126  
bp
;

127 
	}
}

134 
	$mm_‰ì
(*
bp
)

137 i‡(
bp
 == 0)

141 
size_t
 
size
 = 
	`GET_SIZE
(
	`HDRP
(
bp
));

143 i‡(
hóp_li°p
 == 0){

144 
	`mm_öô
();

148 
	`PUT
(
	`HDRP
(
bp
), 
	`PACK
(
size
, 0));

149 
	`PUT
(
	`FTRP
(
bp
), 
	`PACK
(
size
, 0));

150 
	`cﬂÀs˚
(
bp
);

151 
	}
}

158 *
	$cﬂÀs˚
(*
bp
)

160 
size_t
 
¥ev_Æloc
 = 
	`GET_ALLOC
(
	`FTRP
(
	`PREV_BLKP
(
bp
)));

161 
size_t
 
√xt_Æloc
 = 
	`GET_ALLOC
(
	`HDRP
(
	`NEXT_BLKP
(
bp
)));

162 
size_t
 
size
 = 
	`GET_SIZE
(
	`HDRP
(
bp
));

164 i‡(
¥ev_Æloc
 && 
√xt_Æloc
) {

165  
bp
;

168 i‡(
¥ev_Æloc
 && !
√xt_Æloc
) {

169 
size
 +
	`GET_SIZE
(
	`HDRP
(
	`NEXT_BLKP
(
bp
)));

170 
	`PUT
(
	`HDRP
(
bp
), 
	`PACK
(
size
, 0));

171 
	`PUT
(
	`FTRP
(
bp
), 
	`PACK
(
size
,0));

174 i‡(!
¥ev_Æloc
 && 
√xt_Æloc
) {

175 
size
 +
	`GET_SIZE
(
	`HDRP
(
	`PREV_BLKP
(
bp
)));

176 
	`PUT
(
	`FTRP
(
bp
), 
	`PACK
(
size
, 0));

177 
	`PUT
(
	`HDRP
(
	`PREV_BLKP
(
bp
)), 
	`PACK
(
size
, 0));

178 
bp
 = 
	`PREV_BLKP
(bp);

182 
size
 +
	`GET_SIZE
(
	`HDRP
(
	`PREV_BLKP
(
bp
))) +

183 
	`GET_SIZE
(
	`FTRP
(
	`NEXT_BLKP
(
bp
)));

184 
	`PUT
(
	`HDRP
(
	`PREV_BLKP
(
bp
)), 
	`PACK
(
size
, 0));

185 
	`PUT
(
	`FTRP
(
	`NEXT_BLKP
(
bp
)), 
	`PACK
(
size
, 0));

186 
bp
 = 
	`PREV_BLKP
(bp);

189 #ifde‡
NEXT_FIT


192 i‡((
rovî
 > (*)
bp
Ë&& (rovî < 
	`NEXT_BLKP
(bp)))

193 
rovî
 = 
bp
;

196  
bp
;

197 
	}
}

203 *
	$mm_ªÆloc
(*
±r
, 
size_t
 
size
)

205 
size_t
 
ﬁdsize
;

206 *
√w±r
;

209 if(
size
 == 0) {

210 
	`mm_‰ì
(
±r
);

215 if(
±r
 =
NULL
) {

216  
	`mm_mÆloc
(
size
);

219 
√w±r
 = 
	`mm_mÆloc
(
size
);

222 if(!
√w±r
) {

227 
ﬁdsize
 = 
	`GET_SIZE
(
	`HDRP
(
±r
));

228 if(
size
 < 
ﬁdsize
) oldsize = size;

229 
	`mem˝y
(
√w±r
, 
±r
, 
ﬁdsize
);

232 
	`mm_‰ì
(
±r
);

234  
√w±r
;

235 
	}
}

240 
	$mm_checkhóp
(
vîbo£
)

242 
	`checkhóp
(
vîbo£
);

243 
	}
}

253 *
	$exãnd_hóp
(
size_t
 
w‹ds
)

255 *
bp
;

256 
size_t
 
size
;

259 
size
 = (
w‹ds
 % 2Ë? (w‹ds+1Ë* 
WSIZE
 : words * WSIZE;

260 i‡(()(
bp
 = 
	`mem_sbrk
(
size
)) == -1)

261  
NULL
;

264 
	`PUT
(
	`HDRP
(
bp
), 
	`PACK
(
size
, 0));

265 
	`PUT
(
	`FTRP
(
bp
), 
	`PACK
(
size
, 0));

266 
	`PUT
(
	`HDRP
(
	`NEXT_BLKP
(
bp
)), 
	`PACK
(0, 1));

269  
	`cﬂÀs˚
(
bp
);

270 
	}
}

279 
	$∂a˚
(*
bp
, 
size_t
 
asize
)

282 
size_t
 
csize
 = 
	`GET_SIZE
(
	`HDRP
(
bp
));

284 i‡((
csize
 - 
asize
Ë>(2*
DSIZE
)) {

285 
	`PUT
(
	`HDRP
(
bp
), 
	`PACK
(
asize
, 1));

286 
	`PUT
(
	`FTRP
(
bp
), 
	`PACK
(
asize
, 1));

287 
bp
 = 
	`NEXT_BLKP
(bp);

288 
	`PUT
(
	`HDRP
(
bp
), 
	`PACK
(
csize
-
asize
, 0));

289 
	`PUT
(
	`FTRP
(
bp
), 
	`PACK
(
csize
-
asize
, 0));

292 
	`PUT
(
	`HDRP
(
bp
), 
	`PACK
(
csize
, 1));

293 
	`PUT
(
	`FTRP
(
bp
), 
	`PACK
(
csize
, 1));

295 
	}
}

303 *
	$föd_fô
(
size_t
 
asize
)

308 #ifde‡
NEXT_FIT


310 *
ﬁdrovî
 = 
rovî
;

313  ; 
	`GET_SIZE
(
	`HDRP
(
rovî
)Ë> 0;Ñovî = 
	`NEXT_BLKP
(rover))

314 i‡(!
	`GET_ALLOC
(
	`HDRP
(
rovî
)Ë&& (
asize
 <
	`GET_SIZE
(HDRP(rover))))

315  
rovî
;

318 
rovî
 = 
hóp_li°p
;Ñovî < 
ﬁdrovî
;Ñovî = 
	`NEXT_BLKP
(rover))

319 i‡(!
	`GET_ALLOC
(
	`HDRP
(
rovî
)Ë&& (
asize
 <
	`GET_SIZE
(HDRP(rover))))

320  
rovî
;

322  
NULL
;

326 *
bp
;

328 
bp
 = 
hóp_li°p
; 
	`GET_SIZE
(
	`HDRP
(bp)Ë> 0; b∞
	`NEXT_BLKP
(bp)) {

329 i‡(!
	`GET_ALLOC
(
	`HDRP
(
bp
)Ë&& (
asize
 <
	`GET_SIZE
(HDRP(bp)))) {

330  
bp
;

333  
NULL
;

335 
	}
}

338 
	$¥ötblock
(*
bp
)

340 
size_t
 
hsize
, 
hÆloc
, 
fsize
, 
ÁŒoc
;

342 
	`checkhóp
(0);

343 
hsize
 = 
	`GET_SIZE
(
	`HDRP
(
bp
));

344 
hÆloc
 = 
	`GET_ALLOC
(
	`HDRP
(
bp
));

345 
fsize
 = 
	`GET_SIZE
(
	`FTRP
(
bp
));

346 
ÁŒoc
 = 
	`GET_ALLOC
(
	`FTRP
(
bp
));

348 i‡(
hsize
 == 0) {

349 
	`¥ötf
("%p: EOL\n", 
bp
);

353 
	`¥ötf
("%p: hódî: [%ld:%c] foŸî: [%ld:%c]\n", 
bp
,

354 
hsize
, (
hÆloc
 ? 'a' : 'f'),

355 
fsize
, (
ÁŒoc
 ? 'a' : 'f'));

356 
	}
}

358 
	$checkblock
(*
bp
)

360 i‡((
size_t
)
bp
 % 8)

361 
	`¥ötf
("Eº‹: %∞i†nŸ doubÀw‹dálig√d\n", 
bp
);

362 i‡(
	`GET
(
	`HDRP
(
bp
)Ë!GET(
	`FTRP
(bp)))

363 
	`¥ötf
("Error: header doesÇot match footer\n");

364 
	}
}

369 
	$checkhóp
(
vîbo£
)

371 *
bp
 = 
hóp_li°p
;

373 i‡(
vîbo£
)

374 
	`¥ötf
("Hó∞(%p):\n", 
hóp_li°p
);

376 i‡((
	`GET_SIZE
(
	`HDRP
(
hóp_li°p
)Ë!
DSIZE
Ë|| !
	`GET_ALLOC
(HDRP(heap_listp)))

377 
	`¥ötf
("BadÖrologue header\n");

378 
	`checkblock
(
hóp_li°p
);

380 
bp
 = 
hóp_li°p
; 
	`GET_SIZE
(
	`HDRP
(bp)Ë> 0; b∞
	`NEXT_BLKP
(bp)) {

381 i‡(
vîbo£
)

382 
	`¥ötblock
(
bp
);

383 
	`checkblock
(
bp
);

386 i‡(
vîbo£
)

387 
	`¥ötblock
(
bp
);

388 i‡((
	`GET_SIZE
(
	`HDRP
(
bp
)Ë!0Ë|| !(
	`GET_ALLOC
(HDRP(bp))))

389 
	`¥ötf
("BadÉpilogue header\n");

390 
	}
}

	@vm/malloc/mm.h

3 
mm_öô
();

4 *
mm_mÆloc
 (
size_t
 
size
);

5 
mm_‰ì
 (*
±r
);

8 *
mm_ªÆloc
(*
±r
, 
size_t
 
size
);

9 *
mm_ˇŒoc
 (
size_t
 
nmemb
, size_à
size
);

10 
mm_checkhóp
(
vîbo£
);

	@vm/mallocalign.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

4 
	$maö
() {

5 
i
, 
size
, 
mösize
 = 128;

6 *
p
;

8 
i
=0; i<1000; i++) {

9 
p
 = (*Ë
	`mÆloc
 (
i
);

11 
size
=1;

12 !(()
p
 % 
size
)) {

13 
size
 *= 2;

15 
size
 /= 2;

16 i‡(
size
 < 
mösize
)

17 
mösize
 = 
size
;

18 
	`¥ötf
("%x:Ö=%∞Æign=%d\n", 
i
, 
p
, 
size
);

20 
	`¥ötf
 ("Æignmíà%d\n", 
mösize
);

22 
	}
}

	@vm/map.c

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

7 
	gbssv¨
 = 10000.0;

8 
	gd©av¨
[4096];

10 
	$maö
()

12 *
hó∑ddΩ
;

13 
size_t
 
blocksize
;

14 
ôî
, 
modvÆ
;

16 
	`¥ötf
("&maö = %016lx\n", ()
maö
);

17 
	`¥ötf
("&bssv¨ = %016lx\n", ()&
bssv¨
);

18 
	`¥ötf
("&d©av¨ = %016lx\n", ()&
d©av¨
);

22 
blocksize
 = (1024 * (1 << 20));

23 
blocksize
 *= 4;

24 
modvÆ
 = 128;

27 
blocksize
 = (1 << 20);

28 
modvÆ
 = 16;

32 
	`¥ötf
("heapáddresses:\n");

33 
ôî
 = 0;

35 i‡((
hó∑ddΩ
 = 
	`mÆloc
(
blocksize
)Ë=
NULL
)

37 i‡((
ôî
%
modvÆ
) == 0)

38 
	`¥ötf
("hó∑ddΩ = %016lx\n", ()
hó∑ddΩ
);

39 
ôî
++;

42 
	`¥ötf
("°ackt› = %016lx\n", ()&
hó∑ddΩ
);

43 
	`¥ötf
("\nPause,ánd check .soÜocations usingÖmap\n");

45 
	`exô
(0);

46 
	}
}

	@vm/mm.h

2 
mm_öô
();

3 *
mm_mÆloc
(
size_t
 
size
);

4 
mm_‰ì
(*
bp
);

7 
mm_checkhóp
(
vîbo£
);

8 *
mm_ªÆloc
(*
±r
, 
size_t
 
size
);

12 *
	mãam
;

13 *
	m«me1
, *
	memaû1
;

14 *
	m«me2
, *
	memaû2
;

15 } 
	tãam_t
;

17 
ãam_t
 
ãam
;

	@vm/mmapcopy.c

2 
	~"cßµ.h
"

7 
	$mm≠c›y
(
fd
, 
size
)

9 *
buÂ
;

11 
buÂ
 = 
	`Mm≠
(
NULL
, 
size
, 
PROT_READ
, 
MAP_PRIVATE
, 
fd
, 0);

12 
	`Wrôe
(1, 
buÂ
, 
size
);

14 
	}
}

17 
	$maö
(
¨gc
, **
¨gv
)

19 
°©
 stat;

20 
fd
;

23 i‡(
¨gc
 != 2) {

24 
	`¥ötf
("ußge: %†<fûíame>\n", 
¨gv
[0]);

25 
	`exô
(0);

29 
fd
 = 
	`O≥n
(
¨gv
[1], 
O_RDONLY
, 0);

30 
	`f°©
(
fd
, &
°©
);

31 
	`mm≠c›y
(
fd
, 
°©
.
°_size
);

32 
	`exô
(0);

33 
	}
}

	@vm/sbrk.c

1 
	~"cßµ.h
"

3 
	$maö
()

5 *
p
;

6 
	`¥ötf
("sbrk(0Ë =%p\n", 
p
=
	`sbrk
(0));

7 
	`¥ötf
("sbrk(4096Ë=%p\n", 
p
=
	`sbrk
(4096));

8 *(
p
+4095)=0;

9 
	`¥ötf
("sbrk(4096Ë=%p\n", 
p
=
	`sbrk
(4096));

10 
	`¥ötf
("sbrk(-4096)=%p\n", 
p
=
	`sbrk
(-4096));

11 
	`¥ötf
("sbrk(-4096)=%p\n", 
p
=
	`sbrk
(-4096));

12 
	`exô
(0);

13 
	}
}

	@vm/sizeof.c

1 
	~<°dio.h
>

3 
	$maö
()

5 
	`¥ötf
("char : %ld\n", ()());

6 
	`¥ötf
("short : %ld\n", ()());

7 
	`¥ötf
("int : %ld\n", ()());

8 
	`¥ötf
("long : %ld\n", ()());

9 
	`¥ötf
("char * : %ld\n", ()(*));

10 
	`¥ötf
("float : %ld\n", ()());

11 
	`¥ötf
("double : %ld\n", ()());

12 
	`¥ötf
("long double: %ld\n", ()());

14 
	}
}

	@vm/staticsize.c

2 
	~"cßµ.h
"

3 
	#MAXN
 15213

	)

5 
	g¨øy
[
MAXN
];

7 
	$maö
()

9 
i
, 
n
;

11 
	`sˇnf
("%d", &
n
);

12 i‡(
n
 > 
MAXN
)

13 
	`≠p_îr‹
("Input fileÅoo big");

14 
i
 = 0; i < 
n
; i++)

15 
	`sˇnf
("%d", &
¨øy
[
i
]);

16 
	`exô
(0);

17 
	}
}

	@
1
.
0
406
6516
arch/pushpoptest.c
asm/010-main.c
asm/010-mstore-annotate.c
asm/010-mstore-intel.c
asm/010-mstore.c
asm/050-exchange.c
asm/060-decode1-ans.c
asm/070-leaq.c
asm/080-shift.c
asm/090-arith.c
asm/100-muldiv.c
asm/100-special-arith.c
asm/110-cc.c
asm/120-branch.c
asm/130-abs-measure.c
asm/130-abs.c
asm/130-absdiff.c
asm/140-simple-if.c
asm/150-if.c
asm/160-fact.c
asm/170-dw.c
asm/180-while.c
asm/190-fun.c
asm/200-continue-eg.c
asm/210-cond.c
asm/220-if2.c
asm/230-switch.c
asm/240-switch2.c
asm/250-switcher.c
asm/250-switchprob2.c
asm/260-fun.c
asm/261-fun2.c
asm/262-recurse.c
asm/268-local.c
asm/270-euclid.c
asm/270-hworld.c
asm/280-calleesave.c
asm/285-calleesave2.c
asm/290-registers.c
asm/300-storesum.c
asm/300-swapadd.c
asm/310-procregs.c
asm/320-procprobs.c
asm/340-recurse.c
asm/350-array.c
asm/360-fixarray.c
asm/370-rect.c
asm/380-structure.c
asm/390-struct2.c
asm/400-struct-eg.c
asm/410-union.c
asm/420-node.c
asm/430-struct-union.c
asm/440-align.c
asm/445-frame.c
asm/450-bufdemo.c
asm/460-bufovf.c
asm/470-scheck.c
asm/480-charbuf.c
asm/500-floatcvt.c
asm/510-cvt.c
asm/520-floatfunct.c
asm/530-float-funs.c
asm/540-floatconst.c
asm/align128.c
asm/alloca-eg.c
asm/bufdemo.c
asm/cast-problem.c
asm/dsize.c
asm/dynstack.c
asm/framepointer.c
asm/hworld.c
asm/linked-list.c
asm/reftest.c
asm/test-64-framework.c
asm/w100-ia32.c
asm/w110-procreg-ia32.c
asm/w110-procreg.c
asm/w200-okmul.c
asm/w210-okmul-asm-proto.c
asm/w230-parity.c
asm/w240-cnt.c
asm/w250-umult-full.c
asm/w260-float.c
asm/w260-parity.c
asm/w270-float.c
conc/badcnt.c
conc/ctime_ts.c
conc/echo.c
conc/echo_cnt.c
conc/echoclient.c
conc/echoserverp.c
conc/echoservers.c
conc/echoservert.c
conc/echoservert_cnt.c
conc/echoservert_pre.c
conc/goodcnt.c
conc/hello.c
conc/hellobug.c
conc/norace.c
conc/pipe.c
conc/prodconsn.c
conc/psum-array.c
conc/psum-local.c
conc/psum-mutex.c
conc/race.c
conc/rand.c
conc/rand_r.c
conc/rw0.c
conc/rw1.c
conc/rw2.c
conc/rw3.c
conc/sbuf.c
conc/sbuf.h
conc/select.c
conc/sharing.c
conc/test.c
conc/tfgets-main.c
conc/threadunsafe.c
conc/vsum.c
data/bad-sum.c
data/bisbic.c
data/casting.c
data/code.c
data/constants-eg.c
data/constants.c
data/divconst.c
data/eg-dis.c
data/extend.c
data/floatcomp-template.c
data/ieee.c
data/inplace-swap.c
data/logic.c
data/optarith.c
data/printf.c
data/puzzle.c
data/rbyte-ans.c
data/rshift-templates.c
data/shift.c
data/show-bytes.c
data/sign-extend.c
data/sizes.c
data/strlonger.c
data/sum.c
data/tmultcheck.c
data/uaddcheck.c
data/uhp-ans.c
data/vulnerabilities.c
data/wordsize.c
data/xbyte.c
ecf/alarm.c
ecf/blockone.c
ecf/cmdline.c
ecf/counterprob.c
ecf/fork.c
ecf/fork1.c
ecf/fork2.c
ecf/fork3.c
ecf/forkprob0.c
ecf/forkprob1.c
ecf/forkprob2.c
ecf/forkprob3.c
ecf/forkprob4.c
ecf/forkprob5.c
ecf/forkprob6.c
ecf/forkprob7.c
ecf/forkprob8.c
ecf/fragments.c
ecf/getpid.c
ecf/hello.c
ecf/jmpbuf.c
ecf/kill.c
ecf/myecho.c
ecf/orphan.c
ecf/pg.c
ecf/pgchild.c
ecf/procmask.c
ecf/procmask1.c
ecf/procmask2.c
ecf/psignal.c
ecf/restart.c
ecf/rfork-driver.c
ecf/rfork.c
ecf/setjmp.c
ecf/shell.c
ecf/shellex.c
ecf/sigbus.c
ecf/sigfpe.c
ecf/sigint.c
ecf/sigintsafe.c
ecf/signal1.c
ecf/signal2.c
ecf/signal3.c
ecf/signal4.c
ecf/signalprob0.c
ecf/sigsegv.c
ecf/sigsuspend.c
ecf/snooze.c
ecf/stack.c
ecf/test.c
ecf/waitforsignal.c
ecf/waitpid1.c
ecf/waitpid2.c
ecf/waitprob0.c
ecf/waitprob1.c
ecf/waitprob3.c
error/fragments.c
include/clock.h
include/cpe.h
include/csapp.h
include/fcyc.h
include/lsquare.h
intro/hello.c
io/cpfile.c
io/cpstdin.c
io/fdprob1.c
io/fdprob2.c
io/iofragments.c
io/openexamples.c
io/readdir.c
io/sharing1.c
io/sharing2.c
io/sharing3.c
io/statcheck.c
io/test-readlineb/cpfile.c
link/addvec.c
link/bar1.c
link/bar2.c
link/bar3.c
link/bar4.c
link/bar5.c
link/bar6.c
link/dll.c
link/elfstructs.c
link/foo1.c
link/foo2.c
link/foo3.c
link/foo4.c
link/foo5.c
link/foo6.c
link/fragments.c
link/hello.c
link/interpose/int.c
link/interpose/malloc.h
link/interpose/mymalloc.c
link/linkerror.c
link/m.c
link/main.c
link/main2.c
link/map.c
link/multvec.c
link/share.c
link/static.c
link/sum.c
link/swap.c
link/swap2.c
link/t1.c
link/t2.c
link/vector.h
mem/cleararray.c
mem/dotprod.c
mem/game.c
mem/matmult/bmm.c
mem/matmult/clock.c
mem/matmult/clock.h
mem/matmult/fcycbmm.c
mem/matmult/fcycbmm.h
mem/matmult/fcycmm.c
mem/matmult/fcycmm.h
mem/matmult/mm.c
mem/matmult/mm.h
mem/memperf/bind_to_cpu.c
mem/memperf/cpy.c
mem/memperf/cpy.h
mem/memperf/cpy_opt.h
mem/memperf/cpy_p3opt.c
mem/memperf/cpyr.c
mem/memperf/cpyr.h
mem/memperf/gettime.h
mem/memperf/gettimealpha.h
mem/memperf/gettiment.h
mem/memperf/lcpy.c
mem/memperf/p5tsc.h
mem/memperf/par.c
mem/memperf/par.h
mem/missrate.c
mem/missrate2.c
mem/missrate2b.c
mem/mountain/clock.c
mem/mountain/clock.h
mem/mountain/fcyc2.c
mem/mountain/fcyc2.h
mem/mountain/mountain.c
mem/mountain1x1/clock.c
mem/mountain1x1/clock.h
mem/mountain1x1/fcyc2.c
mem/mountain1x1/fcyc2.h
mem/mountain1x1/mountain.c
mem/optlab.c
mem/postit.c
mem/simaquarium.c
mem/sumarray3d-ans.c
mem/sumarray3d.c
mem/sumarraycols.c
mem/sumarrayrows.c
mem/sumvec.c
mem/trans.c
mem/transpose1.c
mem/transpose2.c
mem/transpose2b.c
netp/dd2hex.c
netp/echo.c
netp/echoclient.c
netp/echoserveri.c
netp/hex2dd.c
netp/hostinfo-ntop.c
netp/hostinfo.c
netp/netpfragments.c
netp/tiny/cgi-bin/adder.c
netp/tiny/csapp.c
netp/tiny/csapp.h
netp/tiny/tiny.c
opt/benchmark-ncpe.c
opt/benchmark.c
opt/best.c
opt/bubble.c
opt/combine-ans.c
opt/combine.c
opt/combine.h
opt/cond-eg.c
opt/copy.c
opt/copy2d.c
opt/deref.c
opt/dictionary.c
opt/div.c
opt/dmult.c
opt/dpb-O1.c
opt/dpb-O2.c
opt/dpb.c
opt/fact.c
opt/fpb-O1.c
opt/fpb-O2.c
opt/fragments.c
opt/func.c
opt/ipb-O1.c
opt/list.c
opt/lower-obsolete.c
opt/lower.c
opt/lpb-O1.c
opt/lsb-O1.c
opt/mem.c
opt/merge.c
opt/opt-meas.c
opt/options.c
opt/options.h
opt/overhead.c
opt/simd_eg.c
opt/simd_eq.c
opt/swap.c
opt/test_cpe.c
opt/test_mhz.c
opt/timing.c
opt/twiddle.c
opt/vec.c
opt/vec.h
perf/cf.c
perf/clock-rate-test.c
perf/clock-v2.c
perf/clock.c
perf/clock.h
perf/load.c
perf/load.h
perf/options.c
perf/options.h
perf/osevent.c
src/clock.c
src/cpe.c
src/csapp.c
src/fcyc.c
src/lsquare.c
vm/dynamicsize.c
vm/fragments.c
vm/malloc/clock.c
vm/malloc/clock.h
vm/malloc/config.h
vm/malloc/driverhdrs.h
vm/malloc/driverlib.c
vm/malloc/driverlib.h
vm/malloc/fcyc.c
vm/malloc/fcyc.h
vm/malloc/fsecs.c
vm/malloc/fsecs.h
vm/malloc/ftimer.c
vm/malloc/ftimer.h
vm/malloc/mdriver.c
vm/malloc/memlib.c
vm/malloc/memlib.h
vm/malloc/mm.c
vm/malloc/mm.h
vm/mallocalign.c
vm/map.c
vm/mm.h
vm/mmapcopy.c
vm/sbrk.c
vm/sizeof.c
vm/staticsize.c
